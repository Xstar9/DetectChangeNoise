"id", "projectName", "startCommit", "endCommit", "transformType","transformTypeId", "transformSum", "RelatedMethodsNum","RelatedMethodSet","RelatedCasesNum"
"0","scribejava","bfbe536886fc3c614b785110f8eba663644862d7","d54494a74f3cb157109c59a3900b1cd622c7e973","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","5","[RequestTokenExtractor extract (String), Api createService (String, String, String), BaseStringExtractorImpl extract (OAuthRequest), BaseStringExtractorImpl getSortedAndEncodedParams (OAuthRequest), BaseStringExtractorImpl checkPreconditions (OAuthRequest)]","15"
"2","scribejava","d54494a74f3cb157109c59a3900b1cd622c7e973","6548052b75a79f7eebdff1d5d875d7a3c88bd2bd","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[StreamUtils getStreamContents (InputStream)]","4"
"3","scribejava","6548052b75a79f7eebdff1d5d875d7a3c88bd2bd","5c792d516a0f6849a577513026b7a09254c452a0","LOCAL_VAR_RENAMING","0","1","1","[StreamUtils getStreamContents (InputStream)]","4"
"12","scribejava","5c792d516a0f6849a577513026b7a09254c452a0","1f6186a491fd295e0b3d4c0ddbf03846a2d5e3a6","LOCAL_VAR_RENAMING","0","1","1","[StreamUtils getStreamContents (InputStream)]","4"
"30","scribejava","1f6186a491fd295e0b3d4c0ddbf03846a2d5e3a6","dbdf9ef759f2987757adbb1c31afba3e6b2859d7","REVERSE_IF_ELSE","3","1","1","[StreamUtils getStreamContents (InputStream)]","4"
"45","scribejava","dbdf9ef759f2987757adbb1c31afba3e6b2859d7","42a41496e0bfb3a23053aa4266d22c27061fbb5d","REVERSE_IF_ELSE","3","1","1","[StreamUtils getStreamContents (InputStream)]","4"
"52","scribejava","42a41496e0bfb3a23053aa4266d22c27061fbb5d","477eb0ae3a33c13041a294508b67386f94c80d8b","REVERSE_IF_ELSE","3","1","1","[StreamUtils getStreamContents (InputStream)]","4"
"58","scribejava","477eb0ae3a33c13041a294508b67386f94c80d8b","0abe90678be76ee3b4241201eb8bf958d83fdc79","REVERSE_IF_ELSE","3","1","1","[StreamUtils getStreamContents (InputStream)]","4"
"65","scribejava","0abe90678be76ee3b4241201eb8bf958d83fdc79","a136bf65d071d4d7282895de7c5215aa31601f3f","REVERSE_IF_ELSE","3","1","1","[StreamUtils getStreamContents (InputStream)]","4"
"0","symja-parser","689f67a32faac83d3edda801cda9b51aaa08e741","a15778c6bae581019f7d0ef18eb38ddc873cd6aa","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","30","[PatternNode equals (Object), Operator Operator (String, String, int), MinFunction evaluateNodeLogical (ASTNode), PatternNode getConstraint (), Operator equals (Object), MinFunction evaluateFunction (FunctionNode), PreMinusOperator PreMinusOperator (String, String, int), MinFunction getVariables (String, Set<String>, boolean), MinFunction optimizeFunction (FunctionNode), PreMinusOperator createFunction (IParserFactory, ASTNode), PatternNode isDefault (), TimesFunction getVariables (String, Set<String>, boolean), MinFunction getDerivativeResult (ASTNode, FunctionNode), PatternNode toString (), PatternNode PatternNode (SymbolNode, ASTNode, boolean), MinFunction parse (String), Operator getPrecedence (), MinFunction getVariables (ASTNode, Set<String>), Operator toString (), MinFunction evaluateFunctionLogical (FunctionNode), MinFunction isSymbol (SymbolNode, SymbolNode), Operator getOperatorString (), MinFunction isSymbol (SymbolNode, String), Operator hashCode (), PatternNode hashCode (), MinFunction getVariable (String), MinFunction derivative (ASTNode, SymbolNode), PatternNode getSymbol (), Operator getFunctionName (), MinFunction evaluateNode (ASTNode)]","150"
"3","symja-parser","a15778c6bae581019f7d0ef18eb38ddc873cd6aa","62f1ad27925830d4973ab975b646aa2091937120","LOCAL_VAR_RENAMING","0","1","4","[PatternNode equals (Object), PatternNode getConstraint (), PatternNode toString (), PatternNode PatternNode (SymbolNode, ASTNode, boolean)]","20"
"5","symja-parser","62f1ad27925830d4973ab975b646aa2091937120","4ba3d05d1e5bf5af6047fc08ff523308821d02ef","REVERSE_IF_ELSE","3","1","3","[PatternNode equals (Object), PatternNode hashCode (), PatternNode toString ()]","15"
"13","symja-parser","4ba3d05d1e5bf5af6047fc08ff523308821d02ef","603b827183f63938b7351d02712d080e363a1fc1","REVERSE_IF_ELSE","3","1","2","[PatternNode equals (Object), PatternNode hashCode ()]","10"
"20","symja-parser","603b827183f63938b7351d02712d080e363a1fc1","d7a9e7cc8d8838c41617ab3e5a74c2047c39c49d","LOCAL_VAR_RENAMING","0","1","2","[PatternNode PatternNode (SymbolNode, ASTNode), PatternNode PatternNode (SymbolNode, ASTNode, boolean)]","10"
"21","symja-parser","d7a9e7cc8d8838c41617ab3e5a74c2047c39c49d","20401338f09da12304b968159c2c4a7ee4f53939","SWITCH_EQUAL_SIDES","14","1","1","[PatternNode equals (Object)]","5"
"32","symja-parser","20401338f09da12304b968159c2c4a7ee4f53939","a97e1a3c4af0926c533904f5573cd23277cd262f","SWITCH_EQUAL_SIDES","14","1","1","[PatternNode equals (Object)]","5"
"34","symja-parser","a97e1a3c4af0926c533904f5573cd23277cd262f","c022c08669457f536957c599e07b516758289886","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[PatternNode PatternNode (SymbolNode, ASTNode, boolean)]","5"
"38","symja-parser","c022c08669457f536957c599e07b516758289886","edf947a611c1cbd5ea417e1b8fd9a8d7334efcba","LOCAL_VAR_RENAMING","0","1","5","[PatternNode equals (Object), PatternNode hashCode (), PatternNode getSymbol (), PatternNode toString (), PatternNode PatternNode (SymbolNode, ASTNode, boolean)]","25"
"42","symja-parser","edf947a611c1cbd5ea417e1b8fd9a8d7334efcba","e1f0699f6e1e75ea47e300d5e4bb99a763427c54","REVERSE_IF_ELSE","3","1","3","[PatternNode equals (Object), PatternNode hashCode (), PatternNode toString ()]","15"
"52","symja-parser","e1f0699f6e1e75ea47e300d5e4bb99a763427c54","6c64ba16af0bf2cbca21a7c58b24709ab1504fa0","SWITCH_EQUAL_SIDES","14","1","1","[PatternNode equals (Object)]","5"
"55","symja-parser","6c64ba16af0bf2cbca21a7c58b24709ab1504fa0","46a3accd8aa3695045f31942ee0a3c61175852be","SWITCH_EQUAL_SIDES","14","1","1","[PatternNode equals (Object)]","5"
"59","symja-parser","46a3accd8aa3695045f31942ee0a3c61175852be","6e8865b46034ca587807fb318c662fe9e9ddeda1","SWITCH_EQUAL_SIDES","14","1","1","[PatternNode equals (Object)]","5"
"61","symja-parser","6e8865b46034ca587807fb318c662fe9e9ddeda1","088ca99bcfe2e145bbe5b6d6627c4050fa955e82","REVERSE_IF_ELSE","3","1","2","[PatternNode equals (Object), PatternNode hashCode ()]","10"
"0","spring-hateoas","2ba26707fbd2c9e047962d3139a3157e9667bf9c","8af5244f76e78195c705bb8dc61e2cf955c4fac8","LOCAL_VAR_RENAMING","0","1","40","[DelegatingEntityLinks linkFor (Class<?>, Object), HalFormsProperty withOptions (HalFormsOptions), LinkBuilderFactory linkTo (Class<?>, Object), HalFormsProperty withPrompt (String), HypermediaMappingInformationComparator compare (HypermediaMappingInformation, HypermediaMappingInformation), HateoasConfiguration loadResourceBundleResources (String, boolean), HalFormsProperty isReadOnly (), LinkBuilderFactory linkTo (Class<?>), HalFormsProperty withMinLength (Long), HalFormsProperty withName (String), DelegatingEntityLinks linkToItemResource (Class<?>, Object), HateoasConfiguration hypermediaWebMvcConverters (ObjectProvider<ObjectMapper>, List<HypermediaMappingInformation>, Optional<HypermediaMappingInformationComparator>), LinkParser consumeQuotedString (String, StringBuilder, int[]), HalFormsProperty HalFormsProperty (), HalFormsProperty withMin (Number), HalFormsProperty withRegex (String), MessageSourceResolver resolve (MessageSourceResolvable), HalFormsProperty toString (), HateoasConfiguration lookupMessageSource (), DelegatingEntityLinks DelegatingEntityLinks (PluginRegistry<EntityLinks,Class<?>>), CollectionModel deriveElementType (Collection<?>, ResolvableType), HalFormsProperty withPlaceholder (String), DelegatingEntityLinks getPluginFor (Class<?>), CollectionModel equals (Object), HalFormsProperty withMulti (boolean), HalFormsProperty withReadOnly (boolean), MessageSourceResolver MessageSourceResolver (MessageSource), LinkBuilderFactory linkTo (Class<?>, Map<String,?>), HalFormsProperty withType (String), HalFormsProperty withMaxLength (Long), HalFormsProperty HalFormsProperty (String, boolean, Object, String, String, boolean, boolean, boolean, String, Number, Number, Long, Long, String, HalFormsOptions), HalFormsProperty hashCode (), HalFormsProperty withTemplated (boolean), HalFormsProperty withRequired (boolean), HalFormsProperty withMax (Number), LinkParser parseLink (String, int[]), HalFormsProperty withValue (Object), DelegatingEntityLinks linkForItemResource (Class<?>, Object), HateoasConfiguration relProviderPluginRegistry (ApplicationContext), HalFormsProperty equals (Object)]","320"
"31","spring-hateoas","8af5244f76e78195c705bb8dc61e2cf955c4fac8","c5399a73b767eb1e50226b4f6ec5c6d46bf6fbd6","LOCAL_VAR_RENAMING","0","1","2","[MessageSourceResolver MessageSourceResolver (MessageSource), MessageSourceResolver resolve (MessageSourceResolvable)]","16"
"44","spring-hateoas","c5399a73b767eb1e50226b4f6ec5c6d46bf6fbd6","ef8925a95b928002f6348aa74af5fea7cb6fe762","LOCAL_VAR_RENAMING","0","1","2","[MessageSourceResolver MessageSourceResolver (MessageSource), MessageSourceResolver resolve (MessageSourceResolvable)]","16"
"0","spring-data-neo4j/spring-data-neo4j-aspects","04bd484704621520e4d6eb1d72c88579faa5e95a","dbc12ac93ceb9d75229fda978e092ce285d823d7","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","8","[GraphBacked remove (), RelationshipBacked projectTo (Class<R>), GraphBacked getPersistentState (), RelationshipBacked getRelationshipId (), GraphBacked setPersistentState (STATE), Neo4jAspectConfiguration neo4jRelationshipBacking (), GraphBacked hasPersistentState (), Neo4jAspectConfiguration neo4jNodeBacking ()]","24"
"0","spring-data-neo4j/spring-data-neo4j-cross-store","dbc12ac93ceb9d75229fda978e092ce285d823d7","a877d1bf54db27211e2d05efa0db8c877974c926","SWITCH_STRING_EQUAL","15","1","15","[CrossStoreNodeEntityStateFactory getPersistenceUnitUtils (), CrossStoreNodeEntityStateFactory isPartial (Class<?>), CrossStoreNodeEntityState getForeignIdIndex (), JpaIdFieldListener JpaIdFieldListener (Neo4jPersistentProperty, Neo4jTemplate), CrossStoreNodeEntityState persist (), CrossStoreNodeEntityStateFactory getEntityState (Object, boolean, Neo4jTemplate), CrossStoreNodeEntityStateFactory isDetached (), CrossStoreNodeEntityState createAndAssignState (), CrossStoreNodeEntityState persistForeignId (Node, Object), CrossStoreNodeEntityState CrossStoreNodeEntityState (Node, NodeBacked, Class<? extends NodeBacked>, Neo4jTemplate, PersistenceUnitUtil, DelegatingFieldAccessorFactory, Neo4jPersistentEntity), CrossStoreNodeEntityState isWritable (Neo4jPersistentProperty), CrossStoreNodeEntityState createForeignId (Object), CrossStoreNodeEntityState getId (Object), CrossStoreNodeEntityStateFactory CrossStoreNodeEntityStateFactory (Neo4jMappingContext, FieldAccessorFactoryFactory, FieldAccessorFactoryFactory, EntityManagerFactory), JpaIdFieldListener valueChanged (Object, Object, Object)]","45"
"1","spring-data-neo4j/spring-data-neo4j-cross-store","a877d1bf54db27211e2d05efa0db8c877974c926","a899164f35caea6fd6784731a577876aa28ecc8a","SWITCH_EQUAL_SIDES","14","1","1","[CrossStoreNodeEntityStateFactory getPersistenceUnitUtils ()]","3"
"7","spring-data-neo4j/spring-data-neo4j-cross-store","a899164f35caea6fd6784731a577876aa28ecc8a","3f4a3abae44be7491574dfec2d5f5db1a6a203c3","LOCAL_VAR_RENAMING","0","1","7","[CrossStoreNodeDelegatingFieldAccessorFactory CrossStoreNodeDelegatingFieldAccessorFactory (Neo4jTemplate), CrossStoreNodeDelegatingFieldAccessorFactory createAccessorFactories (), CrossStoreNodeDelegatingFieldAccessorFactory newPropertyFieldAccessorFactory (), CrossStoreNodeDelegatingFieldAccessorFactory createListenerFactories (), CrossStoreNodeDelegatingFieldAccessorFactory newConvertingNodePropertyFieldAccessorFactory (), CrossStoreNodeDelegatingFieldAccessorFactory accept (Neo4jPersistentProperty), Factory create (Neo4jTemplate)]","28"
"0","spring-data-neo4j/cineasts-aspects","3f4a3abae44be7491574dfec2d5f5db1a6a203c3","bcdf2f8c675294bfe4ae3212f724719b6c773f28","VAR_DECLARATION_DIVIDING","13","1","88","[Movie setVersion (Integer), MovieDbImportService importMovies (Map<Integer,Integer>), Movie Movie (String, String), MovieDbApiClient MovieDbApiClient (String), Movie getRatings (), Movie setRuntime (Integer), MovieDbApiClient buildPersonUrl (String), MovieController index (Model), Movie getDescription (), MovieDbImportService doImportMovie (String), Movie getReleaseDate (), MovieController updateMovie (Model, String, Integer, String), Movie getLanguage (), Movie getTitle (), Movie setHomepage (String), MovieRecommendations updateRating (Relationship, int), MovieDbApiClient getPerson (String), MovieDbApiClient getMovie (String), MovieController singleMovieView (Model, String), User getName (), Movie getVersion (), Movie getImdbId (), Movie getYoutubeId (), MovieDbImportService relatePersonsToMovie (Movie, Map), Movie getLastModified (), Movie setImdbId (String), User addFriend (User), Movie getStars (), User isFriend (User), User getLogin (), User toString (), MovieController findMovies (Model, String), MovieDbImportService loadMovieData (String), Movie setLastModified (Date), Movie setImageUrl (String), Movie getYear (), ImportController ImportController (MovieDbImportService), MovieRecommendations obtainRating (long), Movie getDirector (), User User (String, String, String, Roles), User getRole (), Movie getRuntime (), MovieController populateDatabase (Model), Movie setTrailer (String), Movie Movie (), Movie getTagline (), User getAuthority (), User getFriends (), ImportController extractRanges (String), User getRatings (), MovieDbImportService doImportPerson (String), MovieDbImportService importMovie (String), User getPassword (), MovieRecommendations averageRecommendations (User, TraversalDescription), Movie setStudio (String), MovieController addUser (Model), Movie setTagline (String), Movie getId (), Movie getTrailer (), MovieController clean (Model), Movie getActors (), Movie getHomepage (), MovieDbApiClient loadJsonData (String, String), MovieController singleActorView (Model, String), Movie getStudio (), Movie setReleaseDate (Date), User setName (String), MovieDbImportService importPerson (String), MovieRecommendations MovieRecommendations (MovieRepository, int), Movie getImageUrl (), Movie toString (), User User (), Movie setTitle (String), MovieDbApiClient buildMovieUrl (String), User encode (String), Movie setDescription (String), MovieRecommendations getRecommendationsFor (User), MovieDbImportService loadPersonData (String), MovieDbImportService importMovieFailsafe (Integer), Movie getGenre (), Movie getRoles (), User updatePassword (String, String, String), Movie setGenre (String), ImportController importMovie (String, Model), User rate (Movie, int, String), MovieController getMovie (String), MovieRecommendations evaluate (Path), Movie setLanguage (String)]","616"
"5","spring-data-neo4j/cineasts-aspects","bcdf2f8c675294bfe4ae3212f724719b6c773f28","586091ac796c331c0adb668a9327f7de038bf076","INFIX_EXPRESSION_DIVIDING","8","1","7","[Rating setStars (int), Rating getMovie (), Rating getUser (), Rating rate (int, String), Rating getComment (), Rating setComment (String), Rating getStars ()]","56"
"8","spring-data-neo4j/cineasts-aspects","586091ac796c331c0adb668a9327f7de038bf076","8437015e52086a217b93e40b4a3deddcbc50981e","STATEMENTS_ORDER_REARRANGEMENT","10","1","7","[Role getActor (), Role setName (String), Role Role (Movie, Person, String), Role Role (), Role getMovie (), Role getName (), Role toString ()]","63"
"13","spring-data-neo4j/cineasts-aspects","8437015e52086a217b93e40b4a3deddcbc50981e","f3c5e9e2f2b14c0d3569b5bccdfae1cd66678ed6","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[Role Role (Movie, Person, String)]","9"
"0","spring-data-neo4j/cineasts-rest","f3c5e9e2f2b14c0d3569b5bccdfae1cd66678ed6","956de86e749bcd584029f74fd101e712fbcdd6d8","IF_DIVIDING","9","1","90","[MovieDbJsonMapper mapToPerson (Map, Person), Movie setVersion (Integer), MovieDbImportService importMovies (Map<Integer,Integer>), MovieRating aggregateRatings (User, int), Movie Movie (String, String), MovieRating average (), Movie getRatings (), Movie setRuntime (Integer), MovieRating obtainRating (Movie), Movie getDescription (), MovieDbImportService doImportMovie (String), Movie getReleaseDate (), CineastsRepository rateMovie (Movie, User, int, String), MovieDbJsonMapper mapToRole (String), CineastsRepository getPerson (String), Movie getLanguage (), DatabasePopulator populateDatabase (), Movie getTitle (), Movie setHomepage (String), User getName (), Movie getVersion (), Movie getImdbId (), Movie getYoutubeId (), MovieDbImportService relatePersonsToMovie (Movie, Map), MovieRating FriendsMovieRecommendations (int), User addFriend (User), Movie getLastModified (), Movie setImdbId (String), Movie getStars (), User isFriend (User), User getLogin (), User toString (), CineastsRepository getMovie (String), MovieDbImportService loadMovieData (String), Movie setLastModified (Date), Movie setImageUrl (String), MovieDbJsonMapper mapToMovie (Map, Movie), Movie getYear (), User User (String, String, String, Roles), CineastsRepository getMovieData (String), Movie getDirector (), User getRole (), Movie getRuntime (), MovieRating getRecommendationsFor (User), Movie setTrailer (String), Movie Movie (), Movie getTagline (), User getAuthority (), CineastsRepository recommendMovies (User), User getFriends (), CineastsRepository findMovies (String, int), MovieImporter MovieImporter (MovieDbImportService), User getRatings (), MovieDbJsonMapper extractFirst (Map, String, String), MovieDbImportService doImportPerson (String), MovieDbImportService importMovie (String), User getPassword (), Movie setStudio (String), MovieDbJsonMapper toDate (Map, String, String), MovieDbJsonMapper limit (String, int), Movie setTagline (String), Movie getId (), Movie getTrailer (), Movie getActors (), Movie getHomepage (), DatabasePopulator cleanDb (), Movie getStudio (), MovieImporter getMovieIdsToImport (String[]), Movie setReleaseDate (Date), User setName (String), MovieDbImportService importPerson (String), MovieImporter runImport (Map<Integer,Integer>), Movie getImageUrl (), Movie toString (), User User (), MovieImporter main (String[]), Movie setTitle (String), User encode (String), MovieRating toString (), Movie setDescription (String), MovieRating update (Rating, int), MovieDbImportService loadPersonData (String), MovieDbImportService importMovieFailsafe (Integer), Movie getGenre (), Movie getRoles (), User updatePassword (String, String, String), Movie setGenre (String), User rate (Movie, int, String), Movie setLanguage (String), MovieDbJsonMapper selectImageUrl (List<Map>, String, String)]","720"
"15","spring-data-neo4j/cineasts-rest","956de86e749bcd584029f74fd101e712fbcdd6d8","629d424ad05c5af0ba97bdb391f1f2b11acd82b8","SWITCH_EQUAL_SIDES","14","1","1","[MovieRating average ()]","8"
"29","spring-data-neo4j/cineasts-rest","629d424ad05c5af0ba97bdb391f1f2b11acd82b8","7c47475ea772a08b5f0ac2073d978d63e572f015","REVERSE_IF_ELSE","3","1","1","[MovieRating obtainRating (Movie)]","8"
"0","spring-data-neo4j/cineasts","7c47475ea772a08b5f0ac2073d978d63e572f015","9c13a031ff3e74e8c483b2180317c4dc3041c014","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","104","[Director Director (String, String), Movie Movie (String, String), Movie getRatings (), Movie setRuntime (Integer), User rate (Neo4jOperations, Movie, int, String), Movie getDescription (), MovieDbImportService doImportMovie (String), MovieController updateMovie (Model, String, Integer, String), MovieDbLocalStorage hasMovie (String), Movie setHomepage (String), MovieController singleMovieView (Model, String), Movie getVersion (), Movie getYoutubeId (), User addFriend (User), Movie getLastModified (), Actor Actor (String, String), Movie getStars (), User hashCode (), MovieDbLocalStorage storeMovie (String, Object), User toString (), MovieController findMovies (Model, String), MovieDbLocalStorage fileForPerson (String), Movie getDirectors (), Movie setLastModified (Date), MovieDbLocalStorage storePerson (String, Object), Movie setImageUrl (String), ImportController ImportController (MovieDbImportService), User User (String, String, String, Roles), MovieDbLocalStorage asMap (Object), MovieController populateDatabase (Model), Movie setTrailer (String), Movie getTagline (), ImportController extractRanges (String), MovieDbLocalStorage MovieDbLocalStorage (String), Movie equals (Object), User getPassword (), Actor Actor (), Movie setTagline (String), MovieDbImportService doImportPerson (String, T), MovieDbLocalStorage loadJsonValue (File), Movie getTrailer (), User equals (Object), Movie getHomepage (), MovieController singleActorView (Model, String), Movie getStudio (), User getId (), Movie getImageUrl (), Actor getRoles (), Director Director (), Movie setTitle (String), Director Director (String), MovieDbImportService loadPersonData (String), User updatePassword (String, String, String), Director directed (Movie), Movie setGenre (String), ImportController importMovie (String, Model), MovieController getMovie (String), Movie setVersion (Integer), MovieDbImportService importMovies (Map<Integer,Integer>), Director getDirectedMovies (), MovieController index (Model), MovieDbLocalStorage storeJsonValue (Object, File), Movie getReleaseDate (), Movie getLanguage (), Movie getTitle (), User getName (), Movie getImdbId (), MovieDbLocalStorage fileForMovie (String), MovieDbImportService relatePersonsToMovie (Movie, Map), Movie setImdbId (String), User isFriend (User), User getLogin (), MovieDbImportService loadMovieData (String), Movie hashCode (), MovieDbLocalStorage loadMovie (String), Movie getYear (), User getRole (), Movie getRuntime (), Movie Movie (), User getAuthority (), User getFriends (), User getRatings (), Actor Actor (String), MovieDbImportService importMovie (String), Movie setStudio (String), MovieController addUser (Model), MovieDbLocalStorage ensureStorageDirectoryExists (), Movie getId (), MovieController clean (Model), Movie getActors (), Movie setReleaseDate (Date), User setName (String), Movie toString (), User User (), User encode (String), MovieDbLocalStorage loadPerson (String), Movie setDescription (String), MovieDbImportService importMovieFailsafe (Integer), Movie getGenre (), Movie getRoles (), MovieDbImportService importPerson (String, T), Actor playedIn (Movie, String), MovieDbLocalStorage hasPerson (String), Movie setLanguage (String)]","832"
"2","spring-data-neo4j/cineasts","9c13a031ff3e74e8c483b2180317c4dc3041c014","33cf002679d065d6ba743853f475b53d583cf73d","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[MovieController updateMovie (Model, String, Integer, String)]","8"
"4","spring-data-neo4j/cineasts","33cf002679d065d6ba743853f475b53d583cf73d","1b6bda68757215a7d67c02f718bbae2cef0916df","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[MovieController singleMovieView (Model, String), MovieController updateMovie (Model, String, Integer, String)]","16"
"7","spring-data-neo4j/cineasts","1b6bda68757215a7d67c02f718bbae2cef0916df","dd6fe7d188187ad4dd50019503ab7e17b3917949","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[MovieController singleMovieView (Model, String), MovieController updateMovie (Model, String, Integer, String)]","16"
"8","spring-data-neo4j/cineasts","dd6fe7d188187ad4dd50019503ab7e17b3917949","06ae7c8a9087800f0b856d2e492292eb5ff19fc4","SWITCH_EQUAL_SIDES","14","1","1","[MovieController updateMovie (Model, String, Integer, String)]","8"
"12","spring-data-neo4j/cineasts","06ae7c8a9087800f0b856d2e492292eb5ff19fc4","36e851de25173d7994056313da3806c1e87393b8","LOCAL_VAR_RENAMING","0","1","1","[MovieController singleMovieView (Model, String)]","8"
"13","spring-data-neo4j/cineasts","36e851de25173d7994056313da3806c1e87393b8","736511f6e9955438e6cd4487c5f64b7a8072c3bf","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[MovieController singleMovieView (Model, String), MovieController updateMovie (Model, String, Integer, String)]","16"
"16","spring-data-neo4j/cineasts","736511f6e9955438e6cd4487c5f64b7a8072c3bf","07aa84273760b6512560e0a4b8a421d3408a95be","INFIX_EXPRESSION_DIVIDING","8","1","1","[MovieController findMovies (Model, String)]","8"
"19","spring-data-neo4j/cineasts","07aa84273760b6512560e0a4b8a421d3408a95be","e138285a142d76dbc309011a6e3115192b61187a","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[MovieController updateMovie (Model, String, Integer, String)]","8"
"20","spring-data-neo4j/cineasts","e138285a142d76dbc309011a6e3115192b61187a","8679c1452fa92fbe9d245573eebc76593a43b70c","SWITCH_EQUAL_SIDES","14","1","1","[MovieController updateMovie (Model, String, Integer, String)]","8"
"21","spring-data-neo4j/cineasts","8679c1452fa92fbe9d245573eebc76593a43b70c","ccfd7fa49e60bbb0c17ee30885c75c4baac072c3","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[MovieController singleMovieView (Model, String)]","8"
"24","spring-data-neo4j/cineasts","ccfd7fa49e60bbb0c17ee30885c75c4baac072c3","2387c8e381af8115184884cdf96af221fef1743c","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[MovieController singleMovieView (Model, String)]","8"
"25","spring-data-neo4j/cineasts","2387c8e381af8115184884cdf96af221fef1743c","50906457b859477c853c7b94f3fc4e2213b4f4fd","SWITCH_EQUAL_SIDES","14","1","2","[MovieController singleMovieView (Model, String), MovieController updateMovie (Model, String, Integer, String)]","16"
"28","spring-data-neo4j/cineasts","50906457b859477c853c7b94f3fc4e2213b4f4fd","bc1c954df43e3b849a25a66fb62d5dd1e5ee2b70","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[MovieController singleMovieView (Model, String), MovieController updateMovie (Model, String, Integer, String)]","16"
"29","spring-data-neo4j/cineasts","bc1c954df43e3b849a25a66fb62d5dd1e5ee2b70","950e292084c8b52e311850960c432ec8dcae97dd","SWITCH_EQUAL_SIDES","14","1","2","[MovieController singleMovieView (Model, String), MovieController updateMovie (Model, String, Integer, String)]","16"
"0","spring-data-neo4j/hello-worlds","950e292084c8b52e311850960c432ec8dcae97dd","e9fd6a78158e641d89e13cd81c77454658680c88","VAR_DECLARATION_DIVIDING","13","1","17","[World toString (), World getName (), World canBeReachedFrom (World), World equals (Object), World addRocketRouteTo (World), GalaxyService getNumberOfWorlds (), World getId (), World getMoons (), World hashCode (), World World (String, int), GalaxyService findWorldByName (String), GalaxyService findWorldById (Long), GalaxyService makeSomeWorlds (), World World (), GalaxyService findAllByNumberOfMoons (int), GalaxyService getAllWorlds (), GalaxyService createWorld (String, int)]","34"
"0","spring-data-neo4j/imdb","e9fd6a78158e641d89e13cd81c77454658680c88","e559e72f509b6c8fc36782408eb0e7e6c442e143","VAR_DECLARATION_MERGING","12","1","35","[MovieFindControllerDelegate getModel (Object, Map<String,Object>), ActorInfo compareTo (ActorInfo), ActorInfo setRole (String), MovieInfo getTitle (), RoleData getRole (), ActorFindControllerDelegate getModel (Object, Map<String,Object>), ActorInfo getName (), ImdbParser getFileReader (String, String, int), ImdbReaderImpl newActor (String, RoleData[]), ActorData getName (), RoleData getTitle (), MovieInfo MovieInfo (Movie, Role), MovieInfo setRole (String), ImdbParser ImdbParser (ImdbReader), ActorInfo setName (String), ImdbReaderImpl newActors (List<ActorData>), ImdbReader newActors (List<ActorData>), ImdbReaderImpl newMovies (List<MovieData>), ImdbReader newMovies (List<MovieData>), MovieInfo getRole (), ImdbParser parseMovies (String), MovieFindControllerDelegate populateModel (Map<String,Object>, Movie), MovieInfo setTitle (String), ActorInfo getRole (), ImdbParser parseActorItems (BufferedReader), ImdbReaderImpl newMovie (String, int), ActorFindControllerDelegate getFieldName (), ImdbParser parseActors (String, String), ActorData ActorData (String, RoleData[]), MovieInfo compareTo (MovieInfo), ActorData getMovieRoles (), RoleData RoleData (String, String), ActorInfo ActorInfo (Actor, Role), MovieFindControllerDelegate getFieldName (), ActorFindControllerDelegate populateModel (Map<String,Object>, Actor)]","280"
"4","spring-data-neo4j/imdb","e559e72f509b6c8fc36782408eb0e7e6c442e143","26238dac993fcd4a536d97d8225e443149be9680","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ImdbSetupControllerDelegate getModel (Object, Map<String,Object>)]","9"
"11","spring-data-neo4j/imdb","26238dac993fcd4a536d97d8225e443149be9680","5e2ead0b0fbb1e4ede936c86c75bfd51601323d5","LOCAL_VAR_RENAMING","0","1","1","[SetupControllerDelegate getModel (Object, Map<String,Object>)]","10"
"0","spring-data-neo4j/myrestaurants-original","5e2ead0b0fbb1e4ede936c86c75bfd51601323d5","e141ce45b91372ba2ee7e5504f214bdf988c86a3","INFIX_EXPRESSION_DIVIDING","8","1","27","[UserAccount getId (), RestaurantDao findAllRestaurants (), UserAccount getFavorites (), UserAccount getVersion (), UserAccount toString (), RestaurantDao countRestaurants (), RestaurantDao findRestaurantEntries (int, int), UserAccount setLastName (String), UserAccountDao persist (UserAccount), UserAccountDao merge (UserAccount), BaseApplicationController getRestaurantConverter (), UserAccount getUserName (), UserAccountDao findUserAccount (Long), BaseApplicationController populateCurrentUserName (), BaseApplicationController convert (Restaurant), UserAccount setFirstName (String), UserAccountDao findByName (String), UserAccount setId (Long), UserAccount getBirthDate (), UserAccount setUserName (String), UserAccount setVersion (Integer), UserAccount getFirstName (), BaseApplicationController addDateTimeFormatPatterns (Model), RestaurantDao findRestaurant (Long), UserAccount setBirthDate (Date), UserAccount getLastName (), UserAccount setFavorites (Set<Restaurant>)]","108"
"6","spring-data-neo4j/myrestaurants-original","e141ce45b91372ba2ee7e5504f214bdf988c86a3","92edf77ddc36c532b327c4ba1aea13fb5a4d6324","LOCAL_VAR_RENAMING","0","1","3","[UserAccount getFirstName (), UserAccount setBirthDate (Date), UserAccount setFirstName (String)]","12"
"15","spring-data-neo4j/myrestaurants-original","92edf77ddc36c532b327c4ba1aea13fb5a4d6324","fb334bd811c3f540166043594acda4d1abac64b7","LOCAL_VAR_RENAMING","0","1","4","[UserAccount setLastName (String), UserAccount getUserName (), UserAccount setUserName (String), UserAccount getLastName ()]","16"
"19","spring-data-neo4j/myrestaurants-original","fb334bd811c3f540166043594acda4d1abac64b7","d4466991050c20b27ba36362607ffd59d0a86dc1","LOCAL_VAR_RENAMING","0","1","3","[UserAccount setLastName (String), UserAccount getFirstName (), UserAccount setFirstName (String)]","12"
"22","spring-data-neo4j/myrestaurants-original","d4466991050c20b27ba36362607ffd59d0a86dc1","464a94d140d49ceb39207ae234e59784814deaf5","SWITCH_EQUAL_SIDES","14","1","1","[UserAccount toString ()]","4"
"23","spring-data-neo4j/myrestaurants-original","464a94d140d49ceb39207ae234e59784814deaf5","82a20b66486cc6406208497e74a6d16c427f57be","SWITCH_EQUAL_SIDES","14","1","1","[UserAccount toString ()]","4"
"28","spring-data-neo4j/myrestaurants-original","82a20b66486cc6406208497e74a6d16c427f57be","187db402012ac14f29d6ed2810dd8a85cee63378","REVERSE_IF_ELSE","3","1","1","[UserAccount toString ()]","4"
"29","spring-data-neo4j/myrestaurants-original","187db402012ac14f29d6ed2810dd8a85cee63378","c56eabf332697dc2f74b0576d3e883df4651a91f","SWITCH_EQUAL_SIDES","14","1","1","[UserAccount toString ()]","4"
"0","spring-data-neo4j/myrestaurants-social","c56eabf332697dc2f74b0576d3e883df4651a91f","877e66928df95a4dba28ebd45136df5794d746fa","FOR_TO_WHILE","1","1","34","[Restaurant getState (), Restaurant getCity (), FriendController delete (Long, Long, Integer, Integer, Model), AggregatedRecommendation AggregatedRecommendation (Node), Restaurant setCity (String), AggregatedRecommendation add (Relationship, int), BaseApplicationController populateModelWithCurrentUserAccountIdAsLong (), Restaurant setZipCode (String), Restaurant getId (), TopRatedRestaurantFinder getTopNRatedRestaurants (UserAccount, int), BaseApplicationController getRestaurantConverter (), FriendController show (Long, Model), Restaurant setId (Long), FriendController list (Integer, Integer, Long, Model), FriendController createForm (Model), Restaurant getZipCode (), BaseApplicationController convert (Restaurant), AggregatedRecommendation CalculateRatingPredicate (), Restaurant setVersion (Integer), FriendController convert (UserAccount), AggregatedRecommendation getRecommendedRestaurants (int), Restaurant setState (String), Restaurant toString (), FriendController getUserAccountConverter (), FriendController registerConverters (WebDataBinder), AggregatedRecommendation evaluate (Path), AggregatedRecommendation toRatedRestaurant (CalculateRatingPredicate), FriendController create (FriendFormBean, Long, BindingResult, Model), Restaurant getVersion (), Restaurant getName (), BaseApplicationController addDateTimeFormatPatterns (Model), BaseApplicationController getCurrentUserAccount (), Restaurant setName (String), AggregatedRecommendation compareTo (AggregatedRecommendation)]","136"
"2","spring-data-neo4j/myrestaurants-social","877e66928df95a4dba28ebd45136df5794d746fa","fae262f73cad935b6b3c3dd283f486481428ba7a","LOCAL_VAR_RENAMING","0","1","2","[BaseApplicationController populateModelWithCurrentUserAccountIdAsLong (), BaseApplicationController getCurrentUserAccount ()]","8"
"25","spring-data-neo4j/myrestaurants-social","fae262f73cad935b6b3c3dd283f486481428ba7a","27c1d5274e2e8ff757f8dce45d1b7f35b088facb","REVERSE_IF_ELSE","3","1","2","[BaseApplicationController populateModelWithCurrentUserAccountIdAsLong (), BaseApplicationController getCurrentUserAccount ()]","8"
"0","spring-data-neo4j/todos","27c1d5274e2e8ff757f8dce45d1b7f35b088facb","f8638a354981e3be582361c16cefe9c2cf15d80d","PRE_POST_FIX_EXPRESSION_DIVIDING","16","1","19","[Todo setIsDone (Boolean), Main main (String[]), TodoController deleteFromJson (Long), Todo fromJsonArrayToTodoes (String), Todo getIsDone (), TodoController createFromJson (String), TodoController showJson (Long), TodoController encodeUrlPathSegment (String, HttpServletRequest), Todo toJsonArray (Iterable<Todo>), Todo Todo (Node), Todo getTitle (), TodoController updateFromJson (String), TodoController listJson (), Todo toString (), Todo setTitle (String), Todo toJson (), Todo fromJsonToTodo (String), Todo getId (), Todo Todo ()]","57"
"10","spring-data-neo4j/todos","f8638a354981e3be582361c16cefe9c2cf15d80d","00ac12232016a1123ad07bcd3a55e32fe97a242f","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[TodoController deleteFromJson (Long), TodoController createFromJson (String)]","6"
"13","spring-data-neo4j/todos","00ac12232016a1123ad07bcd3a55e32fe97a242f","cfbc19f5f619cf755e3800f9373a1ade8d10aa37","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[TodoController encodeUrlPathSegment (String, HttpServletRequest)]","3"
"15","spring-data-neo4j/todos","cfbc19f5f619cf755e3800f9373a1ade8d10aa37","d4438b840aa19574e7a5ce56b9f02a0a24162019","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[TodoController encodeUrlPathSegment (String, HttpServletRequest)]","3"
"16","spring-data-neo4j/todos","d4438b840aa19574e7a5ce56b9f02a0a24162019","611ff39eb8aec283a11ade21e0f8159fe453ab05","REVERSE_IF_ELSE","3","1","3","[TodoController updateFromJson (String), TodoController deleteFromJson (Long), TodoController showJson (Long)]","9"
"27","spring-data-neo4j/todos","611ff39eb8aec283a11ade21e0f8159fe453ab05","6999c0cae03b2a98f97507fc886308745baa9c01","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[TodoController encodeUrlPathSegment (String, HttpServletRequest)]","3"
"0","spring-data-neo4j/spring-data-neo4j-rest","6999c0cae03b2a98f97507fc886308745baa9c01","31a7599c8c8cec693c6237dcb772ab592b77367a","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","31","[SpringRestGraphDatabase SpringRestGraphDatabase (RestAPI), SpringRestGraphDatabase createRelationship (Node, Node, RelationshipType, Map<String,Object>), SpringResultConverter remove (Relationship), SpringResultConverter removeFromIndexes (Relationship), SpringResultConverter SpringResultConverter (ResultConverter), SpringRestCypherQueryEngine SpringRestCypherQueryEngine (RestCypherQueryEngine), SpringResultConverter removeFromIndexes (Node), SpringRestGraphDatabase traversalDescription (), SpringRestGraphDatabase setConversionService (ConversionService), SpringResultConverter getTransactionManager (), SpringResultConverter setResultConverter (ResultConverter), SpringRestGremlinQueryEngine SpringRestGremlinQueryEngine (RestGremlinQueryEngine), SpringRestGraphDatabase SpringRestGraphDatabase (String), SpringResultConverter convert (Object, Class), SpringResultConverter remove (Node), SpringRestGraphDatabase getIndex (String), SpringHandler handle (R), SpringRestGraphDatabase SpringRestGraphDatabase (String, String, String), SpringRestGraphDatabase beginTx (), SpringHandler SpringHandler (Handler<R>), SpringRestGraphDatabase getOrCreateRelationship (String, String, Object, Node, Node, String, Map<String,Object>), SpringRestGraphDatabase createIndex (Class<T>, String, org.springframework.data.neo4j.support.index.IndexType), SpringRestGraphDatabase getOrCreateNode (String, String, Object, Map<String,Object>), SpringRestGremlinQueryEngine query (String, Map<String,Object>), SpringRestGraphDatabase createNode (Map<String,Object>), SpringRestGraphDatabase queryEngineFor (QueryType, ResultConverter), SpringRestGraphDatabase getTxManager (), SpringRestGraphDatabase queryEngineFor (QueryType), SpringRestGraphDatabase createResultConverter (), SpringRestCypherQueryEngine query (String, Map<String,Object>), SpringResultConverter transactionIsRunning ()]","124"
"5","spring-data-neo4j/spring-data-neo4j-rest","31a7599c8c8cec693c6237dcb772ab592b77367a","c5b3c195d50d5688066bb7d1f48d8f319724f8b9","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SpringRestGraphDatabase getOrCreateNode (String, String, Object, Map<String,Object>)]","4"
"22","spring-data-neo4j/spring-data-neo4j-rest","c5b3c195d50d5688066bb7d1f48d8f319724f8b9","b5a2c369bf4db9fd56a31ea1b9e8b60d76ad3b2f","REVERSE_IF_ELSE","3","1","1","[SpringRestGraphDatabase createResultConverter ()]","4"
"23","spring-data-neo4j/spring-data-neo4j-rest","b5a2c369bf4db9fd56a31ea1b9e8b60d76ad3b2f","2395073e0547b0293bff25a3baf7280902daf560","REVERSE_IF_ELSE","3","1","1","[SpringRestGraphDatabase createResultConverter ()]","4"
"28","spring-data-neo4j/spring-data-neo4j-rest","2395073e0547b0293bff25a3baf7280902daf560","cdaf2d4ec989384dbab96afa562a5a8ed6c960ca","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SpringRestGraphDatabase getOrCreateNode (String, String, Object, Map<String,Object>)]","4"
"0","spring-data-neo4j/spring-data-neo4j-tx","cdaf2d4ec989384dbab96afa562a5a8ed6c960ca","a1424b15c562a997d0a0ef8606943125e5f6a37f","SWITCH_STRING_EQUAL","15","1","29","[ChainedTransactionManager commit (TransactionStatus), SpringServiceImpl getTransaction (), SpringServiceImpl start (), SpringProvider loadTransactionManager (String, XaDataSourceManager, KernelPanicEventGenerator, TxHook, StringLogger, FileSystemAbstraction, TransactionStateFactory), SpringServiceImpl begin (), SpringServiceImpl suspend (), ChainedTransactionManager getTransaction (TransactionDefinition), ChainedTransactionManager lastTransactionManagerIndex (), SpringServiceImpl getTransactionState (), SpringServiceImpl setTransactionTimeout (int), SpringServiceImpl getTransactionManager (), SpringServiceImpl stop (), SpringServiceImpl getStatus (), SpringServiceImpl rollback (), ChainedTransactionManager ChainedTransactionManager (SynchronizationManager, PlatformTransactionManager), SpringServiceImpl doRecovery (), SpringProvider SpringProvider (), SpringServiceImpl getEventIdentifier (), ChainedTransactionManager rollback (TransactionStatus), SpringServiceImpl shutdown (), ChainedTransactionManager reverse (Collection<T>), SpringServiceImpl commit (), SpringServiceImpl setTransactionManager (PlatformTransactionManager), SpringServiceImpl init (), ChainedTransactionManager getLastTransactionManager (), SpringServiceImpl resume (Transaction), SpringServiceImpl setRollbackOnly (), SpringServiceImpl SpringServiceImpl (TransactionStateFactory), ChainedTransactionManager ChainedTransactionManager (PlatformTransactionManager)]","87"
"9","spring-data-neo4j/spring-data-neo4j-tx","a1424b15c562a997d0a0ef8606943125e5f6a37f","f5e588cabda48bff85773eebb361bce55427de33","LOCAL_VAR_RENAMING","0","1","23","[SavePoints createSavepoint (), SavePoints flush (), SavePoints commit (PlatformTransactionManager), SavePoints savepointFor (TransactionStatus), MultiTransactionStatus getMainTransactionStatus (), MultiTransactionStatus isNewSynchonization (), MultiTransactionStatus isNewTransaction (), SavePoints rollback (PlatformTransactionManager), SavePoints save (TransactionStatus), SavePoints addSavePoint (TransactionStatus, Object), SavePoints release (), MultiTransactionStatus setNewSynchonization (), MultiTransactionStatus isCompleted (), SavePoints registerTransactionManager (TransactionDefinition, PlatformTransactionManager), SavePoints releaseSavepoint (Object), MultiTransactionStatus isRollbackOnly (), SavePoints rollbackToSavepoint (Object), MultiTransactionStatus getTransactionStatuses (), MultiTransactionStatus hasSavepoint (), SavePoints getTransactionStatus (PlatformTransactionManager), MultiTransactionStatus setRollbackOnly (), SavePoints rollback (), MultiTransactionStatus MultiTransactionStatus (PlatformTransactionManager)]","92"
"20","spring-data-neo4j/spring-data-neo4j-tx","f5e588cabda48bff85773eebb361bce55427de33","0a49c31234200beac2de82dde97ba2050505083f","LOCAL_VAR_RENAMING","0","1","3","[MultiTransactionStatus getMainTransactionStatus (), SavePoints rollback (), MultiTransactionStatus MultiTransactionStatus (PlatformTransactionManager)]","12"
"0","spring-data-neo4j/spring-data-neo4j","0a49c31234200beac2de82dde97ba2050505083f","9d8d13179988c8f4f0dc0b5bbf92a9523d37064e","REVERSE_IF_ELSE","3","1","103","[Neo4jPersistentPropertyImpl getAnnotations (), FieldAccessorFactoryProvider listeners (), Neo4jPersistentPropertyImpl isAnnotationPresent (String), RelatedToCollectionFieldAccessor getDefaultValue (), Neo4jPersistentPropertyImpl getValue (Object, MappingPolicy), Neo4jPersistentPropertyImpl isAssociation (), Neo4jPersistentPropertyImpl isTargetTypeEnforced (), RelatedToCollectionFieldAccessorFactory RelatedToCollectionFieldAccessorFactory (Neo4jTemplate), BeforeSaveEvent BeforeSaveEvent (Object, T), Neo4jPersistentPropertyImpl isRelationshipEntity (Class<?>), RelatedToCollectionFieldAccessorFactory forField (Neo4jPersistentProperty), Neo4jPersistentPropertyImpl extractIndexInfo (), TraversalFieldAccessor resolveTarget (GraphTraversal, Neo4jPersistentProperty), Neo4jPersistentPropertyImpl isRelationship (), WithoutResult WithoutResult (Neo4jTemplate), StringToDateConverter convert (String), Neo4jPersistentPropertyImpl extractRelationshipInfo (Field, Neo4jMappingContext), NumberToDateConverter convert (Number), RelatedToCollectionFieldAccessor RelatedToCollectionFieldAccessor (RelationshipType, Direction, Class<?>, Neo4jTemplate, Neo4jPersistentProperty), TraversalFieldAccessor getValue (Object, MappingPolicy), EntityCreatingClosableIterable close (), FieldAccessorFactoryProvider FieldAccessorFactoryProvider (Neo4jPersistentProperty, FieldAccessorFactory, List), TraversalFieldAccessorFactory accept (Neo4jPersistentProperty), EntityCreatingClosableIterable underlyingObjectToObject (PropertyContainer), Neo4jPersistentPropertyImpl getNeo4jPropertyName (), Neo4jConversionServiceFactoryBean isSingleton (), TraversalFieldAccessor checkTypes (Class<?>, Class<?>), Neo4jPersistentPropertyImpl getAnnotation (Class<? extends T>), Neo4jPersistentPropertyImpl getQuery (), EntityMapper mapPath (EntityPath<S,E>), Neo4jPersistentPropertyImpl getDefaultValue (Class<?>), Neo4jPersistentPropertyImpl getAssociation (), EntityMapper EntityMapper (Neo4jTemplate), Neo4jPersistentPropertyImpl isIndexedNumerically (), Neo4jConversionServiceFactoryBean getObject (), TraversalFieldAccessorFactory forField (Neo4jPersistentProperty), FieldAccessorFactoryProvider getFieldAccessListeners (), ClosableCombiningIterable close (), Neo4jPersistentPropertyImpl getOwner (), StringToEnum StringToEnum (Class<T>), Neo4jPersistentPropertyImpl hasQuery (), Neo4jConversionServiceFactoryBean getObjectType (), TraversalFieldAccessor createTraversalDescription (GraphTraversal), Neo4jPersistentPropertyImpl hasAnnotation (TypeInformation<?>, Class<NodeEntity>), Neo4jPersistentPropertyImpl toString (), StringToEnum convert (String), Neo4jPersistentPropertyImpl isConvertible (ConversionService, Class<?>), Neo4jPersistentPropertyImpl isUnique (), RelatedToCollectionFieldAccessor setValue (Object, Object, MappingPolicy), Neo4jPersistentPropertyImpl getMappingPolicy (), Neo4jPersistentPropertyImpl isNumeric (Class<?>), ClosableCombiningIterable ClosableCombiningIterable (Iterable<Iterable<T>>), Neo4jPersistentPropertyImpl Neo4jPersistentPropertyImpl (Field, PropertyDescriptor, PersistentEntity<?,Neo4jPersistentProperty>, SimpleTypeHolder, Neo4jMappingContext), TraversalFieldAccessor TraversalFieldAccessor (Neo4jPersistentProperty, Neo4jTemplate), FieldAccessorFactoryProvider getProperty (), Neo4jPersistentPropertyImpl extractDefaultValue (), Neo4jPersistentPropertyImpl isNeo4jPropertyType (), Neo4jPersistentPropertyImpl getValueFromEntity (Object, MappingPolicy), EntityMapper mapPath (Path), FieldAccessorFactoryProvider accessor (), Neo4jPersistentPropertyImpl isTransient (), FieldAccessorFactoryProvider getIdProperty (), Neo4jPersistentPropertyImpl isNeo4jPropertyValue (Object), RelatedToCollectionFieldAccessorFactory accept (Neo4jPersistentProperty), Neo4jPersistentPropertyImpl isIndexed (), DateToStringConverter convert (Date), WithoutResult doWithPath (EntityPath<S,E>), Neo4jPersistentPropertyImpl getIndexKey (), Neo4jPersistentPropertyImpl isSyntheticField (), Neo4jConversionServiceFactoryBean addConverters (ConversionService), EntityCreatingClosableIterable EntityCreatingClosableIterable (ClosableIterable<PropertyContainer>, Class<T>, Neo4jEntityPersister, Neo4jTemplate), WithoutResult mapPath (EntityPath<S,E>), FieldAccessorFactoryFactory create (Neo4jTemplate), DateToLongConverter convert (Date), Neo4jPersistentPropertyImpl getTargetType (), Neo4jPersistentPropertyImpl isNeo4jPropertyType (Class<?>), Neo4jPersistentPropertyImpl getPropertyType (), FieldAccessorFactoryFactory provideFactoryFor (Neo4jTemplate), Neo4jPersistentPropertyImpl isSerializablePropertyField (ConversionService), Neo4jPersistentPropertyImpl createAssociation (), FieldAccessorFactoryProvider FieldAccessorFactoryProviders (), Neo4jPersistentPropertyImpl setValue (Object, Object), EnumToStringConverter convert (Enum), TraversalFieldAccessorFactory TraversalFieldAccessorFactory (Neo4jTemplate), Neo4jPersistentPropertyImpl getPersistentEntityType (), FieldAccessorFactoryProvider add (Neo4jPersistentProperty, FieldAccessorFactory, List<FieldAccessorListenerFactory>), IndexingNodeTypeRepresentationStrategy IndexingNodeTypeRepresentationStrategy (GraphDatabase, IndexProvider), Neo4jPersistentPropertyImpl hashCode (), Neo4jPersistentPropertyImpl getDefaultValue (ConversionService, Class<T>), TraversalFieldAccessor isWriteable (Object), Neo4jPersistentPropertyImpl getIndexInfo (), FieldAccessorFactoryProvider getFieldAccessors (), Neo4jPersistentPropertyImpl isNodeEntity (Class<?>), Neo4jPersistentPropertyImpl createNeo4jPropertyName (), Neo4jPersistentPropertyImpl getRelationshipInfo (), RelatedToCollectionFieldAccessor getValue (Object, MappingPolicy), StringToEnumConverterFactory getConverter (Class<T>), Neo4jPersistentPropertyImpl isEntity (), TraversalFieldAccessor setValue (Object, Object, MappingPolicy), Neo4jPersistentPropertyImpl extractAnnotations (Field), Neo4jPersistentPropertyImpl extractPropertyType (), Neo4jPersistentPropertyImpl obtainMappingPolicy (MappingPolicy), Neo4jPersistentPropertyImpl extractQuery ()]","1133"
"7","spring-data-neo4j/spring-data-neo4j","9d8d13179988c8f4f0dc0b5bbf92a9523d37064e","f5ff76a5eabdf00004926a5e7546d0feb00f50fb","REVERSE_IF_ELSE","3","1","1","[StringToEnum convert (String)]","11"
"9","spring-data-neo4j/spring-data-neo4j","f5ff76a5eabdf00004926a5e7546d0feb00f50fb","f7b17574d5b0c35dbd62478c3d8ed43b7efa6139","REVERSE_IF_ELSE","3","1","1","[StringToEnum convert (String)]","11"
"16","spring-data-neo4j/spring-data-neo4j","f7b17574d5b0c35dbd62478c3d8ed43b7efa6139","087dbff3fd8acb33f8a968b4c69fad8fc13944d6","LOCAL_VAR_RENAMING","0","1","2","[DateToLongConverter convert (Date), NumberToDateConverter convert (Number)]","22"
"24","spring-data-neo4j/spring-data-neo4j","087dbff3fd8acb33f8a968b4c69fad8fc13944d6","d8b025c02f20b1db34e87fb1b72a50ca76f2ade2","SWITCH_EQUAL_SIDES","14","1","1","[StringToEnum convert (String)]","11"
"0","scribejava","bfbe536886fc3c614b785110f8eba663644862d7","35e7e1d18ec3cc69bf81ba6b8295bcf4f50024f5","VAR_DECLARATION_MERGING","12","1","6","[StreamUtils getStreamContents (InputStream), RequestTokenExtractor extract (String), Api createService (String, String, String), BaseStringExtractorImpl extract (OAuthRequest), BaseStringExtractorImpl getSortedAndEncodedParams (OAuthRequest), BaseStringExtractorImpl checkPreconditions (OAuthRequest)]","24"
"6","scribejava","35e7e1d18ec3cc69bf81ba6b8295bcf4f50024f5","9894a068e6785afbb185a0650a69ad8a9bbbcb90","REVERSE_IF_ELSE","3","1","1","[StreamUtils getStreamContents (InputStream)]","4"
"9","scribejava","9894a068e6785afbb185a0650a69ad8a9bbbcb90","73c6387b9d9de1f2fdc8e77e63bbeeb82f2ee52c","REVERSE_IF_ELSE","3","1","1","[StreamUtils getStreamContents (InputStream)]","4"
"13","scribejava","73c6387b9d9de1f2fdc8e77e63bbeeb82f2ee52c","70782109326cc52b89d57c17738694e1d6f6019b","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[StreamUtils getStreamContents (InputStream)]","4"
"16","scribejava","70782109326cc52b89d57c17738694e1d6f6019b","5b70a899e79d485c6766ada1bddd1139a3500069","LOCAL_VAR_RENAMING","0","1","1","[StreamUtils getStreamContents (InputStream)]","4"
"27","scribejava","5b70a899e79d485c6766ada1bddd1139a3500069","636f6e4df83fcd1d3e337cd924f69b04f9f05d81","REVERSE_IF_ELSE","3","1","1","[StreamUtils getStreamContents (InputStream)]","4"
"30","scribejava","636f6e4df83fcd1d3e337cd924f69b04f9f05d81","64f1e054518c5d0e72da8a235924db062875f509","REVERSE_IF_ELSE","3","1","1","[StreamUtils getStreamContents (InputStream)]","4"
"36","scribejava","64f1e054518c5d0e72da8a235924db062875f509","205ec4b9ef3be9f7479eb008104deafbc156d7f8","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[StreamUtils getStreamContents (InputStream)]","4"
"42","scribejava","205ec4b9ef3be9f7479eb008104deafbc156d7f8","e2b51f23f7c23699e2dc7ab91b0770ef14c6a5c3","LOCAL_VAR_RENAMING","0","1","1","[StreamUtils getStreamContents (InputStream)]","4"
"50","scribejava","e2b51f23f7c23699e2dc7ab91b0770ef14c6a5c3","4aa56c49fc42044c79a5d71ce5416c346ce7b7bf","LOCAL_VAR_RENAMING","0","1","1","[StreamUtils getStreamContents (InputStream)]","4"
"59","scribejava","4aa56c49fc42044c79a5d71ce5416c346ce7b7bf","89b42a4e12ce1218838287c4987b480a27f4a9b3","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[StreamUtils getStreamContents (InputStream)]","4"
"60","scribejava","89b42a4e12ce1218838287c4987b480a27f4a9b3","038fe576f5d751f8065d8904cfdc9cd635fb7f44","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[StreamUtils getStreamContents (InputStream)]","4"
"0","symja-parser","689f67a32faac83d3edda801cda9b51aaa08e741","319103e4d522761643cd7231ced4b38cc856cb8c","SWITCH_STRING_EQUAL","15","1","31","[PatternNode equals (Object), PatternNode PatternNode (SymbolNode, ASTNode), Operator Operator (String, String, int), MinFunction evaluateNodeLogical (ASTNode), PatternNode getConstraint (), Operator equals (Object), MinFunction evaluateFunction (FunctionNode), PreMinusOperator PreMinusOperator (String, String, int), MinFunction getVariables (String, Set<String>, boolean), MinFunction optimizeFunction (FunctionNode), PreMinusOperator createFunction (IParserFactory, ASTNode), PatternNode isDefault (), TimesFunction getVariables (String, Set<String>, boolean), MinFunction getDerivativeResult (ASTNode, FunctionNode), PatternNode toString (), PatternNode PatternNode (SymbolNode, ASTNode, boolean), MinFunction parse (String), Operator getPrecedence (), MinFunction getVariables (ASTNode, Set<String>), Operator toString (), MinFunction evaluateFunctionLogical (FunctionNode), MinFunction isSymbol (SymbolNode, SymbolNode), Operator getOperatorString (), MinFunction isSymbol (SymbolNode, String), Operator hashCode (), PatternNode hashCode (), MinFunction getVariable (String), MinFunction derivative (ASTNode, SymbolNode), PatternNode getSymbol (), Operator getFunctionName (), MinFunction evaluateNode (ASTNode)]","155"
"2","symja-parser","319103e4d522761643cd7231ced4b38cc856cb8c","7e5e9396c759b37adc4e2353bbc1a2a8e8325817","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[PatternNode PatternNode (SymbolNode, ASTNode, boolean)]","5"
"3","symja-parser","7e5e9396c759b37adc4e2353bbc1a2a8e8325817","2a28336ef6abb558222cd0c2604a0b38fd70921a","REVERSE_IF_ELSE","3","1","2","[PatternNode equals (Object), PatternNode hashCode ()]","10"
"14","symja-parser","2a28336ef6abb558222cd0c2604a0b38fd70921a","bf1a0a8cdd44360b0c7e945f626adffa04b009f8","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[PatternNode PatternNode (SymbolNode, ASTNode, boolean)]","5"
"20","symja-parser","bf1a0a8cdd44360b0c7e945f626adffa04b009f8","682cdb0124c8897ed03554da65785ee05dde6eb5","SWITCH_EQUAL_SIDES","14","1","1","[PatternNode equals (Object)]","5"
"24","symja-parser","682cdb0124c8897ed03554da65785ee05dde6eb5","7a2591f2378249cc19d1066719a663daa0accf27","SWITCH_EQUAL_SIDES","14","1","1","[PatternNode equals (Object)]","5"
"28","symja-parser","7a2591f2378249cc19d1066719a663daa0accf27","b6ccba0ae4d5a66bd8f699f64054fe44f044b640","REVERSE_IF_ELSE","3","1","2","[PatternNode equals (Object), PatternNode hashCode ()]","10"
"31","symja-parser","b6ccba0ae4d5a66bd8f699f64054fe44f044b640","214e919bd6095cbf9f8ef2143780e96da490fcaa","REVERSE_IF_ELSE","3","1","2","[PatternNode equals (Object), PatternNode hashCode ()]","10"
"49","symja-parser","214e919bd6095cbf9f8ef2143780e96da490fcaa","754a0717efb3f666dbde27a4f75d0a6c8cf7ca14","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[PatternNode PatternNode (SymbolNode, ASTNode, boolean)]","5"
"54","symja-parser","754a0717efb3f666dbde27a4f75d0a6c8cf7ca14","4c6341a438e47ecb04e7f5a238785515a6420ec9","REVERSE_IF_ELSE","3","1","2","[PatternNode equals (Object), PatternNode hashCode ()]","10"
"61","symja-parser","4c6341a438e47ecb04e7f5a238785515a6420ec9","047a3047af9d37811762dcaf72d34ae91b91621c","REVERSE_IF_ELSE","3","1","2","[PatternNode equals (Object), PatternNode hashCode ()]","10"
"65","symja-parser","047a3047af9d37811762dcaf72d34ae91b91621c","60902760a4d3c188f14777a28ce84a6092db7460","SWITCH_EQUAL_SIDES","14","1","1","[PatternNode equals (Object)]","5"
"0","spring-hateoas","2ba26707fbd2c9e047962d3139a3157e9667bf9c","4520a692a74e67803925bc7af259406cc592df4f","IF_DIVIDING","9","1","40","[DelegatingEntityLinks linkFor (Class<?>, Object), HalFormsProperty withOptions (HalFormsOptions), LinkBuilderFactory linkTo (Class<?>, Object), HalFormsProperty withPrompt (String), HypermediaMappingInformationComparator compare (HypermediaMappingInformation, HypermediaMappingInformation), HateoasConfiguration loadResourceBundleResources (String, boolean), HalFormsProperty isReadOnly (), LinkBuilderFactory linkTo (Class<?>), HalFormsProperty withMinLength (Long), HalFormsProperty withName (String), DelegatingEntityLinks linkToItemResource (Class<?>, Object), HateoasConfiguration hypermediaWebMvcConverters (ObjectProvider<ObjectMapper>, List<HypermediaMappingInformation>, Optional<HypermediaMappingInformationComparator>), LinkParser consumeQuotedString (String, StringBuilder, int[]), HalFormsProperty HalFormsProperty (), HalFormsProperty withMin (Number), HalFormsProperty withRegex (String), MessageSourceResolver resolve (MessageSourceResolvable), HalFormsProperty toString (), HateoasConfiguration lookupMessageSource (), DelegatingEntityLinks DelegatingEntityLinks (PluginRegistry<EntityLinks,Class<?>>), CollectionModel deriveElementType (Collection<?>, ResolvableType), HalFormsProperty withPlaceholder (String), DelegatingEntityLinks getPluginFor (Class<?>), CollectionModel equals (Object), HalFormsProperty withMulti (boolean), HalFormsProperty withReadOnly (boolean), MessageSourceResolver MessageSourceResolver (MessageSource), LinkBuilderFactory linkTo (Class<?>, Map<String,?>), HalFormsProperty withType (String), HalFormsProperty withMaxLength (Long), HalFormsProperty HalFormsProperty (String, boolean, Object, String, String, boolean, boolean, boolean, String, Number, Number, Long, Long, String, HalFormsOptions), HalFormsProperty hashCode (), HalFormsProperty withTemplated (boolean), HalFormsProperty withRequired (boolean), HalFormsProperty withMax (Number), LinkParser parseLink (String, int[]), HalFormsProperty withValue (Object), DelegatingEntityLinks linkForItemResource (Class<?>, Object), HateoasConfiguration relProviderPluginRegistry (ApplicationContext), HalFormsProperty equals (Object)]","320"
"12","spring-hateoas","4520a692a74e67803925bc7af259406cc592df4f","20b17f45874790d42b435e563883803d7936f29c","LOCAL_VAR_RENAMING","0","1","1","[MessageSourceResolver resolve (MessageSourceResolvable)]","8"
"39","spring-hateoas","20b17f45874790d42b435e563883803d7936f29c","36e3b7fea95ef808643265647d4b91e180906e6a","LOCAL_VAR_RENAMING","0","1","2","[MessageSourceResolver MessageSourceResolver (MessageSource), MessageSourceResolver resolve (MessageSourceResolvable)]","16"
"8","spring-data-neo4j/spring-data-neo4j-aspects","d8b025c02f20b1db34e87fb1b72a50ca76f2ade2","559a22e6e3447d01d0ae23121576ba03713db93b","LOCAL_VAR_RENAMING","0","1","1","[GraphBacked setPersistentState (STATE)]","3"
"14","spring-data-neo4j/spring-data-neo4j-aspects","559a22e6e3447d01d0ae23121576ba03713db93b","c1d32d6c4fcec1b33eb532e0ab2f5bb1d704bc0a","LOCAL_VAR_RENAMING","0","1","1","[GraphBacked setPersistentState (STATE)]","3"
"18","spring-data-neo4j/spring-data-neo4j-cross-store","c1d32d6c4fcec1b33eb532e0ab2f5bb1d704bc0a","a1fe0d82b91ae97a260b1fc0462f61bef19d46ed","LOCAL_VAR_RENAMING","0","1","2","[CrossStoreNodeDelegatingFieldAccessorFactory newConvertingNodePropertyFieldAccessorFactory (), Factory create (Neo4jTemplate)]","8"
"4","spring-data-neo4j/cineasts-aspects","a1fe0d82b91ae97a260b1fc0462f61bef19d46ed","d93a03e20c7f78463c208c5ad56472adee863d3a","LOCAL_VAR_RENAMING","0","1","3","[Role Role (Movie, Person, String), Role getMovie (), Role toString ()]","27"
"7","spring-data-neo4j/cineasts-aspects","d93a03e20c7f78463c208c5ad56472adee863d3a","6e63b93c17c14d016ac45cfee267fc675a9cc149","LOCAL_VAR_RENAMING","0","1","5","[Role getActor (), Role setName (String), Role Role (Movie, Person, String), Role getName (), Role toString ()]","45"
"28","spring-data-neo4j/cineasts-aspects","6e63b93c17c14d016ac45cfee267fc675a9cc149","d7a09ae8e588294a86a569001b50ad6e684b4062","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[Role Role (Movie, Person, String)]","9"
"17","spring-data-neo4j/cineasts-rest","d7a09ae8e588294a86a569001b50ad6e684b4062","cf3f62abb92fe14b520bebd0350eec500031e1a1","LOCAL_VAR_RENAMING","0","1","2","[MovieRating getRecommendationsFor (User), MovieRating update (Rating, int)]","16"
"18","spring-data-neo4j/cineasts-rest","cf3f62abb92fe14b520bebd0350eec500031e1a1","38f8ccf4e7fad938ab6dbd02bd35f72a77399cd4","SWITCH_EQUAL_SIDES","14","1","1","[MovieRating average ()]","8"
"2","spring-data-neo4j/cineasts","38f8ccf4e7fad938ab6dbd02bd35f72a77399cd4","a6ed960ebd9051dc47776e9e7a7d6e5735a39f17","LOCAL_VAR_RENAMING","0","1","2","[MovieController findMovies (Model, String), MovieController updateMovie (Model, String, Integer, String)]","16"
"3","spring-data-neo4j/cineasts","a6ed960ebd9051dc47776e9e7a7d6e5735a39f17","9dc096f9357ff68487c99c7746a16670e80d71cb","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","2","[MovieController singleMovieView (Model, String), MovieController updateMovie (Model, String, Integer, String)]","16"
"5","spring-data-neo4j/cineasts","9dc096f9357ff68487c99c7746a16670e80d71cb","02aa6584355225502a6ee848a56d1ba268d2b122","REVERSE_IF_ELSE","3","1","3","[MovieController findMovies (Model, String), MovieController singleMovieView (Model, String), MovieController updateMovie (Model, String, Integer, String)]","24"
"6","spring-data-neo4j/cineasts","02aa6584355225502a6ee848a56d1ba268d2b122","bd11de0bb432bfc723b59cd7fa3ad28451b9ee47","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[MovieController updateMovie (Model, String, Integer, String)]","8"
"8","spring-data-neo4j/cineasts","bd11de0bb432bfc723b59cd7fa3ad28451b9ee47","d6943bff6616c5a8e20f5c049d756d38b9f6ae9d","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[MovieController singleMovieView (Model, String), MovieController updateMovie (Model, String, Integer, String)]","16"
"12","spring-data-neo4j/cineasts","d6943bff6616c5a8e20f5c049d756d38b9f6ae9d","5abac952cb807d8ba18c7c0b9591ffde4777a37c","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[MovieController singleMovieView (Model, String)]","8"
"13","spring-data-neo4j/cineasts","5abac952cb807d8ba18c7c0b9591ffde4777a37c","4b2b64c53e9e02d307d8edee122b7e84c35aeb81","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[MovieController singleMovieView (Model, String)]","8"
"14","spring-data-neo4j/cineasts","4b2b64c53e9e02d307d8edee122b7e84c35aeb81","e1d164d3766a3e73e0164515575f2767f56392d3","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[MovieController singleMovieView (Model, String), MovieController updateMovie (Model, String, Integer, String)]","16"
"15","spring-data-neo4j/cineasts","e1d164d3766a3e73e0164515575f2767f56392d3","5af3c8ff128d412f241796fc17c3c8983682a818","REVERSE_IF_ELSE","3","1","1","[MovieController findMovies (Model, String)]","8"
"19","spring-data-neo4j/cineasts","5af3c8ff128d412f241796fc17c3c8983682a818","4c971a20dce29e8011d651eead0b336815f34784","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","2","[MovieController singleMovieView (Model, String), MovieController updateMovie (Model, String, Integer, String)]","16"
"22","spring-data-neo4j/cineasts","4c971a20dce29e8011d651eead0b336815f34784","15e2d109a9e95dd5c15c50fa3646ed48f609b2bd","REVERSE_IF_ELSE","3","1","3","[MovieController findMovies (Model, String), MovieController singleMovieView (Model, String), MovieController updateMovie (Model, String, Integer, String)]","24"
"25","spring-data-neo4j/cineasts","15e2d109a9e95dd5c15c50fa3646ed48f609b2bd","1986ecc93c63c0e62d4d38b883558a666fd9aa99","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[MovieController updateMovie (Model, String, Integer, String)]","8"
"26","spring-data-neo4j/cineasts","1986ecc93c63c0e62d4d38b883558a666fd9aa99","97d3729feee8d2a30bb7b1c4597c34df50db228e","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[MovieController updateMovie (Model, String, Integer, String)]","8"
"27","spring-data-neo4j/hello-worlds","97d3729feee8d2a30bb7b1c4597c34df50db228e","8a8a39b142afe716c326d57c50998e218a5dcec7","LOCAL_VAR_RENAMING","0","1","2","[GalaxyService findAllByNumberOfMoons (int), GalaxyService createWorld (String, int)]","4"
"29","spring-data-neo4j/hello-worlds","8a8a39b142afe716c326d57c50998e218a5dcec7","e2adb43536d8f2c7b6bf002e6a6e737736d41988","LOCAL_VAR_RENAMING","0","1","2","[GalaxyService findWorldById (Long), GalaxyService makeSomeWorlds ()]","4"
"19","spring-data-neo4j/imdb","e2adb43536d8f2c7b6bf002e6a6e737736d41988","35c5d69420fa604622129bcb934b9df4c45e3164","LOCAL_VAR_RENAMING","0","1","1","[SetupControllerDelegate getModel (Object, Map<String,Object>)]","10"
"20","spring-data-neo4j/imdb","35c5d69420fa604622129bcb934b9df4c45e3164","3bbc6e76830a9e0bf500010543083c4785a9c476","LOCAL_VAR_RENAMING","0","1","1","[SetupControllerDelegate getModel (Object, Map<String,Object>)]","10"
"10","spring-data-neo4j/myrestaurants-original","3bbc6e76830a9e0bf500010543083c4785a9c476","d5d28ee6b2fcac48dab752bc498e9f8a230ef057","SWITCH_EQUAL_SIDES","14","1","1","[UserAccount toString ()]","4"
"3","spring-data-neo4j/myrestaurants-social","d5d28ee6b2fcac48dab752bc498e9f8a230ef057","b5d140a1cce50ca7a889590b1c26eab6ca43fb86","LOCAL_VAR_RENAMING","0","1","3","[BaseApplicationController getRestaurantConverter (), BaseApplicationController populateModelWithCurrentUserAccountIdAsLong (), BaseApplicationController convert (Restaurant)]","12"
"23","spring-data-neo4j/myrestaurants-social","b5d140a1cce50ca7a889590b1c26eab6ca43fb86","aa4e77d7297bc364455935208471586def9b3367","REVERSE_IF_ELSE","3","1","1","[BaseApplicationController getCurrentUserAccount ()]","4"
"28","spring-data-neo4j/myrestaurants-social","aa4e77d7297bc364455935208471586def9b3367","0e08d1d29e2b253fac67481d6f4266391b335035","REVERSE_IF_ELSE","3","1","1","[BaseApplicationController getCurrentUserAccount ()]","4"
"2","spring-data-neo4j/todos","0e08d1d29e2b253fac67481d6f4266391b335035","996d880c3bbd096ff83481be89ea1ca882395f59","LOCAL_VAR_RENAMING","0","1","2","[TodoController createFromJson (String), TodoController showJson (Long)]","6"
"5","spring-data-neo4j/todos","996d880c3bbd096ff83481be89ea1ca882395f59","3d9e13bef6709c328712a044a09f7ddc2cff275d","LOCAL_VAR_RENAMING","0","1","2","[TodoController deleteFromJson (Long), TodoController createFromJson (String)]","6"
"6","spring-data-neo4j/todos","3d9e13bef6709c328712a044a09f7ddc2cff275d","c67ed0ab7835cfd18ef8e698fc6755c2ae89af27","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[TodoController encodeUrlPathSegment (String, HttpServletRequest)]","3"
"7","spring-data-neo4j/todos","c67ed0ab7835cfd18ef8e698fc6755c2ae89af27","6342cad32d934af2f40f8de3835637d43f573430","REVERSE_IF_ELSE","3","1","1","[TodoController deleteFromJson (Long)]","3"
"14","spring-data-neo4j/todos","6342cad32d934af2f40f8de3835637d43f573430","ad4a5921eae5ec5cfb47e72f744e6e2a2911601b","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[TodoController encodeUrlPathSegment (String, HttpServletRequest)]","3"
"16","spring-data-neo4j/todos","ad4a5921eae5ec5cfb47e72f744e6e2a2911601b","8b1ee5c73aa50014ef1ab844858f0f9bc2e1c6ff","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[TodoController encodeUrlPathSegment (String, HttpServletRequest)]","3"
"17","spring-data-neo4j/todos","8b1ee5c73aa50014ef1ab844858f0f9bc2e1c6ff","9e350fb3c32914c0bc3ac37a8bb672be8ba4c233","LOCAL_VAR_RENAMING","0","1","2","[TodoController listJson (), TodoController encodeUrlPathSegment (String, HttpServletRequest)]","6"
"25","spring-data-neo4j/todos","9e350fb3c32914c0bc3ac37a8bb672be8ba4c233","065eb825e3f330b20afdaa31e2fd9e80ace2bcea","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[TodoController encodeUrlPathSegment (String, HttpServletRequest)]","3"
"26","spring-data-neo4j/todos","065eb825e3f330b20afdaa31e2fd9e80ace2bcea","ee20f61353a6301e00f941317a6ff3b5c4e74fee","LOCAL_VAR_RENAMING","0","1","2","[TodoController updateFromJson (String), TodoController encodeUrlPathSegment (String, HttpServletRequest)]","6"
"5","spring-data-neo4j/spring-data-neo4j-rest","ee20f61353a6301e00f941317a6ff3b5c4e74fee","aa353c9c83993f006da83b8331194b33004a958d","REVERSE_IF_ELSE","3","1","1","[SpringRestGraphDatabase createResultConverter ()]","4"
"6","spring-data-neo4j/spring-data-neo4j-rest","aa353c9c83993f006da83b8331194b33004a958d","2b3c9436872d295e06fff213dc1b25d97c053582","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SpringRestGraphDatabase getOrCreateNode (String, String, Object, Map<String,Object>)]","4"
"18","spring-data-neo4j/spring-data-neo4j-rest","2b3c9436872d295e06fff213dc1b25d97c053582","8225e10d9bbfe79891209811114f6e323b0159b6","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SpringRestGraphDatabase getOrCreateNode (String, String, Object, Map<String,Object>)]","4"
"27","spring-data-neo4j/spring-data-neo4j-rest","8225e10d9bbfe79891209811114f6e323b0159b6","0b595112667555483ac537e1dca1c15c3730d76e","REVERSE_IF_ELSE","3","1","1","[SpringRestGraphDatabase createResultConverter ()]","4"
"13","spring-data-neo4j/spring-data-neo4j-tx","0b595112667555483ac537e1dca1c15c3730d76e","2537a6c340a057cd9c38acf526b90b70cced744e","LOCAL_VAR_RENAMING","0","1","2","[SavePoints createSavepoint (), SavePoints releaseSavepoint (Object)]","8"
"16","spring-data-neo4j/spring-data-neo4j-tx","2537a6c340a057cd9c38acf526b90b70cced744e","13467330b4c5b003a378ab1c5d01c0990ce37301","LOCAL_VAR_RENAMING","0","1","2","[SavePoints createSavepoint (), SavePoints registerTransactionManager (TransactionDefinition, PlatformTransactionManager)]","8"
"17","spring-data-neo4j/spring-data-neo4j-tx","13467330b4c5b003a378ab1c5d01c0990ce37301","c44e6527daa7d245d99827444e21e505abf082f5","LOCAL_VAR_RENAMING","0","1","2","[SavePoints getTransactionStatus (PlatformTransactionManager), MultiTransactionStatus MultiTransactionStatus (PlatformTransactionManager)]","8"
"7","spring-data-neo4j/spring-data-neo4j","c44e6527daa7d245d99827444e21e505abf082f5","979c362db24d61bd34807bd58c510a19dd9f465b","LOCAL_VAR_RENAMING","0","1","2","[Neo4jConversionServiceFactoryBean addConverters (ConversionService), StringToEnum convert (String)]","22"
"9","spring-data-neo4j/spring-data-neo4j","979c362db24d61bd34807bd58c510a19dd9f465b","45a31a270e69a2951fe32d4b6429b2dadd76e880","SWITCH_EQUAL_SIDES","14","1","1","[StringToEnum convert (String)]","11"
"15","spring-data-neo4j/spring-data-neo4j","45a31a270e69a2951fe32d4b6429b2dadd76e880","d29a57a30c9f267c3f62a4014e6d9f9101bc43b4","SWITCH_EQUAL_SIDES","14","1","1","[StringToEnum convert (String)]","11"
"20","spring-data-neo4j/spring-data-neo4j","d29a57a30c9f267c3f62a4014e6d9f9101bc43b4","f63a4896a4a826a81bbd942d589d0e8cb9810b93","LOCAL_VAR_RENAMING","0","1","2","[StringToEnum StringToEnum (Class<T>), Neo4jConversionServiceFactoryBean addConverters (ConversionService)]","22"
"0","scribejava","bfbe536886fc3c614b785110f8eba663644862d7","d5a79e584693720e37c6ffdc81d1791f9d2017bd","PP_TO_ADD_ASSIGNMENT","6","1","6","[StreamUtils getStreamContents (InputStream), RequestTokenExtractor extract (String), Api createService (String, String, String), BaseStringExtractorImpl extract (OAuthRequest), BaseStringExtractorImpl getSortedAndEncodedParams (OAuthRequest), BaseStringExtractorImpl checkPreconditions (OAuthRequest)]","24"
"6","scribejava","d5a79e584693720e37c6ffdc81d1791f9d2017bd","dd096d6e2dc511c749a00c59413403fca70836a2","REVERSE_IF_ELSE","3","1","1","[StreamUtils getStreamContents (InputStream)]","4"
"8","scribejava","dd096d6e2dc511c749a00c59413403fca70836a2","4f565bc2034ff42035844831bb9e27e70ec26e32","LOCAL_VAR_RENAMING","0","1","1","[OAuthParametersMissingException OAuthParametersMissingException (OAuthRequest)]","5"
"9","scribejava","4f565bc2034ff42035844831bb9e27e70ec26e32","f8939ae39c9565cedf3ad91177655a2308a980d2","REVERSE_IF_ELSE","3","1","1","[StreamUtils getStreamContents (InputStream)]","5"
"25","scribejava","f8939ae39c9565cedf3ad91177655a2308a980d2","f4ae2d3521cefff9329ab1be13fc1b7af7aa5f45","LOCAL_VAR_RENAMING","0","1","1","[StreamUtils getStreamContents (InputStream)]","5"
"30","scribejava","f4ae2d3521cefff9329ab1be13fc1b7af7aa5f45","9f7b367552d38676e2909d73b617593ac030d7d5","REVERSE_IF_ELSE","3","1","1","[StreamUtils getStreamContents (InputStream)]","5"
"34","scribejava","9f7b367552d38676e2909d73b617593ac030d7d5","73180710564f873bd06dcfb4e075192539983132","LOCAL_VAR_RENAMING","0","1","1","[StreamUtils getStreamContents (InputStream)]","5"
"38","scribejava","73180710564f873bd06dcfb4e075192539983132","dc8a8d4c28355edac4b1d25c7a5a09b4e10940f1","LOCAL_VAR_RENAMING","0","1","1","[StreamUtils getStreamContents (InputStream)]","5"
"52","scribejava","dc8a8d4c28355edac4b1d25c7a5a09b4e10940f1","3374cd208e6d2985aba0091eb0607b08e249db91","REVERSE_IF_ELSE","3","1","1","[StreamUtils getStreamContents (InputStream)]","5"
"55","scribejava","3374cd208e6d2985aba0091eb0607b08e249db91","158c34c90cb08382949394fc864a6cc2f0744dd5","LOCAL_VAR_RENAMING","0","1","1","[StreamUtils getStreamContents (InputStream)]","5"
"0","symja-parser","689f67a32faac83d3edda801cda9b51aaa08e741","c46e0f94412a763f8af7767efd5456ad1b744dea","CASE_TO_IF_ELSE","17","1","31","[PatternNode equals (Object), PatternNode PatternNode (SymbolNode, ASTNode), Operator Operator (String, String, int), MinFunction evaluateNodeLogical (ASTNode), PatternNode getConstraint (), Operator equals (Object), MinFunction evaluateFunction (FunctionNode), PreMinusOperator PreMinusOperator (String, String, int), MinFunction getVariables (String, Set<String>, boolean), MinFunction optimizeFunction (FunctionNode), PreMinusOperator createFunction (IParserFactory, ASTNode), PatternNode isDefault (), TimesFunction getVariables (String, Set<String>, boolean), MinFunction getDerivativeResult (ASTNode, FunctionNode), PatternNode toString (), PatternNode PatternNode (SymbolNode, ASTNode, boolean), MinFunction parse (String), Operator getPrecedence (), MinFunction getVariables (ASTNode, Set<String>), Operator toString (), MinFunction evaluateFunctionLogical (FunctionNode), MinFunction isSymbol (SymbolNode, SymbolNode), Operator getOperatorString (), MinFunction isSymbol (SymbolNode, String), Operator hashCode (), PatternNode hashCode (), MinFunction getVariable (String), MinFunction derivative (ASTNode, SymbolNode), PatternNode getSymbol (), Operator getFunctionName (), MinFunction evaluateNode (ASTNode)]","155"
"3","symja-parser","c46e0f94412a763f8af7767efd5456ad1b744dea","36bfef26ce7e3fb6733669a91bb162e5410b2d85","REVERSE_IF_ELSE","3","1","2","[PatternNode equals (Object), PatternNode hashCode ()]","10"
"4","symja-parser","36bfef26ce7e3fb6733669a91bb162e5410b2d85","7453dc982fcac10ff9857472b388e355aa2e1fec","LOCAL_VAR_RENAMING","0","1","2","[PatternNode equals (Object), PatternNode PatternNode (SymbolNode, ASTNode, boolean)]","10"
"6","symja-parser","7453dc982fcac10ff9857472b388e355aa2e1fec","82d4ccb21e5b589ad10160f496b65c36535c8d4a","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[PatternNode PatternNode (SymbolNode, ASTNode, boolean)]","5"
"10","symja-parser","82d4ccb21e5b589ad10160f496b65c36535c8d4a","198c5bfa10f16857d2896ab58ea9d5e07d37d8b3","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[PatternNode PatternNode (SymbolNode, ASTNode, boolean)]","5"
"11","symja-parser","198c5bfa10f16857d2896ab58ea9d5e07d37d8b3","8797bd60143ad2636260debbda5374efc946385a","LOCAL_VAR_RENAMING","0","1","2","[PatternNode equals (Object), PatternNode toString ()]","10"
"13","symja-parser","8797bd60143ad2636260debbda5374efc946385a","eeca690f223d697096b119270451ff07e792c234","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[PatternNode PatternNode (SymbolNode, ASTNode, boolean)]","5"
"15","symja-parser","eeca690f223d697096b119270451ff07e792c234","39ba49f2cafbd5c508ab0934e97df98da032f697","SWITCH_EQUAL_SIDES","14","1","1","[PatternNode equals (Object)]","5"
"26","symja-parser","39ba49f2cafbd5c508ab0934e97df98da032f697","e5a00a5ce0ec8a606a9cde7ca64ca22fa564cf90","SWITCH_EQUAL_SIDES","14","1","1","[PatternNode equals (Object)]","5"
"27","symja-parser","e5a00a5ce0ec8a606a9cde7ca64ca22fa564cf90","04560d6d8c632e3890c5f2dc43de3bee880d1484","REVERSE_IF_ELSE","3","1","2","[PatternNode equals (Object), PatternNode hashCode ()]","10"
"28","symja-parser","04560d6d8c632e3890c5f2dc43de3bee880d1484","589bd05df77b20583854d6f7c0e39dc1a56ea491","SWITCH_EQUAL_SIDES","14","1","1","[PatternNode equals (Object)]","5"
"29","symja-parser","589bd05df77b20583854d6f7c0e39dc1a56ea491","39d8a876050f513a0a75ab1bbc1575945a787828","LOCAL_VAR_RENAMING","0","1","4","[PatternNode equals (Object), PatternNode getConstraint (), PatternNode toString (), PatternNode PatternNode (SymbolNode, ASTNode, boolean)]","20"
"31","symja-parser","39d8a876050f513a0a75ab1bbc1575945a787828","0c0cbc8760fd91611c5e4abc293191cfa1057ad0","REVERSE_IF_ELSE","3","1","1","[PatternNode hashCode ()]","5"
"34","symja-parser","0c0cbc8760fd91611c5e4abc293191cfa1057ad0","d73c3aec9153e6e0c0a62de5a9d90db128eac239","LOCAL_VAR_RENAMING","0","1","4","[PatternNode equals (Object), PatternNode isDefault (), PatternNode toString (), PatternNode PatternNode (SymbolNode, ASTNode, boolean)]","20"
"39","symja-parser","d73c3aec9153e6e0c0a62de5a9d90db128eac239","9cbf6e8f706c4141886f2124ce178a91c26291bd","REVERSE_IF_ELSE","3","1","2","[PatternNode equals (Object), PatternNode hashCode ()]","10"
"43","symja-parser","9cbf6e8f706c4141886f2124ce178a91c26291bd","72869b8a0de8b37a2a9562254486fcd9fc007b4c","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[PatternNode PatternNode (SymbolNode, ASTNode, boolean)]","5"
"45","symja-parser","72869b8a0de8b37a2a9562254486fcd9fc007b4c","81d9714ea014248f243aa9a3d8dcdee2e054be21","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[PatternNode PatternNode (SymbolNode, ASTNode, boolean)]","5"
"50","symja-parser","81d9714ea014248f243aa9a3d8dcdee2e054be21","79083bef0142e27f249893ad53f354e0faa63740","LOCAL_VAR_RENAMING","0","1","6","[PatternNode equals (Object), PatternNode hashCode (), PatternNode PatternNode (SymbolNode, ASTNode), PatternNode getSymbol (), PatternNode toString (), PatternNode PatternNode (SymbolNode, ASTNode, boolean)]","30"
"58","symja-parser","79083bef0142e27f249893ad53f354e0faa63740","7c6ef4914f59cef29609fc2c57c97226435319a3","LOCAL_VAR_RENAMING","0","1","2","[PatternNode PatternNode (SymbolNode, ASTNode), PatternNode PatternNode (SymbolNode, ASTNode, boolean)]","10"
"62","symja-parser","7c6ef4914f59cef29609fc2c57c97226435319a3","082681a9084651d26550a8b589fbc97dcad6b26e","LOCAL_VAR_RENAMING","0","1","6","[PatternNode equals (Object), PatternNode hashCode (), PatternNode isDefault (), PatternNode getSymbol (), PatternNode toString (), PatternNode PatternNode (SymbolNode, ASTNode, boolean)]","30"
"64","symja-parser","082681a9084651d26550a8b589fbc97dcad6b26e","067049942514b01df1314115252be8da15c979a6","LOCAL_VAR_RENAMING","0","1","4","[PatternNode equals (Object), PatternNode getConstraint (), PatternNode toString (), PatternNode PatternNode (SymbolNode, ASTNode, boolean)]","20"
"0","spring-hateoas","2ba26707fbd2c9e047962d3139a3157e9667bf9c","76f430f58450821f0425af17276f58027cfbfce1","IF_DIVIDING","9","1","40","[DelegatingEntityLinks linkFor (Class<?>, Object), HalFormsProperty withOptions (HalFormsOptions), LinkBuilderFactory linkTo (Class<?>, Object), HalFormsProperty withPrompt (String), HypermediaMappingInformationComparator compare (HypermediaMappingInformation, HypermediaMappingInformation), HateoasConfiguration loadResourceBundleResources (String, boolean), HalFormsProperty isReadOnly (), LinkBuilderFactory linkTo (Class<?>), HalFormsProperty withMinLength (Long), HalFormsProperty withName (String), DelegatingEntityLinks linkToItemResource (Class<?>, Object), HateoasConfiguration hypermediaWebMvcConverters (ObjectProvider<ObjectMapper>, List<HypermediaMappingInformation>, Optional<HypermediaMappingInformationComparator>), LinkParser consumeQuotedString (String, StringBuilder, int[]), HalFormsProperty HalFormsProperty (), HalFormsProperty withMin (Number), HalFormsProperty withRegex (String), MessageSourceResolver resolve (MessageSourceResolvable), HalFormsProperty toString (), HateoasConfiguration lookupMessageSource (), DelegatingEntityLinks DelegatingEntityLinks (PluginRegistry<EntityLinks,Class<?>>), CollectionModel deriveElementType (Collection<?>, ResolvableType), HalFormsProperty withPlaceholder (String), DelegatingEntityLinks getPluginFor (Class<?>), CollectionModel equals (Object), HalFormsProperty withMulti (boolean), HalFormsProperty withReadOnly (boolean), MessageSourceResolver MessageSourceResolver (MessageSource), LinkBuilderFactory linkTo (Class<?>, Map<String,?>), HalFormsProperty withType (String), HalFormsProperty withMaxLength (Long), HalFormsProperty HalFormsProperty (String, boolean, Object, String, String, boolean, boolean, boolean, String, Number, Number, Long, Long, String, HalFormsOptions), HalFormsProperty hashCode (), HalFormsProperty withTemplated (boolean), HalFormsProperty withRequired (boolean), HalFormsProperty withMax (Number), LinkParser parseLink (String, int[]), HalFormsProperty withValue (Object), DelegatingEntityLinks linkForItemResource (Class<?>, Object), HateoasConfiguration relProviderPluginRegistry (ApplicationContext), HalFormsProperty equals (Object)]","320"
"3","spring-hateoas","76f430f58450821f0425af17276f58027cfbfce1","73ee1b4e891fbd82c144b73f3435b9c5f5c89335","LOCAL_VAR_RENAMING","0","1","2","[MessageSourceResolver MessageSourceResolver (MessageSource), MessageSourceResolver resolve (MessageSourceResolvable)]","16"
"28","spring-hateoas","73ee1b4e891fbd82c144b73f3435b9c5f5c89335","4551f6e56a293035824ef50882a95fe25ee79638","LOCAL_VAR_RENAMING","0","1","2","[MessageSourceResolver MessageSourceResolver (MessageSource), MessageSourceResolver resolve (MessageSourceResolvable)]","16"
"59","spring-hateoas","4551f6e56a293035824ef50882a95fe25ee79638","c9e87586d832fd4c52ffa748ca9cbf6541db6dff","LOCAL_VAR_RENAMING","0","1","2","[MessageSourceResolver MessageSourceResolver (MessageSource), MessageSourceResolver resolve (MessageSourceResolvable)]","16"
"15","spring-data-neo4j/spring-data-neo4j-aspects","f63a4896a4a826a81bbd942d589d0e8cb9810b93","630246fc6d15fd16b88e6b37bb10ec64f5824527","LOCAL_VAR_RENAMING","0","1","1","[GraphBacked setPersistentState (STATE)]","3"
"16","spring-data-neo4j/spring-data-neo4j-aspects","630246fc6d15fd16b88e6b37bb10ec64f5824527","9bcb013cc221ab44eda2e43882b76eeea5aacaf2","LOCAL_VAR_RENAMING","0","1","1","[GraphBacked setPersistentState (STATE)]","3"
"18","spring-data-neo4j/spring-data-neo4j-aspects","9bcb013cc221ab44eda2e43882b76eeea5aacaf2","687bceb7592950fee3fa2319deb8d59ef900bb2d","LOCAL_VAR_RENAMING","0","1","1","[GraphBacked setPersistentState (STATE)]","3"
"12","spring-data-neo4j/spring-data-neo4j-cross-store","687bceb7592950fee3fa2319deb8d59ef900bb2d","3aba0578246048aa3c683dcd0dc9a54a3569591a","LOCAL_VAR_RENAMING","0","1","2","[CrossStoreNodeDelegatingFieldAccessorFactory CrossStoreNodeDelegatingFieldAccessorFactory (Neo4jTemplate), Factory create (Neo4jTemplate)]","8"
"22","spring-data-neo4j/spring-data-neo4j-cross-store","3aba0578246048aa3c683dcd0dc9a54a3569591a","904d12c3616f43f2a5df2fbd7bcc126ce5f4b7ae","LOCAL_VAR_RENAMING","0","1","2","[CrossStoreNodeDelegatingFieldAccessorFactory CrossStoreNodeDelegatingFieldAccessorFactory (Neo4jTemplate), Factory create (Neo4jTemplate)]","8"
"25","spring-data-neo4j/spring-data-neo4j-cross-store","904d12c3616f43f2a5df2fbd7bcc126ce5f4b7ae","575a35f2de7928e54f91a20051a2898ccff48848","LOCAL_VAR_RENAMING","0","1","3","[CrossStoreNodeDelegatingFieldAccessorFactory createAccessorFactories (), CrossStoreNodeDelegatingFieldAccessorFactory newPropertyFieldAccessorFactory (), CrossStoreNodeDelegatingFieldAccessorFactory accept (Neo4jPersistentProperty)]","12"
"7","spring-data-neo4j/cineasts-aspects","575a35f2de7928e54f91a20051a2898ccff48848","ba61043d416346c9d1fe339a3146ccf541092b4f","LOCAL_VAR_RENAMING","0","1","4","[Role getActor (), Role setName (String), Role Role (Movie, Person, String), Role toString ()]","36"
"9","spring-data-neo4j/cineasts-aspects","ba61043d416346c9d1fe339a3146ccf541092b4f","0a460d86f90ad65b595c2466626449a3f4aa7fd3","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[Role Role (Movie, Person, String)]","9"
"12","spring-data-neo4j/cineasts-aspects","0a460d86f90ad65b595c2466626449a3f4aa7fd3","b383a6f3a4879c87ffecac2696ccfd2ce44eb809","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[Role Role (Movie, Person, String)]","9"
"29","spring-data-neo4j/cineasts-aspects","b383a6f3a4879c87ffecac2696ccfd2ce44eb809","7a4e55c5f15f1ece03ca6bc5409451ad57325530","LOCAL_VAR_RENAMING","0","1","4","[Role setName (String), Role Role (Movie, Person, String), Role getName (), Role toString ()]","36"
"0","spring-data-neo4j/cineasts-rest","7a4e55c5f15f1ece03ca6bc5409451ad57325530","cec333281bc57a7facd2eea39544b863a099eb80","LOCAL_VAR_RENAMING","0","1","3","[MovieRating average (), MovieRating getRecommendationsFor (User), MovieRating update (Rating, int)]","24"
"9","spring-data-neo4j/cineasts-rest","cec333281bc57a7facd2eea39544b863a099eb80","35a89696bced0c0a2c8dab8b1b0d9d8190da98ed","LOCAL_VAR_RENAMING","0","1","3","[MovieRating average (), MovieRating getRecommendationsFor (User), MovieRating update (Rating, int)]","24"
"13","spring-data-neo4j/cineasts-rest","35a89696bced0c0a2c8dab8b1b0d9d8190da98ed","13467b7051ba84139fcfa5b2ca12008afdb7c4dc","LOCAL_VAR_RENAMING","0","1","2","[MovieRating average (), MovieRating update (Rating, int)]","16"
"15","spring-data-neo4j/cineasts-rest","13467b7051ba84139fcfa5b2ca12008afdb7c4dc","9eb998cde8c425ec6ef07881e049e484af73d1a0","REVERSE_IF_ELSE","3","1","1","[MovieRating obtainRating (Movie)]","8"
"23","spring-data-neo4j/cineasts-rest","9eb998cde8c425ec6ef07881e049e484af73d1a0","fbf047b94406ae47550211c089ca251e91ae1580","REVERSE_IF_ELSE","3","1","1","[MovieRating obtainRating (Movie)]","8"
"0","spring-data-neo4j/cineasts","fbf047b94406ae47550211c089ca251e91ae1580","37cc1229e9bdabae30708d6fac56620d1ee54beb","SWITCH_EQUAL_SIDES","14","1","2","[MovieController singleMovieView (Model, String), MovieController updateMovie (Model, String, Integer, String)]","16"
"1","spring-data-neo4j/cineasts","37cc1229e9bdabae30708d6fac56620d1ee54beb","edfb7a2354f91077cb42ec88e0cd5d047637cf2d","LOCAL_VAR_RENAMING","0","1","2","[MovieController singleMovieView (Model, String), MovieController updateMovie (Model, String, Integer, String)]","16"
"4","spring-data-neo4j/cineasts","edfb7a2354f91077cb42ec88e0cd5d047637cf2d","6de7ad04c43e526850a43051e32a8467a2c981b4","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","2","[MovieController singleMovieView (Model, String), MovieController updateMovie (Model, String, Integer, String)]","16"
"15","spring-data-neo4j/cineasts","6de7ad04c43e526850a43051e32a8467a2c981b4","7d770daebbf2eac71a26438025c1c61b7347fb2a","LOCAL_VAR_RENAMING","0","1","2","[MovieController singleMovieView (Model, String), MovieController updateMovie (Model, String, Integer, String)]","16"
"15","spring-data-neo4j/hello-worlds","7d770daebbf2eac71a26438025c1c61b7347fb2a","d342869d9351483961589cb23b72676ae5c7e7e7","LOCAL_VAR_RENAMING","0","1","7","[GalaxyService findWorldByName (String), GalaxyService getNumberOfWorlds (), GalaxyService findWorldById (Long), GalaxyService makeSomeWorlds (), GalaxyService findAllByNumberOfMoons (int), GalaxyService getAllWorlds (), GalaxyService createWorld (String, int)]","14"
"28","spring-data-neo4j/hello-worlds","d342869d9351483961589cb23b72676ae5c7e7e7","e931697c8a1650e1380191b741ec9c22bfb51981","LOCAL_VAR_RENAMING","0","1","2","[GalaxyService makeSomeWorlds (), GalaxyService createWorld (String, int)]","4"
"14","spring-data-neo4j/imdb","e931697c8a1650e1380191b741ec9c22bfb51981","09ed0501b3a8e791198ae0fe488a8c6c7c607e26","LOCAL_VAR_RENAMING","0","1","1","[SetupControllerDelegate getModel (Object, Map<String,Object>)]","10"
"0","spring-data-neo4j/myrestaurants-original","09ed0501b3a8e791198ae0fe488a8c6c7c607e26","3776c1a078b75c856cb09fee02c924af33ac26be","REVERSE_IF_ELSE","3","1","1","[UserAccount toString ()]","4"
"11","spring-data-neo4j/myrestaurants-original","3776c1a078b75c856cb09fee02c924af33ac26be","bfdd0595b5fb08a0a6695588ef2819a9a4fe8111","REVERSE_IF_ELSE","3","1","1","[UserAccount toString ()]","4"
"14","spring-data-neo4j/myrestaurants-original","bfdd0595b5fb08a0a6695588ef2819a9a4fe8111","63b2f52d17ad0cbc16a7722370eb3a10d05c40bc","SWITCH_EQUAL_SIDES","14","1","1","[UserAccount toString ()]","4"
"20","spring-data-neo4j/myrestaurants-original","63b2f52d17ad0cbc16a7722370eb3a10d05c40bc","d2af9040823bb65a2a60a26ef870b378206b3256","REVERSE_IF_ELSE","3","1","1","[UserAccount toString ()]","4"
"23","spring-data-neo4j/myrestaurants-original","d2af9040823bb65a2a60a26ef870b378206b3256","4cb4a723910198c6f144ecc1cd9314db47dc0122","LOCAL_VAR_RENAMING","0","1","3","[UserAccount getFavorites (), UserAccount setUserName (String), UserAccount setFavorites (Set<Restaurant>)]","12"
"15","spring-data-neo4j/myrestaurants-social","4cb4a723910198c6f144ecc1cd9314db47dc0122","110894037bba3e1bb372c1f16dc17e7eac09726f","LOCAL_VAR_RENAMING","0","1","3","[Restaurant getCity (), Restaurant setCity (String), Restaurant setName (String)]","12"
"22","spring-data-neo4j/myrestaurants-social","110894037bba3e1bb372c1f16dc17e7eac09726f","2509c976e7ff9482fb2fdd51d951bad41fcd8073","LOCAL_VAR_RENAMING","0","1","2","[BaseApplicationController addDateTimeFormatPatterns (Model), BaseApplicationController getCurrentUserAccount ()]","8"
"27","spring-data-neo4j/myrestaurants-social","2509c976e7ff9482fb2fdd51d951bad41fcd8073","934a022a144c121949effff65b254e7d9aa1ed6d","REVERSE_IF_ELSE","3","1","1","[BaseApplicationController getCurrentUserAccount ()]","4"
"3","spring-data-neo4j/todos","934a022a144c121949effff65b254e7d9aa1ed6d","e49ef4a378f2194caa55d848ac3799f76ee7bb0c","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[TodoController createFromJson (String), TodoController showJson (Long)]","6"
"5","spring-data-neo4j/todos","e49ef4a378f2194caa55d848ac3799f76ee7bb0c","e35c11776fda3b420e55ddeedefde26bfe5ce623","STATEMENTS_ORDER_REARRANGEMENT","10","1","3","[TodoController deleteFromJson (Long), TodoController createFromJson (String), TodoController showJson (Long)]","9"
"8","spring-data-neo4j/todos","e35c11776fda3b420e55ddeedefde26bfe5ce623","5bb96a48e2eeb6596565509eba402cd12ee883d7","LOCAL_VAR_RENAMING","0","1","2","[TodoController createFromJson (String), TodoController encodeUrlPathSegment (String, HttpServletRequest)]","6"
"12","spring-data-neo4j/todos","5bb96a48e2eeb6596565509eba402cd12ee883d7","aec85c4d00f2adab8d1d4b2ba0f45b23350a47da","STATEMENTS_ORDER_REARRANGEMENT","10","1","3","[TodoController deleteFromJson (Long), TodoController createFromJson (String), TodoController showJson (Long)]","9"
"14","spring-data-neo4j/todos","aec85c4d00f2adab8d1d4b2ba0f45b23350a47da","9044afd8e1f9e8063410d48d3e5be3549ff2653d","STATEMENTS_ORDER_REARRANGEMENT","10","1","3","[TodoController deleteFromJson (Long), TodoController createFromJson (String), TodoController showJson (Long)]","9"
"22","spring-data-neo4j/todos","9044afd8e1f9e8063410d48d3e5be3549ff2653d","09a3f5d54b3266f573998cfa8e2ac53ab1bec272","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[TodoController deleteFromJson (Long), TodoController createFromJson (String)]","6"
"27","spring-data-neo4j/todos","09a3f5d54b3266f573998cfa8e2ac53ab1bec272","12c668d7da3cef0e41af8f0dfa043c04d1f39e21","SWITCH_EQUAL_SIDES","14","1","3","[TodoController updateFromJson (String), TodoController deleteFromJson (Long), TodoController encodeUrlPathSegment (String, HttpServletRequest)]","9"
"28","spring-data-neo4j/todos","12c668d7da3cef0e41af8f0dfa043c04d1f39e21","47f48a0971da8dd48868e20ef8d2c706eccce395","LOCAL_VAR_RENAMING","0","1","2","[TodoController createFromJson (String), TodoController encodeUrlPathSegment (String, HttpServletRequest)]","6"
"1","spring-data-neo4j/spring-data-neo4j-rest","47f48a0971da8dd48868e20ef8d2c706eccce395","57864c184109beda4ebbe0006f3c0201ca9f1244","LOCAL_VAR_RENAMING","0","1","2","[SpringResultConverter convert (Object, Class), SpringRestGraphDatabase createIndex (Class<T>, String, org.springframework.data.neo4j.support.index.IndexType)]","8"
"5","spring-data-neo4j/spring-data-neo4j-rest","57864c184109beda4ebbe0006f3c0201ca9f1244","9218e0c232e199fc6267450b0dabf326d70ffcb8","SWITCH_EQUAL_SIDES","14","1","2","[SpringRestGraphDatabase queryEngineFor (QueryType, ResultConverter), SpringRestGraphDatabase getOrCreateNode (String, String, Object, Map<String,Object>)]","8"
"11","spring-data-neo4j/spring-data-neo4j-rest","9218e0c232e199fc6267450b0dabf326d70ffcb8","8c0e5e4750ec1e50fdaffecbba54fcc6b04319cd","LOCAL_VAR_RENAMING","0","1","2","[SpringHandler SpringHandler (Handler<R>), SpringHandler handle (R)]","8"
"12","spring-data-neo4j/spring-data-neo4j-rest","8c0e5e4750ec1e50fdaffecbba54fcc6b04319cd","07d99b41b144bba54727e76f26c9de5eddc13e61","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SpringRestGraphDatabase getOrCreateNode (String, String, Object, Map<String,Object>)]","4"
"17","spring-data-neo4j/spring-data-neo4j-rest","07d99b41b144bba54727e76f26c9de5eddc13e61","724514cb41e089b917e2f5a243e8140d4f9c2e7f","LOCAL_VAR_RENAMING","0","1","1","[SpringHandler handle (R)]","4"
"18","spring-data-neo4j/spring-data-neo4j-rest","724514cb41e089b917e2f5a243e8140d4f9c2e7f","faa5d6cf352362dbbc72bfd4c06d9dcead14fcbf","VAR_DECLARATION_MERGING","12","1","1","[SpringRestGraphDatabase getOrCreateNode (String, String, Object, Map<String,Object>)]","4"
"19","spring-data-neo4j/spring-data-neo4j-rest","faa5d6cf352362dbbc72bfd4c06d9dcead14fcbf","a9b200944b166bbe95d9faf33f99170006527980","SWITCH_EQUAL_SIDES","14","1","2","[SpringRestGraphDatabase queryEngineFor (QueryType, ResultConverter), SpringRestGraphDatabase getOrCreateNode (String, String, Object, Map<String,Object>)]","8"
"25","spring-data-neo4j/spring-data-neo4j-rest","a9b200944b166bbe95d9faf33f99170006527980","215c01fd273b022b2f80fc9fbe82305b37491a1b","VAR_DECLARATION_MERGING","12","1","1","[SpringRestGraphDatabase getOrCreateNode (String, String, Object, Map<String,Object>)]","4"
"19","spring-data-neo4j/spring-data-neo4j-tx","215c01fd273b022b2f80fc9fbe82305b37491a1b","6b3cb39f53a12b7a46d08afd594861e13547647b","LOCAL_VAR_RENAMING","0","1","2","[SavePoints registerTransactionManager (TransactionDefinition, PlatformTransactionManager), SavePoints addSavePoint (TransactionStatus, Object)]","8"
"6","spring-data-neo4j/spring-data-neo4j","6b3cb39f53a12b7a46d08afd594861e13547647b","d416b188ea1d6119c382888f6e6bfd7d02d0dea6","LOCAL_VAR_RENAMING","0","1","2","[StringToEnumConverterFactory getConverter (Class<T>), Neo4jConversionServiceFactoryBean getObject ()]","22"
"15","spring-data-neo4j/spring-data-neo4j","d416b188ea1d6119c382888f6e6bfd7d02d0dea6","66c99254ec4bba13e8e4227610d34bef7939a5f7","LOCAL_VAR_RENAMING","0","1","2","[Neo4jConversionServiceFactoryBean addConverters (ConversionService), NumberToDateConverter convert (Number)]","22"
"19","spring-data-neo4j/spring-data-neo4j","66c99254ec4bba13e8e4227610d34bef7939a5f7","66a3ed9183e5e2451caa215b24c7b0a15f318d6d","LOCAL_VAR_RENAMING","0","1","2","[StringToEnumConverterFactory getConverter (Class<T>), Neo4jConversionServiceFactoryBean getObject ()]","22"
"0","helios/helios-client","0b2855955dc6f3268e772252d84861082a516b6e","8fec18f0c017a3fb31da09733bc6a64ef50f4cc6","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","81","[DefaultHttpConnector setExtraHttpsHandler (HttpsHandler), HealthCheck newHttpHealthCheck (), Deployment Deployment (JobId, Goal, String, String, String), Builder equals (Object), HealthCheck newExecHealthCheck (), HealthCheck toString (), ExecHealthCheck getCommand (), PortMapping of (int, String), Deployment newBuilder (), Builder setDeployerMaster (String), PomVersion toString (), PortMapping hasExternalPort (), Descriptor parse (byte[], Class<T>), ExecHealthCheck ExecHealthCheck (ExecHealthCheck.Builder), ExecHealthCheck equals (Object), PomVersion isSnapshot (), PortMapping of (int, Integer), Deployment toBuilder (), DefaultHttpConnector close (), ExecHealthCheck of (String), PortMapping PortMapping (int, Integer), Deployment hashCode (), Descriptor toJsonString (), PortMapping getInternalPort (), Builder getCommand (), PortMapping getIp (), PortMapping of (int, Integer, String), Builder toString (), Deployment of (JobId, Goal, String), PomVersion equals (Object), PomVersion hashCode (), Deployment getDeployerMaster (), ExecHealthCheck of (List<String>), ExecHealthCheck newBuilder (), PomVersion getMajor (), DefaultHttpConnector handleHttps (HttpURLConnection, String, HostnameVerifierProvider, HttpsHandler), DefaultHttpConnector setRequestMethod (HttpURLConnection, String, boolean), PortMapping PortMapping (int), PomVersion getPatch (), HealthCheck getType (), Builder externalPort (Integer), PortMapping builder (), PomVersion getMinor (), PortMapping getProtocol (), Deployment toString (), Builder setCommand (List<String>), ExecHealthCheck hashCode (), ExecHealthCheck ExecHealthCheck (List<String>), ExecHealthCheck toString (), Builder build (), PortMapping PortMapping (String, int, Integer, String), Builder setDeployerUser (String), PomVersion compareTo (PomVersion), Deployment getGoal (), Deployment of (JobId, Goal), Descriptor parse (String, Class<T>), DefaultHttpConnector DefaultHttpConnector (EndpointIterator, int, boolean), DefaultHttpConnector connect0 (URI, String, byte[], Map<String,List<String>>, String), Deployment equals (Object), Deployment getDeployerUser (), PortMapping withExternalPort (Integer), PortMapping of (int), DefaultHttpConnector connect (URI, String, byte[], Map<String,List<String>>), HealthCheck newTcpHealthCheck (), Deployment getJobId (), PortMapping PortMapping (Builder), Builder hashCode (), Builder ip (String), Builder internalPort (int), Deployment of (JobId, Goal, String, String, String), Deployment getDeploymentGroupName (), HealthCheck HealthCheck (String), Builder protocol (String), PortMapping getExternalPort (), Builder setGoal (Goal), Builder setJobId (JobId), HttpConnector connect (URI, String, byte[], Map<String,List<String>>), PomVersion PomVersion (boolean, int, int, int), Descriptor toJsonBytes (), Builder setDeploymentGroupName (String), PomVersion parse (String)]","648"
"1","helios/helios-client","8fec18f0c017a3fb31da09733bc6a64ef50f4cc6","67d44596a44d713857816725c9b0b9e4f026e988","SWITCH_STRING_EQUAL","15","1","22","[Builder apiVersion (String), Builder os (String), Builder build (), DockerVersion getArch (), Builder kernelVersion (String), Builder arch (String), Builder goVersion (String), DockerVersion getGoVersion (), DockerVersion getKernelVersion (), Builder Builder (), DockerVersion toString (), DockerVersion getApiVersion (), DockerVersion hashCode (), DockerVersion DockerVersion (String, String, String, String, String, String, String), Builder gitCommit (String), DockerVersion equals (Object), DockerVersion getGitCommit (), DockerVersion getOs (), DockerVersion getVersion (), DockerVersion DockerVersion (Builder), Builder version (String), DockerVersion builder ()]","198"
"2","helios/helios-client","67d44596a44d713857816725c9b0b9e4f026e988","c136fe2a46d756503387577d3e0ead91da7f6a2a","SWITCH_STRING_EQUAL","15","1","1","[DockerVersion equals (Object)]","9"
"3","helios/helios-client","c136fe2a46d756503387577d3e0ead91da7f6a2a","22a96dcd5d1b3874be791e1987d707a0ff349a3b","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","12","[Endpoints of (Supplier<List<URI>>), DefaultEndpoint getIp (), Endpoints Endpoints (), Endpoints of (List<URI>, DnsResolver), Endpoints get (), Endpoints of (Supplier<List<URI>>, DnsResolver), DefaultEndpoint equals (Object), Endpoints of (List<URI>), DefaultEndpoint toString (), DefaultEndpoint DefaultEndpoint (URI, InetAddress), DefaultEndpoint getUri (), DefaultEndpoint hashCode ()]","120"
"4","helios/helios-client","22a96dcd5d1b3874be791e1987d707a0ff349a3b","451231b234fee8f250e717d261a9ee0deb88f6b9","INFIX_EXPRESSION_DIVIDING","8","1","3","[DefaultEndpoint equals (Object), DefaultEndpoint DefaultEndpoint (URI, InetAddress), DefaultEndpoint hashCode ()]","30"
"5","helios/helios-client","451231b234fee8f250e717d261a9ee0deb88f6b9","1589f6c8027ef414055e1a7c1447c046ec408d9a","SWITCH_EQUAL_SIDES","14","1","1","[DefaultEndpoint equals (Object)]","10"
"6","helios/helios-client","1589f6c8027ef414055e1a7c1447c046ec408d9a","145ea28deccf0d4f23fd99edab286a339bd96de2","VAR_DECLARATION_MERGING","12","1","1","[DefaultEndpoint hashCode ()]","10"
"7","helios/helios-client","145ea28deccf0d4f23fd99edab286a339bd96de2","2edb5cfea4edf6282a422f5a1bc0432fbe907a15","REVERSE_IF_ELSE","3","1","1","[DefaultEndpoint hashCode ()]","10"
"11","helios/helios-client","2edb5cfea4edf6282a422f5a1bc0432fbe907a15","9dd13e345d7e03c65e85969fbdff868563e407ad","INFIX_EXPRESSION_DIVIDING","8","1","1","[DefaultEndpoint equals (Object)]","10"
"14","helios/helios-client","9dd13e345d7e03c65e85969fbdff868563e407ad","3ddfcf6d6236c456c37ac112cda6077b06d8a1c6","REVERSE_IF_ELSE","3","1","2","[DefaultEndpoint equals (Object), DefaultEndpoint hashCode ()]","20"
"15","helios/helios-client","3ddfcf6d6236c456c37ac112cda6077b06d8a1c6","f0466b26e9b0800264f3f4f5e0456c23e03e8096","LOCAL_VAR_RENAMING","0","1","2","[Endpoints of (List<URI>, DnsResolver), DefaultEndpoint equals (Object)]","20"
"16","helios/helios-client","f0466b26e9b0800264f3f4f5e0456c23e03e8096","68991c916a8cb2b1a6aa885ef1bc6104e40472a3","SWITCH_EQUAL_SIDES","14","1","2","[DefaultEndpoint equals (Object), DefaultEndpoint DefaultEndpoint (URI, InetAddress)]","20"
"18","helios/helios-client","68991c916a8cb2b1a6aa885ef1bc6104e40472a3","3067930f4b24de6412ad223c68a7e62ee3ff65c1","VAR_DECLARATION_DIVIDING","13","1","1","[DefaultEndpoint hashCode ()]","10"
"22","helios/helios-client","3067930f4b24de6412ad223c68a7e62ee3ff65c1","ea900fc9b16357369612fb1a1f82046622897c23","VAR_DECLARATION_MERGING","12","1","1","[DefaultEndpoint equals (Object)]","10"
"25","helios/helios-client","ea900fc9b16357369612fb1a1f82046622897c23","b770747b74307c796b286f49b2eb4a6e7355a6f1","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DefaultEndpoint DefaultEndpoint (URI, InetAddress)]","10"
"28","helios/helios-client","b770747b74307c796b286f49b2eb4a6e7355a6f1","8aef4a09615706712cee0632a6c264b9588a0f76","REVERSE_IF_ELSE","3","1","2","[DefaultEndpoint equals (Object), DefaultEndpoint hashCode ()]","20"
"29","helios/helios-client","8aef4a09615706712cee0632a6c264b9588a0f76","19c2d2158bbd261b5aba4e2d279f7c03584d20e5","LOCAL_VAR_RENAMING","0","1","2","[Endpoints of (Supplier<List<URI>>), DefaultEndpoint equals (Object)]","20"
"0","helios/helios-service-registration","19c2d2158bbd261b5aba4e2d279f7c03584d20e5","af8513f6f159ccdf8870597090edf2f8d472ed65","VAR_DECLARATION_MERGING","12","1","39","[Builder build (), Endpoint getHost (), EndpointHealthCheck toString (), EndpointHealthCheck hashCode (), EndpointHealthCheck newHttpCheck (String), ServiceRegistrarLoader load (), Builder endpoint (String, String, int), ServiceRegistration equals (Object), FilteringClassLoader FilteringClassLoader (List<Package>, ClassLoader, ClassLoader), Builder endpoint (String, String, int, String, String, List<String>), Endpoint Endpoint (String, String, int, String, String, List<String>, EndpointHealthCheck), Endpoint equals (Object), ServiceRegistration getEndpoints (), ServiceRegistration toString (), EndpointHealthCheck EndpointHealthCheck (String, String), Builder endpoint (String, String, int, String, String), ServiceRegistrarLoadingException ServiceRegistrarLoadingException (String, ServiceConfigurationError), ServiceRegistrarLoader extensionClassLoader (ClassLoader), Builder endpoint (String, String, int, String, String, List<String>, EndpointHealthCheck), Endpoint getProtocol (), EndpointHealthCheck equals (Object), Endpoint getPort (), Endpoint toString (), ServiceRegistrarLoader load (String, ClassLoader), Endpoint getDomain (), ServiceRegistrarLoader load (Path), EndpointHealthCheck getPath (), Endpoint getHealthCheck (), EndpointHealthCheck getType (), FilteringClassLoader findClass (String), ServiceRegistration ServiceRegistration (List<Endpoint>), EndpointHealthCheck newTcpCheck (), Endpoint hashCode (), ServiceRegistrarLoader load (Path, ClassLoader, ClassLoader), Endpoint getTags (), Endpoint getName (), ServiceRegistrarLoader pluginClassLoader (Path, ClassLoader, ClassLoader), ServiceRegistration hashCode (), ServiceRegistration newBuilder ()]","117"
"1","helios/helios-service-registration","af8513f6f159ccdf8870597090edf2f8d472ed65","d6874ae355b3bb7b240e630e0d3df25d5ef36962","LOCAL_VAR_RENAMING","0","1","2","[NopServiceRegistrarFactory create (String), NopServiceRegistrarFactory createForDomain (String)]","8"
"0","helios/helios-services","d6874ae355b3bb7b240e630e0d3df25d5ef36962","b2da7a2eb405195ee74ff901a42147f15113bed9","PRE_POST_FIX_EXPRESSION_DIVIDING","16","1","146","[ZooKeeperMasterModel removeDeploymentGroup (String), ZooKeeperMasterModel rollingUpdateMarkUndeployed (ZooKeeperClient, RollingUpdateOpFactory, DeploymentGroup, String), DefaultReactor signalRunnable (), RollingUndeployPlanner of (DeploymentGroup), ZooKeeperMasterModel getDeployOperations (ZooKeeperClient, String, Deployment, String), TaskConfig ports (), ZooKeeperMasterModel updateOnHostChange (DeploymentGroup, DeploymentGroupStatus), ZooKeeperMasterModel getDeploymentGroup (ZooKeeperClient, String), Builder namespace (String), ZooKeeperMasterModel getHostLabels (String), NoopMasterMetrics badRequest (String), ZooKeeperMasterModel forceRollingUpdateUndeploy (ZooKeeperClient, RollingUpdateOpFactory, DeploymentGroup, String), ZooKeeperMasterModel stopDeploymentGroup (String), ZooKeeperMasterModel isMigration (Deployment, DeploymentGroup), NoopMasterMetrics failure (String), ZooKeeperMasterModel compare (TaskStatusEvent, TaskStatusEvent), MeterRates getOneMinuteRate (), ZooKeeperMasterModel apply (TaskStatusEvent), ZooKeeperMasterModel tryGetEntity (ZooKeeperClient, String, TypeReference<T>, String), TaskConfig portBindings (), ZooKeeperMasterModel getEnvironment (ZooKeeperClient, String), ZooKeeperMasterModel rollingUpdate (DeploymentGroup, JobId, RolloutOptions), ZooKeeperMasterModel deployJobRetry (ZooKeeperClient, String, Deployment, int, String), ZooKeeperMasterModel getLabels (ZooKeeperClient, String), ZooKeeperMasterModel checkForPortConflicts (ZooKeeperClient, String, int, JobId), Builder toString (), ZooKeeperMasterModel getPreviousJobStates (JobId, String, int), ZooKeeperMasterModel listHosts (), DefaultReactor DefaultReactor (String, Callback, long), Builder ports (Map<String,Integer>), ZooKeeperMasterModel getTaskStatuses (ZooKeeperClient, String), ZooKeeperMasterModel getDeploymentGroupTasks (ZooKeeperClient), ZooKeeperMasterModel rollingUpdateStep (), ZooKeeperMasterModel getAgentInfo (String), ZooKeeperMasterModel checkHostUp (ZooKeeperClient, String), DefaultReactor signal (), ZooKeeperMasterModel deregisterHost (String), ZooKeeperMasterModel assertJobExists (ZooKeeperClient, JobId), ZooKeeperMasterModel isRolloutTimedOut (ZooKeeperClient, DeploymentGroup), MeterRates MeterRates (Meter), ZooKeeperMasterModel getHostStatus (String), NoopMasterMetrics jobsInJobList (int), ZooKeeperMasterModel getJobCreation (ZooKeeperClient, JobId), Builder build (), ZooKeeperMasterModel listJobHosts (ZooKeeperClient, JobId), ZooKeeperMasterModel getJob (JobId), ZooKeeperMasterModel deployJob (String, Deployment, String), ZooKeeperMasterModel undeployJob (String, JobId), RollingUndeployPlanner RollingUndeployPlanner (DeploymentGroup), Builder Builder (), TaskConfig hostConfig (Optional<String>), NoOpContainerDecorator decorateHostConfig (Job, Optional<String>, HostConfig.Builder), TaskConfig binds (), TaskConfig containerExposedPorts (), BindVolumeContainerDecorator decorateHostConfig (Job, Optional<String>, HostConfig.Builder), ZooKeeperMasterModel undeployJob (String, JobId, String), ZooKeeperMasterModel rollingUpdateAwaitUndeployed (ZooKeeperClient, RollingUpdateOpFactory, DeploymentGroup, String), Check toString (), Check equals (Object), RollingUndeployPlanner plan (List<String>), ZooKeeperMasterModel updateDeployment (String, Deployment), ZooKeeperMasterModel isHostUp (String), ZooKeeperMasterModel getInitRollingUpdateOps (DeploymentGroup, List<String>, List<String>, ZooKeeperClient), ZooKeeperMasterModel getJobStatus (JobId), ZooKeeperMasterModel registerHost (String, String), ZooKeeperMasterModel verifyToken (String, Job), ZooKeeperMasterModel getJobs (), TaskConfig builder (), Builder containerDecorators (List<ContainerDecorator>), ZooKeeperMasterModel processRollingUpdateTask (ZooKeeperClient, RollingUpdateOpFactory, RolloutTask, DeploymentGroup), NoopMasterMetrics clientVersion (String), SignalAwaitingService beforeIteration (), TaskConfig registration (), TaskConfig containerEnvStrings (), ZooKeeperMasterModel listHosts (String), ZooKeeperMasterModel rolloutOptionsWithFallback (RolloutOptions, Job), NoopMasterMetrics success (String), ZooKeeperMasterModel updateDeploymentGroupHosts (String, List<String>), TaskConfig fullyQualifiedRegistrationDomain (), ZooKeeperMasterModel getDeploymentGroups (), ZooKeeperMasterModel assertHostExists (ZooKeeperClient, String), ZooKeeperMasterModel removeJob (JobId), ZooKeeperMasterModel listHostJobs (ZooKeeperClient, String), Builder envVars (Map<String,String>), ZooKeeperMasterModel getDeploymentGroupHosts (String), ZooKeeperMasterModel getRunningMasters (), ZooKeeperMasterModel getJob (ZooKeeperClient, JobId), TaskConfig containerEnv (), ZooKeeperMasterModel getTasks (ZooKeeperClient, String), Builder job (Job), DefaultReactor run (), TaskConfig containerPort (int, String), MeterRates getFiveMinuteRate (), ZooKeeperMasterModel getUndeployOperations (ZooKeeperClient, String, JobId, String), ZooKeeperMasterModel removedHosts (List<String>, List<String>, List<String>), Builder dns (List<String>), ZooKeeperMasterModel getJobHistory (JobId, String), ZooKeeperMasterModel getDeploymentGroupStatus (String), TaskConfig healthCheck (), ZooKeeperMasterModel addJob (Job), ZooKeeperMasterModel rollingUpdateDeploy (ZooKeeperClient, RollingUpdateOpFactory, DeploymentGroup, String), BindVolumeContainerDecorator BindVolumeContainerDecorator (List<String>), ZooKeeperMasterModel assertTaskExists (ZooKeeperClient, String, JobId), TaskConfig TaskConfig (Builder), TaskConfig containerConfig (ImageInfo, Optional<String>), ZooKeeperMasterModel getJobHistory (JobId), MeterRates MeterRates (double, double, double), ZooKeeperMasterModel getAgentInfo (ZooKeeperClient, String), ZooKeeperMasterModel rollingUpdateTimedoutError (RollingUpdateOpFactory, String, JobId, TaskStatus), SignalAwaitingService SignalAwaitingService (CountDownLatch), ZooKeeperMasterModel getHosts (ZooKeeperClient, String), ZooKeeperMasterModel ZooKeeperMasterModel (ZooKeeperClientProvider, String, List<EventSender>, String), ZooKeeperMasterModel redundantUndeployment (Deployment, DeploymentGroup), ZooKeeperMasterModel rollingUpdateAwaitRunning (ZooKeeperClient, RollingUpdateOpFactory, DeploymentGroup, String), Builder host (String), Check hashCode (), ZooKeeperMasterModel removeJob (JobId, String), Builder defaultRegistrationDomain (String), NoopMasterMetrics jobsHistoryEventSize (int), RollingUndeployPlanner rolloutTasks (List<String>), ZooKeeperMasterModel updateDeployment (String, Deployment, String), ZooKeeperMasterModel getDeployment (String, JobId), TaskConfig containerImage (), BindVolumeContainerDecorator isValidBind (String), ZooKeeperMasterModel addDeploymentGroup (DeploymentGroup), ZooKeeperMasterModel allowHostChange (DeploymentGroupStatus), ZooKeeperMasterModel staticPorts (Job), TaskConfig volumes (), MeterRates getFifteenMinuteRate (), NoOpContainerDecorator decorateContainerConfig (Job, ImageInfo, Optional<String>, ContainerConfig.Builder), ZooKeeperMasterModel getInitRollingUpdateOps (DeploymentGroup, ZooKeeperClient), DefaultReactor DefaultReactor (String, Callback), BindVolumeContainerDecorator decorateContainerConfig (Job, ImageInfo, Optional<String>, ContainerConfig.Builder), ZooKeeperMasterModel deployJob (String, Deployment), Check Check (String), TaskConfig containerName (), TaskConfig name (), ZooKeeperMasterModel getDeploymentGroup (String), TaskConfig endpointHealthCheck (String), ZooKeeperMasterModel emitEvents (String, List<Map<String,Object>>), ZooKeeperMasterModel ownedByDeploymentGroup (Deployment, DeploymentGroup), ZooKeeperMasterModel getHostInfo (ZooKeeperClient, String), ZooKeeperMasterModel getTaskStatus (ZooKeeperClient, String, JobId), Check register (CuratorTransaction), ZooKeeperMasterModel rollingUpdateUndeploy (ZooKeeperClient, RollingUpdateOpFactory, DeploymentGroup, String), ZooKeeperMasterModel rollingUpdateUndeploy (ZooKeeperClient, RollingUpdateOpFactory, DeploymentGroup, String, boolean)]","1460"
"1","helios/helios-services","b2da7a2eb405195ee74ff901a42147f15113bed9","1d8f22ab750b5f92339145b9f3cecbdae7a5e301","VAR_DECLARATION_MERGING","12","1","7","[HostInfoReporter schedule (Runnable, ScheduledExecutorService), HostInfoReporter runOneIteration (), HostInfoReporter dockerVersion (), HostInfoReporter HostInfoReporter (OperatingSystemMXBean, NodeUpdaterFactory, String, DockerClient, DockerHost, int, TimeUnit, CountDownLatch), HostInfoReporter dockerHost (), HostInfoReporter exec (String), HostInfoReporter dockerVersion (com.spotify.docker.client.messages.Version)]","77"
"2","helios/helios-services","1d8f22ab750b5f92339145b9f3cecbdae7a5e301","49e550cb19a632582d2a580425d0f5b46dbdb84d","INFIX_EXPRESSION_DIVIDING","8","1","6","[ZooKeeperModelReporter time (String, String, ZooKeeperCallable<T>), ZooKeeperModelReporter connectionStateChanged (ConnectionState), ZooKeeperModelReporter ZooKeeperModelReporter (ZooKeeperMetrics), ZooKeeperModelReporter checkException (Exception, String), ZooKeeperCallable call (), ZooKeeperModelReporter noop ()]","72"
"4","helios/helios-services","49e550cb19a632582d2a580425d0f5b46dbdb84d","678f90f6ac5fac9479f02bb9abfe5afcd6314ebb","REVERSE_IF_ELSE","3","1","2","[VersionResource versionCheck (String), VersionResource version ()]","26"
"9","helios/helios-services","678f90f6ac5fac9479f02bb9abfe5afcd6314ebb","d2ccd435b5bc781cbd54e7ed9099a30f59051cf0","LOCAL_VAR_RENAMING","0","1","4","[CommonConfiguration setKafkaBrokers (List<String>), CommonConfiguration setPubsubPrefixes (List<String>), CommonConfiguration getKafkaBrokers (), CommonConfiguration getPubsubPrefixes ()]","56"
"18","helios/helios-services","d2ccd435b5bc781cbd54e7ed9099a30f59051cf0","84a21341bee7be3d86f539ee991cd6d34a401f35","LOCAL_VAR_RENAMING","0","1","1","[CommonConfiguration setKafkaBrokers (List<String>)]","14"
"0","helios/helios-system-tests","84a21341bee7be3d86f539ee991cd6d34a401f35","b48583f86029b52edbd563d38cd38016c6d04b61","PRE_POST_FIX_EXPRESSION_DIVIDING","16","1","123","[SystemTestBase awaitHostStatus (String, HostStatus.Status, int, TimeUnit), VolumeTest recvUtf8 (int, int), CliJobCreationTest initialize (), SystemTestBase createJob (String, String, String, List<String>, Map<String,String>, Map<String,PortMapping>, Map<ServiceEndpoint,ServicePorts>), CliJobCreationTest testSuccessJsonOutput (), SystemTestBase removeContainer (DockerClient, String), SystemTestBase undeployJob (JobId, String), SystemTestBase createJob (String, String, String, List<String>, Map<String,String>, Map<String,PortMapping>), SystemTestBase flatten (Iterable<?>), SystemTestBase zk (), DeploymentGroupTest testRollingUpdateMigrateNothingToUndeploy (), DeploymentGroupTest initialize (), SystemTestBase stopJob (JobId, String), CliJobCreationTest testTemplateAmbiguousJobJsonOutput (), SystemTestBase startAgent (String), SystemTestBase awaitTaskGone (HeliosClient, String, JobId, long, TimeUnit), SystemTestBase assertJobEquals (Job, Job), SystemTestBase startDefaultMaster (String), SystemTestBase startDefaultMaster (int, String), SystemTestBase startDefaultMasters (int, String), DeploymentGroupTest awaitUpWithLabels (String, String), SystemTestBase masterName (), VolumeTest call (), CliJobCreationTest testMergeFileAndCliArgs (), SystemTestBase assertJobsEqual (Map<JobId,Job>, Map<JobId,Job>), DeploymentGroupTest testStopDeploymentGroupGroupNotFound (), NamespaceTest test (), SystemTestBase client (String, String), DeploymentGroupTest testStopDeploymentGroup (), VolumeTest testCli (), DeploymentGroupTest testRollingUpdatePerformance (), SystemTestBase masterEndpoint (), SystemTestBase main (String), SystemTestBase startDefaultMasterDontWaitForZk (CuratorClientFactory, String), SystemTestBase cliJson (Class<T>, String, String), DeploymentGroupTest testRollingUpdateWithOverlap (), CliJobCreationTest testMergeFileAndCliArgsEnvPrecedence (), DeploymentGroupTest testStatusNoRollingUpdate (), DeploymentGroupTest testStoppedJob (), LabelTest testCliHosts (), SystemTestBase awaitHostStatus (HeliosClient, String, HostStatus.Status, int, TimeUnit), SystemTestBase awaitHostStatusWithHostInfo (HeliosClient, String, HostStatus.Status, int, TimeUnit), CliJobCreationTest testInvalidJobJsonOutput (), SystemTestBase cliJson (Class<T>, String, List<String>), SystemTestBase baseTeardown (), SystemTestBase awaitJobState (HeliosClient, String, JobId, TaskStatus.State, int, TimeUnit), SystemTestBase startMaster (CuratorClientFactory, String), SystemTestBase deployJob (JobId, String), SystemTestBase createJobRawOutput (Job), SystemTestBase randomHexString (), SystemTestBase cli (String, String), SystemTestBase deployJob (JobId, String, String), SystemTestBase getOrNull (ListenableFuture<T>), DeploymentGroupTest testIdenticalRollouts (), DeploymentGroupTest testRemoveDeploymentGroupInactive (), SystemTestBase awaitDeploymentGroupStatus (HeliosClient, String, DeploymentGroupStatus.State), SystemTestBase isCircleCi (), DeploymentGroupTest call (), SystemTestBase awaitHostRegistered (HeliosClient, String, int, TimeUnit), CliJobCreationTest testTemplateUnknownJobJsonOutput (), JobWatchExactTest write (int), VolumeTest assertVolumes (JobId), SystemTestBase waitForMasterToBeFullyUp (), SystemTestBase flatten (Object), SystemTestBase masterAdminEndpoint (), SystemTestBase deregisterHost (String), LabelTest hostLabels (Set<String>), SystemTestBase createJob (Job), SystemTestBase startDefaultAgent (String, String), DeploymentGroupTest testRollingUpdateGroupNotFound (), SystemTestBase cli (String, Object), DeploymentGroupTest awaitUndeployed (String, JobId), SystemTestBase awaitHostRegistered (String, long, TimeUnit), AgentZooKeeperDownTolerationTest call (), DeploymentGroupTest testRollingUpdate (), SystemTestBase awaitTaskState (JobId, String, TaskStatus.State), JobWatchExactTest test (), SystemTestBase dockerPortRange (), MultipleJobsTest jobStatusBulk (), SystemTestBase setupDefaultMaster (String), SystemTestBase main (Collection<String>), SystemTestBase cli (String, List<String>), SystemTestBase createJob (String, String, String, List<String>, Date), SystemTestBase createJob (String, String, String, List<String>, ImmutableMap<String,String>), VolumeTest testClient (), AgentZooKeeperDownTolerationTest test (), DeploymentGroupTest testRollingUpdateMigrateWithToken (), SystemTestBase startMaster (String), DeploymentGroupTest testAgentAddedAfterRollingUpdateIsDeployed (), DeploymentGroupTest testRollingUpdateWithToken (), SystemTestBase createJob (String, String, String, List<String>), DeploymentGroupTest testRollingUpdateWithOverlapAndParallelism (), SystemTestBase defaultClient (), SystemTestBase listContainers (DockerClient, String), SystemTestBase awaitJobThrottle (HeliosClient, String, JobId, ThrottleState, int, TimeUnit), SystemTestBase resetAgentStateDir (), SystemTestBase createJob (String, String, String, String, List<String>, Map<String,String>, Map<String,PortMapping>, Map<ServiceEndpoint,ServicePorts>, Integer, Map<String,String>, Date), SystemTestBase startJob (JobId, String), SystemTestBase zooKeeperTestManager (), DeploymentGroupTest testListDeploymentGroups (), SystemTestBase baseSetup (), SystemTestBase dockerSetup (), VolumeTest setup (), SystemTestBase testHost (), SystemTestBase staticSetup (), SystemTestBase awaitHostStatusWithLabels (HeliosClient, String, HostStatus.Status, Map<String,String>), SystemTestBase listThreads (), LabelTest testHostLabels (), SystemTestBase getNewDockerClient (), SystemTestBase stopAgent (AgentMain), CliJobCreationTest call (), SystemTestBase temporaryPorts (), SystemTestBase masterPort (), SystemTestBase setupDefaultMaster (int, String), SystemTestBase assertDockerReachable (int), SystemTestBase masterAdminPort (), DeploymentGroupTest testRemovingAgentTagUndeploysJob (), DeploymentGroupTest testRollingUpdateMigrate (), DeploymentGroupTest testRemoveDeploymentGroupActive (), SystemTestBase createJob (String, String, String, List<String>, Map<String,String>, Map<String,PortMapping>, Map<ServiceEndpoint,ServicePorts>, Integer, Map<String,String>), VolumeTest recv (int, int), SystemTestBase call (), DeploymentGroupTest testRollingUpdateCoordination ()]","1107"
"1","helios/helios-system-tests","b48583f86029b52edbd563d38cd38016c6d04b61","e7b4331ae69ee1b9b7c2b5a6674bb898aee635f9","SWITCH_EQUAL_SIDES","14","1","6","[AgentStateDirConflictTest teardown (), AgentStateDirConflictTest stopQuietly (Service), AgentStateDirConflictTest uncaughtException (Thread, Throwable), AgentStateDirConflictTest makeAgent (String), AgentStateDirConflictTest test (), AgentStateDirConflictTest setup ()]","60"
"14","helios/helios-system-tests","e7b4331ae69ee1b9b7c2b5a6674bb898aee635f9","bd4fe0e740215c692e09a44524a3cd1f9d32370e","LOCAL_VAR_RENAMING","0","1","1","[PortCollisionJobTest test ()]","11"
"20","helios/helios-system-tests","bd4fe0e740215c692e09a44524a3cd1f9d32370e","1355a988c2784cc722faeb9bbffc37e68c6307e1","LOCAL_VAR_RENAMING","0","1","1","[PortCollisionJobTest test ()]","11"
"29","helios/helios-system-tests","1355a988c2784cc722faeb9bbffc37e68c6307e1","48cb97312911bb9241a54bb5869ef4e3339dbe6c","LOCAL_VAR_RENAMING","0","1","1","[PortCollisionJobTest test ()]","11"
"0","helios/helios-testing-common","48cb97312911bb9241a54bb5869ef4e3339dbe6c","d14ac318c6837e4383b029d198b224d819ba8552","PP_TO_ADD_ASSIGNMENT","6","1","65","[TemporaryPorts run (), ZooKeeperTestingClusterManager awaitUp (long, TimeUnit), Polling awaitUnchecked (long, TimeUnit, Callable<T>), TemporaryPorts TemporaryPorts (Builder), Builder end (), ZooKeeperTestingClusterManager stop (), TemporaryPorts available (int), ZooKeeperTestingClusterManager resetPeer (int), ZooKeeperTestingClusterManager startPeer (int), ZooKeeperTestingServerManager connectString (), AllocatedPort release (), ZooKeeperTestingServerManager start (), AllocationFailedException builder (), ZooKeeperTestingClusterManager ensure (String), ZooKeeperTestingClusterManager peerCurator (int), TemporaryPorts create (), ZooKeeperTestingClusterManager apply (InetSocketAddress), ZooKeeperTestingServerManager close (), ZooKeeperTestingClusterManager awaitDown (int, TimeUnit), ZooKeeperTestingClusterManager createPeers (int), ZooKeeperTestingServerManager restore (Path), Builder lockDirectory (), ZooKeeperTestingClusterManager stopPeer (int), ZooKeeperTestingClusterManager call (), TemporaryPorts localPort (String), TemporaryPorts localPortRange (String, int), ZooKeeperTestingServerManager awaitDown (int, TimeUnit), ZooKeeperTestingClusterManager apply (InstanceSpec), Builder retries (), ZooKeeperTestingClusterManager createCurator (String), ZooKeeperTestingClusterManager ZooKeeperTestingClusterManager (), Builder retries (int), Builder start (int), Builder build (), Builder release (), ZooKeeperTestingClusterManager endpoints (Iterable<InetSocketAddress>), ZooKeeperTestingClusterManager start0 (), ZooKeeperTestingClusterManager close (), ZooKeeperTestingClusterManager allocateAddresses (List<InstanceSpec>), ZooKeeperTestingClusterManager curatorWithSuperAuth (), ZooKeeperTestingServerManager ZooKeeperTestingServerManager (), ZooKeeperTestingClusterManager connectString (), AllocatedPort port (), ZooKeeperTestingServerManager stop (), Builder end (int), TemporaryPorts tryAcquire (String, int), TemporaryPorts after (), ZooKeeperTestingClusterManager start (), TemporaryPorts lock (int, String), ZooKeeperTestingClusterManager createCurators (List<InetSocketAddress>), ZooKeeperTestingServerManager awaitUp (long, TimeUnit), Builder release (boolean), ZooKeeperTestingClusterManager connectString (Iterable<InetSocketAddress>), ZooKeeperTestingClusterManager peerDir (int), ZooKeeperTestingServerManager reset (), ZooKeeperTestingServerManager backup (Path), TemporaryPorts randomPort (), ZooKeeperTestingServerManager ensure (String), AllocatedPort AllocatedPort (int, Path, FileChannel, FileLock), Polling await (long, TimeUnit, Callable<T>), ZooKeeperTestingServerManager curatorWithSuperAuth (), Builder start (), ZooKeeperTestingClusterManager connectString (InetSocketAddress), Builder lockDirectory (Path), TemporaryPorts releasePorts ()]","260"
"15","helios/helios-testing-common","d14ac318c6837e4383b029d198b224d819ba8552","f18df2452e230c8f7c595ba93a645536be390a3c","SWITCH_EQUAL_SIDES","14","1","4","[TemporaryPorts lock (int, String), TemporaryPorts available (int), TemporaryPorts localPort (String), TemporaryPorts localPortRange (String, int)]","16"
"18","helios/helios-testing-common","f18df2452e230c8f7c595ba93a645536be390a3c","b48d854dca37b0e5f61daf949674e3180f5877e4","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[AllocatedPort AllocatedPort (int, Path, FileChannel, FileLock)]","4"
"21","helios/helios-testing-common","b48d854dca37b0e5f61daf949674e3180f5877e4","e0a33ac1f52791ed0a1cd090f042391fdb49bebe","REVERSE_IF_ELSE","3","1","4","[TemporaryPorts lock (int, String), TemporaryPorts available (int), TemporaryPorts localPortRange (String, int), AllocatedPort release ()]","16"
"27","helios/helios-testing-common","e0a33ac1f52791ed0a1cd090f042391fdb49bebe","8e971f8bbd56ae425e8b88b791f6fa05c994fead","FOR_TO_WHILE","1","1","3","[TemporaryPorts available (int), TemporaryPorts localPort (String), TemporaryPorts localPortRange (String, int)]","12"
"0","helios/helios-testing","8e971f8bbd56ae425e8b88b791f6fa05c994fead","6f63c314bcc0322c02fa97f686549ca3feb8e303","WHILE_TO_FOR","2","1","104","[HeliosDeploymentException HeliosDeploymentException (String, Throwable), Builder testReportDirectory (String), TemporaryJobs create (String), DefaultDeployer readyToDeploy (), JobPrefixFile prefix (), Builder Builder (String, Config, Map<String,String>, HeliosClient.Builder), TemporaryJobs job (), HeliosSoloLogService scheduler (), InMemoryLogStreamFollower create (), JobPrefixFile create (Path), DefaultDeployer deploy (Job, List<String>, Set<String>, Prober, TemporaryJobReports.ReportWriter), Builder hostPickingStrategy (HostPickingStrategy), TemporaryJobs initialValue (), HeliosDeploymentException HeliosDeploymentException (Throwable), Builder processHostPickingStrategy (), TemporaryJobs call (), TemporaryJob TemporaryJob (HeliosClient, Prober, TemporaryJobReports.ReportWriter, Job, List<String>, Set<String>, String, long), TemporaryJob port (String, String), Builder endpoints (List<URI>), Builder hostFilter (String), TemporaryJobs after (Optional<TemporaryJobReports.ReportWriter>), JobPrefixFile JobPrefixFile (Path, FileChannel, FileLock), Builder domain (String), TemporaryJobs perform (Statement, TemporaryJobReports.ReportWriter), TemporaryJob undeploy (List<AssertionError>), HeliosSoloLogService runOneIteration (), Builder build (), HeliosSoloLogService HeliosSoloLogService (HeliosClient, DockerClient, LogStreamFollower), TemporaryJobs getListByKey (String, Config), Builder client (HeliosClient), JobPrefixFile close (AutoCloseable), TemporaryJobs prefix (), Builder user (String), JobPrefixFile tryFromExistingFile (Path), TemporaryJobs apply (Statement, Description), InMemoryLogStreamFollower getStdout (JobId), TemporaryJobs builder (Map<String,String>), InMemoryLogStreamFollower InMemoryLogStreamFollower (ConcurrentMap<JobId,StreamHolder>), Builder jobPrefix (String), TemporaryJob hosts (), Builder deployer (Deployer), DefaultDeployer DefaultDeployer (HeliosClient, List<TemporaryJob>, HostPickingStrategy, String, long), HeliosSoloLogService shutDown (), LogFollowJob LogFollowJob (String, JobId), TemporaryJob deploy (), TemporaryJobs builder (String, Map<String,String>, HeliosClient.Builder), Builder endpointStrings (List<String>), Builder endpoints (URI), JobPrefixFile JobPrefixFile (String, Path), TemporaryJobs builder (), StreamHolder StreamHolder (ByteArrayOutputStream, ByteArrayOutputStream), TemporaryJob job (), DefaultDeployer deploy (Job, String, Set<String>, Prober, TemporaryJobReports.ReportWriter), Builder prefixDirectory (String), TemporaryJobs builder (String, Map<String,String>), TemporaryJobs builder (String), TemporaryJobs jobWithConfig (String), TemporaryJobs evaluate (), HeliosDeploymentException HeliosDeploymentException (String), TemporaryJob addresses (String), TemporaryJobs client (), Builder jobDeployedMessageFormat (String), Builder deployTimeoutMillis (long), Builder configureWithEnv (), Builder reports (TemporaryJobReports), TemporaryJob call (), JobPrefixFile create (String, Path), Builder heliosClientHttpTimeoutSeconds (int), TemporaryJobs verifyJobsHealthy (), JobPrefixFile release (), TemporaryJob statuses (), TemporaryJob address (String), TemporaryJob outputDeployedMessage (String, String), InMemoryLogStreamFollower writeAndFlush (ByteBuffer, OutputStream), Builder prober (Prober), LogFollowJob call (), Builder verifyHasStrategyKey (String), TemporaryJobs create (), TemporaryJobs after (), TemporaryJob undeploy (), TemporaryJob awaitUp (String), TemporaryJob awaitPort (String, String), InMemoryLogStreamFollower followLog (JobId, String, Iterator<LogMessage>), TemporaryJobs createFromProfile (String), TemporaryJobs apply (TemporaryJobReports.ReportWriter), TemporaryJobs TemporaryJobs (Builder, Config), TemporaryJobs create (HeliosClient), TemporaryJobs jobPrefixFile (), InMemoryLogStreamFollower getStderr (JobId), TemporaryJobs before (), TemporaryJobs job (Job.Builder), TemporaryJob endpointFromHost (String), Builder endpoints (String), TemporaryJob verifyHealthy (String, TaskStatus), Polling await (long, TimeUnit, String, Callable<T>), JobPrefixFile deleteIfExists (Path), DefaultDeployer pickHost (List<String>), HeliosSoloLogService executor (), HeliosSoloLogService get (Future<T>), TemporaryJob verifyHealthy (), JobPrefixFile close (), TemporaryJobs removeOldJobs (), JobPrefixFile delete (), Polling awaitUnchecked (long, TimeUnit, String, Callable<T>)]","832"
"2","helios/helios-testing","6f63c314bcc0322c02fa97f686549ca3feb8e303","5e132a446b012060be8c85c526471fbbaf5e587c","SWITCH_EQUAL_SIDES","14","1","5","[HeliosDeploymentResource after (), HeliosDeploymentResource HeliosDeploymentResource (HeliosDeployment), HeliosDeploymentResource client (), HeliosDeploymentResource before (), HeliosDeploymentResource call ()]","45"
"5","helios/helios-testing","5e132a446b012060be8c85c526471fbbaf5e587c","4c51769051b9b387e0be3dafc9e9d8ecf5e4baf1","REVERSE_IF_ELSE","3","1","3","[HeliosConfig getProfile (String, String, Config), HeliosConfig loadConfig (), HeliosConfig getDefaultProfile (String, String, Config)]","30"
"11","helios/helios-testing","4c51769051b9b387e0be3dafc9e9d8ecf5e4baf1","ed793db84a98a86652aca56affc68a77fc726ccf","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[HeliosConfig getProfile (String, String, Config)]","10"
"19","helios/helios-testing","ed793db84a98a86652aca56affc68a77fc726ccf","25879209a0ae4d8641c314e04261871b293257ec","REVERSE_IF_ELSE","3","1","1","[HeliosConfig getProfile (String, String, Config)]","10"
"25","helios/helios-testing","25879209a0ae4d8641c314e04261871b293257ec","e6d2db3d4174a9dc75c918c3693eb343bb4de24c","REVERSE_IF_ELSE","3","1","1","[HeliosConfig getProfile (String, String, Config)]","10"
"0","helios/helios-tools","e6d2db3d4174a9dc75c918c3693eb343bb4de24c","3f5b950d6d574e1b3cd0e2fe94c1a9b14b7e3d25","IF_DIVIDING","9","1","71","[HostStatusDisplayer displayTask (boolean, JobStatusTable, JobId, JobStatus, Map<String,TaskStatus>, Iterable<String>), ScoredHost compare (ScoredHost, ScoredHost), CliConfig getMasterEndpoints (), ExplicitTarget getEndpointSupplier (), JobWatchCommand JobWatchCommand (Subparser), SrvTarget SrvTarget (String, String), JobListCommand escape (List<String>), ScoredHost sortScoredHosts (List<ScoredHost>), JobStatusCommand JobStatusCommand (Subparser), CliConfig fromFile (File, Map<String,String>), ScoredHost getSortedMatches (String), ExplicitTarget toString (), HostStatusDisplayer showJsonStatuses (PrintStream, String, Set<JobId>, Map<JobId,JobStatus>), JobStartCommand JobStartCommand (Subparser), SrvTarget getEndpointSupplier (), ExplicitTarget ExplicitTarget (URI), CliConfig CliConfig (List<String>, String, List<URI>), CliConfig getUsername (), JobWatchCommand hostMatches (List<String>, String), CliConfig getSrvName (), CliConfig fromEnvVar (Config, Map<String,String>), ScoredHost resolveName (String), ScoredHost findPrefixMatches (String), JobWatchCommand showReport (PrintStream, boolean, List<String>, Set<JobId>, DateTimeFormatter, HeliosClient), SrvTarget getDomain (), HostStatusDisplayer showStatusesForHosts (String, Set<JobId>, Map<JobId,JobStatus>, HostStatusDisplayer), JobWatchCommand chop (String, int), JobStatusTable task (JobId, String, TaskStatus, Deployment), CliConfig getConfigDirName (), CliConfig getConfigFileName (), DeploymentGroupStatusCommand printTable (PrintStream, JobId, List<DeploymentGroupStatusResponse.HostStatus>, boolean), CliConfig getDomainsString (), ExplicitTarget from (String, Iterable<String>), ScoredHost scoreMatches (List<String>), SrvTarget toString (), JobListCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader), ScoredHost ScoredHost (String, int), HostRegisterCommand HostRegisterCommand (Subparser), SrvTarget hashCode (), JobStatusTable print (), CliConfig fromUserConfig (Map<String,String>), ExplicitTarget hashCode (), Target getEndpointSupplier (), ExplicitTarget from (URI), CliConfig fromConfig (Config), HostResolver HostResolver (Set<String>, Name[]), HostStatusDisplayer filterJobStatus (JobStatus, Iterable<String>), DeploymentGroupStatusCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader), SrvTarget getSrv (), ScoredHost findMatchesWithLowestScore (List<ScoredHost>), JobStatusTable JobStatusTable (PrintStream, boolean), ExplicitTarget equals (Object), DeploymentGroupStatusCommand DeploymentGroupStatusCommand (Subparser), JobListCommand getJobStatuses (HeliosClient, Map<JobId,Job>, boolean), Target getName (), JobStartCommand runWithJob (Namespace, HeliosClient, PrintStream, boolean, Job, BufferedReader), HostStatusDisplayer matchedStatus (JobStatus, Iterable<String>, Map<String,TaskStatus>), HostStatusDisplayer run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader), Target Target (String), JobWatchCommand run (Namespace, List<TargetAndClient>, PrintStream, boolean, BufferedReader), JobWatchCommand watchJobsOnHosts (PrintStream, boolean, List<String>, Set<JobId>, int, List<TargetAndClient>), SrvTarget equals (Object), CliConfig getDomains (), HostRegisterCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader), ExplicitTarget getEndpoint (), JobListCommand JobListCommand (Subparser), HostResolver create (HeliosClient), JobWatchCommand watchJobsOnHosts (PrintStream, boolean, List<String>, List<JobId>, Integer, HeliosClient), JobListCommand escape (String), JobWatchCommand getStatuses (HeliosClient, Set<JobId>), DeploymentGroupStatusCommand run0 (HeliosClient, PrintStream, boolean, String, boolean)]","710"
"1","helios/helios-tools","3f5b950d6d574e1b3cd0e2fe94c1a9b14b7e3d25","88e5df302a8ea3fa239bc846296d76b3c782be87","SWITCH_EQUAL_SIDES","14","1","8","[JobCreateCommand nullOrInteger (String), JobCreateCommand parseListOfPairs (List<String>, String), JobCreateCommand parseListOfPairs (List<String>, String, String), JobCreateCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader), JobCreateCommand JobCreateCommand (Subparser, Supplier<Map<String,String>>), JobCreateCommand defaultMetadata (), JobCreateCommand get (), JobCreateCommand JobCreateCommand (Subparser)]","88"
"2","helios/helios-tools","88e5df302a8ea3fa239bc846296d76b3c782be87","c7af27e153563c1cc6a9e44864f9661e738ed55a","REVERSE_IF_ELSE","3","1","1","[JobCreateCommand parseListOfPairs (List<String>, String, String)]","11"
"7","helios/helios-tools","c7af27e153563c1cc6a9e44864f9661e738ed55a","90986306b9c3027070f69236efddb1b800f35bd1","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JobCreateCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader)]","11"
"10","helios/helios-tools","90986306b9c3027070f69236efddb1b800f35bd1","77a23acd977beac1c974e3e7454d48fc79ae8b70","VAR_DECLARATION_MERGING","12","1","1","[JobCreateCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader)]","11"
"11","helios/helios-tools","77a23acd977beac1c974e3e7454d48fc79ae8b70","edc2c3ea13d0ca55ce4f96d65b309a75cd77dfbd","PP_TO_ADD_ASSIGNMENT","6","1","1","[JobCreateCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader)]","11"
"12","helios/helios-tools","edc2c3ea13d0ca55ce4f96d65b309a75cd77dfbd","1385eddb49733f24e100154f028e6250e9e27c97","SWITCH_EQUAL_SIDES","14","1","2","[JobCreateCommand nullOrInteger (String), JobCreateCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader)]","22"
"14","helios/helios-tools","1385eddb49733f24e100154f028e6250e9e27c97","008b27f09b098f66e5d0c01627248744d78cd1ea","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[JobCreateCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader)]","11"
"15","helios/helios-tools","008b27f09b098f66e5d0c01627248744d78cd1ea","2fdcb209fb0c3c0a0bffc42b2a79021ced33e108","REVERSE_IF_ELSE","3","1","3","[JobCreateCommand parseListOfPairs (List<String>, String, String), JobCreateCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader), JobCreateCommand defaultMetadata ()]","33"
"20","helios/helios-tools","2fdcb209fb0c3c0a0bffc42b2a79021ced33e108","7e56c619a96335c119c17384828bf5ea3b7cf8ba","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","1","[JobCreateCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader)]","11"
"22","helios/helios-tools","7e56c619a96335c119c17384828bf5ea3b7cf8ba","8bb8c2a4bdf43deb1f205bc456fa5380d2740a47","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[JobCreateCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader)]","11"
"23","helios/helios-tools","8bb8c2a4bdf43deb1f205bc456fa5380d2740a47","a86cbd66203c28e9a2981260fb7764cb7d0114cb","REVERSE_IF_ELSE","3","1","3","[JobCreateCommand parseListOfPairs (List<String>, String, String), JobCreateCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader), JobCreateCommand defaultMetadata ()]","33"
"24","helios/helios-tools","a86cbd66203c28e9a2981260fb7764cb7d0114cb","ebff9429f6573f33c93983a9645cfa8fea0f4af7","INFIX_EXPRESSION_DIVIDING","8","1","1","[JobCreateCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader)]","11"
"27","helios/helios-tools","ebff9429f6573f33c93983a9645cfa8fea0f4af7","5df343eacb224de49fccc614c71362ccc0910a6f","VAR_DECLARATION_DIVIDING","13","1","1","[JobCreateCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader)]","11"
"28","helios/helios-tools","5df343eacb224de49fccc614c71362ccc0910a6f","b2ee504a232f95c8a810b5824455abe04bb6244e","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JobCreateCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader)]","11"
"0","WebGoat/webgoat-container","61720b29ea31f49f9ce826fd7561b1e63c07a0f1","3db510fb17797b0f659dadcfee36d1ce350d2360","FOR_TO_WHILE","1","1","4","[LabelDebugger enable (), LabelDebugger isEnabled (), LabelDebugger setEnabled (boolean), LabelDebugger disable ()]","4"
"1","WebGoat/webgoat-container","3db510fb17797b0f659dadcfee36d1ce350d2360","5a6ddc7ccfcf6ced338fb94947ac0b920706d6d4","SWITCH_STRING_EQUAL","15","1","7","[CourseConfiguration createAssignment (Lesson), CourseConfiguration getPath (Class<? extends AssignmentEndpoint>), CourseConfiguration methodReturnTypeIsOfTypeAttackResult (Method), CourseConfiguration CourseConfiguration (List<Lesson>, List<AssignmentEndpoint>), CourseConfiguration course (), CourseConfiguration getHints (Class<? extends AssignmentEndpoint>), CourseConfiguration getMapping (Method)]","14"
"6","WebGoat/webgoat-container","5a6ddc7ccfcf6ced338fb94947ac0b920706d6d4","3e9fab8689fda9256ebfef41cf96b2fd695a4385","LOCAL_VAR_RENAMING","0","1","2","[WebGoatVersionMacro WebGoatVersionMacro (String, Map<String,Object>), WebGoatVersionMacro process (AbstractBlock, String, Map<String,Object>)]","6"
"0","WebGoat/auth-bypass","3e9fab8689fda9256ebfef41cf96b2fd695a4385","165aea45408bfe18118c821ec815aa28ea07b673","INFIX_EXPRESSION_DIVIDING","8","1","4","[VerifyAccount parseSecQuestions (HttpServletRequest), AccountVerificationHelper didUserLikelylCheat (HashMap<String,String>), AccountVerificationHelper verifyAccount (Integer, HashMap<String,String>), VerifyAccount completed (String, String, HttpServletRequest)]","8"
"12","WebGoat/auth-bypass","165aea45408bfe18118c821ec815aa28ea07b673","eeb3aa36598357bd3692c62b48cbc3e947d605c9","REVERSE_IF_ELSE","3","1","2","[VerifyAccount parseSecQuestions (HttpServletRequest), VerifyAccount completed (String, String, HttpServletRequest)]","4"
"13","WebGoat/auth-bypass","eeb3aa36598357bd3692c62b48cbc3e947d605c9","0fdc9159a5d401a935ee0a83642e9688d4bc2c82","REVERSE_IF_ELSE","3","1","1","[VerifyAccount parseSecQuestions (HttpServletRequest)]","2"
"21","WebGoat/auth-bypass","0fdc9159a5d401a935ee0a83642e9688d4bc2c82","0c3e1e95ae4718ffb4c0fc4703a79a2588f675ae","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[VerifyAccount completed (String, String, HttpServletRequest)]","2"
"26","WebGoat/auth-bypass","0c3e1e95ae4718ffb4c0fc4703a79a2588f675ae","41271f86fc08004991ea8e5748963a9ba10f60d1","LOCAL_VAR_RENAMING","0","1","2","[VerifyAccount parseSecQuestions (HttpServletRequest), VerifyAccount completed (String, String, HttpServletRequest)]","4"
"0","WebGoat/bypass-restrictions","41271f86fc08004991ea8e5748963a9ba10f60d1","e4ad2c4ffa83799baab5b70484d4b0c21e33463f","VAR_DECLARATION_DIVIDING","13","1","1","[BypassRestrictionsFieldRestrictions completed (String, String, String, String)]","1"
"3","WebGoat/bypass-restrictions","e4ad2c4ffa83799baab5b70484d4b0c21e33463f","2a8e9143e9f34fd95a0d98c55c1421e771f383c9","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[BypassRestrictionsFrontendValidation completed (String, String, String, String, String, String, String, Integer)]","2"
"15","WebGoat/bypass-restrictions","2a8e9143e9f34fd95a0d98c55c1421e771f383c9","591ea6230397c206e49e5b514b66c673ea0c14eb","LOCAL_VAR_RENAMING","0","1","1","[BypassRestrictionsFrontendValidation completed (String, String, String, String, String, String, String, Integer)]","2"
"25","WebGoat/bypass-restrictions","591ea6230397c206e49e5b514b66c673ea0c14eb","27534613700e54115942a32768a50193927b3960","VAR_DECLARATION_MERGING","12","1","1","[BypassRestrictionsFrontendValidation completed (String, String, String, String, String, String, String, Integer)]","2"
"27","WebGoat/bypass-restrictions","27534613700e54115942a32768a50193927b3960","2bd35b5d466a6ecee637d036b28fd3a72df375c4","REVERSE_IF_ELSE","3","1","1","[BypassRestrictionsFrontendValidation completed (String, String, String, String, String, String, String, Integer)]","2"
"28","WebGoat/bypass-restrictions","2bd35b5d466a6ecee637d036b28fd3a72df375c4","b404befe7d8061fc69c46173dcc94999828f1f69","REVERSE_IF_ELSE","3","1","1","[BypassRestrictionsFrontendValidation completed (String, String, String, String, String, String, String, Integer)]","2"
"0","WebGoat/challenge","b404befe7d8061fc69c46173dcc94999828f1f69","117088be704412d76849946baad053a62f7b43d0","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","38","[Assignment8 vote (int, HttpServletRequest), MD5 getHashString (String, String), MD5State copy (MD5State), MD5 update (byte, int), MD5 getHash (String), MD5 getHashString (byte[]), Assignment8 getVotes (), MD5 toString (), MD5 update (byte), MD5 getHash (byte[]), MD5State FF (int, int, int, int, int, int, int), MD5State MD5State (), MD5 reset (), MD5State encode (int, int), MD5 main (String[]), MD5State transform (MD5State, int[]), MD5State HH (int, int, int, int, int, int, int), MD5 update (String), MD5State reset (), MD5 update (MD5State, byte, int, int), MD5 MD5 (), MD5 getHash (File), MD5State II (int, int, int, int, int, int, int), MD5 getHashString (InputStream), MD5State encode (long), MD5State toHex (byte), MD5 update (byte, int, int), MD5 getHashString (), MD5State decode (byte, int, int), Assignment8 average (), MD5 getHash (String, String), Assignment8 notUsed (), MD5 getHashString (String), MD5 getHashString (File), MD5 update (String, String), MD5 getHash (InputStream), MD5State GG (int, int, int, int, int, int, int), MD5 getHash ()]","76"
"3","WebGoat/challenge","117088be704412d76849946baad053a62f7b43d0","f0306ed83df97e695a45882cc9e2aa47d3d6bab4","SWITCH_STRING_EQUAL","15","1","2","[Assignment5 login (String, String), Assignment5 Assignment5 (DataSource)]","6"
"8","WebGoat/challenge","f0306ed83df97e695a45882cc9e2aa47d3d6bab4","cb55adea919464aec1d192b720ab233175577e34","SWITCH_STRING_EQUAL","15","1","1","[Assignment5 login (String, String)]","3"
"9","WebGoat/challenge","cb55adea919464aec1d192b720ab233175577e34","585db5b596c1e35ee765d4b8f2ffd8960c5ac809","REVERSE_IF_ELSE","3","1","1","[Assignment5 login (String, String)]","3"
"14","WebGoat/challenge","585db5b596c1e35ee765d4b8f2ffd8960c5ac809","df20d5b9c01a45da881899385c199a90ef5f9f3b","LOCAL_VAR_RENAMING","0","1","2","[Assignment5 login (String, String), Assignment5 Assignment5 (DataSource)]","6"
"17","WebGoat/challenge","df20d5b9c01a45da881899385c199a90ef5f9f3b","36b5e201688b2cb1d855bbe64c118eb616aaa2df","REVERSE_IF_ELSE","3","1","1","[Assignment5 login (String, String)]","3"
"23","WebGoat/challenge","36b5e201688b2cb1d855bbe64c118eb616aaa2df","9154aafcd8276acdb2937b03c928ff69d25ade55","SWITCH_STRING_EQUAL","15","1","1","[Assignment5 login (String, String)]","3"
"29","WebGoat/challenge","9154aafcd8276acdb2937b03c928ff69d25ade55","6b94bd8f43a18df6d3e4e8682261ca2331559e66","SWITCH_STRING_EQUAL","15","1","1","[Assignment5 login (String, String)]","3"
"0","WebGoat/chrome-dev-tools","6b94bd8f43a18df6d3e4e8682261ca2331559e66","56decd40a5c590bcf5d08a6cde17ec847572d951","CASE_TO_IF_ELSE","17","1","2","[NetworkLesson ok (String), NetworkLesson completed (String, String)]","2"
"11","WebGoat/chrome-dev-tools","56decd40a5c590bcf5d08a6cde17ec847572d951","f11c003c31ed97c1f28761b37f1306264533426e","REVERSE_IF_ELSE","3","1","1","[NetworkLesson completed (String, String)]","1"
"17","WebGoat/chrome-dev-tools","f11c003c31ed97c1f28761b37f1306264533426e","1b2060356582e2290c336a309caef87fef219398","SWITCH_STRING_EQUAL","15","1","1","[NetworkDummy completed (String)]","2"
"0","WebGoat/cia","1b2060356582e2290c336a309caef87fef219398","ed6b52e5f19d48325a52e45209e5e9de9acfbc3c","SWITCH_STRING_EQUAL","15","1","2","[CIAQuiz getResults (), CIAQuiz completed (String[], String[], String[], String[])]","2"
"3","WebGoat/cia","ed6b52e5f19d48325a52e45209e5e9de9acfbc3c","eefe41642e464ceeb61c0eb9836ec54a312e119e","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[CIAQuiz completed (String[], String[], String[], String[])]","1"
"5","WebGoat/cia","eefe41642e464ceeb61c0eb9836ec54a312e119e","df1eaab5c16f4e5c126fd13135ef9dd30bf9dd80","REVERSE_IF_ELSE","3","1","1","[CIAQuiz completed (String[], String[], String[], String[])]","1"
"18","WebGoat/cia","df1eaab5c16f4e5c126fd13135ef9dd30bf9dd80","fdb1bed2f9ed65e8dec6c578991c4fb37f5199fd","SWITCH_EQUAL_SIDES","14","1","1","[CIAQuiz completed (String[], String[], String[], String[])]","1"
"19","WebGoat/cia","fdb1bed2f9ed65e8dec6c578991c4fb37f5199fd","baf16a6f62b17b047e0b6984b8f40eef2f319f18","LOCAL_VAR_RENAMING","0","1","1","[CIAQuiz completed (String[], String[], String[], String[])]","1"
"26","WebGoat/cia","baf16a6f62b17b047e0b6984b8f40eef2f319f18","7149e86659dfe999ddb997502d578624af0256dd","REVERSE_IF_ELSE","3","1","1","[CIAQuiz completed (String[], String[], String[], String[])]","1"
"29","WebGoat/cia","7149e86659dfe999ddb997502d578624af0256dd","fd39b410bc21c759f6d30b5dee8e48c9b8e012fb","REVERSE_IF_ELSE","3","1","1","[CIAQuiz completed (String[], String[], String[], String[])]","1"
"0","WebGoat/client-side-filtering","fd39b410bc21c759f6d30b5dee8e48c9b8e012fb","a6d4eca4703c3773bba6c1ccc5ef9b951a87144c","SWITCH_STRING_EQUAL","15","1","3","[ClientSideFilteringAssignment completed (String), Salaries copyFiles (), Salaries invoke ()]","6"
"3","WebGoat/client-side-filtering","a6d4eca4703c3773bba6c1ccc5ef9b951a87144c","97342b4f6e39c758523379feb96be1553c1b3eb7","LOCAL_VAR_RENAMING","0","1","1","[ClientSideFilteringAssignment completed (String)]","2"
"10","WebGoat/client-side-filtering","97342b4f6e39c758523379feb96be1553c1b3eb7","e55c9282c76d5ffe4b6aab8c752dd08599a7887a","SWITCH_STRING_EQUAL","15","1","1","[ClientSideFilteringAssignment completed (String)]","2"
"12","WebGoat/client-side-filtering","e55c9282c76d5ffe4b6aab8c752dd08599a7887a","8e6df5fbdee50b9ceb43e0ac52a1f660e90df468","LOCAL_VAR_RENAMING","0","1","1","[ClientSideFilteringAssignment completed (String)]","2"
"17","WebGoat/client-side-filtering","8e6df5fbdee50b9ceb43e0ac52a1f660e90df468","593caf1eb275428fe01018ed6627b9bfd659cc92","INFIX_EXPRESSION_DIVIDING","8","1","1","[ClientSideFilteringAssignment completed (String)]","2"
"26","WebGoat/client-side-filtering","593caf1eb275428fe01018ed6627b9bfd659cc92","6e845e64233ea00006da2ad49f6d1cadc26a59dd","LOCAL_VAR_RENAMING","0","1","1","[ClientSideFilteringAssignment completed (String)]","2"
"27","WebGoat/client-side-filtering","6e845e64233ea00006da2ad49f6d1cadc26a59dd","ee40d3fc4f1b6b194045964e68c0fc3d664e62a9","SWITCH_STRING_EQUAL","15","1","1","[ClientSideFilteringAssignment completed (String)]","2"
"28","WebGoat/client-side-filtering","ee40d3fc4f1b6b194045964e68c0fc3d664e62a9","6c9204337a49985af65369a5825aa2e7e1d223d6","LOCAL_VAR_RENAMING","0","1","1","[ClientSideFilteringAssignment completed (String)]","2"
"0","WebGoat/command-injection","6c9204337a49985af65369a5825aa2e7e1d223d6","452a025ecd8302e8a764df7aec2516783a912807","VAR_DECLARATION_DIVIDING","13","1","1","[HttpBasicsInterceptRequest completed (HttpServletRequest)]","1"
"8","WebGoat/command-injection","452a025ecd8302e8a764df7aec2516783a912807","70d4264ff3c1b883eb83995851e1dcd0d56954bf","REVERSE_IF_ELSE","3","1","1","[HttpBasicsInterceptRequest completed (HttpServletRequest)]","1"
"24","WebGoat/command-injection","70d4264ff3c1b883eb83995851e1dcd0d56954bf","6ce9a361a2994572fbbdd2c2e30745b569fb3c7d","REVERSE_IF_ELSE","3","1","1","[HttpBasicsInterceptRequest completed (HttpServletRequest)]","1"
"0","WebGoat/cross-site-scripting","6ce9a361a2994572fbbdd2c2e30745b569fb3c7d","b8838960d11b060854dcd4502c12dd036cb2f4ea","INFIX_EXPRESSION_DIVIDING","8","1","1","[DOMCrossSiteScriptingVerifier completed (String)]","1"
"2","WebGoat/cross-site-scripting","b8838960d11b060854dcd4502c12dd036cb2f4ea","efb4753e8178434e0cc847d068a7934ebfd928c5","LOCAL_VAR_RENAMING","0","1","1","[CrossSiteScriptingLesson3 completed (String)]","2"
"4","WebGoat/cross-site-scripting","efb4753e8178434e0cc847d068a7934ebfd928c5","4e9cdfd2855205a73a9587ad2f30e2ddabb3e236","REVERSE_IF_ELSE","3","1","1","[CrossSiteScriptingLesson3 completed (String)]","2"
"5","WebGoat/cross-site-scripting","4e9cdfd2855205a73a9587ad2f30e2ddabb3e236","dcffd706fc87e34aa5b602dfd22afaff8e8864d1","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[CrossSiteScriptingLesson3 completed (String)]","2"
"8","WebGoat/cross-site-scripting","dcffd706fc87e34aa5b602dfd22afaff8e8864d1","499389a7ad212c158de132fb24b8f013eb9c1fca","SWITCH_STRING_EQUAL","15","1","1","[CrossSiteScriptingLesson3 completed (String)]","2"
"10","WebGoat/cross-site-scripting","499389a7ad212c158de132fb24b8f013eb9c1fca","c351c3d2b4be6914272e8c13c6967178786b69ec","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[CrossSiteScriptingLesson3 completed (String)]","2"
"12","WebGoat/cross-site-scripting","c351c3d2b4be6914272e8c13c6967178786b69ec","14fed2a668bf5cefb8a0d720ef7edd34c4a82d0c","SWITCH_STRING_EQUAL","15","1","1","[CrossSiteScriptingLesson3 completed (String)]","2"
"16","WebGoat/cross-site-scripting","14fed2a668bf5cefb8a0d720ef7edd34c4a82d0c","1433b6c3521d33e6cacdc7bd416cc485b63f0e06","INFIX_EXPRESSION_DIVIDING","8","1","1","[CrossSiteScriptingLesson3 completed (String)]","2"
"23","WebGoat/cross-site-scripting","1433b6c3521d33e6cacdc7bd416cc485b63f0e06","ca94e308277be63d10f7e584d78bb7408741c90b","SWITCH_STRING_EQUAL","15","1","1","[CrossSiteScriptingLesson3 completed (String)]","2"
"28","WebGoat/cross-site-scripting","ca94e308277be63d10f7e584d78bb7408741c90b","7c580037c9dcc666c025edee7d6fb4df2e7b84a9","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[CrossSiteScriptingLesson3 completed (String)]","2"
"29","WebGoat/cross-site-scripting","7c580037c9dcc666c025edee7d6fb4df2e7b84a9","e70048666877a8e96c7b0f0d7dc495154ff316df","SWITCH_STRING_EQUAL","15","1","1","[CrossSiteScriptingLesson3 completed (String)]","2"
"0","WebGoat/crypto","e70048666877a8e96c7b0f0d7dc495154ff316df","b2a5289c15576c059cf9b40c28c5070ad38176f6","STATEMENTS_ORDER_REARRANGEMENT","10","1","5","[HashingAssignment getHash (String, String), HashingAssignment getMd5 (HttpServletRequest), HashingAssignment getSha256 (HttpServletRequest), XOREncodingAssignment completed (String), HashingAssignment completed (HttpServletRequest, String, String)]","10"
"13","WebGoat/crypto","b2a5289c15576c059cf9b40c28c5070ad38176f6","320a6b7aa0814c525d830b6a49d800fe57342e6e","SWITCH_STRING_EQUAL","15","1","1","[XOREncodingAssignment completed (String)]","2"
"14","WebGoat/crypto","320a6b7aa0814c525d830b6a49d800fe57342e6e","75a1fd663d6f5125c9bd11ebd1923064eb8fd29b","INFIX_EXPRESSION_DIVIDING","8","1","1","[XOREncodingAssignment completed (String)]","2"
"17","WebGoat/crypto","75a1fd663d6f5125c9bd11ebd1923064eb8fd29b","c4c23375449c0a2cc00d90184c1afa3f5daef001","INFIX_EXPRESSION_DIVIDING","8","1","1","[XOREncodingAssignment completed (String)]","2"
"18","WebGoat/crypto","c4c23375449c0a2cc00d90184c1afa3f5daef001","7f1b59c231c08ee09625bf37b7299be1eb82e262","VAR_DECLARATION_MERGING","12","1","1","[XOREncodingAssignment completed (String)]","2"
"21","WebGoat/crypto","7f1b59c231c08ee09625bf37b7299be1eb82e262","ad3ddbfe87d2aab9bbb8855214ec7bfd30dca853","SWITCH_STRING_EQUAL","15","1","1","[XOREncodingAssignment completed (String)]","2"
"23","WebGoat/crypto","ad3ddbfe87d2aab9bbb8855214ec7bfd30dca853","43a2f8a893e8390e9a6e3b39590a964e40fe64b0","LOCAL_VAR_RENAMING","0","1","1","[XOREncodingAssignment completed (String)]","2"
"24","WebGoat/crypto","43a2f8a893e8390e9a6e3b39590a964e40fe64b0","39de953f445fb45846e3fbf16ec4c69054ecc135","SWITCH_STRING_EQUAL","15","1","1","[XOREncodingAssignment completed (String)]","2"
"28","WebGoat/crypto","39de953f445fb45846e3fbf16ec4c69054ecc135","2a7892e8df7f6a9038b41fa6c531fb074e54c284","VAR_DECLARATION_DIVIDING","13","1","1","[XOREncodingAssignment completed (String)]","2"
"0","WebGoat/csrf","2a7892e8df7f6a9038b41fa6c531fb074e54c284","a154c87055c8093a425e8ee38abc4c1f9ae8b5e4","PP_TO_ADD_ASSIGNMENT","6","1","2","[ForgedReviews createNewReview (String, Integer, String, HttpServletRequest), ForgedReviews retrieveReviews ()]","2"
"1","WebGoat/csrf","a154c87055c8093a425e8ee38abc4c1f9ae8b5e4","449f8b3475b44623e241d19005aaaed1b8b05b81","SWITCH_EQUAL_SIDES","14","1","1","[CSRFGetFlag invoke (HttpServletRequest)]","2"
"2","WebGoat/csrf","449f8b3475b44623e241d19005aaaed1b8b05b81","e807e1b6bc3e712bd1e43d282a30cd540925c0d2","SWITCH_EQUAL_SIDES","14","1","1","[CSRFGetFlag invoke (HttpServletRequest)]","2"
"4","WebGoat/csrf","e807e1b6bc3e712bd1e43d282a30cd540925c0d2","a68424f2602bbcbece2f625aa67cd643a2229bad","LOCAL_VAR_RENAMING","0","1","1","[CSRFConfirmFlag1 completed (String)]","3"
"5","WebGoat/csrf","a68424f2602bbcbece2f625aa67cd643a2229bad","d999f092efe4715bc5eb7c40bbb5c671af3f8f0d","REVERSE_IF_ELSE","3","1","1","[CSRFConfirmFlag1 completed (String)]","3"
"6","WebGoat/csrf","d999f092efe4715bc5eb7c40bbb5c671af3f8f0d","329f0b462aea65465d736fe3cd36d79b59d637c7","LOCAL_VAR_RENAMING","0","1","1","[CSRFConfirmFlag1 completed (String)]","3"
"8","WebGoat/csrf","329f0b462aea65465d736fe3cd36d79b59d637c7","5ba652f78074ef1b95de59fd95dc759af088caab","LOCAL_VAR_RENAMING","0","1","1","[CSRFConfirmFlag1 completed (String)]","3"
"9","WebGoat/csrf","5ba652f78074ef1b95de59fd95dc759af088caab","6433050434ed43f1e2f13535eadb562681c4fa60","LOCAL_VAR_RENAMING","0","1","1","[CSRFConfirmFlag1 completed (String)]","3"
"18","WebGoat/csrf","6433050434ed43f1e2f13535eadb562681c4fa60","7cd5b24c1dd4fc0f83b45cb5eb92be560e5d18af","REVERSE_IF_ELSE","3","1","1","[CSRFConfirmFlag1 completed (String)]","3"
"0","WebGoat/html-tampering","7cd5b24c1dd4fc0f83b45cb5eb92be560e5d18af","d6582982e06261e969721ec61754894c01e7b30f","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[HtmlTamperingTask completed (String, String)]","1"
"2","WebGoat/html-tampering","d6582982e06261e969721ec61754894c01e7b30f","73e6448ba23ab992f746523fffa8d0d9969196ee","INFIX_EXPRESSION_DIVIDING","8","1","1","[HtmlTamperingTask completed (String, String)]","1"
"3","WebGoat/html-tampering","73e6448ba23ab992f746523fffa8d0d9969196ee","44376300d6f53210b1b5f00252dd891bc2d8e68c","REVERSE_IF_ELSE","3","1","1","[HtmlTamperingTask completed (String, String)]","1"
"10","WebGoat/html-tampering","44376300d6f53210b1b5f00252dd891bc2d8e68c","9f8f9c47fe69686b51c649c2e88dfa5aa13adb24","LOCAL_VAR_RENAMING","0","1","1","[HtmlTamperingTask completed (String, String)]","1"
"18","WebGoat/html-tampering","9f8f9c47fe69686b51c649c2e88dfa5aa13adb24","f106d59804e296ab47356d6b4915a3198c79d8be","REVERSE_IF_ELSE","3","1","1","[HtmlTamperingTask completed (String, String)]","1"
"19","WebGoat/html-tampering","f106d59804e296ab47356d6b4915a3198c79d8be","7ca90aac164b6dbbeba9a60d500d3dc57e920a17","REVERSE_IF_ELSE","3","1","1","[HtmlTamperingTask completed (String, String)]","1"
"21","WebGoat/html-tampering","7ca90aac164b6dbbeba9a60d500d3dc57e920a17","e723e3632ccb10725687fa1fe6a897664f563a6b","LOCAL_VAR_RENAMING","0","1","1","[HtmlTamperingTask completed (String, String)]","1"
"0","WebGoat/http-basics","e723e3632ccb10725687fa1fe6a897664f563a6b","57c514dad7662eccb3ff1dff43bd31b2a3bf8491","VAR_DECLARATION_DIVIDING","13","1","1","[HttpBasicsQuiz completed (String, String, String)]","1"
"1","WebGoat/http-basics","57c514dad7662eccb3ff1dff43bd31b2a3bf8491","ba7928f65a67fbdb2c9e7960a0874314353e11dd","INFIX_EXPRESSION_DIVIDING","8","1","1","[HttpBasicsQuiz completed (String, String, String)]","1"
"3","WebGoat/http-basics","ba7928f65a67fbdb2c9e7960a0874314353e11dd","58fa00d98bd401ac4142f1327679f3400efe26da","LOCAL_VAR_RENAMING","0","1","1","[HttpBasicsLesson completed (String)]","2"
"7","WebGoat/http-basics","58fa00d98bd401ac4142f1327679f3400efe26da","67be5a2cf8d81e5ad9083d49ff006fc2d296cb56","LOCAL_VAR_RENAMING","0","1","1","[HttpBasicsLesson completed (String)]","2"
"12","WebGoat/http-basics","67be5a2cf8d81e5ad9083d49ff006fc2d296cb56","a54ed99dd68086b7d6dda805ffb7ec00bc3a6a65","REVERSE_IF_ELSE","3","1","1","[HttpBasicsLesson completed (String)]","2"
"13","WebGoat/http-basics","a54ed99dd68086b7d6dda805ffb7ec00bc3a6a65","26971b97eb76cb673f3dbb8c4343b8359a2f5e9e","LOCAL_VAR_RENAMING","0","1","1","[HttpBasicsLesson completed (String)]","2"
"17","WebGoat/http-basics","26971b97eb76cb673f3dbb8c4343b8359a2f5e9e","cb1a84f2e619d2b6c2a5168e2d8d1282dd5443c5","REVERSE_IF_ELSE","3","1","1","[HttpBasicsLesson completed (String)]","2"
"25","WebGoat/http-basics","cb1a84f2e619d2b6c2a5168e2d8d1282dd5443c5","dee16f224ce57209a986c10907ddf5947016c613","LOCAL_VAR_RENAMING","0","1","1","[HttpBasicsLesson completed (String)]","2"
"27","WebGoat/http-basics","dee16f224ce57209a986c10907ddf5947016c613","cc53bfcae0d54769dc8fd4d5b1f994cf3ca3df4f","REVERSE_IF_ELSE","3","1","1","[HttpBasicsLesson completed (String)]","2"
"28","WebGoat/http-basics","cc53bfcae0d54769dc8fd4d5b1f994cf3ca3df4f","9c362114bc7883f92bf47e9861a02fa9a4c3b7e2","SWITCH_STRING_EQUAL","15","1","1","[HttpBasicsLesson completed (String)]","2"
"0","WebGoat/http-proxies","9c362114bc7883f92bf47e9861a02fa9a4c3b7e2","a74f3042f0fcc13d5a20a86dd4eb8e5afb87901d","REVERSE_IF_ELSE","3","1","1","[HttpBasicsInterceptRequest completed (Boolean, String, HttpServletRequest)]","1"
"2","WebGoat/http-proxies","a74f3042f0fcc13d5a20a86dd4eb8e5afb87901d","68b239d59c70ed9380a70d958fcd256478a38101","REVERSE_IF_ELSE","3","1","1","[HttpBasicsInterceptRequest completed (Boolean, String, HttpServletRequest)]","1"
"15","WebGoat/http-proxies","68b239d59c70ed9380a70d958fcd256478a38101","ed0202112298c976f5491c0ec5b2daad2ec36794","LOCAL_VAR_RENAMING","0","1","1","[HttpBasicsInterceptRequest completed (Boolean, String, HttpServletRequest)]","1"
"19","WebGoat/http-proxies","ed0202112298c976f5491c0ec5b2daad2ec36794","cc17570f70433ab22394cd9a5e2db3585f0647a7","INFIX_EXPRESSION_DIVIDING","8","1","1","[HttpBasicsInterceptRequest completed (Boolean, String, HttpServletRequest)]","1"
"20","WebGoat/http-proxies","cc17570f70433ab22394cd9a5e2db3585f0647a7","b09cff02e047a0a57d391f5c8991fc3c4c4300b5","INFIX_EXPRESSION_DIVIDING","8","1","1","[HttpBasicsInterceptRequest completed (Boolean, String, HttpServletRequest)]","1"
"23","WebGoat/http-proxies","b09cff02e047a0a57d391f5c8991fc3c4c4300b5","2792ad3a0f91299c19e2f07a5fd1e3cf616c8df4","INFIX_EXPRESSION_DIVIDING","8","1","1","[HttpBasicsInterceptRequest completed (Boolean, String, HttpServletRequest)]","1"
"29","WebGoat/http-proxies","2792ad3a0f91299c19e2f07a5fd1e3cf616c8df4","2e321b78e1602132e2f7b803037901e3c2facb95","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[HttpBasicsInterceptRequest completed (Boolean, String, HttpServletRequest)]","1"
"0","WebGoat/idor","2e321b78e1602132e2f7b803037901e3c2facb95","e2b2dd4174e71dece7806dad80a97190612fecb3","SWITCH_STRING_EQUAL","15","1","3","[IDORLogin initIDORInfo (), IDORViewOwnProfile invoke (), IDORLogin completed (String, String)]","6"
"5","WebGoat/idor","e2b2dd4174e71dece7806dad80a97190612fecb3","cfd7f55058e6bb08be378168d94fc2d7d83e8e60","INFIX_EXPRESSION_DIVIDING","8","1","1","[IDORLogin completed (String, String)]","2"
"6","WebGoat/idor","cfd7f55058e6bb08be378168d94fc2d7d83e8e60","b8046cac316b72da95b9f5a2c517aa2a66ab53ab","INFIX_EXPRESSION_DIVIDING","8","1","1","[IDORLogin completed (String, String)]","2"
"8","WebGoat/idor","b8046cac316b72da95b9f5a2c517aa2a66ab53ab","b3a742244b67d597397f7ca640341f1a4659a9ba","REVERSE_IF_ELSE","3","1","1","[IDORLogin completed (String, String)]","2"
"9","WebGoat/idor","b3a742244b67d597397f7ca640341f1a4659a9ba","6e3a9fc7acbaa5682976df1e1d1feac4e59bcb14","REVERSE_IF_ELSE","3","1","1","[IDORLogin completed (String, String)]","2"
"11","WebGoat/idor","6e3a9fc7acbaa5682976df1e1d1feac4e59bcb14","8a2236bca3ef61ce2050e3c5882c2436a6536911","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[IDORLogin completed (String, String)]","2"
"17","WebGoat/idor","8a2236bca3ef61ce2050e3c5882c2436a6536911","562304d7e44b4193ac02dd1514a73fc928bb3c36","LOCAL_VAR_RENAMING","0","1","1","[IDORLogin completed (String, String)]","2"
"23","WebGoat/idor","562304d7e44b4193ac02dd1514a73fc928bb3c36","b3fbf668e13903cfde72979c02902e8746d3ff17","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[IDORLogin completed (String, String)]","2"
"25","WebGoat/idor","b3fbf668e13903cfde72979c02902e8746d3ff17","bc2152ce69904df3703d7340d6503419eb65bb73","REVERSE_IF_ELSE","3","1","1","[IDORLogin completed (String, String)]","2"
"29","WebGoat/idor","bc2152ce69904df3703d7340d6503419eb65bb73","217bf9bc0607f5a090466a6dcc05a41565498aad","VAR_DECLARATION_MERGING","12","1","1","[IDORLogin completed (String, String)]","2"
"0","WebGoat/insecure-deserialization","217bf9bc0607f5a090466a6dcc05a41565498aad","da95875ff43c57b70e548e4fb169c6db7cfa3518","LOOP_IF_CONTINUE_TO_ELSE","11","1","2","[VulnerableTaskHolder VulnerableTaskHolder (String, String), VulnerableTaskHolder readObject (ObjectInputStream)]","2"
"2","WebGoat/insecure-deserialization","da95875ff43c57b70e548e4fb169c6db7cfa3518","6bd54a215a960ebe243c471f782dc703c219aa1d","FOR_TO_WHILE","1","1","4","[SerializationHelper toString (Serializable), SerializationHelper bytesToHex (byte[]), SerializationHelper fromString (String), SerializationHelper show ()]","8"
"19","WebGoat/insecure-deserialization","6bd54a215a960ebe243c471f782dc703c219aa1d","02e6d97e4ac91909332bd61c1e918a6ddfb9333c","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[InsecureDeserializationTask completed (String)]","3"
"0","WebGoat/insecure-login","02e6d97e4ac91909332bd61c1e918a6ddfb9333c","a29da83ed3b30872dc7aef99229374316e90ffa0","PRE_POST_FIX_EXPRESSION_DIVIDING","16","1","1","[InsecureLoginTask completed (String, String)]","1"
"1","WebGoat/insecure-login","a29da83ed3b30872dc7aef99229374316e90ffa0","fc9be0e869dfeec733ad5b516a0bd24a8835125e","SWITCH_STRING_EQUAL","15","1","1","[InsecureLoginTask completed (String, String)]","1"
"2","WebGoat/insecure-login","fc9be0e869dfeec733ad5b516a0bd24a8835125e","8cc439d2b6a5e65afd865ff21473e7d9653c17ae","SWITCH_STRING_EQUAL","15","1","1","[InsecureLoginTask completed (String, String)]","1"
"7","WebGoat/insecure-login","8cc439d2b6a5e65afd865ff21473e7d9653c17ae","3602da0f030e1d96a78a76ad980e1452e1b71b5b","SWITCH_STRING_EQUAL","15","1","1","[InsecureLoginTask completed (String, String)]","1"
"18","WebGoat/insecure-login","3602da0f030e1d96a78a76ad980e1452e1b71b5b","da1a61fe6f52384aa52ee7e294601033992a06bf","REVERSE_IF_ELSE","3","1","1","[InsecureLoginTask completed (String, String)]","1"
"0","WebGoat/jwt","da1a61fe6f52384aa52ee7e294601033992a06bf","843881096807d28dc12a81f2d83329cf2ef03799","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","11","[JWTFinalEndpoint encode (String, String, String), JWTRefreshEndpoint checkout (String), JWTFinalEndpoint decode (String), JWTFinalEndpoint follow (String), JWTFinalEndpoint resolveSigningKeyBytes (JwsHeader, Claims), JWTRefreshEndpoint follow (Map<String,Object>), JWTFinalEndpoint resetVotes (String), JWTFinalEndpoint getJWTSignature (String, String, String, String), JWTRefreshEndpoint createNewTokens (String), JWTRefreshEndpoint newToken (String, Map<String,Object>), JWTFinalEndpoint JWTFinalEndpoint (DataSource)]","22"
"2","WebGoat/jwt","843881096807d28dc12a81f2d83329cf2ef03799","86d4517a7da4990c3acfdd25939bfe391b983ecc","REVERSE_IF_ELSE","3","1","1","[JWTRefreshEndpoint newToken (String, Map<String,Object>)]","2"
"4","WebGoat/jwt","86d4517a7da4990c3acfdd25939bfe391b983ecc","268a510e47d6079cc7a08e756d96462ede16f97f","SWITCH_EQUAL_SIDES","14","1","3","[JWTRefreshEndpoint checkout (String), JWTRefreshEndpoint follow (Map<String,Object>), JWTRefreshEndpoint newToken (String, Map<String,Object>)]","6"
"5","WebGoat/jwt","268a510e47d6079cc7a08e756d96462ede16f97f","edbd4a4fc6781a85464c9c1f92304e980c2af903","SWITCH_STRING_EQUAL","15","1","1","[JWTRefreshEndpoint checkout (String)]","2"
"7","WebGoat/jwt","edbd4a4fc6781a85464c9c1f92304e980c2af903","a20ca45b0985c554d20e379e11fb53f5e3818f2c","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JWTRefreshEndpoint newToken (String, Map<String,Object>)]","2"
"11","WebGoat/jwt","a20ca45b0985c554d20e379e11fb53f5e3818f2c","b0e9800b32877746006f9e2f9fcbfa687dbe9ab7","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JWTRefreshEndpoint newToken (String, Map<String,Object>)]","2"
"17","WebGoat/jwt","b0e9800b32877746006f9e2f9fcbfa687dbe9ab7","58e043955308b35ad6c06c37a9db98548a81d6d4","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JWTRefreshEndpoint newToken (String, Map<String,Object>)]","2"
"18","WebGoat/jwt","58e043955308b35ad6c06c37a9db98548a81d6d4","9efeaebac9e2a584ee61c586bc8693cec4c04c9a","REVERSE_IF_ELSE","3","1","3","[JWTRefreshEndpoint checkout (String), JWTRefreshEndpoint follow (Map<String,Object>), JWTRefreshEndpoint newToken (String, Map<String,Object>)]","6"
"23","WebGoat/jwt","9efeaebac9e2a584ee61c586bc8693cec4c04c9a","097c6232ac1574f5c87d9e72f8e114b5d6bea645","INFIX_EXPRESSION_DIVIDING","8","1","1","[JWTRefreshEndpoint checkout (String)]","2"
"24","WebGoat/jwt","097c6232ac1574f5c87d9e72f8e114b5d6bea645","8e7f756b8dac84b7dfa3119130290cc67cb64715","VAR_DECLARATION_MERGING","12","1","2","[JWTRefreshEndpoint follow (Map<String,Object>), JWTRefreshEndpoint newToken (String, Map<String,Object>)]","4"
"26","WebGoat/jwt","8e7f756b8dac84b7dfa3119130290cc67cb64715","389f241a434896f140f88f00bb3ede9d0414a8f5","LOCAL_VAR_RENAMING","0","1","2","[JWTRefreshEndpoint checkout (String), JWTRefreshEndpoint createNewTokens (String)]","4"
"27","WebGoat/jwt","389f241a434896f140f88f00bb3ede9d0414a8f5","b9d90d993ad905cb8447ac712b22b12383b61de6","REVERSE_IF_ELSE","3","1","1","[JWTRefreshEndpoint newToken (String, Map<String,Object>)]","2"
"28","WebGoat/jwt","b9d90d993ad905cb8447ac712b22b12383b61de6","f1b1537100e126780301029b5b890045352e2d14","SWITCH_EQUAL_SIDES","14","1","2","[JWTRefreshEndpoint checkout (String), JWTRefreshEndpoint newToken (String, Map<String,Object>)]","4"
"0","WebGoat/missing-function-ac","f1b1537100e126780301029b5b890045352e2d14","4bade78851a625dbd59f7c9b5f2851bd47b78d69","INFIX_EXPRESSION_DIVIDING","8","1","2","[Users getUsers (), Users Users (UserSessionData, DataSource)]","2"
"2","WebGoat/missing-function-ac","4bade78851a625dbd59f7c9b5f2851bd47b78d69","d0e6e60fc4748a224b9f4cf475c86e15fcfaa351","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","5","[DisplayUser isAdmin (), DisplayUser DisplayUser (WebGoatUser), DisplayUser getUsername (), DisplayUser genUserHash (String, String), DisplayUser getUserHash ()]","10"
"3","WebGoat/missing-function-ac","d0e6e60fc4748a224b9f4cf475c86e15fcfaa351","f5a71a4f75650f8ee77e7e53e738f062f64150c6","LOCAL_VAR_RENAMING","0","1","3","[DisplayUser isAdmin (), DisplayUser DisplayUser (WebGoatUser), DisplayUser genUserHash (String, String)]","6"
"5","WebGoat/missing-function-ac","f5a71a4f75650f8ee77e7e53e738f062f64150c6","a0429505a2e0801b7028855873f42fe9a2a15a7b","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DisplayUser DisplayUser (WebGoatUser)]","2"
"6","WebGoat/missing-function-ac","a0429505a2e0801b7028855873f42fe9a2a15a7b","a961184f11ee9a6db87de2ca0d43397118769f8a","LOCAL_VAR_RENAMING","0","1","2","[DisplayUser DisplayUser (WebGoatUser), DisplayUser getUserHash ()]","4"
"0","WebGoat/password-reset","a961184f11ee9a6db87de2ca0d43397118769f8a","e2351ad994149ddb0cd2caa93bd02984333cdfd4","INFIX_EXPRESSION_DIVIDING","8","1","6","[QuestionsAssignment passwordReset (Map<String,Object>), ResetLinkAssignmentForgotPassword sendPasswordResetLink (String, HttpServletRequest), SecurityQuestionAssignment completed (String), ResetLinkAssignmentForgotPassword ResetLinkAssignmentForgotPassword (RestTemplate, String), ResetLinkAssignmentForgotPassword sendMailToUser (String, String, String), ResetLinkAssignmentForgotPassword fakeClickingLinkEmail (String, String)]","18"
"3","WebGoat/password-reset","e2351ad994149ddb0cd2caa93bd02984333cdfd4","638b43ab4899e4ecb4ac4d3d606b3380e80f7ce5","LOCAL_VAR_RENAMING","0","1","5","[ResetLinkAssignment illegalCall (), ResetLinkAssignment checkIfLinkIsFromTom (String), ResetLinkAssignment resetPassword (String, Model), ResetLinkAssignment login (String, String), ResetLinkAssignment changePassword (PasswordChangeForm, BindingResult)]","20"
"7","WebGoat/password-reset","638b43ab4899e4ecb4ac4d3d606b3380e80f7ce5","5311544abbcf272696d085b3ae62d20958eb8a19","SWITCH_STRING_EQUAL","15","1","2","[ResetLinkAssignment checkIfLinkIsFromTom (String), ResetLinkAssignment login (String, String)]","8"
"9","WebGoat/password-reset","5311544abbcf272696d085b3ae62d20958eb8a19","3fa3ea0b416eeec5a577d850d17d0f5f0facaf89","LOCAL_VAR_RENAMING","0","1","2","[ResetLinkAssignment resetPassword (String, Model), ResetLinkAssignment changePassword (PasswordChangeForm, BindingResult)]","8"
"10","WebGoat/password-reset","3fa3ea0b416eeec5a577d850d17d0f5f0facaf89","5b022f1ca74dd602a52ca7f9291ab4d0ade11ecc","INFIX_EXPRESSION_DIVIDING","8","1","2","[ResetLinkAssignment checkIfLinkIsFromTom (String), ResetLinkAssignment login (String, String)]","8"
"0","WebGoat/path-traversal","5b022f1ca74dd602a52ca7f9291ab4d0ade11ecc","efc601b5ff797b0a3484ecd6b2d3feecfa25afba","WHILE_TO_FOR","2","1","8","[ProfileUploadBase solvedIt (File), ProfileUploadBase attemptWasMade (File, File), ProfileUpload getProfilePicture (), ProfileUploadBase execute (MultipartFile, String), ProfileUpload ProfileUpload (String, WebSession), ProfileUpload uploadFileHandler (MultipartFile, String), ProfileUploadBase getProfilePicture (), ProfileUploadBase defaultImage ()]","16"
"5","WebGoat/path-traversal","efc601b5ff797b0a3484ecd6b2d3feecfa25afba","acce17c87305955ce8e56d581db3a36f31eaec85","SWITCH_EQUAL_SIDES","14","1","4","[ProfileUploadRetrieval ProfileUploadRetrieval (String), ProfileUploadRetrieval getProfilePicture (HttpServletRequest), ProfileUploadRetrieval initAssignment (), ProfileUploadRetrieval execute (String)]","12"
"15","WebGoat/path-traversal","acce17c87305955ce8e56d581db3a36f31eaec85","f7961c6ccbb332c09dac39a9030f8d09fefd4c0d","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[ProfileUploadRetrieval getProfilePicture (HttpServletRequest)]","3"
"18","WebGoat/path-traversal","f7961c6ccbb332c09dac39a9030f8d09fefd4c0d","861f2dfa711c676b114d5a2ecccc0a3afa6b1d53","SWITCH_EQUAL_SIDES","14","1","1","[ProfileUploadRetrieval getProfilePicture (HttpServletRequest)]","3"
"27","WebGoat/path-traversal","861f2dfa711c676b114d5a2ecccc0a3afa6b1d53","259abd6e2fa5b73d4717fc6812ae10e13d464591","FOR_TO_WHILE","1","1","1","[ProfileUploadRetrieval initAssignment ()]","3"
"29","WebGoat/path-traversal","259abd6e2fa5b73d4717fc6812ae10e13d464591","8deb59a74d485a6e7eb5446533acdca6088babf3","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ProfileUploadRetrieval getProfilePicture (HttpServletRequest)]","3"
"0","WebGoat/secure-passwords","8deb59a74d485a6e7eb5446533acdca6088babf3","55f03c76f1a46fe956535ec92b5cb2456f28adf3","SWITCH_STRING_EQUAL","15","1","2","[SecurePasswordsAssignment calculateTime (long), SecurePasswordsAssignment completed (String)]","2"
"4","WebGoat/secure-passwords","55f03c76f1a46fe956535ec92b5cb2456f28adf3","5b13b3bffa15b12f11e18116c8c0605489a0c77a","REVERSE_IF_ELSE","3","1","1","[SecurePasswordsAssignment completed (String)]","1"
"5","WebGoat/secure-passwords","5b13b3bffa15b12f11e18116c8c0605489a0c77a","89b192e43425f810f1fa1f39426032ff2acb9b72","VAR_DECLARATION_DIVIDING","13","1","1","[SecurePasswordsAssignment calculateTime (long)]","1"
"6","WebGoat/secure-passwords","89b192e43425f810f1fa1f39426032ff2acb9b72","1cd751db5e6e0464d28003cbdf2a77dae9091c37","INFIX_EXPRESSION_DIVIDING","8","1","1","[SecurePasswordsAssignment calculateTime (long)]","1"
"7","WebGoat/secure-passwords","1cd751db5e6e0464d28003cbdf2a77dae9091c37","3137b59ae56d5f04eba43a55598770aff3d2108d","VAR_DECLARATION_MERGING","12","1","1","[SecurePasswordsAssignment calculateTime (long)]","1"
"9","WebGoat/secure-passwords","3137b59ae56d5f04eba43a55598770aff3d2108d","ca29e90e33eab3c0ba56e7c269e4b847c8a9fd67","VAR_DECLARATION_MERGING","12","1","1","[SecurePasswordsAssignment calculateTime (long)]","1"
"11","WebGoat/secure-passwords","ca29e90e33eab3c0ba56e7c269e4b847c8a9fd67","48215e4b4c30ca330253568d0a7f5f3787e9e8bc","REVERSE_IF_ELSE","3","1","1","[SecurePasswordsAssignment completed (String)]","1"
"20","WebGoat/secure-passwords","48215e4b4c30ca330253568d0a7f5f3787e9e8bc","f171cfb481ee4a2eb2a4b500691c8bce1f60b11a","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[SecurePasswordsAssignment calculateTime (long), SecurePasswordsAssignment completed (String)]","2"
"26","WebGoat/secure-passwords","f171cfb481ee4a2eb2a4b500691c8bce1f60b11a","3d6ef79c7b97ef21161902adb02f124be573ed86","VAR_DECLARATION_MERGING","12","1","1","[SecurePasswordsAssignment calculateTime (long)]","1"
"27","WebGoat/secure-passwords","3d6ef79c7b97ef21161902adb02f124be573ed86","a709b8885f7b70c1a04644b5c2a8df4fe068dc02","REVERSE_IF_ELSE","3","1","1","[SecurePasswordsAssignment completed (String)]","1"
"29","WebGoat/secure-passwords","a709b8885f7b70c1a04644b5c2a8df4fe068dc02","d7e96964997fd4ca8cda129e098905989936609f","LOCAL_VAR_RENAMING","0","1","2","[SecurePasswordsAssignment calculateTime (long), SecurePasswordsAssignment completed (String)]","2"
"0","WebGoat/sql-injection","d7e96964997fd4ca8cda129e098905989936609f","eea8fdb503c81db40c86efb51b5fa5fe929c01c9","CASE_TO_IF_ELSE","17","1","10","[SqlInjectionLesson9 checkSalaryRanking (Connection, StringBuffer), SqlInjectionLesson9 injectableQueryIntegrity (String, String), JavaObjectFromString check_text (String, String), SqlInjectionLesson10b completed (String), JavaObjectFromString getCharContent (boolean), SqlInjectionLesson10b compileFromString (String), SqlInjectionLesson9 SqlInjectionLesson9 (DataSource), JavaObjectFromString JavaObjectFromString (String, String), SqlInjectionLesson9 completed (String, String), SqlInjectionLesson10b getJavaFileContentsAsString (String)]","20"
"3","WebGoat/sql-injection","eea8fdb503c81db40c86efb51b5fa5fe929c01c9","771d4e841b4d09f7b90bdb03f58b1c5b4384de5d","REVERSE_IF_ELSE","3","1","4","[SqlInjectionLesson10 tableExists (Connection), SqlInjectionLesson10 SqlInjectionLesson10 (DataSource), SqlInjectionLesson10 injectableQueryAvailability (String), SqlInjectionLesson10 completed (String)]","12"
"9","WebGoat/sql-injection","771d4e841b4d09f7b90bdb03f58b1c5b4384de5d","9e23d765eea0f7f40b0ef3119a0b848a7773570e","REVERSE_IF_ELSE","3","1","1","[SqlInjectionLesson10 tableExists (Connection)]","3"
"10","WebGoat/sql-injection","9e23d765eea0f7f40b0ef3119a0b848a7773570e","a6809e0bc360d7a4d0d1050d96b2a32be429f354","REVERSE_IF_ELSE","3","1","2","[SqlInjectionLesson10 tableExists (Connection), SqlInjectionLesson10 injectableQueryAvailability (String)]","6"
"13","WebGoat/sql-injection","a6809e0bc360d7a4d0d1050d96b2a32be429f354","241af91af0c6e6f52608ae325d3eb995acf8c559","VAR_DECLARATION_DIVIDING","13","1","1","[SqlInjectionLesson10b completed (String)]","3"
"27","WebGoat/sql-injection","241af91af0c6e6f52608ae325d3eb995acf8c559","f5b69f7109fb42a554bd271bbf0160214192969b","REVERSE_IF_ELSE","3","1","2","[SqlInjectionLesson10 tableExists (Connection), SqlInjectionLesson10 injectableQueryAvailability (String)]","6"
"0","WebGoat/ssrf","f5b69f7109fb42a554bd271bbf0160214192969b","8747d047a8e693998308edf52581ede0152fa3d9","PP_TO_ADD_ASSIGNMENT","6","1","2","[SSRFTask1 completed (String), SSRFTask1 stealTheCheese (String)]","2"
"8","WebGoat/ssrf","8747d047a8e693998308edf52581ede0152fa3d9","747e0f66acc682f89a8bb1830afaefa93bd8578a","REVERSE_IF_ELSE","3","1","1","[SSRFTask1 stealTheCheese (String)]","1"
"11","WebGoat/ssrf","747e0f66acc682f89a8bb1830afaefa93bd8578a","3f9d5e1fd99dd12197e310c709395c052f76b477","LOCAL_VAR_RENAMING","0","1","2","[SSRFTask1 completed (String), SSRFTask1 stealTheCheese (String)]","2"
"15","WebGoat/ssrf","3f9d5e1fd99dd12197e310c709395c052f76b477","308558b1cb1d89ae6f365c8b96a5e1403600af81","REVERSE_IF_ELSE","3","1","1","[SSRFTask1 stealTheCheese (String)]","1"
"16","WebGoat/ssrf","308558b1cb1d89ae6f365c8b96a5e1403600af81","d3d3ec99fffd4e5faba76640a40ef73e6c2667dc","REVERSE_IF_ELSE","3","1","1","[SSRFTask1 stealTheCheese (String)]","1"
"27","WebGoat/ssrf","d3d3ec99fffd4e5faba76640a40ef73e6c2667dc","c557e9152c4ec44e28d4738b6d9ba04a81fe2155","REVERSE_IF_ELSE","3","1","1","[SSRFTask1 stealTheCheese (String)]","1"
"0","WebGoat/vulnerable-components","c557e9152c4ec44e28d4738b6d9ba04a81fe2155","d8448273022784d5d204af1d7076b4a7eb2e3957","VAR_DECLARATION_DIVIDING","13","1","1","[VulnerableComponentsLesson completed (String)]","1"
"4","WebGoat/vulnerable-components","d8448273022784d5d204af1d7076b4a7eb2e3957","3a03ffa87cef2c94915249f96d5a64c04b50db75","REVERSE_IF_ELSE","3","1","1","[VulnerableComponentsLesson completed (String)]","1"
"9","WebGoat/vulnerable-components","3a03ffa87cef2c94915249f96d5a64c04b50db75","42d879da09c5406c902444e73caab28f4470a2bc","REVERSE_IF_ELSE","3","1","1","[VulnerableComponentsLesson completed (String)]","1"
"24","WebGoat/vulnerable-components","42d879da09c5406c902444e73caab28f4470a2bc","478e563e958dff5ebfa1943d5ea59d278a47d4c5","REVERSE_IF_ELSE","3","1","1","[VulnerableComponentsLesson completed (String)]","1"
"0","WebGoat/webgoat-lesson-template","478e563e958dff5ebfa1943d5ea59d278a47d4c5","075a8385c1205077d76d454620ac05aa9fe7ac81","CASE_TO_IF_ELSE","17","1","2","[SampleAttack getItemsInBasket (String), SampleAttack completed (String, String)]","2"
"2","WebGoat/webgoat-lesson-template","075a8385c1205077d76d454620ac05aa9fe7ac81","7bfb31948987e4ac35df294c7016f995020bdb62","INFIX_EXPRESSION_DIVIDING","8","1","1","[SampleAttack completed (String, String)]","1"
"3","WebGoat/webgoat-lesson-template","7bfb31948987e4ac35df294c7016f995020bdb62","eb895aa8c147a2a3c1c85e5f61dccca5c16da911","INFIX_EXPRESSION_DIVIDING","8","1","1","[SampleAttack completed (String, String)]","1"
"4","WebGoat/webgoat-lesson-template","eb895aa8c147a2a3c1c85e5f61dccca5c16da911","c8251189ad331e797a6bd7379e02815261c22fbc","REVERSE_IF_ELSE","3","1","1","[SampleAttack completed (String, String)]","1"
"9","WebGoat/webgoat-lesson-template","c8251189ad331e797a6bd7379e02815261c22fbc","4304e981ff39fd3debbf2d2adf97421cd51f4778","REVERSE_IF_ELSE","3","1","1","[SampleAttack completed (String, String)]","1"
"14","WebGoat/webgoat-lesson-template","4304e981ff39fd3debbf2d2adf97421cd51f4778","c96647bfea641ffd8114f90123db18970b773aac","VAR_DECLARATION_MERGING","12","1","1","[SampleAttack completed (String, String)]","1"
"15","WebGoat/webgoat-lesson-template","c96647bfea641ffd8114f90123db18970b773aac","38cd8701ad9d2fccc3ceeae60efcbde3a7e885ff","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SampleAttack completed (String, String)]","1"
"17","WebGoat/webgoat-lesson-template","38cd8701ad9d2fccc3ceeae60efcbde3a7e885ff","9c4cbfb3c0c82814c44020243ad208356fd01ab2","REVERSE_IF_ELSE","3","1","1","[SampleAttack completed (String, String)]","1"
"19","WebGoat/webgoat-lesson-template","9c4cbfb3c0c82814c44020243ad208356fd01ab2","399e26ba83dcc763549bf240ab91211cce50cf10","LOCAL_VAR_RENAMING","0","1","2","[SampleAttack getItemsInBasket (String), SampleAttack completed (String, String)]","2"
"22","WebGoat/webgoat-lesson-template","399e26ba83dcc763549bf240ab91211cce50cf10","633e375fbae0ab9033dd29e54c94f2a54ed35585","INFIX_EXPRESSION_DIVIDING","8","1","1","[SampleAttack completed (String, String)]","1"
"27","WebGoat/webgoat-lesson-template","633e375fbae0ab9033dd29e54c94f2a54ed35585","b974881f161d42a3c7b0345fd62b88d0d33f1b16","REVERSE_IF_ELSE","3","1","1","[SampleAttack completed (String, String)]","1"
"0","WebGoat/webwolf-introduction","b974881f161d42a3c7b0345fd62b88d0d33f1b16","5c2fb5616135dfd585e9ae97de6213eb326c1e53","FOR_TO_WHILE","1","1","3","[MailAssignment completed (String), MailAssignment MailAssignment (RestTemplate, String), MailAssignment sendEmail (String)]","3"
"2","WebGoat/webwolf-introduction","5c2fb5616135dfd585e9ae97de6213eb326c1e53","d139137efc5f6cdab9c3fa348940196556f6e66c","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[MailAssignment MailAssignment (RestTemplate, String)]","1"
"5","WebGoat/webwolf-introduction","d139137efc5f6cdab9c3fa348940196556f6e66c","ce613658efe903f7e58a50f7220d91db956668e7","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[MailAssignment MailAssignment (RestTemplate, String)]","1"
"9","WebGoat/webwolf-introduction","ce613658efe903f7e58a50f7220d91db956668e7","fccf7d23c5b46f92552510af1c1ce78a7b83efe7","REVERSE_IF_ELSE","3","1","1","[MailAssignment completed (String)]","1"
"12","WebGoat/webwolf-introduction","fccf7d23c5b46f92552510af1c1ce78a7b83efe7","d5ec1d916fe09271c4b01a7426d75b6b06832cb1","LOCAL_VAR_RENAMING","0","1","0","[]","0"
"0","WebGoat/xxe","d5ec1d916fe09271c4b01a7426d75b6b06832cb1","94d9c5d110a90368ae4952823f906c23c403bae4","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","1","[CommentsEndpoint retrieveComments ()]","1"
"4","WebGoat/xxe","94d9c5d110a90368ae4952823f906c23c403bae4","0bffd1263f3689a24ab411014033deaad64acf84","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","2","[ContentTypeAssignment createNewUser (String, String), ContentTypeAssignment checkSolution (Comment)]","4"
"8","WebGoat/xxe","0bffd1263f3689a24ab411014033deaad64acf84","5edc997cd479aabc1a5579c443068c03e29e2002","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ContentTypeAssignment checkSolution (Comment)]","2"
"9","WebGoat/xxe","5edc997cd479aabc1a5579c443068c03e29e2002","526a310276bd70361775df4385c511b1d4b2b28c","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ContentTypeAssignment checkSolution (Comment)]","2"
"10","WebGoat/xxe","526a310276bd70361775df4385c511b1d4b2b28c","fa5c76287232c4147c1e76894eb9089244007f46","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[ContentTypeAssignment checkSolution (Comment)]","2"
"13","WebGoat/xxe","fa5c76287232c4147c1e76894eb9089244007f46","187b2f037cf498813c80f5346f853ef09bdd7227","INFIX_EXPRESSION_DIVIDING","8","1","1","[ContentTypeAssignment createNewUser (String, String)]","2"
"16","WebGoat/xxe","187b2f037cf498813c80f5346f853ef09bdd7227","ac1a7f70f13931f4969fc9e0e5651c8660839a8a","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ContentTypeAssignment checkSolution (Comment)]","2"
"27","WebGoat/xxe","ac1a7f70f13931f4969fc9e0e5651c8660839a8a","bb7da011770597d6911ec0ebdd7b02d53de59382","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[ContentTypeAssignment createNewUser (String, String)]","2"
"29","WebGoat/xxe","bb7da011770597d6911ec0ebdd7b02d53de59382","530e16925ffcf15dfe74e18d40c31ce81812b171","LOCAL_VAR_RENAMING","0","1","2","[ContentTypeAssignment createNewUser (String, String), ContentTypeAssignment checkSolution (Comment)]","4"
"0","WebGoat/webgoat-server","530e16925ffcf15dfe74e18d40c31ce81812b171","c742edf21e5ae1b842fe9eace63818bd254812ff","PP_TO_ADD_ASSIGNMENT","6","1","3","[HSQLDBDatabaseConfig hsqlStandalone (String, boolean, boolean, String), HSQLDBDatabaseConfig dataSource (String, String), HSQLDBDatabaseConfig shutdown ()]","3"
"5","WebGoat/webgoat-server","c742edf21e5ae1b842fe9eace63818bd254812ff","c55ada6a360ef31c845a3aa4edccd94bf7e30b13","LOCAL_VAR_RENAMING","0","1","1","[HSQLDBDatabaseConfig hsqlStandalone (String, boolean, boolean, String)]","1"
"17","WebGoat/webgoat-server","c55ada6a360ef31c845a3aa4edccd94bf7e30b13","bd5507b7b168ba9d765891795c4ffa91bc2ceb80","LOCAL_VAR_RENAMING","0","1","1","[HSQLDBDatabaseConfig hsqlStandalone (String, boolean, boolean, String)]","1"
"0","WebGoat/webwolf","bd5507b7b168ba9d765891795c4ffa91bc2ceb80","30c15e3c95cb3c8e1897b620af1fe0db67f3e88b","IF_DIVIDING","9","1","4","[WebWolfTraceRepository add (HttpTrace), WebWolfTraceRepository isInExclusionList (String), WebWolfTraceRepository findAll (), WebWolfTraceRepository findAllTraces ()]","4"
"4","WebGoat/webwolf","30c15e3c95cb3c8e1897b620af1fe0db67f3e88b","2ab91c7276df38f32bfd8eb07eead8b1d9a3e565","STATEMENTS_ORDER_REARRANGEMENT","10","1","4","[Tracert toJsonString (HttpTrace), Tracert path (HttpTrace), Tracert allowedTrace (HttpTrace, UserDetails), Tracert get ()]","8"
"7","WebGoat/webwolf","2ab91c7276df38f32bfd8eb07eead8b1d9a3e565","1d5730e2260f0b6cb4ceb8a46618ed1eaea8c2e5","LOCAL_VAR_RENAMING","0","1","2","[RegistrationController showForm (UserForm), RegistrationController registration (UserForm, BindingResult, HttpServletRequest)]","6"
"15","WebGoat/webwolf","1d5730e2260f0b6cb4ceb8a46618ed1eaea8c2e5","0a1f45c35338375db6823cc2ac0139a45c5e8aa6","LOCAL_VAR_RENAMING","0","1","1","[RegistrationController registration (UserForm, BindingResult, HttpServletRequest)]","3"
"0","RuoYi/ruoyi-admin","0a383753a3b4f54e5ec9cd45d1b5eda1a1493115","634737997cc382d34b7b842d7af83075e6b69381","LOOP_IF_CONTINUE_TO_ELSE","11","1","45","[SysDeptController list (SysDept), DemoDialogController layer (), SysRegisterController ajaxRegister (SysUser), SysDeptController treeDataExcludeChild (Long), SysUserOnlineController list (SysUserOnline), CommonController uploadFiles (List<MultipartFile>), SysDictDataController list (SysDictData), CommonController resourceDownload (String, HttpServletRequest, HttpServletResponse), CacheController clearCacheName (String, ModelMap), CommonController uploadFile (MultipartFile), SysDictDataController add (String, ModelMap), SysDictDataController export (SysDictData), DemoDialogController parent (), SysRegisterController register (), CacheController clearAll (ModelMap), SysDeptController dept (), DemoDialogController dialog (), SysDeptController remove (Long), DemoDialogController check (), DemoDialogController frame2 (), SysDeptController checkDeptNameUnique (SysDept), SysDictDataController remove (String), DemoOperateController importUser (List<UserOperateModel>, Boolean), DemoDialogController table (), SysDeptController edit (Long, ModelMap), SysDictDataController dictData (), CacheController getCacheValue (String, String, String, ModelMap), SysDeptController addSave (SysDept), SysDictDataController editSave (SysDictData), SysDeptController selectDeptTree (Long, Long, ModelMap), RuoYiApplication main (String[]), CacheController cache (ModelMap), DemoDialogController radio (), CacheController getCacheKeys (String, String, ModelMap), CommonController fileDownload (String, Boolean, HttpServletResponse, HttpServletRequest), SysDictDataController edit (Long, ModelMap), DemoDialogController form (), SysDeptController editSave (SysDept), SysUserOnlineController online (), CacheController getCacheNames (String, ModelMap), SysDeptController add (Long, ModelMap), CacheController clearCacheKey (String, String, ModelMap), SysUserOnlineController batchForceLogout (String), DemoDialogController frame1 (), SysDictDataController addSave (SysDictData)]","450"
"3","RuoYi/ruoyi-admin","634737997cc382d34b7b842d7af83075e6b69381","0671a8dcfbad834a3887b5f0adf2b011ededfb13","SWITCH_STRING_EQUAL","15","1","76","[AreaModel AreaModel (int, int, String, String, String, String, Integer), AreaModel setAreaName (String), UserTableModel getStatus (), UserTableModel setUserBalance (double), AreaModel AreaModel (), UserTableColumn UserTableColumn (), UserTableColumn UserTableColumn (String, String), UserTableModel UserTableModel (int, String, String, String, String, String, double, String), UserTableModel setUserId (int), DemoTableController ajaxColumns (UserTableColumn), DemoTableController params (), DemoTableController reorderRows (), DemoTableController print (), AreaModel setIsTreeLeaf (Integer), DemoTableController multi (), AreaModel setParentId (Long), DemoTableController data (ModelMap), DemoTableController dynamicColumns (), DemoTableController other (), DemoTableController editable (), UserTableModel getUserBalance (), DemoTableController exportSelected (UserTableModel, String), DemoTableController headerStyle (), DemoTableController detail (), DemoTableController resizable (), UserTableModel setUserName (String), DemoTableController search (), UserTableModel getCreateTime (), AreaModel getAreaCode (), AreaModel setSimplePy (String), UserTableModel setStatus (String), DemoTableController export (), UserTableModel getUserName (), UserTableModel UserTableModel (), UserTableModel setUserCode (String), DemoTableController event (), DemoTableController footer (), AreaModel getId (), DemoTableController refresh (), AreaModel setPinYin (String), DemoTableController child (), DemoTableController exportSelected (), DemoTableController remember (), UserTableModel getUserSex (), UserTableColumn getTitle (), DemoTableController treeList (AreaModel), AreaModel getAreaName (), UserTableModel getUserId (), UserTableModel getUserPhone (), DemoTableController curd (), UserTableColumn getField (), UserTableModel getUserCode (), DemoTableController asynTree (), DemoTableController groupHeader (), DemoTableController list (UserTableModel), UserTableModel setUserPhone (String), DemoTableController reorderColumns (), AreaModel setId (Long), UserTableColumn setField (String), AreaModel getParentId (), DemoTableController customView (), AreaModel setAreaCode (String), DemoTableController listChild (AreaModel), UserTableModel getUserEmail (), AreaModel getPinYin (), UserTableModel setCreateTime (Date), DemoTableController fixedColumns (), DemoTableController subdata (), UserTableModel setUserSex (String), DemoTableController button (), UserTableColumn setTitle (String), DemoTableController pageGo (), UserTableModel setUserEmail (String), AreaModel getIsTreeLeaf (), DemoTableController image (), AreaModel getSimplePy ()]","836"
"4","RuoYi/ruoyi-admin","0671a8dcfbad834a3887b5f0adf2b011ededfb13","71fece132e7d8bcba6bee3ac9d9e0dc9f64daf24","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","2","[DemoTableController list (UserTableModel), DemoTableController treeList (AreaModel)]","22"
"8","RuoYi/ruoyi-admin","71fece132e7d8bcba6bee3ac9d9e0dc9f64daf24","a9bf8cfee45f3eedfca797e153de07e76ceb7b88","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[UserTableModel UserTableModel (int, String, String, String, String, String, double, String), DemoTableController treeList (AreaModel)]","22"
"10","RuoYi/ruoyi-admin","a9bf8cfee45f3eedfca797e153de07e76ceb7b88","4edc9d2bd3ed9d807b3ce0ea30e3c22b3a4af8a9","REVERSE_IF_ELSE","3","1","2","[DemoTableController listChild (AreaModel), DemoTableController treeList (AreaModel)]","22"
"12","RuoYi/ruoyi-admin","4edc9d2bd3ed9d807b3ce0ea30e3c22b3a4af8a9","0369887ff074b0fab31d5d3cbe43049e937f9f96","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[DemoTableController list (UserTableModel), UserTableModel UserTableModel (int, String, String, String, String, String, double, String)]","22"
"14","RuoYi/ruoyi-admin","0369887ff074b0fab31d5d3cbe43049e937f9f96","bc5fa344ed76915f790a27db96078f8c42a53e3d","LOCAL_VAR_RENAMING","0","1","2","[DemoTableController exportSelected (UserTableModel, String), DemoTableController list (UserTableModel)]","22"
"15","RuoYi/ruoyi-admin","bc5fa344ed76915f790a27db96078f8c42a53e3d","247cfa52d5beaa671368318e861d868fe0003607","VAR_DECLARATION_MERGING","12","1","2","[DemoTableController list (UserTableModel), DemoTableController treeList (AreaModel)]","22"
"16","RuoYi/ruoyi-admin","247cfa52d5beaa671368318e861d868fe0003607","69a127e56964a3ebd9376815509574d7b0ebc2ef","STATEMENTS_ORDER_REARRANGEMENT","10","1","3","[AreaModel AreaModel (int, int, String, String, String, String, Integer), DemoTableController list (UserTableModel), UserTableModel UserTableModel (int, String, String, String, String, String, double, String)]","33"
"19","RuoYi/ruoyi-admin","69a127e56964a3ebd9376815509574d7b0ebc2ef","8903c826a1cfcdbbd15b1bd9ed4bbe169e8215d2","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[AreaModel AreaModel (int, int, String, String, String, String, Integer)]","11"
"21","RuoYi/ruoyi-admin","8903c826a1cfcdbbd15b1bd9ed4bbe169e8215d2","5148daaac5157e22807170545fd5779bb0911bc6","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[DemoTableController treeList (AreaModel)]","11"
"24","RuoYi/ruoyi-admin","5148daaac5157e22807170545fd5779bb0911bc6","3c62cacab88bbd48b46b8003a87bb38631238acb","SWITCH_EQUAL_SIDES","14","1","1","[DemoTableController listChild (AreaModel)]","11"
"27","RuoYi/ruoyi-admin","3c62cacab88bbd48b46b8003a87bb38631238acb","d95a67f7dc9a392a5e8be059947b72a838121f9a","INFIX_EXPRESSION_DIVIDING","8","1","1","[DemoTableController listChild (AreaModel)]","11"
"29","RuoYi/ruoyi-admin","d95a67f7dc9a392a5e8be059947b72a838121f9a","46ba6d80620ae12b5227b4af1e999e269cfdd444","VAR_DECLARATION_DIVIDING","13","1","2","[DemoTableController list (UserTableModel), DemoTableController treeList (AreaModel)]","22"
"0","RuoYi/ruoyi-common","46ba6d80620ae12b5227b4af1e999e269cfdd444","691c20d8bba35356fcf7824693d72b3abbd3acfe","LOCAL_VAR_RENAMING","0","1","51","[IpUtils isUnknown (String), IpUtils ipIsInNetNoCheck (String, String), FileUtils percentEncode (String), ServletUtils getSession (), FileUtils checkAllowDownload (String), ServletUtils getResponse (), FileUtils getFileExtendName (byte[]), ServletUtils checkAgentIsMobile (String), ServletUtils urlEncode (String), PermissionUtils getPrincipalProperty (String), IpUtils textToNumericFormatV4 (String), FileUtils writeImportBytes (byte[]), LogUtils logAccess (HttpServletRequest), LogUtils getAccessLog (), ServletUtils isAjaxRequest (HttpServletRequest), IpUtils internalIp (byte[]), IpUtils getHostIp (), ServletUtils getParameterToInt (String, Integer), IpUtils isIPSegment (String), IpUtils internalIp (String), FileUtils getName (String), FileUtils writeBytes (String, OutputStream), ServletUtils urlDecode (String), FileUtils setAttachmentResponseHeader (HttpServletResponse, String), FileUtils writeBytes (byte[], String), IpUtils getMultistageReverseProxyIp (String), LogUtils logPageError (HttpServletRequest), ServletUtils getParameter (String, String), IpUtils getHostName (), ServletUtils getParameter (String), ServletUtils getParameterToInt (String), UserBlockedException UserBlockedException (), ServletUtils getParameterToBool (String, Boolean), LogUtils getBlock (Object), FileUtils deleteFile (String), ServletUtils getRequest (), ServletUtils getRequestAttributes (), IpUtils isMatchedIp (String, String), IpUtils ipIsInWildCardNoCheck (String, String), PermissionUtils getMsg (String), FileUtils isValidFilename (String), LogUtils getParams (HttpServletRequest), LogUtils logError (String, Throwable), StrFormatter format (String, Object), ServletUtils getParameterToBool (String), IpUtils isIP (String), IpUtils isIpWildCard (String), ServletUtils renderString (HttpServletResponse, String), FileUtils getNameNotSuffix (String), FileUtils setFileDownloadHeader (HttpServletRequest, String), IpUtils getIpAddr (HttpServletRequest)]","408"
"0","RuoYi/ruoyi-framework","691c20d8bba35356fcf7824693d72b3abbd3acfe","9ee2a7fe4cce1e3e6626ecade07f7d49ede4169a","IF_DIVIDING","9","1","19","[DruidProperties dataSource (DruidDataSource), Mem setFree (long), SyncOnlineSessionFilter setOnlineSessionDAO (OnlineSessionDAO), Mem setUsed (long), Mem getFree (), Mem getUsage (), Mem getTotal (), LogAspect boBefore (JoinPoint, Log), SyncOnlineSessionFilter onPreHandle (ServletRequest, ServletResponse, Object), LogAspect isFilterObject (Object), LogAspect setRequestValue (JoinPoint, SysOperLog, String[]), LogAspect argsArrayToString (Object[], String[]), LogAspect doAfterReturning (JoinPoint, Log, Object), LogAspect handleLog (JoinPoint, Log, Exception, Object), Mem getUsed (), Mem setTotal (long), LogAspect doAfterThrowing (JoinPoint, Log, Exception), LogAspect getControllerMethodDescription (JoinPoint, Log, SysOperLog, Object), LogAspect excludePropertyPreFilter (String[])]","76"
"3","RuoYi/ruoyi-framework","9ee2a7fe4cce1e3e6626ecade07f7d49ede4169a","321945ffbcd62159d7de9ea6f7d701a5abb089c9","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","4","[UserRealm doGetAuthenticationInfo (AuthenticationToken), UserRealm clearAllCachedAuthorizationInfo (), UserRealm clearCachedAuthorizationInfo (Object), UserRealm doGetAuthorizationInfo (PrincipalCollection)]","20"
"6","RuoYi/ruoyi-framework","321945ffbcd62159d7de9ea6f7d701a5abb089c9","8fd42d28401d5a7776384eb6667bb5e292ca8fbb","SWITCH_STRING_EQUAL","15","1","6","[CaptchaValidateFilter setCaptchaType (String), CaptchaValidateFilter isAccessAllowed (ServletRequest, ServletResponse, Object), CaptchaValidateFilter validateResponse (HttpServletRequest, String), CaptchaValidateFilter onPreHandle (ServletRequest, ServletResponse, Object), CaptchaValidateFilter setCaptchaEnabled (boolean), CaptchaValidateFilter onAccessDenied (ServletRequest, ServletResponse)]","36"
"9","RuoYi/ruoyi-framework","8fd42d28401d5a7776384eb6667bb5e292ca8fbb","d9a9eebafca361a149038a0221a76ec745c74b74","INFIX_EXPRESSION_DIVIDING","8","1","1","[CaptchaValidateFilter isAccessAllowed (ServletRequest, ServletResponse, Object)]","6"
"10","RuoYi/ruoyi-framework","d9a9eebafca361a149038a0221a76ec745c74b74","edc127bf89317e55f941b790c007e1dfdc2ed0dc","SWITCH_EQUAL_SIDES","14","1","1","[CaptchaValidateFilter isAccessAllowed (ServletRequest, ServletResponse, Object)]","6"
"12","RuoYi/ruoyi-framework","edc127bf89317e55f941b790c007e1dfdc2ed0dc","30abed0ca7377ff28dd030577b8b4bbc2f135779","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","8","[DruidConfig doFilter (ServletRequest, ServletResponse, FilterChain), DruidConfig slaveDataSource (DruidProperties), DruidConfig destroy (), DruidConfig dataSource (DataSource), DruidConfig removeDruidFilterRegistrationBean (DruidStatProperties), DruidConfig init (javax.servlet.FilterConfig), DruidConfig setDataSource (Map<Object,Object>, String, String), DruidConfig masterDataSource (DruidProperties)]","56"
"14","RuoYi/ruoyi-framework","30abed0ca7377ff28dd030577b8b4bbc2f135779","5d328435b6375c37be1ba8bf1f3e5ce0f651c28a","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[DruidConfig doFilter (ServletRequest, ServletResponse, FilterChain), DruidConfig removeDruidFilterRegistrationBean (DruidStatProperties)]","14"
"22","RuoYi/ruoyi-framework","5d328435b6375c37be1ba8bf1f3e5ce0f651c28a","50dd23b6ed43dd74e36e31d98a357c20242a54fb","VAR_DECLARATION_MERGING","12","1","1","[DruidConfig removeDruidFilterRegistrationBean (DruidStatProperties)]","7"
"24","RuoYi/ruoyi-framework","50dd23b6ed43dd74e36e31d98a357c20242a54fb","c9f80c697829b2d860ba78afa9d4dee695a26858","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[DruidConfig removeDruidFilterRegistrationBean (DruidStatProperties)]","7"
"28","RuoYi/ruoyi-framework","c9f80c697829b2d860ba78afa9d4dee695a26858","625df175cbf719f788dfe761d3f0b0ac7ec0da53","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DruidConfig removeDruidFilterRegistrationBean (DruidStatProperties)]","7"
"0","RuoYi/ruoyi-generator","625df175cbf719f788dfe761d3f0b0ac7ec0da53","05a7154e1350dbb6d7cc270259d2901626a7819f","VAR_DECLARATION_DIVIDING","13","1","48","[GenController remove (String), IGenTableColumnService updateGenTableColumn (GenTableColumn), GenTableServiceImpl getGenPath (GenTable, String), GenTableColumnMapper selectGenTableColumnListByTableId (GenTableColumn), GenTableServiceImpl generatorCode (String), GenTableServiceImpl selectGenTableList (GenTable), GenController create (String), GenController importTable (), GenTableServiceImpl validateEdit (GenTable), GenTableColumnMapper deleteGenTableColumns (List<GenTableColumn>), GenController genList (GenTable), GenTableServiceImpl downloadCode (String), GenTableServiceImpl setSubTable (GenTable), GenTableColumnMapper updateGenTableColumn (GenTableColumn), GenTableServiceImpl selectGenTableAll (), GenController editSave (GenTable), GenTableServiceImpl selectGenTableById (Long), GenController columnList (GenTableColumn), GenTableServiceImpl selectDbTableListByNames (String[]), GenUtils getBusinessName (String), GenTableServiceImpl createTable (String), GenTableServiceImpl deleteGenTableByIds (String), GenTableColumnMapper insertGenTableColumn (GenTableColumn), IGenTableColumnService insertGenTableColumn (GenTableColumn), GenTableServiceImpl selectDbTableList (GenTable), GenController edit (Long, ModelMap), GenTableServiceImpl downloadCode (String[]), GenController dataList (GenTable), GenController createTable (), GenTableServiceImpl generatorCode (String, ZipOutputStream), GenTableServiceImpl updateGenTable (GenTable), GenController gen (), GenController synchDb (String), GenTableServiceImpl setTableFromOptions (GenTable), GenTableServiceImpl importGenTable (List<GenTable>, String), GenTableServiceImpl setPkColumn (GenTable), GenTableColumnMapper deleteGenTableColumnByIds (Long[]), GenController genCode (String), GenTableServiceImpl synchDb (String), GenController batchGenCode (HttpServletResponse, String), GenController preview (Long), IGenTableColumnService selectGenTableColumnListByTableId (GenTableColumn), GenController importTableSave (String), GenController genCode (HttpServletResponse, byte[]), GenController download (HttpServletResponse, String), IGenTableColumnService deleteGenTableColumnByIds (String), GenTableServiceImpl previewCode (Long), GenTableColumnMapper selectDbTableColumnsByName (String)]","240"
"7","RuoYi/ruoyi-generator","05a7154e1350dbb6d7cc270259d2901626a7819f","71bc9a975b1648fef61ff8884d220fc925dce3b6","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[GenUtils initColumnField (GenTableColumn, GenTable)]","5"
"8","RuoYi/ruoyi-generator","71bc9a975b1648fef61ff8884d220fc925dce3b6","9bc0780e2aed5d36f3f0bb8c84a318a279e14780","SWITCH_EQUAL_SIDES","14","1","1","[GenUtils initColumnField (GenTableColumn, GenTable)]","5"
"9","RuoYi/ruoyi-generator","9bc0780e2aed5d36f3f0bb8c84a318a279e14780","21006eed944af3a4de608be5f437998ce7206b92","REVERSE_IF_ELSE","3","1","5","[GenUtils getDbType (String), GenUtils convertClassName (String), GenUtils getColumnLength (String), GenUtils replaceFirst (String, String[]), GenUtils initColumnField (GenTableColumn, GenTable)]","25"
"12","RuoYi/ruoyi-generator","21006eed944af3a4de608be5f437998ce7206b92","fa5acb414b1a2b58d0d941920158e274e5e8d94b","VAR_DECLARATION_DIVIDING","13","1","1","[GenUtils initColumnField (GenTableColumn, GenTable)]","5"
"18","RuoYi/ruoyi-generator","fa5acb414b1a2b58d0d941920158e274e5e8d94b","d48ed48bee8d8bd681af0d7e6529b9aad0c25990","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[GenUtils initColumnField (GenTableColumn, GenTable)]","5"
"20","RuoYi/ruoyi-generator","d48ed48bee8d8bd681af0d7e6529b9aad0c25990","56e662a84fa4db89ae7becde2125f9a00bac62d1","VAR_DECLARATION_MERGING","12","1","3","[GenUtils getModuleName (String), GenUtils getBusinessName (String), GenUtils initColumnField (GenTableColumn, GenTable)]","15"
"24","RuoYi/ruoyi-generator","56e662a84fa4db89ae7becde2125f9a00bac62d1","81ed5b919480538ef60d523cbc9e2af01eaae2ec","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[GenUtils initColumnField (GenTableColumn, GenTable)]","5"
"25","RuoYi/ruoyi-generator","81ed5b919480538ef60d523cbc9e2af01eaae2ec","327780670a7b57af000542f18ff7d0c8b8b97801","SWITCH_EQUAL_SIDES","14","1","1","[GenUtils initColumnField (GenTableColumn, GenTable)]","5"
"26","RuoYi/ruoyi-generator","327780670a7b57af000542f18ff7d0c8b8b97801","7010f19a74deac1c4f1000d5d763d41b615e59d7","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[GenUtils initColumnField (GenTableColumn, GenTable)]","5"
"27","RuoYi/ruoyi-generator","7010f19a74deac1c4f1000d5d763d41b615e59d7","5687315f281d39332ba24c7868927e8f2c1e8bc0","VAR_DECLARATION_DIVIDING","13","1","2","[GenUtils getModuleName (String), GenUtils getBusinessName (String)]","10"
"28","RuoYi/ruoyi-generator","5687315f281d39332ba24c7868927e8f2c1e8bc0","8c167e67fa14682a8cd24594f34429b8a2b02197","REVERSE_IF_ELSE","3","1","5","[GenUtils getDbType (String), GenUtils convertClassName (String), GenUtils getColumnLength (String), GenUtils replaceFirst (String, String[]), GenUtils initColumnField (GenTableColumn, GenTable)]","25"
"0","RuoYi/ruoyi-quartz","8c167e67fa14682a8cd24594f34429b8a2b02197","f263b351b43d198d3939180fdd368f9ab7390ef4","VAR_DECLARATION_MERGING","12","1","45","[ISysJobService deleteJobByIds (String), SysJobLogMapper selectJobLogAll (), SysJobMapper deleteJobById (Long), SysJobController list (SysJob), SysJobMapper deleteJobByIds (Long[]), SysJobController export (SysJob), SysJobLogMapper deleteJobLogByIds (String[]), SysJobLogMapper insertJobLog (SysJobLog), ScheduleUtils getJobKey (Long, String), SysJobController job (), ISysJobService checkCronExpressionIsValid (String), SysJobMapper insertJob (SysJob), ScheduleUtils getTriggerKey (Long, String), SysJobController remove (String), ISysJobService selectJobById (Long), ISysJobService updateJob (SysJob), SysJobMapper selectJobById (Long), ISysJobService resumeJob (SysJob), SysJobController addSave (SysJob), SysJobController editSave (SysJob), SysJobController detail (Long, ModelMap), SysJobController add (), SysJobController changeStatus (SysJob), SysJobController checkCronExpressionIsValid (SysJob), SysJobMapper selectJobList (SysJob), SysJobMapper updateJob (SysJob), ScheduleUtils whiteList (String), ISysJobService pauseJob (SysJob), ISysJobService run (SysJob), ScheduleUtils handleCronScheduleMisfirePolicy (SysJob, CronScheduleBuilder), SysJobController edit (Long, ModelMap), SysJobController queryCronExpression (String), ISysJobService insertJob (SysJob), SysJobLogMapper cleanJobLog (), SysJobLogMapper selectJobLogList (SysJobLog), SysJobLogMapper selectJobLogById (Long), SysJobController cron (), SysJobController run (SysJob), ScheduleUtils getQuartzJobClass (SysJob), SysJobLogMapper deleteJobLogById (Long), SysJobMapper selectJobAll (), ISysJobService deleteJob (SysJob), ScheduleUtils createScheduleJob (Scheduler, SysJob), ISysJobService changeStatus (SysJob), ISysJobService selectJobList (SysJob)]","225"
"4","RuoYi/ruoyi-quartz","f263b351b43d198d3939180fdd368f9ab7390ef4","8733c78a69b4286a3dd11a7563d29ae98f466d3b","LOCAL_VAR_RENAMING","0","1","6","[ISysJobLogService selectJobLogList (SysJobLog), ISysJobLogService deleteJobLogById (Long), ISysJobLogService addJobLog (SysJobLog), ISysJobLogService selectJobLogById (Long), ISysJobLogService deleteJobLogByIds (String), ISysJobLogService cleanJobLog ()]","36"
"8","RuoYi/ruoyi-quartz","8733c78a69b4286a3dd11a7563d29ae98f466d3b","ddccfc8e3b4fa39079bbcdf6674bdfe6716f3980","LOCAL_VAR_RENAMING","0","1","2","[ISysJobLogService selectJobLogList (SysJobLog), ISysJobLogService addJobLog (SysJobLog)]","12"
"10","RuoYi/ruoyi-quartz","ddccfc8e3b4fa39079bbcdf6674bdfe6716f3980","211ee0fc8db98c407e0fc5fe531424f4e0145973","LOCAL_VAR_RENAMING","0","1","2","[ISysJobLogService addJobLog (SysJobLog), ISysJobLogService selectJobLogById (Long)]","12"
"14","RuoYi/ruoyi-quartz","211ee0fc8db98c407e0fc5fe531424f4e0145973","762b8466bccee7018cd6048177ede83031dc1615","LOCAL_VAR_RENAMING","0","1","2","[ISysJobLogService selectJobLogList (SysJobLog), ISysJobLogService addJobLog (SysJobLog)]","12"
"0","RuoYi/ruoyi-system","762b8466bccee7018cd6048177ede83031dc1615","ba589558602beae5aaf5e55040798e9f52dd00ce","CASE_TO_IF_ELSE","17","1","85","[SysNotice getStatus (), SysLogininfor getMsg (), SysUserServiceImpl selectUserByEmail (String), SysUserServiceImpl insertUserAuth (Long, Long[]), SysLogininfor getStatus (), SysLogininfor getLoginTime (), SysLogininfor setInfoId (Long), SysLogininfor setLoginLocation (String), SysUserServiceImpl selectAllocatedList (SysUser), SysNotice setNoticeContent (String), SysUserServiceImpl selectUserById (Long), SysUserServiceImpl checkUserAllowed (SysUser), SysConfigServiceImpl selectConfigByKey (String), SysLogininfor getIpaddr (), SysUserServiceImpl checkLoginNameUnique (SysUser), ISysDictDataService selectDictLabel (String, String), SysUserServiceImpl resetUserPwd (SysUser), SysUserServiceImpl selectUnallocatedList (SysUser), SysLogininfor setBrowser (String), SysUserServiceImpl deleteUserByIds (String), SysConfigServiceImpl insertConfig (SysConfig), SysUserServiceImpl insertUserRole (Long, Long[]), SysUserServiceImpl checkEmailUnique (SysUser), SysNotice setNoticeTitle (String), SysNotice setNoticeType (String), SysLogininfor setMsg (String), SysNotice setNoticeId (Long), SysConfigServiceImpl clearConfigCache (), SysLogininfor getInfoId (), SysPostMapper selectPostsByUserId (Long), SysUserServiceImpl selectUserPostGroup (Long), SysPostMapper selectPostAll (), SysPostMapper checkPostNameUnique (String), SysUserServiceImpl selectUserRoleByUserId (Long), SysPostMapper selectPostById (Long), SysConfigServiceImpl selectConfigList (SysConfig), SysConfigServiceImpl loadingConfigCache (), SysConfigServiceImpl updateConfig (SysConfig), SysLogininfor setIpaddr (String), SysUserServiceImpl updateUserInfo (SysUser), SysPostMapper selectPostList (SysPost), SysLogininfor setStatus (String), SysConfigServiceImpl getCacheKey (String), SysLogininfor getBrowser (), SysUserServiceImpl insertUserPost (SysUser), SysNotice getNoticeContent (), ISysDictDataService updateDictData (SysDictData), SysLogininfor getLoginName (), ISysDictDataService selectDictDataById (Long), SysNotice setStatus (String), ISysDictDataService selectDictDataList (SysDictData), SysUserServiceImpl importUser (List<SysUser>, Boolean, String), SysNotice getNoticeType (), ISysDictDataService deleteDictDataByIds (String), SysPostMapper deletePostByIds (Long[]), SysConfigServiceImpl deleteConfigByIds (String), SysUserServiceImpl selectUserByLoginName (String), SysLogininfor setLoginName (String), SysUserServiceImpl registerUser (SysUser), SysLogininfor getOs (), SysPostMapper checkPostCodeUnique (String), SysUserServiceImpl changeStatus (SysUser), SysLogininfor setLoginTime (Date), SysUserServiceImpl checkPhoneUnique (SysUser), SysConfigServiceImpl checkConfigKeyUnique (SysConfig), SysConfigServiceImpl resetConfigCache (), SysLogininfor toString (), SysConfigServiceImpl getCacheName (), SysUserServiceImpl selectUserList (SysUser), ISysDictDataService insertDictData (SysDictData), SysPostMapper insertPost (SysPost), SysNotice getNoticeTitle (), SysNotice toString (), SysUserServiceImpl selectUserByPhoneNumber (String), SysUserServiceImpl checkUserDataScope (Long), SysLogininfor getLoginLocation (), SysUserServiceImpl insertUser (SysUser), SysPostMapper updatePost (SysPost), SysLogininfor setOs (String), SysNotice getNoticeId (), SysConfigServiceImpl selectConfigById (Long), SysConfigServiceImpl init (), SysUserServiceImpl selectUserRoleGroup (Long), SysUserServiceImpl deleteUserById (Long), SysUserServiceImpl updateUser (SysUser)]","510"
"1","RuoYi/ruoyi-system","ba589558602beae5aaf5e55040798e9f52dd00ce","2568036ddb5770e64584b56fb03ccd359a686e75","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[SysConfigServiceImpl checkConfigKeyUnique (SysConfig)]","6"
"5","RuoYi/ruoyi-system","2568036ddb5770e64584b56fb03ccd359a686e75","46df2543f99219d7dc045b373e0aa1247cb3df51","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[SysConfigServiceImpl checkConfigKeyUnique (SysConfig)]","6"
"7","RuoYi/ruoyi-system","46df2543f99219d7dc045b373e0aa1247cb3df51","6372e5a970d535400a484daf4688b23534cad10e","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SysConfigServiceImpl selectConfigByKey (String)]","6"
"11","RuoYi/ruoyi-system","6372e5a970d535400a484daf4688b23534cad10e","39cbd43eadbee3df2f9f3a719b1bfb4aa1cd7404","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SysConfigServiceImpl selectConfigByKey (String)]","6"
"14","RuoYi/ruoyi-system","39cbd43eadbee3df2f9f3a719b1bfb4aa1cd7404","762b8edfd7e2a39f7b84359e06ac7da01e2a632c","LOCAL_VAR_RENAMING","0","1","2","[SysConfigServiceImpl selectConfigById (Long), SysConfigServiceImpl deleteConfigByIds (String)]","12"
"18","RuoYi/ruoyi-system","762b8edfd7e2a39f7b84359e06ac7da01e2a632c","93cf8710e89ab2c46822ecc9b76534d500867513","REVERSE_IF_ELSE","3","1","5","[SysConfigServiceImpl insertConfig (SysConfig), SysConfigServiceImpl checkConfigKeyUnique (SysConfig), SysConfigServiceImpl deleteConfigByIds (String), SysConfigServiceImpl selectConfigByKey (String), SysConfigServiceImpl updateConfig (SysConfig)]","30"
"21","RuoYi/ruoyi-system","93cf8710e89ab2c46822ecc9b76534d500867513","bcaf8b03ef4b80470a977f84f570a4f9f2d6145a","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SysConfigServiceImpl selectConfigByKey (String)]","6"
"24","RuoYi/ruoyi-system","bcaf8b03ef4b80470a977f84f570a4f9f2d6145a","fc3b3f949482171975d5077a0aa42efd358fe0b0","REVERSE_IF_ELSE","3","1","5","[SysConfigServiceImpl insertConfig (SysConfig), SysConfigServiceImpl checkConfigKeyUnique (SysConfig), SysConfigServiceImpl deleteConfigByIds (String), SysConfigServiceImpl selectConfigByKey (String), SysConfigServiceImpl updateConfig (SysConfig)]","30"
"29","RuoYi/ruoyi-system","fc3b3f949482171975d5077a0aa42efd358fe0b0","b20193da0541ae09ab07b6a31a21b810a7e57389","LOCAL_VAR_RENAMING","0","1","2","[SysConfigServiceImpl deleteConfigByIds (String), SysConfigServiceImpl updateConfig (SysConfig)]","12"
"0","netty","432fdbfd5d0b38eaed63daa0f0e896c39356d67e","ac3646746f4fb0b0cbf07b383d3277773abd44fe","CASE_TO_IF_ELSE","17","1","343","[LocalTime hasMinute (), LocalTime hasSecond (), Builder getLocalTimeOrBuilderList (), Builder hasDayOfWeek (), IdleStateHandler channelClosed (ChannelHandlerContext, ChannelStateEvent), WebSocketServerProtocolHandler forbiddenHttpRequestResponder (), LocalTime getDayOfWeek (), Builder hasContinent (), Builder clearMonth (), Location parseFrom (java.io.InputStream, com.google.protobuf.ExtensionRegistryLite), Builder getDescriptor (), LocalTimes parseFrom (byte[]), Builder setLocalTime (int, org.jboss.netty.example.localtime.LocalTimeProtocol.LocalTime.Builder), LocalTimes initFields (), LocalTimeOrBuilder getDayOfWeek (), Locations parseDelimitedFrom (java.io.InputStream), Locations Locations (boolean), LocalTime parseFrom (byte[]), Location Location (com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite), LocalTimesOrBuilder getLocalTimeList (), LocalTimes parseFrom (com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite), Builder clearLocalTime (), Builder getCity (), Location parseFrom (com.google.protobuf.CodedInputStream), Builder addLocation (org.jboss.netty.example.localtime.LocalTimeProtocol.Location), Builder ensureLocationIsMutable (), LocalTimeOrBuilder hasSecond (), LocationsOrBuilder getLocationCount (), LocalTimes getUnknownFields (), LocalTimeProtocol SUNDAY (), Builder getLocationList (), Builder getDescriptorForType (), Builder clearYear (), LocalTimeOrBuilder hasMonth (), LocalTimeProtocol Continent (int, int), AllIdleTimeoutTask run (Timeout), LocalTime parseFrom (com.google.protobuf.ByteString), LocalTimeProtocol LocalTimeProtocol (), Builder getHour (), IdleStateHandler fireChannelIdle (ChannelHandlerContext, IdleState, long), LocalTimeOrBuilder hasHour (), Locations parseFrom (com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite), Builder addLocalTime (int, org.jboss.netty.example.localtime.LocalTimeProtocol.LocalTime.Builder), Locations parseFrom (com.google.protobuf.ByteString), LocalTimeProtocol valueOf (com.google.protobuf.Descriptors.EnumValueDescriptor), LocalTimes getSerializedSize (), LocalTimes getLocalTime (int), HttpMessageDecoder HttpMessageDecoder (), ReaderIdleTimeoutTask ReaderIdleTimeoutTask (ChannelHandlerContext), Builder Builder (), LocalTime hasHour (), Builder mergeFrom (org.jboss.netty.example.localtime.LocalTimeProtocol.Location), LocalTimeProtocol registerAllExtensions (com.google.protobuf.ExtensionRegistry), Builder removeLocation (int), LocalTimes LocalTimes (com.google.protobuf.GeneratedMessage.Builder<?>), LocalTimes LocalTimes (boolean), Builder mergeFrom (com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite), ReaderIdleTimeoutTask run (Timeout), Builder getLocalTimeList (), LocalTimes newBuilder (), Builder clearCity (), LocalTime getSerializedSize (), LocalTimeOrBuilder hasMinute (), Locations getDefaultInstanceForType (), Locations parseFrom (com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite), LocationsOrBuilder getLocationList (), Location getUnknownFields (), Locations getLocation (int), LocalTime LocalTime (com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite), AllIdleTimeoutTask AllIdleTimeoutTask (ChannelHandlerContext), IdleStateHandler getAllIdleTimeInMillis (), Location parseFrom (com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite), Builder addLocation (int, org.jboss.netty.example.localtime.LocalTimeProtocol.Location), LocalTimeOrBuilder hasYear (), HttpMessageDecoder readHeader (ChannelBuffer), LocalTimeProtocol getNumber (), Builder getLocation (int), Builder isInitialized (), Builder clone (), LocalTimeOrBuilder getMonth (), HttpMessageDecoder readLine (ChannelBuffer, int), Builder setLocation (int, org.jboss.netty.example.localtime.LocalTimeProtocol.Location.Builder), Builder getYear (), Builder getLocationOrBuilder (int), HttpMessageDecoder findNonWhitespace (String, int), WebSocketServerProtocolHandler exceptionCaught (ChannelHandlerContext, ExceptionEvent), Location getContinent (), Builder getMinute (), LocalTimes getDefaultInstanceForType (), Location newBuilderForType (), LocalTimes isInitialized (), Locations getParserForType (), LocalTimes getLocalTimeOrBuilderList (), Builder getLocationCount (), LocationOrBuilder getContinent (), LocalTime parseDelimitedFrom (java.io.InputStream, com.google.protobuf.ExtensionRegistryLite), LocationOrBuilder getCityBytes (), Builder getContinent (), Locations getLocationOrBuilderList (), Builder getLocalTimeBuilder (int), HttpMessageDecoder readHeaders (ChannelBuffer), Builder getLocationFieldBuilder (), LocalTime getSecond (), Builder clearContinent (), Builder setSecond (int), Builder clearSecond (), Locations getLocationList (), LocalTime parseFrom (java.io.InputStream), Builder getCityBytes (), LocalTimes parseDelimitedFrom (java.io.InputStream, com.google.protobuf.ExtensionRegistryLite), LocalTimeProtocol getDescriptor (), Locations writeTo (com.google.protobuf.CodedOutputStream), Builder clear (), Builder clearDayOfWeek (), Builder setLocalTime (int, org.jboss.netty.example.localtime.LocalTimeProtocol.LocalTime), Location isInitialized (), IdleStateHandler run (), Builder setDayOfMonth (int), LocalTime hasYear (), Builder create (), Locations getLocationOrBuilder (int), Builder mergeFrom (org.jboss.netty.example.localtime.LocalTimeProtocol.LocalTime), IdleStateHandler IdleStateHandler (Timer, long, long, long, TimeUnit), Location internalGetFieldAccessorTable (), LocalTime parseFrom (com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite), LocalTime getDefaultInstance (), IdleStateHandler writeComplete (ChannelHandlerContext, WriteCompletionEvent), LocalTime getDescriptor (), LocalTimeProtocol getDescriptorForType (), LocalTime parseFrom (java.io.InputStream, com.google.protobuf.ExtensionRegistryLite), Location initFields (), IdleStateHandler messageReceived (ChannelHandlerContext, MessageEvent), Builder setDayOfWeek (org.jboss.netty.example.localtime.LocalTimeProtocol.DayOfWeek), Builder getLocalTimeBuilderList (), Locations getDescriptor (), Builder clearDayOfMonth (), Builder hasMonth (), HttpMessageDecoder skipControlCharacters (ChannelBuffer), IdleStateHandler getReaderIdleTimeInMillis (), HttpMessageDecoder isContentAlwaysEmpty (HttpMessage), LocalTime getYear (), IdleStateHandler releaseExternalResources (), LocalTimeProtocol DayOfWeek (int, int), HttpMessageDecoder decode (ChannelHandlerContext, Channel, ChannelBuffer, State), LocalTime writeTo (com.google.protobuf.CodedOutputStream), LocalTimes parseFrom (com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite), Location parseDelimitedFrom (java.io.InputStream, com.google.protobuf.ExtensionRegistryLite), LocalTime parseFrom (byte[], com.google.protobuf.ExtensionRegistryLite), IdleStateHandler channelIdle (ChannelHandlerContext, IdleState, long), LocalTime getHour (), Builder setContinent (org.jboss.netty.example.localtime.LocalTimeProtocol.Continent), HttpMessageDecoder findEndOfString (String), IdleStateHandler beforeRemove (ChannelHandlerContext), Location newBuilder (org.jboss.netty.example.localtime.LocalTimeProtocol.Location), LocationsOrBuilder getLocation (int), LocalTimesOrBuilder getLocalTimeOrBuilderList (), WebSocketServerProtocolHandler WebSocketServerProtocolHandler (String, String), LocationsOrBuilder getLocationOrBuilder (int), Location parseFrom (java.io.InputStream), Builder addLocationBuilder (), Builder mergeFrom (com.google.protobuf.Message), LocalTimes newBuilderForType (), WebSocketServerProtocolHandler messageReceived (ChannelHandlerContext, MessageEvent), IdleStateHandler state (ChannelHandlerContext), LocalTimes getDescriptor (), LocalTimes LocalTimes (com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite), HttpMessageDecoder HttpMessageDecoder (int, int, int), LocalTime isInitialized (), IdleStateHandler IdleStateHandler (Timer, int, int, int), IdleStateHandler beforeAdd (ChannelHandlerContext), Builder setCityBytes (com.google.protobuf.ByteString), Locations parseFrom (java.io.InputStream, com.google.protobuf.ExtensionRegistryLite), Location writeReplace (), Location parseFrom (com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite), Location getDefaultInstance (), Builder hasYear (), IdleStateHandler afterAdd (ChannelHandlerContext), Builder addAllLocalTime (java.lang.Iterable<? extends org.jboss.netty.example.localtime.LocalTimeProtocol.LocalTime>), Builder buildPartial (), Locations isInitialized (), Locations parseFrom (com.google.protobuf.CodedInputStream), Builder getLocationBuilderList (), LocalTimes writeTo (com.google.protobuf.CodedOutputStream), LocalTime hasMonth (), LocalTime parseDelimitedFrom (java.io.InputStream), LocalTimes getLocalTimeCount (), Builder addLocation (org.jboss.netty.example.localtime.LocalTimeProtocol.Location.Builder), Locations toBuilder (), Location hasContinent (), Locations getUnknownFields (), HttpMessageDecoder readTrailingHeaders (ChannelBuffer), WebSocketServerProtocolHandler beforeAdd (ChannelHandlerContext), Location parseFrom (com.google.protobuf.ByteString), Builder mergeFrom (org.jboss.netty.example.localtime.LocalTimeProtocol.Locations), Builder addLocation (int, org.jboss.netty.example.localtime.LocalTimeProtocol.Location.Builder), HttpMessageDecoder splitHeader (String), LocalTimeOrBuilder getHour (), Location getDefaultInstanceForType (), LocalTime newBuilder (), Builder hasMinute (), WebSocketServerProtocolHandler WebSocketServerProtocolHandler (String), HttpMessageDecoder reset (), WebSocketServerProtocolHandler beforeRemove (ChannelHandlerContext), Builder hasCity (), Location writeTo (com.google.protobuf.CodedOutputStream), LocalTime initFields (), Location Location (com.google.protobuf.GeneratedMessage.Builder<?>), IdleStateHandler destroy (ChannelHandlerContext), Location Location (boolean), Builder build (), Location getCity (), Locations parseFrom (byte[], com.google.protobuf.ExtensionRegistryLite), LocalTime internalGetFieldAccessorTable (), HttpMessageDecoder getChunkSize (String), Builder getLocalTimeFieldBuilder (), Location parseFrom (byte[]), Builder addAllLocation (java.lang.Iterable<? extends org.jboss.netty.example.localtime.LocalTimeProtocol.Location>), LocalTimeOrBuilder getMinute (), LocalTimeOrBuilder getSecond (), Location parseDelimitedFrom (java.io.InputStream), Builder addLocalTime (org.jboss.netty.example.localtime.LocalTimeProtocol.LocalTime), LocalTime newBuilderForType (com.google.protobuf.GeneratedMessage.BuilderParent), LocalTimeProtocol getValueDescriptor (), Builder setMinute (int), Builder setMonth (int), LocalTimesOrBuilder getLocalTimeOrBuilder (int), HttpMessageDecoder splitInitialLine (String), Builder ensureLocalTimeIsMutable (), Builder clearLocation (), Locations Locations (com.google.protobuf.GeneratedMessage.Builder<?>), Builder addLocalTimeBuilder (int), Location getSerializedSize (), LocalTime hasDayOfWeek (), Builder removeLocalTime (int), WriterIdleTimeoutTask run (Timeout), Builder getDayOfMonth (), LocalTimes internalGetFieldAccessorTable (), LocalTime hasDayOfMonth (), Location getCityBytes (), Builder assignDescriptors (com.google.protobuf.Descriptors.FileDescriptor), Locations parseFrom (byte[]), Builder hasSecond (), Builder setLocation (int, org.jboss.netty.example.localtime.LocalTimeProtocol.Location), Location getDescriptor (), Locations writeReplace (), Builder getLocationBuilder (int), Builder addLocationBuilder (int), Locations newBuilderForType (), HttpMessageDecoder readFixedLengthContent (ChannelBuffer), LocalTimeOrBuilder hasDayOfMonth (), Location getParserForType (), WebSocketServerProtocolHandler getHandshaker (ChannelHandlerContext), Builder getSecond (), LocationOrBuilder hasCity (), LocalTime newBuilder (org.jboss.netty.example.localtime.LocalTimeProtocol.LocalTime), Builder setCity (java.lang.String), LocalTimeOrBuilder getDayOfMonth (), LocalTime writeReplace (), Locations getDefaultInstance (), Locations internalGetFieldAccessorTable (), LocalTimes parseFrom (com.google.protobuf.CodedInputStream), IdleStateHandler channelOpen (ChannelHandlerContext, ChannelStateEvent), Builder mergeFrom (org.jboss.netty.example.localtime.LocalTimeProtocol.LocalTimes), LocalTimes parseDelimitedFrom (java.io.InputStream), LocalTime getMinute (), IdleStateHandler getWriterIdleTimeInMillis (), Builder getMonth (), Builder getLocalTime (int), LocationOrBuilder getCity (), Builder clearMinute (), Locations newBuilder (org.jboss.netty.example.localtime.LocalTimeProtocol.Locations), LocalTimes getParserForType (), Builder getDayOfWeek (), LocalTime getParserForType (), Builder setYear (int), LocalTimesOrBuilder getLocalTime (int), WebSocketServerProtocolHandler afterRemove (ChannelHandlerContext), LocalTime LocalTime (boolean), Builder addLocalTime (int, org.jboss.netty.example.localtime.LocalTimeProtocol.LocalTime), Builder setHour (int), LocalTime parseFrom (com.google.protobuf.CodedInputStream), Location newBuilder (), Locations newBuilder (), LocalTimes parseFrom (java.io.InputStream, com.google.protobuf.ExtensionRegistryLite), Locations parseFrom (java.io.InputStream), Builder getLocalTimeOrBuilder (int), Builder Builder (com.google.protobuf.GeneratedMessage.BuilderParent), HttpMessageDecoder createMessage (String[]), Builder addLocalTime (org.jboss.netty.example.localtime.LocalTimeProtocol.LocalTime.Builder), Locations getLocationCount (), LocalTime LocalTime (com.google.protobuf.GeneratedMessage.Builder<?>), Builder internalGetFieldAccessorTable (), LocalTimeOrBuilder hasDayOfWeek (), LocalTime toBuilder (), LocalTimes parseFrom (com.google.protobuf.ByteString), WebSocketServerProtocolHandler afterAdd (ChannelHandlerContext), LocalTimes writeReplace (), LocalTime getMonth (), LocalTimeOrBuilder getYear (), IdleStateHandler initialize (ChannelHandlerContext), Locations Locations (com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite), HttpMessageDecoder findWhitespace (String, int), HttpMessageDecoder resetState (), Builder clearHour (), LocalTimeProtocol valueOf (int), LocalTimes getLocalTimeOrBuilder (int), LocalTimes newBuilder (org.jboss.netty.example.localtime.LocalTimeProtocol.LocalTimes), Builder addLocalTimeBuilder (), Builder hasDayOfMonth (), Location newBuilderForType (com.google.protobuf.GeneratedMessage.BuilderParent), LocalTime parseFrom (com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite), LocalTimes toBuilder (), LocalTime getUnknownFields (), Locations initFields (), LocalTimes parseFrom (byte[], com.google.protobuf.ExtensionRegistryLite), Location hasCity (), Location parseFrom (byte[], com.google.protobuf.ExtensionRegistryLite), LocalTimes parseFrom (java.io.InputStream), LocationsOrBuilder getLocationOrBuilderList (), LocalTimes getLocalTimeList (), IdleStateHandler afterRemove (ChannelHandlerContext), Locations newBuilderForType (com.google.protobuf.GeneratedMessage.BuilderParent), Locations parseDelimitedFrom (java.io.InputStream, com.google.protobuf.ExtensionRegistryLite), Builder maybeForceBuilderInitialization (), LocalTime getDayOfMonth (), LocationOrBuilder hasContinent (), WebSocketServerProtocolHandler setHandshaker (ChannelHandlerContext, WebSocketServerHandshaker), Builder getLocalTimeCount (), Builder hasHour (), LocalTimesOrBuilder getLocalTimeCount (), WriterIdleTimeoutTask WriterIdleTimeoutTask (ChannelHandlerContext), Builder getLocationOrBuilderList (), LocalTimes newBuilderForType (com.google.protobuf.GeneratedMessage.BuilderParent), Locations getSerializedSize (), LocalTimeProtocol internalGetValueMap (), Location toBuilder (), State State (), LocalTime newBuilderForType (), WebSocketServerProtocolHandler WebSocketServerProtocolHandler (String, String, boolean), LocalTimes getDefaultInstance (), HttpMessageDecoder isDecodingRequest (), Builder getDefaultInstanceForType (), LocalTime getDefaultInstanceForType ()]","1372"
"2","netty","ac3646746f4fb0b0cbf07b383d3277773abd44fe","941662a5bdb9f4d060ca7c8e5f305f9024d0c100","SWITCH_EQUAL_SIDES","14","1","5","[HttpMessageDecoder readHeader (ChannelBuffer), HttpMessageDecoder readTrailingHeaders (ChannelBuffer), HttpMessageDecoder getChunkSize (String), HttpMessageDecoder splitHeader (String), HttpMessageDecoder readLine (ChannelBuffer, int)]","20"
"3","netty","941662a5bdb9f4d060ca7c8e5f305f9024d0c100","12267338de12a400c485348b0f3e5ed445d177ca","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[HttpMessageDecoder readHeaders (ChannelBuffer)]","4"
"4","netty","12267338de12a400c485348b0f3e5ed445d177ca","e15285dd5aee76d86a359c5a2479406d983a6390","REVERSE_IF_ELSE","3","1","9","[HttpMessageDecoder readHeader (ChannelBuffer), HttpMessageDecoder findNonWhitespace (String, int), HttpMessageDecoder readTrailingHeaders (ChannelBuffer), HttpMessageDecoder findEndOfString (String), HttpMessageDecoder findWhitespace (String, int), HttpMessageDecoder readHeaders (ChannelBuffer), HttpMessageDecoder getChunkSize (String), HttpMessageDecoder splitHeader (String), HttpMessageDecoder readLine (ChannelBuffer, int)]","36"
"6","netty","e15285dd5aee76d86a359c5a2479406d983a6390","1aca8a4c7ea524288a8d5626b79da7c3640d7211","REVERSE_IF_ELSE","3","1","12","[HttpMessageDecoder readHeader (ChannelBuffer), HttpMessageDecoder findNonWhitespace (String, int), HttpMessageDecoder readTrailingHeaders (ChannelBuffer), HttpMessageDecoder findEndOfString (String), HttpMessageDecoder skipControlCharacters (ChannelBuffer), HttpMessageDecoder findWhitespace (String, int), HttpMessageDecoder resetState (), HttpMessageDecoder readHeaders (ChannelBuffer), HttpMessageDecoder getChunkSize (String), HttpMessageDecoder splitHeader (String), HttpMessageDecoder readLine (ChannelBuffer, int), HttpMessageDecoder reset ()]","48"
"7","netty","1aca8a4c7ea524288a8d5626b79da7c3640d7211","428f6c5f7962384eff1bb999771fadbd362c5ad3","WHILE_TO_FOR","2","1","1","[HttpMessageDecoder readLine (ChannelBuffer, int)]","4"
"9","netty","428f6c5f7962384eff1bb999771fadbd362c5ad3","672124a961468adeebf142372f7276223884ff57","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[HttpMessageDecoder readHeaders (ChannelBuffer)]","4"
"10","netty","672124a961468adeebf142372f7276223884ff57","7cc284e603781ece034e77500097f0b476ecf540","FOR_TO_WHILE","1","1","4","[HttpMessageDecoder findNonWhitespace (String, int), HttpMessageDecoder findEndOfString (String), HttpMessageDecoder findWhitespace (String, int), HttpMessageDecoder splitHeader (String)]","16"
"11","netty","7cc284e603781ece034e77500097f0b476ecf540","8d873de4cb87110758b1fe5bc51bcd1236b883b5","VAR_DECLARATION_MERGING","12","1","3","[HttpMessageDecoder readHeaders (ChannelBuffer), HttpMessageDecoder splitHeader (String), HttpMessageDecoder splitInitialLine (String)]","12"
"13","netty","8d873de4cb87110758b1fe5bc51bcd1236b883b5","5f4bc541a7de79e94b1051757608035e6a7b1d93","WHILE_TO_FOR","2","1","3","[HttpMessageDecoder findNonWhitespace (String, int), HttpMessageDecoder findEndOfString (String), HttpMessageDecoder findWhitespace (String, int)]","12"
"14","netty","5f4bc541a7de79e94b1051757608035e6a7b1d93","6c70973590dee654849372ffd89b10026018e450","WHILE_TO_FOR","2","1","1","[HttpMessageDecoder splitHeader (String)]","4"
"17","netty","6c70973590dee654849372ffd89b10026018e450","c55e1f7ceac3fcc74c33061fd0b3506cef3a4773","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[HttpMessageDecoder readHeaders (ChannelBuffer)]","4"
"18","netty","c55e1f7ceac3fcc74c33061fd0b3506cef3a4773","90e4b38f67649631b7ed4b09c9c13a561fd02f32","VAR_DECLARATION_DIVIDING","13","1","3","[HttpMessageDecoder readHeaders (ChannelBuffer), HttpMessageDecoder splitHeader (String), HttpMessageDecoder splitInitialLine (String)]","12"
"19","netty","90e4b38f67649631b7ed4b09c9c13a561fd02f32","b2dc02f760b96a8550a7a0d4c1fec14db07341b0","STATEMENTS_ORDER_REARRANGEMENT","10","1","8","[HttpMessageDecoder readHeader (ChannelBuffer), HttpMessageDecoder readTrailingHeaders (ChannelBuffer), HttpMessageDecoder readHeaders (ChannelBuffer), HttpMessageDecoder splitHeader (String), HttpMessageDecoder readLine (ChannelBuffer, int), HttpMessageDecoder reset (), HttpMessageDecoder HttpMessageDecoder (int, int, int), HttpMessageDecoder splitInitialLine (String)]","32"
"20","netty","b2dc02f760b96a8550a7a0d4c1fec14db07341b0","11f4c07e68eeda1850c0a0ffbf43b5e4cfdb2775","INFIX_EXPRESSION_DIVIDING","8","1","5","[HttpMessageDecoder readTrailingHeaders (ChannelBuffer), HttpMessageDecoder readHeaders (ChannelBuffer), HttpMessageDecoder getChunkSize (String), HttpMessageDecoder splitHeader (String), HttpMessageDecoder isContentAlwaysEmpty (HttpMessage)]","20"
"23","netty","11f4c07e68eeda1850c0a0ffbf43b5e4cfdb2775","66bfa1ad5dec8c4f89f4645d419ac705a3cc9331","VAR_DECLARATION_MERGING","12","1","4","[HttpMessageDecoder readTrailingHeaders (ChannelBuffer), HttpMessageDecoder getChunkSize (String), HttpMessageDecoder splitHeader (String), HttpMessageDecoder splitInitialLine (String)]","16"
"27","netty","66bfa1ad5dec8c4f89f4645d419ac705a3cc9331","f184d3d2e2335b166754c360c1e63757af75974f","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[HttpMessageDecoder readHeaders (ChannelBuffer)]","4"
"28","netty","f184d3d2e2335b166754c360c1e63757af75974f","56e18253688192c6ae502c0f4bd4e52cd812efac","VAR_DECLARATION_DIVIDING","13","1","1","[HttpMessageDecoder splitHeader (String)]","4"
"29","netty","56e18253688192c6ae502c0f4bd4e52cd812efac","1830cfe4aa90f9e42807ee72c12c789e71e0a5b9","FOR_TO_WHILE","1","1","1","[HttpMessageDecoder findEndOfString (String)]","4"
"33","netty","1830cfe4aa90f9e42807ee72c12c789e71e0a5b9","047ca79d341012582dfb8342b7465058f5496d43","PP_TO_ADD_ASSIGNMENT","6","1","4","[HttpMessageDecoder findNonWhitespace (String, int), HttpMessageDecoder findEndOfString (String), HttpMessageDecoder findWhitespace (String, int), HttpMessageDecoder splitHeader (String)]","16"
"35","netty","047ca79d341012582dfb8342b7465058f5496d43","fe2053c1f4b231e1d0cd4b4091d6e8b00b70e226","WHILE_TO_FOR","2","1","1","[HttpMessageDecoder findEndOfString (String)]","4"
"36","netty","fe2053c1f4b231e1d0cd4b4091d6e8b00b70e226","75c0754705e8a1bf118cf9bddc5236381baa4e7b","FOR_TO_WHILE","1","1","8","[HttpMessageDecoder readHeader (ChannelBuffer), HttpMessageDecoder findNonWhitespace (String, int), HttpMessageDecoder findEndOfString (String), HttpMessageDecoder skipControlCharacters (ChannelBuffer), HttpMessageDecoder findWhitespace (String, int), HttpMessageDecoder getChunkSize (String), HttpMessageDecoder splitHeader (String), HttpMessageDecoder readLine (ChannelBuffer, int)]","32"
"37","netty","75c0754705e8a1bf118cf9bddc5236381baa4e7b","f91f35b7c6d324fec01c7122e0c26a8bb89f4f08","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[HttpMessageDecoder readHeaders (ChannelBuffer)]","4"
"38","netty","f91f35b7c6d324fec01c7122e0c26a8bb89f4f08","744ec34b11ae2cb643a7fad7f007a2fe36c70bd3","WHILE_TO_FOR","2","1","7","[HttpMessageDecoder readHeader (ChannelBuffer), HttpMessageDecoder findNonWhitespace (String, int), HttpMessageDecoder findEndOfString (String), HttpMessageDecoder findWhitespace (String, int), HttpMessageDecoder getChunkSize (String), HttpMessageDecoder splitHeader (String), HttpMessageDecoder readLine (ChannelBuffer, int)]","28"
"39","netty","744ec34b11ae2cb643a7fad7f007a2fe36c70bd3","15f52057e10d3b4e2a7dff0b7690fc3802d23513","STATEMENTS_ORDER_REARRANGEMENT","10","1","9","[HttpMessageDecoder readHeader (ChannelBuffer), HttpMessageDecoder readTrailingHeaders (ChannelBuffer), HttpMessageDecoder readHeaders (ChannelBuffer), HttpMessageDecoder getChunkSize (String), HttpMessageDecoder splitHeader (String), HttpMessageDecoder readLine (ChannelBuffer, int), HttpMessageDecoder reset (), HttpMessageDecoder HttpMessageDecoder (int, int, int), HttpMessageDecoder splitInitialLine (String)]","36"
"41","netty","15f52057e10d3b4e2a7dff0b7690fc3802d23513","0d02e7d7e56d2558121062fb37af5a225b7216f7","VAR_DECLARATION_DIVIDING","13","1","2","[HttpMessageDecoder readTrailingHeaders (ChannelBuffer), HttpMessageDecoder splitHeader (String)]","8"
"42","netty","0d02e7d7e56d2558121062fb37af5a225b7216f7","318b2e96ea20703fa98eb78528341d13a9b0e80e","SWITCH_EQUAL_SIDES","14","1","2","[HttpMessageDecoder splitHeader (String), HttpMessageDecoder readLine (ChannelBuffer, int)]","8"
"43","netty","318b2e96ea20703fa98eb78528341d13a9b0e80e","a4f73c2559d9f041d8780dc491b700d58e9d38f7","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[HttpMessageDecoder readHeaders (ChannelBuffer)]","4"
"44","netty","a4f73c2559d9f041d8780dc491b700d58e9d38f7","ebbe57866dac1111dffdc805d4005883d6efe6d9","LOCAL_VAR_RENAMING","0","1","2","[HttpMessageDecoder splitHeader (String), HttpMessageDecoder decode (ChannelHandlerContext, Channel, ChannelBuffer, State)]","8"
"45","netty","ebbe57866dac1111dffdc805d4005883d6efe6d9","41a5a6cf9f402f75c3f523e63534f7d2171beaf1","PP_TO_ADD_ASSIGNMENT","6","1","1","[HttpMessageDecoder splitHeader (String)]","4"
"47","netty","41a5a6cf9f402f75c3f523e63534f7d2171beaf1","5f69050f5a00d3079f6613d6f0246250c6ed5809","PP_TO_ADD_ASSIGNMENT","6","1","3","[HttpMessageDecoder readHeader (ChannelBuffer), HttpMessageDecoder getChunkSize (String), HttpMessageDecoder readLine (ChannelBuffer, int)]","12"
"48","netty","5f69050f5a00d3079f6613d6f0246250c6ed5809","af38a4e64e8776e5ace76e68d5d56a4c21a74f4a","VAR_DECLARATION_MERGING","12","1","3","[HttpMessageDecoder readTrailingHeaders (ChannelBuffer), HttpMessageDecoder splitHeader (String), HttpMessageDecoder splitInitialLine (String)]","12"
"50","netty","af38a4e64e8776e5ace76e68d5d56a4c21a74f4a","f189ce8686dc728415dcaced76d70d129046aa47","FOR_TO_WHILE","1","1","7","[HttpMessageDecoder readHeader (ChannelBuffer), HttpMessageDecoder findNonWhitespace (String, int), HttpMessageDecoder findEndOfString (String), HttpMessageDecoder findWhitespace (String, int), HttpMessageDecoder getChunkSize (String), HttpMessageDecoder splitHeader (String), HttpMessageDecoder readLine (ChannelBuffer, int)]","28"
"51","netty","f189ce8686dc728415dcaced76d70d129046aa47","985ecfe99965e27d7223ac1c214de5eac140f8f4","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","6","[HttpMessageDecoder findNonWhitespace (String, int), HttpMessageDecoder findEndOfString (String), HttpMessageDecoder findWhitespace (String, int), HttpMessageDecoder getChunkSize (String), HttpMessageDecoder splitHeader (String), HttpMessageDecoder readLine (ChannelBuffer, int)]","24"
"52","netty","985ecfe99965e27d7223ac1c214de5eac140f8f4","820e2459381bcc76179d14b41ac28995654ec915","REVERSE_IF_ELSE","3","1","5","[HttpMessageDecoder findNonWhitespace (String, int), HttpMessageDecoder findEndOfString (String), HttpMessageDecoder findWhitespace (String, int), HttpMessageDecoder splitHeader (String), HttpMessageDecoder readLine (ChannelBuffer, int)]","20"
"53","netty","820e2459381bcc76179d14b41ac28995654ec915","58d68b1470db3c823a21a48c4637cf94968d1665","VAR_DECLARATION_MERGING","12","1","2","[HttpMessageDecoder readTrailingHeaders (ChannelBuffer), HttpMessageDecoder splitHeader (String)]","8"
"55","netty","58d68b1470db3c823a21a48c4637cf94968d1665","e15979ccdf94c2a1c7a0663b7bf4ec9089ccffcc","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[HttpMessageDecoder readHeaders (ChannelBuffer)]","4"
"57","netty","e15979ccdf94c2a1c7a0663b7bf4ec9089ccffcc","97806c1ff36ba0472dee7a97607b0eb36e533fcf","STATEMENTS_ORDER_REARRANGEMENT","10","1","5","[HttpMessageDecoder readHeader (ChannelBuffer), HttpMessageDecoder readLine (ChannelBuffer, int), HttpMessageDecoder reset (), HttpMessageDecoder HttpMessageDecoder (int, int, int), HttpMessageDecoder splitInitialLine (String)]","20"
"59","netty","97806c1ff36ba0472dee7a97607b0eb36e533fcf","69a963d31b268bff80fb4ced576f9c7747ef45c1","SWITCH_EQUAL_SIDES","14","1","3","[HttpMessageDecoder getChunkSize (String), HttpMessageDecoder splitHeader (String), HttpMessageDecoder readLine (ChannelBuffer, int)]","12"
"60","netty","69a963d31b268bff80fb4ced576f9c7747ef45c1","2709d02dedc7e41a60838233390c79ed168f7507","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[HttpMessageDecoder readHeaders (ChannelBuffer)]","4"
"61","netty","2709d02dedc7e41a60838233390c79ed168f7507","c1909ccc6354cbb7c7733b1f588a678192715c87","WHILE_TO_FOR","2","1","1","[HttpMessageDecoder findEndOfString (String)]","4"
"63","netty","c1909ccc6354cbb7c7733b1f588a678192715c87","f8944591f446138209ae76ed17af639122cadec8","WHILE_TO_FOR","2","1","3","[HttpMessageDecoder findNonWhitespace (String, int), HttpMessageDecoder findWhitespace (String, int), HttpMessageDecoder splitHeader (String)]","12"
"64","netty","f8944591f446138209ae76ed17af639122cadec8","d3a5ff723469446bc2845dd7c114bf7cddc26b63","VAR_DECLARATION_MERGING","12","1","1","[HttpMessageDecoder readHeaders (ChannelBuffer)]","4"
"0","netty/buffer","afb475dabd5ca9eaa94ccf07f0ecd8431db008ba","b39a1efdf76737ed65d07a6b0b8c5ac85f0f219e","PP_TO_ADD_ASSIGNMENT","6","1","551","[ByteWrapper toString (), UnpooledUnsafeHeapByteBuf _setLongLE (int, long), UnpooledDirectByteBuf _getByte (int), AdvancedLeakAwareByteBuf forEachByteDesc (int, int, ByteProcessor), ByteWrapper getBytes (int, ByteBuf, int, int), Component transferTo (ByteBuf), ByteWrapper isEmpty (T), UnpooledDirectByteBuf UnpooledDirectByteBuf (ByteBufAllocator, ByteBuffer, int), AdvancedLeakAwareByteBuf getMediumLE (int), AdvancedLeakAwareByteBuf writeByte (int), ByteWrapper _getIntLE (int), AdvancedLeakAwareByteBuf readRetainedSlice (int), UnsafeByteBufUtil setMediumLE (byte[], int, int), AdvancedLeakAwareByteBuf readBytes (ByteBuf, int), UnpooledDirectByteBuf getByte (int), AdvancedLeakAwareByteBuf writeShortLE (int), AdvancedLeakAwareByteBuf copy (int, int), UnsafeByteBufUtil getBytes (AbstractByteBuf, long, int, byte[], int, int), UnpooledDirectByteBuf hasMemoryAddress (), ByteWrapper componentAtOffset (int), ByteWrapper _getShortLE (int), Component getBytes (int, ByteBuf), ByteWrapper checkForOverflow (int, int), Component unwrap (), Component setBytes (int, byte[]), AdvancedLeakAwareByteBuf setBytes (int, byte[], int, int), ByteWrapper internalComponentAtOffset (int), ByteWrapper _setLongLE (int, long), UnpooledDirectByteBuf _setIntLE (int, int), AdvancedLeakAwareByteBuf setBytes (int, byte[]), AdvancedLeakAwareByteBuf readByte (), Component writeBytes (ByteBuf, int), AbstractByteBufAllocator newHeapBuffer (int, int), UnpooledDirectByteBuf _getLong (int), ByteWrapper _setLong (int, long), AdvancedLeakAwareByteBuf getMedium (int), AdvancedLeakAwareByteBuf readBytes (byte[], int, int), AdvancedLeakAwareByteBuf toString (Charset), UnpooledDirectByteBuf freeDirect (ByteBuffer), ByteWrapper isEmpty (byte[]), AbstractByteBufAllocator heapBuffer (), AdvancedLeakAwareByteBuf getUnsignedShort (int), AdvancedLeakAwareByteBuf writeBytes (ByteBuffer), Component markReaderIndex (), IntPriorityQueue isEmpty (), ByteWrapper _setShortLE (int, int), UnsafeByteBufUtil getUnsignedMedium (long), UnsafeByteBufUtil setMediumLE (long, int), Processor reset (), ByteWrapper _getUnsignedMedium (int), AdvancedLeakAwareByteBuf getBytes (int, ByteBuffer), UnsafeByteBufUtil getLongLE (long), AdvancedLeakAwareByteBuf readShort (), Component writeBoolean (boolean), AdvancedLeakAwareByteBuf readBytes (OutputStream, int), AdvancedLeakAwareByteBuf retain (int), UnpooledUnsafeHeapByteBuf _setMediumLE (int, int), Component deallocate (), AdvancedLeakAwareByteBuf getShortLE (int), AdvancedLeakAwareByteBuf readChar (), ByteWrapper _setMediumLE (int, int), AdvancedLeakAwareByteBuf getIntLE (int), UnsafeByteBufUtil getLong (byte[], int), AdvancedLeakAwareByteBuf getBytes (int, FileChannel, long, int), UnpooledDirectByteBuf capacity (), UnsafeByteBufUtil setShortLE (byte[], int, int), UnsafeByteBufUtil setZero (byte[], int, int), AbstractByteBufAllocator compositeHeapBuffer (int), AdvancedLeakAwareByteBuf setLong (int, long), UnsafeByteBufUtil setByte (byte[], int, int), ByteWrapper forEachByteAsc0 (int, int, ByteProcessor), ByteWrapper addComponent (boolean, int, ByteBuf), AdvancedLeakAwareByteBuf writeBoolean (boolean), UnpooledDirectByteBuf _getShort (int), UnpooledDirectByteBuf setBytes (int, ByteBuffer), AbstractByteBufAllocator directBuffer (int, int), AdvancedLeakAwareByteBuf touch (Object), UnsafeByteBufUtil getShortLE (byte[], int), ByteWrapper setBytes (int, InputStream, int), AdvancedLeakAwareByteBuf duplicate (), Component skipBytes (int), AdvancedLeakAwareByteBuf AdvancedLeakAwareByteBuf (ByteBuf, ByteBuf, ResourceLeakTracker<ByteBuf>), Component writeMedium (int), ByteWrapper consolidate (int, int), AdvancedLeakAwareByteBuf getUnsignedByte (int), AdvancedLeakAwareByteBuf setInt (int, int), CompositeByteBufIterator removeComp (int), UnpooledDirectByteBuf getBytes (int, FileChannel, long, int, boolean), AdvancedLeakAwareByteBuf readBytes (int), ByteWrapper internalComponent (int), AdvancedLeakAwareByteBuf getCharSequence (int, int, Charset), CompositeByteBufIterator hasNext (), UnsafeByteBufUtil getShort (long), AdvancedLeakAwareByteBuf readUnsignedInt (), UnpooledDirectByteBuf _setShortLE (int, int), AdvancedLeakAwareByteBuf readSlice (int), AbstractByteBufAllocator toString (), ByteWrapper _getInt (int), CompositeByteBuf CompositeByteBuf (ByteBufAllocator, boolean, int, Iterable<ByteBuf>), AdvancedLeakAwareByteBuf setBytes (int, ByteBuf, int), UnpooledUnsafeHeapByteBuf setShort (int, int), UnpooledDirectByteBuf UnpooledDirectByteBuf (ByteBufAllocator, int, int), AdvancedLeakAwareByteBuf setBytes (int, ByteBuf, int, int), ByteWrapper CompositeByteBuf (ByteBufAllocator, boolean, int, ByteWrapper<T>, T[], int), Component isAccessible (), UnpooledDirectByteBuf setBytes (int, ScatteringByteChannel, int), UnpooledDirectByteBuf _getInt (int), UnsafeByteBufUtil setShortLE (long, int), UnsafeByteBufUtil getLongLE (byte[], int), ByteWrapper setMedium (int, int), UnpooledDirectByteBuf getBytes (int, byte[], int, int, boolean), ByteWrapper addComponents0 (boolean, int, ByteBuf[], int), AdvancedLeakAwareByteBuf writeBytes (byte[]), UnsafeByteBufUtil copy (AbstractByteBuf, long, int, int), AdvancedLeakAwareByteBuf forEachByte (int, int, ByteProcessor), UnsafeByteBufUtil batchSetZero (long, int), AdvancedLeakAwareByteBuf writeMedium (int), UnpooledUnsafeHeapByteBuf _getShort (int), ByteWrapper copyTo (int, int, int, ByteBuf), AdvancedLeakAwareByteBuf readInt (), AdvancedLeakAwareByteBuf writeLongLE (long), UnpooledUnsafeHeapByteBuf getByte (int), AdvancedLeakAwareByteBuf getBytes (int, OutputStream, int), AbstractByteBufAllocator directBuffer (int), AbstractByteBufAllocator heapBuffer (int), ByteWrapper discardReadComponents (), ByteWrapper consolidate0 (int, int), UnsafeByteBufUtil setBytes (AbstractByteBuf, long, int, ByteBuf, int, int), UnsafeByteBufUtil getInt (long), ByteWrapper setInt (int, int), ByteWrapper findComponent (int), ByteWrapper _getShort (int), AdvancedLeakAwareByteBuf getInt (int), UnsafeByteBufUtil getShort (byte[], int), UnpooledDirectByteBuf setBytes (int, FileChannel, long, int), ByteWrapper arrayOffset (), AbstractByteBufAllocator directBuffer (), AdvancedLeakAwareByteBuf retainedSlice (int, int), UnpooledDirectByteBuf nioBufferCount (), Component writeBytes (ByteBuf, int, int), AdvancedLeakAwareByteBuf setIntLE (int, int), UnpooledDirectByteBuf setBytes (int, InputStream, int), ByteWrapper _getUnsignedMediumLE (int), UnpooledDirectByteBuf getBytes (int, ByteBuffer, boolean), AdvancedLeakAwareByteBuf order (ByteOrder), UnpooledDirectByteBuf getBytes (int, FileChannel, long, int), Component writerIndex (int), AdvancedLeakAwareByteBuf copy (), AdvancedLeakAwareByteBuf setBoolean (int, boolean), ByteWrapper hasArray (), AdvancedLeakAwareByteBuf readBytes (ByteBuffer), AdvancedLeakAwareByteBuf writeLong (long), ByteWrapper discardReadBytes (), ByteWrapper copy (int, int), AbstractByteBufAllocator calculateNewCapacity (int, int), ByteWrapper getBytes (int, OutputStream, int), ByteWrapper _setShort (int, int), UnsafeByteBufUtil getLong (long), UnpooledUnsafeHeapByteBuf setIntLE (int, int), CompositeByteBufIterator next (), AdvancedLeakAwareByteBuf readLongLE (), UnpooledDirectByteBuf order (), Component clear (), ByteWrapper hasMemoryAddress (), UnpooledDirectByteBuf getBytes (int, OutputStream, int, boolean), UnpooledUnsafeHeapByteBuf getLong (int), UnsafeByteBufUtil setBytes (AbstractByteBuf, long, int, byte[], int, int), AdvancedLeakAwareByteBuf writeFloat (float), Processor process (byte), AdvancedLeakAwareByteBuf writeIntLE (int), Component resetReaderIndex (), ByteWrapper addComponents (boolean, ByteBuf), AdvancedLeakAwareByteBuf readBytes (ByteBuf, int, int), UnpooledUnsafeHeapByteBuf _setIntLE (int, int), AdvancedLeakAwareByteBuf getLong (int), AdvancedLeakAwareByteBuf bytesBefore (int, byte), ByteWrapper _getByte (int), ByteWrapper getBytes (int, FileChannel, long, int), IntPriorityQueue remove (int), AdvancedLeakAwareByteBuf getBytes (int, byte[]), AdvancedLeakAwareByteBuf readBytes (GatheringByteChannel, int), AdvancedLeakAwareByteBuf getLongLE (int), ByteWrapper capacity (), UnsafeByteBufUtil setIntLE (long, int), Component reposition (int), Processor Processor (int[], int[]), ByteWrapper _setIntLE (int, int), UnsafeByteBufUtil getUnsignedMediumLE (byte[], int), ByteWrapper setShort (int, int), UnpooledUnsafeHeapByteBuf _setInt (int, int), UnpooledDirectByteBuf _setLongLE (int, long), AdvancedLeakAwareByteBuf skipBytes (int), AdvancedLeakAwareByteBuf readUnsignedShortLE (), UnsafeByteBufUtil setLongLE (byte[], int, long), AdvancedLeakAwareByteBuf getBytes (int, ByteBuf), UnpooledDirectByteBuf _setShort (int, int), UnpooledUnsafeHeapByteBuf setByte (int, int), Component setZero (int, int), ByteWrapper numComponents (), UnpooledUnsafeHeapByteBuf writeZero (int), AdvancedLeakAwareByteBuf writeBytes (InputStream, int), Component writeByte (int), AdvancedLeakAwareByteBuf readBytes (FileChannel, long, int), AdvancedLeakAwareByteBuf AdvancedLeakAwareByteBuf (ByteBuf, ResourceLeakTracker<ByteBuf>), UnpooledUnsafeHeapByteBuf _getIntLE (int), AdvancedLeakAwareByteBuf nioBuffer (), ByteWrapper internalNioBuffer (int, int), UnpooledDirectByteBuf internalNioBuffer (int, int), UnsafeByteBufUtil getByte (long), UnpooledUnsafeHeapByteBuf _setLong (int, long), AbstractByteBufAllocator newDirectBuffer (int, int), AbstractByteBufAllocator heapBuffer (int, int), AdvancedLeakAwareByteBuf writeCharSequence (CharSequence, Charset), AdvancedLeakAwareByteBuf readIntLE (), AdvancedLeakAwareByteBuf nioBufferCount (), AdvancedLeakAwareByteBuf slice (int, int), Component setBytes (int, ByteBuf, int), ByteWrapper addComponent (int, ByteBuf), IntPriorityQueue sink (int), ByteWrapper consolidateIfNeeded (), AbstractByteBufAllocator buffer (), UnsafeByteBufUtil getIntLE (byte[], int), Component slice (), AdvancedLeakAwareByteBuf getChar (int), AdvancedLeakAwareByteBuf getUnsignedIntLE (int), AdvancedLeakAwareByteBuf forEachByte (ByteProcessor), ByteWrapper checkComponentIndex (int), UnpooledDirectByteBuf arrayOffset (), Component readBytes (ByteBuf, int), UnpooledDirectByteBuf alloc (), AdvancedLeakAwareByteBuf capacity (int), Processor getFoundNeedleId (), UnpooledUnsafeHeapByteBuf _setByte (int, int), AdvancedLeakAwareByteBuf getUnsignedShortLE (int), AdvancedLeakAwareByteBuf getBytes (int, GatheringByteChannel, int), Component setDouble (int, double), AdvancedLeakAwareByteBuf writeMediumLE (int), UnsafeByteBufUtil setMedium (byte[], int, int), Component length (), UnsafeByteBufUtil getIntLE (long), UnsafeByteBufUtil setSingleBytes (AbstractByteBuf, long, int, ByteBuffer, int), Component writeZero (int), AdvancedLeakAwareByteBuf nioBuffer (int, int), UnpooledDirectByteBuf setMedium (int, int), UnsafeByteBufUtil setZero (long, int), Component writeBytes (ByteBuf), AdvancedLeakAwareByteBuf setDouble (int, double), AdvancedLeakAwareByteBuf setLongLE (int, long), ByteWrapper _setInt (int, int), Component setFloat (int, float), Component writeFloat (float), UnpooledUnsafeHeapByteBuf getUnsignedMediumLE (int), UnpooledUnsafeHeapByteBuf _setShortLE (int, int), AdvancedLeakAwareByteBuf discardSomeReadBytes (), AdvancedLeakAwareByteBuf getShort (int), AdvancedLeakAwareByteBuf writeBytes (byte[], int, int), UnpooledUnsafeHeapByteBuf _setMedium (int, int), ByteWrapper addComponent (ByteBuf), AbstractByteBufAllocator buffer (int, int), AdvancedLeakAwareByteBuf ensureWritable (int, boolean), AdvancedLeakAwareByteBuf bytesBefore (byte), ByteWrapper updateComponentOffsets (int), AdvancedLeakAwareByteBuf setBytes (int, ByteBuffer), UnpooledDirectByteBuf setBytes (int, ByteBuf, int, int), UnsafeByteBufUtil getUnsignedMedium (byte[], int), UnpooledDirectByteBuf _getUnsignedMedium (int), ByteWrapper setByte (int, int), CompositeByteBufIterator clearComps (), UnpooledDirectByteBuf hasArray (), AdvancedLeakAwareByteBuf readFloat (), Component markWriterIndex (), UnsafeByteBufUtil setLong (long, long), Component readBytes (byte[], int, int), ByteWrapper toComponentIndex0 (int), UnpooledUnsafeHeapByteBuf setInt (int, int), ByteWrapper allocBuffer (int), ByteWrapper newComponent (ByteBuf, int), AdvancedLeakAwareByteBuf readUnsignedShort (), ByteWrapper ensureAccessible (ByteBuf), UnpooledUnsafeHeapByteBuf setMediumLE (int, int), Component Component (ByteBuf, int, ByteBuf, int, int, int, ByteBuf), UnpooledDirectByteBuf nioBuffers (int, int), AdvancedLeakAwareByteBuf touch (), UnpooledDirectByteBuf setInt (int, int), Component nioBuffers (), ByteWrapper isDirect (), ByteWrapper setBytes (int, byte[], int, int), AdvancedLeakAwareByteBuf getFloat (int), AdvancedLeakAwareByteBuf writeDouble (double), AdvancedLeakAwareByteBuf ensureWritable (int), ByteWrapper capacity (int), AbstractByteBufAllocator toLeakAwareBuffer (CompositeByteBuf), UnpooledDirectByteBuf getBytes (int, byte[], int, int), AdvancedLeakAwareByteBuf recordLeakNonRefCountingOperation (ResourceLeakTracker<ByteBuf>), Component discardSomeReadBytes (), UnpooledUnsafeHeapByteBuf _getByte (int), ByteWrapper wrap (byte[]), ByteWrapper removeComponent (int), UnpooledUnsafeHeapByteBuf allocateArray (int), UnsafeByteBufUtil getUnsignedMediumLE (long), ByteWrapper alloc (), Component retain (int), AdvancedLeakAwareByteBuf readBytes (ByteBuf), ByteWrapper nioBuffer (int, int), Component readBytes (ByteBuf, int, int), UnpooledUnsafeHeapByteBuf _getUnsignedMedium (int), UnsafeByteBufUtil setIntLE (byte[], int, int), ByteWrapper wrap (ByteBuffer), ByteWrapper _setMedium (int, int), UnsafeByteBufUtil batchSetZero (byte[], int, int), UnsafeByteBufUtil UnsafeByteBufUtil (), UnpooledUnsafeHeapByteBuf getShort (int), UnpooledDirectByteBuf copy (int, int), ByteWrapper findComponent0 (int), ByteWrapper addComponent (boolean, ByteBuf), AdvancedLeakAwareByteBuf slice (), Component setBoolean (int, boolean), AdvancedLeakAwareByteBuf writeBytes (ByteBuf, int), UnpooledUnsafeHeapByteBuf _getInt (int), IntPriorityQueue offer (int), UnpooledUnsafeHeapByteBuf setShortLE (int, int), AbstractByteBufAllocator compositeBuffer (), AdvancedLeakAwareByteBuf readMedium (), UnsafeByteBufUtil setLongLE (long, long), UnsafeByteBufUtil setBytes (AbstractByteBuf, long, int, InputStream, int), UnpooledUnsafeHeapByteBuf _getLong (int), UnpooledDirectByteBuf readBytes (GatheringByteChannel, int), AdvancedLeakAwareByteBuf setZero (int, int), UnpooledDirectByteBuf readBytes (FileChannel, long, int), AbstractByteBufAllocator ioBuffer (), Component writeBytes (byte[]), AdvancedLeakAwareByteBuf writeBytes (ByteBuf), AdvancedLeakAwareByteBuf readMediumLE (), UnpooledUnsafeHeapByteBuf getInt (int), UnsafeByteBufUtil setByte (long, int), UnpooledDirectByteBuf setShort (int, int), ByteWrapper order (), UnpooledUnsafeHeapByteBuf _getShortLE (int), AdvancedLeakAwareByteBuf setFloat (int, float), UnpooledUnsafeHeapByteBuf setLongLE (int, long), ByteWrapper iterator (), Component writeLong (long), UnpooledUnsafeHeapByteBuf _setShort (int, int), Component getBytes (int, byte[]), UnpooledDirectByteBuf unwrap (), AdvancedLeakAwareByteBuf getDouble (int), UnpooledDirectByteBuf deallocate (), UnsafeByteBufUtil setInt (byte[], int, int), UnpooledUnsafeHeapByteBuf _getLongLE (int), ByteWrapper addComponents (boolean, Iterable<ByteBuf>), Component writeDouble (double), AdvancedLeakAwareByteBuf setShort (int, int), UnsafeByteBufUtil zeroTillAligned (long, int), CompositeByteBuf CompositeByteBuf (ByteBufAllocator, boolean, int, ByteBuf), AdvancedLeakAwareByteBuf writeBytes (ScatteringByteChannel, int), UnpooledDirectByteBuf setLong (int, long), ByteWrapper forEachByteDesc0 (int, int, ByteProcessor), ByteWrapper getByte (int), Component readBytes (ByteBuffer), Component free (), Component writeBytes (byte[], int, int), AbstractByteBufAllocator AbstractByteBufAllocator (), UnpooledUnsafeHeapByteBuf getShortLE (int), ByteWrapper addComponents (int, ByteBuf), AdvancedLeakAwareByteBuf setShortLE (int, int), AdvancedLeakAwareByteBuf toString (int, int, Charset), ByteWrapper toComponentIndex (int), Component ensureWritable (int), AbstractByteBufAllocator compositeHeapBuffer (), ByteWrapper addComponents0 (boolean, int, ByteWrapper<T>, T[], int), AbstractByteBufAllocator compositeDirectBuffer (int), AdvancedLeakAwareByteBuf readUnsignedByte (), UnsafeByteBufUtil setShort (byte[], int, int), UnpooledDirectByteBuf setByte (int, int), UnpooledDirectByteBuf nioBuffer (int, int), UnsafeByteBufUtil getBytes (AbstractByteBuf, long, int, ByteBuffer), AbstractByteBufAllocator validate (int, int), UnpooledDirectByteBuf _setInt (int, int), ByteWrapper memoryAddress (), UnpooledDirectByteBuf isContiguous (), AdvancedLeakAwareByteBuf internalNioBuffer (int, int), AdvancedLeakAwareByteBuf readShortLE (), UnsafeByteBufUtil setLong (byte[], int, long), AdvancedLeakAwareByteBuf getBytes (int, ByteBuf, int, int), AdvancedLeakAwareByteBuf writeBytes (ByteBuf, int, int), ByteWrapper _setByte (int, int), Component srcIdx (int), AdvancedLeakAwareByteBuf writeShort (int), Processor AhoCorasicSearchProcessorFactory (byte[]), Processor newSearchProcessor (), UnpooledDirectByteBuf _getLongLE (int), Component readBytes (OutputStream, int), AdvancedLeakAwareByteBuf writeChar (int), ByteWrapper decompose (int, int), ByteWrapper getBytes (int, byte[], int, int), ByteWrapper consolidate (), UnpooledUnsafeHeapByteBuf getIntLE (int), AbstractByteBufAllocator compositeDirectBuffer (), UnpooledUnsafeHeapByteBuf setLong (int, long), Component touch (Object), ByteWrapper maxNumComponents (), Component writeChar (int), ByteWrapper setBytes (int, ByteBuf, int, int), UnpooledUnsafeHeapByteBuf UnpooledUnsafeHeapByteBuf (ByteBufAllocator, int, int), AbstractByteBufAllocator ioBuffer (int), CompositeByteBuf CompositeByteBuf (ByteBufAllocator, boolean, int, int), AdvancedLeakAwareByteBuf setByte (int, int), UnpooledDirectByteBuf UnpooledDirectByteBuf (ByteBufAllocator, ByteBuffer, int, boolean, boolean), AdvancedLeakAwareByteBuf writeBytes (FileChannel, long, int), UnpooledDirectByteBuf setBytes (int, byte[], int, int), IntPriorityQueue lift (int), AdvancedLeakAwareByteBuf setBytes (int, InputStream, int), AdvancedLeakAwareByteBuf retainedDuplicate (), ByteWrapper nioBuffers (int, int), UnsafeByteBufUtil getBytes (long, byte[], int, int, OutputStream, int), ByteWrapper setBytes (int, ScatteringByteChannel, int), AbstractByteBufAllocator AbstractByteBufAllocator (boolean), AdvancedLeakAwareByteBuf retain (), Component readBytes (byte[]), UnpooledDirectByteBuf isDirect (), UnpooledDirectByteBuf _getUnsignedMediumLE (int), UnsafeByteBufUtil setInt (long, int), ByteWrapper component (int), Component retain (), AdvancedLeakAwareByteBuf getUnsignedInt (int), AdvancedLeakAwareByteBuf readCharSequence (int, Charset), UnpooledDirectByteBuf capacity (int), UnpooledUnsafeHeapByteBuf getLongLE (int), AdvancedLeakAwareByteBuf readBoolean (), UnpooledDirectByteBuf getBytes (int, ByteBuffer), AdvancedLeakAwareByteBuf getBytes (int, ByteBuf, int), Component readerIndex (int), Component getBytes (int, ByteBuf, int), AbstractByteBufAllocator toLeakAwareBuffer (ByteBuf), AdvancedLeakAwareByteBuf writeZero (int), UnsafeByteBufUtil getByte (byte[], int), Component resetWriterIndex (), AdvancedLeakAwareByteBuf asReadOnly (), UnpooledDirectByteBuf _setMediumLE (int, int), ByteWrapper isEmpty (ByteBuffer), ByteWrapper addComponents (Iterable<ByteBuf>), ByteWrapper addComponents (boolean, int, Iterable<ByteBuf>), AdvancedLeakAwareByteBuf getBoolean (int), ByteWrapper setBytes (int, FileChannel, long, int), AdvancedLeakAwareByteBuf nioBuffers (int, int), UnpooledDirectByteBuf getBytes (int, GatheringByteChannel, int, boolean), AdvancedLeakAwareByteBuf setChar (int, int), AdvancedLeakAwareByteBuf setMedium (int, int), UnpooledDirectByteBuf getInt (int), Component setChar (int, int), AdvancedLeakAwareByteBuf readLong (), CompositeByteBufIterator remove (), UnpooledUnsafeHeapByteBuf getUnsignedMedium (int), AbstractByteBufAllocator buffer (int), CompositeByteBuf CompositeByteBuf (ByteBufAllocator, boolean, int), UnpooledDirectByteBuf readBytes (byte[], int, int), AdvancedLeakAwareByteBuf getByte (int), AdvancedLeakAwareByteBuf getUnsignedMedium (int), UnsafeByteBufUtil setMedium (long, int), Component writeShort (int), AdvancedLeakAwareByteBuf release (int), UnsafeByteBufUtil setShort (long, int), UnpooledDirectByteBuf internalNioBuffer (), AdvancedLeakAwareByteBuf release (), ByteWrapper removeComponents (int, int), UnpooledDirectByteBuf array (), ByteWrapper _getLong (int), UnpooledDirectByteBuf _getIntLE (int), AdvancedLeakAwareByteBuf setCharSequence (int, CharSequence, Charset), ByteWrapper array (), UnpooledDirectByteBuf getBytes (int, GatheringByteChannel, int), ByteWrapper addComponents (int, Iterable<ByteBuf>), IntPriorityQueue peek (), UnpooledDirectByteBuf getShort (int), Processor linkSuffixes (), UnpooledDirectByteBuf _getShortLE (int), ByteWrapper nioBufferCount (), Component duplicate (), AdvancedLeakAwareByteBuf readBytes (byte[]), UnpooledDirectByteBuf readBytes (OutputStream, int), Component writeBytes (ByteBuffer), UnpooledDirectByteBuf getBytes (int, ByteBuf, int, int), UnpooledDirectByteBuf memoryAddress (), AdvancedLeakAwareByteBuf setBytes (int, FileChannel, long, int), UnpooledUnsafeHeapByteBuf setMedium (int, int), AdvancedLeakAwareByteBuf bytesBefore (int, int, byte), ByteWrapper setBytes (int, ByteBuffer), UnsafeByteBufUtil getShortLE (long), UnpooledDirectByteBuf readBytes (ByteBuffer), UnsafeByteBufUtil getBytes (AbstractByteBuf, long, int, OutputStream, int), ByteWrapper _getLongLE (int), UnpooledUnsafeHeapByteBuf newSwappedByteBuf (), AdvancedLeakAwareByteBuf forEachByteDesc (ByteProcessor), UnpooledUnsafeHeapByteBuf _getUnsignedMediumLE (int), AbstractByteBufAllocator compositeBuffer (int), UnpooledDirectByteBuf getUnsignedMedium (int), IntPriorityQueue subord (int, int), ByteWrapper addComponent0 (boolean, int, ByteBuf), UnsafeByteBufUtil setBytes (AbstractByteBuf, long, int, ByteBuffer), UnpooledDirectByteBuf _setMedium (int, int), CompositeByteBuf CompositeByteBuf (ByteBufAllocator, boolean, int, ByteBuf[], int), Component idx (int), AbstractByteBufAllocator ioBuffer (int, int), UnpooledDirectByteBuf getBytes (int, OutputStream, int), ByteWrapper CompositeByteBuf (ByteBufAllocator), AdvancedLeakAwareByteBuf getUnsignedMediumLE (int), AdvancedLeakAwareByteBuf readDouble (), UnsafeByteBufUtil newUnsafeDirectByteBuf (ByteBufAllocator, int, int), ByteWrapper findIt (int), ByteWrapper checkComponentIndex (int, int), UnpooledDirectByteBuf setByteBuffer (ByteBuffer, boolean), ByteWrapper addFlattenedComponents (boolean, ByteBuf), CompositeByteBufIterator removeCompRange (int, int), AdvancedLeakAwareByteBuf setBytes (int, ScatteringByteChannel, int), AdvancedLeakAwareByteBuf indexOf (int, int, byte), UnsafeByteBufUtil getBytes (AbstractByteBuf, long, int, ByteBuf, int, int), ByteWrapper toByteIndex (int), Component setBytes (int, ByteBuf), UnpooledDirectByteBuf _setLong (int, long), ByteWrapper getBytes (int, GatheringByteChannel, int), IntPriorityQueue swap (int, int), UnpooledDirectByteBuf getLong (int), UnsafeByteBufUtil getInt (byte[], int), ByteWrapper newCompArray (int, int), IntPriorityQueue poll (), Component readBytes (ByteBuf), ByteWrapper setLong (int, long), Component touch (), ByteWrapper addComponents (ByteBuf), AdvancedLeakAwareByteBuf setMediumLE (int, int), Processor buildTrie (byte[][]), UnpooledDirectByteBuf allocateDirect (int), CompositeByteBufIterator shiftComps (int, int), UnpooledDirectByteBuf _setByte (int, int), AdvancedLeakAwareByteBuf setBytes (int, ByteBuf), AdvancedLeakAwareByteBuf newLeakAwareByteBuf (ByteBuf, ByteBuf, ResourceLeakTracker<ByteBuf>), Component writeInt (int), UnpooledUnsafeHeapByteBuf setZero (int, int), AdvancedLeakAwareByteBuf getBytes (int, byte[], int, int), AdvancedLeakAwareByteBuf nioBuffers (), AdvancedLeakAwareByteBuf readUnsignedMediumLE (), ByteWrapper getBytes (int, ByteBuffer), Component internalNioBuffer (int, int), AdvancedLeakAwareByteBuf readUnsignedMedium (), ByteWrapper wrap (T), AdvancedLeakAwareByteBuf readUnsignedIntLE (), Component setIndex (int, int), AdvancedLeakAwareByteBuf discardReadBytes (), CompositeByteBufIterator addComp (int, Component), AdvancedLeakAwareByteBuf retainedSlice (), AdvancedLeakAwareByteBuf writeInt (int)]","4408"
"1","netty/buffer","b39a1efdf76737ed65d07a6b0b8c5ac85f0f219e","215ce10e3776e3ae8fd93808c4b70ddaf3b324ce","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","7","[ByteWrapper setBytes (int, FileChannel, long, int), ByteWrapper capacity (int), ByteWrapper discardReadBytes (), ByteWrapper discardReadComponents (), ByteWrapper setBytes (int, ScatteringByteChannel, int), ByteWrapper setBytes (int, InputStream, int), Component slice ()]","56"
"2","netty/buffer","215ce10e3776e3ae8fd93808c4b70ddaf3b324ce","93f30ae7df711103656cc8ce39ea4513384b8bf8","FOR_TO_WHILE","1","1","38","[PoolChunk incrementPinnedMemory (int), PoolChunk toRunHandle (int, int, int), PoolChunk isRun (long), PoolChunk insertAvailRun0 (int, long), PoolChunk runSize (int, long), PoolChunk insertAvailRun (int, int, long), PoolChunk chunkSize (), PoolChunk initBuf (PooledByteBuf<T>, ByteBuffer, long, int, PoolThreadCache), PoolChunk initBufWithSubpage (PooledByteBuf<T>, ByteBuffer, long, int, PoolThreadCache), PoolChunk calculateRunSize (int), PoolChunk runPages (long), PoolChunk runOffset (long), PoolChunk PoolChunk (PoolArena<T>, Object, T, int, int, int, int), PoolChunk allocateSubpage (int, PoolSubpage<T>), PoolChunk decrementPinnedMemory (int), PoolChunk freeBytes (), PoolChunk collapsePast (long), PoolChunk destroy (), PoolChunk collapseRuns (long), PoolChunk isUsed (long), PoolChunk bitmapIdx (long), PoolChunk getAvailRunByOffset (int), PoolChunk newRunsAvailqueueArray (int), PoolChunk toString (), PoolChunk pinnedBytes (), PoolChunk usage (), PoolChunk splitLargeRun (long, int), PoolChunk isSubpage (long), PoolChunk PoolChunk (PoolArena<T>, Object, T, int), PoolChunk allocate (PooledByteBuf<T>, int, int, PoolThreadCache), PoolChunk lastPage (int, int), PoolChunk allocateRun (int), PoolChunk removeAvailRun0 (long), PoolChunk free (long, int, ByteBuffer), PoolChunk removeAvailRun (long), PoolChunk runFirstBestFit (int), PoolChunk usage (int), PoolChunk collapseNext (long)]","342"
"4","netty/buffer","93f30ae7df711103656cc8ce39ea4513384b8bf8","922aba7798de11b840eebf3a39f1983e624c334c","SWITCH_EQUAL_SIDES","14","1","103","[ReadOnlyByteBufferBuf getBytes (int, byte[], int, int, boolean), ReadOnlyByteBufferBuf getBytes (int, OutputStream, int, boolean), ReadOnlySlicedByteBuf asReadOnly (), ReadOnlyByteBufferBuf _setInt (int, int), ReadOnlyByteBufferBuf getBytes (int, byte[], int, int), ReadOnlySlicedByteBuf ensureWritable (int, boolean), ReadOnlyByteBufferBuf getShort (int), ReadOnlySlicedByteBuf duplicate (), ReadOnlyByteBufferBuf memoryAddress (), ReadOnlyByteBufferBuf readBytes (ByteBuf, int, int), ReadOnlyByteBufferBuf setByte (int, int), ReadOnlyByteBufferBuf setLongLE (int, long), ReadOnlyByteBufferBuf getByte (int), ReadOnlyByteBufferBuf _setShort (int, int), ReadOnlyByteBufferBuf getUnsignedMedium (int), ReadOnlyByteBufferBuf _setMedium (int, int), ReadOnlyByteBufferBuf _getInt (int), ReadOnlyByteBufferBuf setBytes (int, ByteBuffer), ReadOnlyByteBufferBuf getBytes (int, FileChannel, long, int), ReadOnlyByteBufferBuf _setShortLE (int, int), ReadOnlyByteBufferBuf setInt (int, int), ReadOnlySlicedByteBuf isWritable (), ReadOnlyByteBufferBuf isContiguous (), ReadOnlyByteBufferBuf readBytes (GatheringByteChannel, int), ReadOnlyByteBufferBuf setLong (int, long), ReadOnlyByteBufferBuf _setLong (int, long), ReadOnlyByteBufferBuf _setIntLE (int, int), ReadOnlyByteBufferBuf alloc (), ReadOnlyByteBufferBuf getUnsignedMediumLE (int), ReadOnlyByteBufferBuf nioBuffer (int, int), ReadOnlyByteBufferBuf isDirect (), ReadOnlyByteBufferBuf getIntLE (int), ReadOnlyByteBufferBuf hasMemoryAddress (), ReadOnlyByteBufferBuf hasArray (), ReadOnlyByteBufferBuf readBytes (ByteBuffer), ReadOnlyByteBufferBuf ReadOnlyByteBufferBuf (ByteBufAllocator, ByteBuffer), ReadOnlyByteBufferBuf setBytes (int, FileChannel, long, int), ReadOnlyByteBufferBuf asReadOnly (), ReadOnlyByteBufferBuf setBytes (int, byte[], int, int), ReadOnlyByteBufferBuf getBytes (int, GatheringByteChannel, int), ReadOnlyByteBufferBuf getLongLE (int), ReadOnlyByteBufferBuf isWritable (), ReadOnlyByteBufferBuf arrayOffset (), ReadOnlyByteBufferBuf unwrap (), ReadOnlyByteBufferBuf getBytes (int, ByteBuffer), ReadOnlyDuplicatedByteBuf isWritable (int), ReadOnlyDuplicatedByteBuf duplicate (), ReadOnlyByteBufferBuf setShort (int, int), ReadOnlyByteBufferBuf nioBuffers (int, int), ReadOnlyByteBufferBuf setBytes (int, ScatteringByteChannel, int), ReadOnlyByteBufferBuf getBytes (int, ByteBuf, int, int, boolean), ReadOnlyByteBufferBuf array (), ReadOnlyByteBufferBuf isReadOnly (), ReadOnlyByteBufferBuf setIntLE (int, int), ReadOnlyByteBufferBuf readBytes (FileChannel, long, int), ReadOnlyByteBufferBuf order (), ReadOnlyByteBufferBuf internalNioBuffer (int, int), ReadOnlyByteBufferBuf setMediumLE (int, int), ReadOnlyByteBufferBuf getBytes (int, OutputStream, int), ReadOnlyByteBufferBuf _getShort (int), ReadOnlyByteBufferBuf ensureWritable (int, boolean), ReadOnlyDuplicatedByteBuf ensureWritable (int, boolean), ReadOnlyByteBufferBuf deallocate (), ReadOnlyByteBufferBuf capacity (int), ReadOnlyByteBufferBuf slice (int, int), ReadOnlyByteBufferBuf _setMediumLE (int, int), ReadOnlyByteBufferBuf setBytes (int, ByteBuf, int, int), ReadOnlyByteBufferBuf _getByte (int), ReadOnlyByteBufferBuf getLong (int), ReadOnlySlicedByteBuf ReadOnlySlicedByteBuf (ByteBuf, int, int), ReadOnlyByteBufferBuf internalNioBuffer (), ReadOnlyByteBufferBuf _setLongLE (int, long), ReadOnlyByteBufferBuf isWritable (int), ReadOnlyByteBufferBuf getBytes (int, ByteBuf, int, int), ReadOnlySlicedByteBuf slice (int, int), ReadOnlyByteBufferBuf _getLong (int), ReadOnlyByteBufferBuf _getUnsignedMediumLE (int), ReadOnlyByteBufferBuf getBytes (int, GatheringByteChannel, int, boolean), ReadOnlyDuplicatedByteBuf isWritable (), ReadOnlyByteBufferBuf getInt (int), ReadOnlyByteBufferBuf setShortLE (int, int), ReadOnlyByteBufferBuf capacity (), ReadOnlyDuplicatedByteBuf ReadOnlyDuplicatedByteBuf (ByteBuf), ReadOnlyByteBufferBuf ensureWritable (int), ReadOnlyByteBufferBuf setMedium (int, int), ReadOnlyByteBufferBuf _getUnsignedMedium (int), ReadOnlyByteBufferBuf duplicate (), ReadOnlySlicedByteBuf isWritable (int), ReadOnlyByteBufferBuf getBytes (int, FileChannel, long, int, boolean), ReadOnlyByteBufferBuf readBytes (OutputStream, int), ReadOnlyByteBufferBuf _getLongLE (int), ReadOnlyByteBufferBuf _getShortLE (int), ReadOnlyByteBufferBuf copy (int, int), ReadOnlyByteBufferBuf setBytes (int, InputStream, int), ReadOnlyDuplicatedByteBuf slice (int, int), ReadOnlyDuplicatedByteBuf asReadOnly (), ReadOnlyByteBufferBuf nioBufferCount (), ReadOnlyByteBufferBuf getBytes (int, ByteBuffer, boolean), ReadOnlyByteBufferBuf nioBuffer (boolean), ReadOnlyByteBufferBuf _setByte (int, int), ReadOnlyByteBufferBuf readBytes (byte[], int, int), ReadOnlyByteBufferBuf _getIntLE (int), ReadOnlyByteBufferBuf getShortLE (int)]","1030"
"8","netty/buffer","922aba7798de11b840eebf3a39f1983e624c334c","25a1b63ed15ef914459db53d2c448fc30b12389f","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","1","[ReadOnlyByteBufferBuf readBytes (FileChannel, long, int)]","10"
"9","netty/buffer","25a1b63ed15ef914459db53d2c448fc30b12389f","d4359316d16b5a851153abf10e3b4c23b0fc90fd","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","5","[ReadOnlyByteBufferBuf readBytes (ByteBuffer), ReadOnlyByteBufferBuf getBytes (int, ByteBuf, int, int, boolean), ReadOnlyByteBufferBuf readBytes (GatheringByteChannel, int), ReadOnlyByteBufferBuf readBytes (byte[], int, int), ReadOnlyByteBufferBuf readBytes (OutputStream, int)]","50"
"10","netty/buffer","d4359316d16b5a851153abf10e3b4c23b0fc90fd","f6bc6d21903a1e7579f76b03a01874d2e1967218","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ReadOnlyByteBufferBuf ReadOnlyByteBufferBuf (ByteBufAllocator, ByteBuffer)]","10"
"16","netty/buffer","f6bc6d21903a1e7579f76b03a01874d2e1967218","fd6a2680a127d2403d613b7e12382dc2223d72e5","REVERSE_IF_ELSE","3","1","5","[ReadOnlyByteBufferBuf getBytes (int, GatheringByteChannel, int, boolean), ReadOnlyByteBufferBuf internalNioBuffer (), ReadOnlyByteBufferBuf getBytes (int, OutputStream, int, boolean), ReadOnlyByteBufferBuf getBytes (int, ByteBuf, int, int, boolean), ReadOnlyByteBufferBuf getBytes (int, FileChannel, long, int, boolean)]","50"
"17","netty/buffer","fd6a2680a127d2403d613b7e12382dc2223d72e5","7c383863c82e84b7504bc9414ef7be05160fac84","REVERSE_IF_ELSE","3","1","5","[ReadOnlyByteBufferBuf getBytes (int, GatheringByteChannel, int, boolean), ReadOnlyByteBufferBuf internalNioBuffer (), ReadOnlyByteBufferBuf getBytes (int, OutputStream, int, boolean), ReadOnlyByteBufferBuf getBytes (int, ByteBuf, int, int, boolean), ReadOnlyByteBufferBuf getBytes (int, FileChannel, long, int, boolean)]","50"
"19","netty/buffer","7c383863c82e84b7504bc9414ef7be05160fac84","fbee8f37540b7d94903d4aebf865abc66f669da1","LOCAL_VAR_RENAMING","0","1","2","[ReadOnlyByteBufferBuf readBytes (byte[], int, int), ReadOnlyByteBufferBuf getBytes (int, ByteBuf, int, int)]","20"
"20","netty/buffer","fbee8f37540b7d94903d4aebf865abc66f669da1","3b7cad0bd116da030b4152999e72ed1e71d896c3","INFIX_EXPRESSION_DIVIDING","8","1","3","[ReadOnlyByteBufferBuf _getUnsignedMediumLE (int), ReadOnlyByteBufferBuf copy (int, int), ReadOnlyByteBufferBuf _getUnsignedMedium (int)]","30"
"23","netty/buffer","3b7cad0bd116da030b4152999e72ed1e71d896c3","bfd6990b149cc1a56e0f6800ac079484efca42b1","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","1","[ReadOnlyByteBufferBuf readBytes (ByteBuf, int, int)]","10"
"25","netty/buffer","bfd6990b149cc1a56e0f6800ac079484efca42b1","ec2b944e6cfcc376f3a98f6c48257648f2458a58","LOCAL_VAR_RENAMING","0","1","2","[ReadOnlyByteBufferBuf _setIntLE (int, int), ReadOnlyByteBufferBuf _getUnsignedMediumLE (int)]","20"
"27","netty/buffer","ec2b944e6cfcc376f3a98f6c48257648f2458a58","8a0440dc34aa3aad6a17ee1eb65c8ffe2771ff7a","SWITCH_EQUAL_SIDES","14","1","4","[ReadOnlyByteBufferBuf getBytes (int, GatheringByteChannel, int, boolean), ReadOnlyByteBufferBuf internalNioBuffer (), ReadOnlyByteBufferBuf getBytes (int, OutputStream, int, boolean), ReadOnlyByteBufferBuf getBytes (int, FileChannel, long, int, boolean)]","40"
"0","netty/codec-dns","8a0440dc34aa3aad6a17ee1eb65c8ffe2771ff7a","786c00f01d00dfbff51c824118e83cf603ffc63a","FOR_TO_WHILE","1","1","54","[DnsOpCode DnsOpCode (int), DefaultDnsResponse toString (), DefaultDnsResponse clear (), DefaultDnsResponse setAuthoritativeAnswer (boolean), DefaultDnsResponse addRecord (DnsSection, int, DnsRecord), DnsRecordType hashCode (), DnsRecordType name (), AbstractDnsRecord equals (Object), AbstractDnsRecord toString (), AbstractDnsRecord name (), DnsRecordType compareTo (DnsRecordType), DefaultDnsResponse setZ (int), DefaultDnsResponse code (), AbstractDnsRecord AbstractDnsRecord (String, DnsRecordType, long), DnsOpCode compareTo (DnsOpCode), DefaultDnsResponse setRecursionDesired (boolean), DefaultDnsResponse setRecursionAvailable (boolean), DnsOpCode valueOf (int), DefaultDnsResponse addRecord (DnsSection, DnsRecord), DnsRecordType valueOf (int), DefaultDnsResponse DefaultDnsResponse (int, DnsOpCode), DefaultDnsResponse retain (), DnsOpCode byteValue (), AbstractDnsRecord hashCode (), DefaultDnsResponse touch (), DefaultDnsResponse clear (DnsSection), DefaultDnsResponse isAuthoritativeAnswer (), DefaultDnsResponse retain (int), DnsRecordType toString (), DnsOpCode DnsOpCode (int, String), DefaultDnsResponse setTruncated (boolean), AbstractDnsRecord AbstractDnsRecord (String, DnsRecordType, int, long), DefaultDnsResponse setRecord (DnsSection, DnsRecord), DefaultDnsResponse isTruncated (), DefaultDnsResponse setOpCode (DnsOpCode), DefaultDnsResponse setCode (DnsResponseCode), DnsRecordType DnsRecordType (int), DnsRecordType equals (Object), DnsOpCode equals (Object), AbstractDnsRecord IDNtoASCII (String), AbstractDnsRecord timeToLive (), AbstractDnsRecord type (), DefaultDnsResponse DefaultDnsResponse (int), DefaultDnsResponse touch (Object), DefaultDnsResponse DefaultDnsResponse (int, DnsOpCode, DnsResponseCode), DnsOpCode toString (), DefaultDnsResponse isRecursionAvailable (), DnsOpCode hashCode (), AbstractDnsRecord dnsClass (), DefaultDnsResponse setId (int), DnsRecordType DnsRecordType (int, String), DnsRecordType intValue (), DnsRecordType valueOf (String), AbstractDnsRecord appendTrailingDot (String)]","216"
"1","netty/codec-dns","786c00f01d00dfbff51c824118e83cf603ffc63a","db59c104d7c01851c70b03eb6c33faec5f623862","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","11","[DefaultDnsRecordEncoder encodeQuestion (DnsQuestion, ByteBuf), DefaultDnsRecordEncoder padWithZeros (byte, int), DefaultDnsRecordEncoder encodeName (String, ByteBuf), DefaultDnsRecordEncoder encodeOptEcsRecord (DnsOptEcsRecord, ByteBuf), DefaultDnsRecordEncoder encodeOptPseudoRecord (DnsOptPseudoRecord, ByteBuf), DefaultDnsRecordEncoder DefaultDnsRecordEncoder (), DefaultDnsRecordEncoder encodeRawRecord (DnsRawRecord, ByteBuf), DefaultDnsRecordEncoder calculateEcsAddressLength (int, int), DefaultDnsRecordEncoder encodeRecord (DnsRecord, ByteBuf), DefaultDnsRecordEncoder encodeRecord0 (DnsRecord, ByteBuf), DefaultDnsRecordEncoder encodePtrRecord (DnsPtrRecord, ByteBuf)]","55"
"2","netty/codec-dns","db59c104d7c01851c70b03eb6c33faec5f623862","0136b8d23af5ec2693f6cd26a676de3e9cf50fe8","CASE_TO_IF_ELSE","17","1","1","[DefaultDnsRecordEncoder padWithZeros (byte, int)]","5"
"4","netty/codec-dns","0136b8d23af5ec2693f6cd26a676de3e9cf50fe8","973303e47a4738a0055258653b707c09f9b0d07b","VAR_DECLARATION_MERGING","12","1","1","[DefaultDnsRecordEncoder encodeOptEcsRecord (DnsOptEcsRecord, ByteBuf)]","5"
"6","netty/codec-dns","973303e47a4738a0055258653b707c09f9b0d07b","8b58e4122962dedf20438d09dbc1f95543ebc522","LOCAL_VAR_RENAMING","0","1","2","[DefaultDnsRecordEncoder padWithZeros (byte, int), DefaultDnsRecordEncoder encodeRawRecord (DnsRawRecord, ByteBuf)]","10"
"7","netty/codec-dns","8b58e4122962dedf20438d09dbc1f95543ebc522","bc6839e7321e526ef97ebb43bdd29c2ef7aaf970","INFIX_EXPRESSION_DIVIDING","8","1","1","[DefaultDnsRecordEncoder calculateEcsAddressLength (int, int)]","5"
"8","netty/codec-dns","bc6839e7321e526ef97ebb43bdd29c2ef7aaf970","c91793880cc1dfdc4a4faa708fd81412dff2a232","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DefaultDnsRecordEncoder encodeOptEcsRecord (DnsOptEcsRecord, ByteBuf)]","5"
"9","netty/codec-dns","c91793880cc1dfdc4a4faa708fd81412dff2a232","2fc3a5cbe2dfd4c351e75dde8fbadad8df25c193","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DefaultDnsRecordEncoder encodeOptEcsRecord (DnsOptEcsRecord, ByteBuf)]","5"
"17","netty/codec-dns","2fc3a5cbe2dfd4c351e75dde8fbadad8df25c193","56004b8a32a235211e701c2dd68c731eb1414744","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DefaultDnsRecordEncoder encodeOptEcsRecord (DnsOptEcsRecord, ByteBuf)]","5"
"19","netty/codec-dns","56004b8a32a235211e701c2dd68c731eb1414744","3957469c4cdfcdb2f2c5fc97b64d1686e2367a04","VAR_DECLARATION_DIVIDING","13","1","1","[DefaultDnsRecordEncoder encodeOptEcsRecord (DnsOptEcsRecord, ByteBuf)]","5"
"20","netty/codec-dns","3957469c4cdfcdb2f2c5fc97b64d1686e2367a04","e86f4acbb5657a633d4aae9a240dd9c6066cb363","SWITCH_EQUAL_SIDES","14","1","1","[DefaultDnsRecordEncoder padWithZeros (byte, int)]","5"
"25","netty/codec-dns","e86f4acbb5657a633d4aae9a240dd9c6066cb363","fb54ddc6755ab0ee0e21c79e58688061fdb60b15","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[DefaultDnsRecordEncoder encodeOptEcsRecord (DnsOptEcsRecord, ByteBuf)]","5"
"0","netty/codec-haproxy","fb54ddc6755ab0ee0e21c79e58688061fdb60b15","2d15be3409eb43fe67ddc8443cfcfa2e3e17924d","PRE_POST_FIX_EXPRESSION_DIVIDING","16","1","67","[StructHeaderExtractor StructHeaderExtractor (int), HAProxyMessageDecoder failOverLimit (ChannelHandlerContext, int), HAProxyMessageDecoder match (byte[], ByteBuf, int), HAProxySSLTLV contentNumBytes (), HAProxyMessage HAProxyMessage (HAProxyProtocolVersion, HAProxyCommand, HAProxyProxiedProtocol, String, String, int, int), HAProxyMessage sourceAddress (), HAProxySSLTLV isPP2ClientSSL (), StructHeaderExtractor delimiterLength (ByteBuf, int), HAProxySSLTLV HAProxySSLTLV (int, byte, List<HAProxyTLV>), HAProxyMessage proxiedProtocol (), HAProxyMessageDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), HAProxyMessageDecoder findEndOfHeader (ByteBuf), HAProxyMessage decodeHeader (ByteBuf), HAProxyMessage protocolVersion (), HeaderExtractor extract (ChannelHandlerContext, ByteBuf), HAProxyMessage release (int), HAProxyMessageDecoder failOverLimit (ChannelHandlerContext, String), HAProxyMessageDecoder detectProtocol (ByteBuf), HAProxySSLTLV toString (), HAProxyMessageDecoder HAProxyMessageDecoder (), HAProxyMessageDecoder HAProxyMessageDecoder (boolean), HAProxyMessageDecoder decodeLine (ChannelHandlerContext, ByteBuf), HAProxyMessage touch (Object), HAProxySSLTLV encapsulatedTLVs (), LineHeaderExtractor LineHeaderExtractor (int), HAProxyMessage retain (int), HAProxyMessage destinationAddress (), HAProxyMessage checkPort (int, AddressFamily), HAProxyMessage retain (), HAProxyMessage portStringToInt (String), HAProxyMessageDecoder decodeStruct (ChannelHandlerContext, ByteBuf), HAProxyMessage toString (), HAProxySSLTLV isPP2ClientCertSess (), HeaderExtractor findEndOfHeader (ByteBuf), StructHeaderExtractor findEndOfHeader (ByteBuf), HAProxyMessage touch (), LineHeaderExtractor delimiterLength (ByteBuf, int), HAProxyMessage HAProxyMessage (HAProxyProtocolVersion, HAProxyCommand, HAProxyProxiedProtocol, String, String, String, String), HAProxyMessage readTlvs (ByteBuf), HAProxyMessageDecoder findVersion (ByteBuf), HAProxyMessage decodeHeader (String), HAProxyMessage tryRecord (), HAProxyMessageDecoder channelRead (ChannelHandlerContext, Object), HeaderExtractor HeaderExtractor (int), HAProxyMessage tlvNumBytes (), HAProxyMessage command (), HAProxyMessage sourcePort (), LineHeaderExtractor findEndOfHeader (ByteBuf), HAProxyMessage readNextTLV (ByteBuf, int), HAProxyMessage ipBytesToString (ByteBuf, int), HAProxyMessage deallocate (), HAProxySSLTLV isPP2ClientCertConn (), HeaderExtractor delimiterLength (ByteBuf, int), HAProxySSLTLV client (), HAProxyMessage checkAddress (String, AddressFamily), HAProxySSLTLV HAProxySSLTLV (int, byte, List<HAProxyTLV>, ByteBuf), HAProxySSLTLV verify (), HAProxyMessage destinationPort (), HAProxyMessage tlvs (), HAProxyMessageDecoder HAProxyMessageDecoder (int), HAProxyMessageDecoder findEndOfLine (ByteBuf), HAProxyMessage release (), HAProxyMessage HAProxyMessage (HAProxyProtocolVersion, HAProxyCommand, HAProxyProxiedProtocol, String, String, int, int, List<? extends HAProxyTLV>), HAProxyMessage unknownMsg (HAProxyProtocolVersion, HAProxyCommand), HAProxyMessageDecoder fail (ChannelHandlerContext, String, Exception), HAProxyMessageDecoder isSingleDecode (), HAProxyMessageDecoder HAProxyMessageDecoder (int, boolean)]","201"
"1","netty/codec-haproxy","2d15be3409eb43fe67ddc8443cfcfa2e3e17924d","4976343453c0cc361c795fedf5e9161ab3b9d576","LOCAL_VAR_RENAMING","0","1","1","[HAProxyConstants HAProxyConstants ()]","4"
"2","netty/codec-haproxy","4976343453c0cc361c795fedf5e9161ab3b9d576","1de3b266be5d503c8bf465a150bbc972a7a7c6de","LOCAL_VAR_RENAMING","0","1","0","[]","0"
"11","netty/codec-haproxy","1de3b266be5d503c8bf465a150bbc972a7a7c6de","8aa2f8fbb31312983ab2adef37821f4ad66f4910","LOCAL_VAR_RENAMING","0","1","0","[]","0"
"28","netty/codec-haproxy","8aa2f8fbb31312983ab2adef37821f4ad66f4910","983be92db47734e0b29ed2a198691bda187930ad","LOCAL_VAR_RENAMING","0","1","0","[]","0"
"0","netty/codec-http","983be92db47734e0b29ed2a198691bda187930ad","f2fd0be03878810ca93e05e227dc7ff847e5291d","VAR_DECLARATION_DIVIDING","13","1","67","[AbstractDiskHttpData tempFile (), HttpUtil getCharset (CharSequence), AbstractDiskHttpData addContent (ByteBuf, boolean), AbstractDiskHttpData getString (), AbstractDiskHttpData setContent (InputStream), HttpUtil getCharset (HttpMessage), SpdySessionStatus toString (), HttpUtil formatHostnameForHttp (InetSocketAddress), HttpUtil setKeepAlive (HttpHeaders, HttpVersion, boolean), AbstractDiskHttpData touch (Object), AbstractDiskHttpData renameTo (File), AbstractDiskHttpData deleteOnExit (), HttpUtil getCharset (CharSequence, Charset), HttpUtil getCharsetAsSequence (CharSequence), SpdySessionStatus statusPhrase (), AbstractDiskHttpData getPrefix (), AbstractDiskHttpData setContent (File), SpdySessionStatus code (), SpdyHeaderBlockJZlibEncoder encode (ByteBufAllocator, SpdyHeadersFrame), HttpUtil setKeepAlive (HttpMessage, boolean), HttpUtil isOriginForm (URI), HttpUtil isTransferEncodingChunked (HttpMessage), HttpUtil isKeepAlive (HttpMessage), HttpUtil setTransferEncodingChunked (HttpMessage, boolean), HttpUtil setContentLength (HttpMessage, long), HttpUtil HttpUtil (), HttpUtil set100ContinueExpected (HttpMessage, boolean), HttpUtil normalizeAndGetContentLength (List<? extends CharSequence>, boolean, boolean), HttpUtil getContentLength (HttpMessage), AbstractDiskHttpData getBaseDirectory (), AbstractDiskHttpData getFile (), AbstractDiskHttpData getChunk (int), HttpUtil getMimeType (CharSequence), AbstractDiskHttpData getDiskFilename (), HttpUtil isUnsupportedExpectation (HttpMessage), SpdySessionStatus hashCode (), HttpUtil isOriginForm (String), AbstractDiskHttpData getString (Charset), AbstractDiskHttpData getByteBuf (), HttpUtil isExpectHeaderValid (HttpMessage), HttpUtil isAsteriskForm (String), SpdyHeaderBlockJZlibEncoder end (), AbstractDiskHttpData get (), HttpUtil is100ContinueExpected (HttpMessage), AbstractDiskHttpData setContent (ByteBuf), AbstractDiskHttpData delete (), AbstractDiskHttpData AbstractDiskHttpData (String, Charset, long), AbstractDiskHttpData touch (), SpdyHeaderBlockJZlibEncoder encode (ByteBufAllocator), HttpUtil getContentLength (HttpMessage, long), AbstractDiskHttpData getPostfix (), HttpUtil getContentLength (HttpMessage, int), HttpUtil getWebSocketContentLength (HttpMessage), AbstractDiskHttpData isInMemory (), SpdySessionStatus SpdySessionStatus (int, String), SpdyHeaderBlockJZlibEncoder setInput (ByteBuf), HttpUtil getCharset (HttpMessage, Charset), HttpUtil isAsteriskForm (URI), HttpUtil getCharsetAsString (HttpMessage), AbstractDiskHttpData readFrom (File), SpdySessionStatus compareTo (SpdySessionStatus), SpdySessionStatus valueOf (int), HttpUtil getCharsetAsSequence (HttpMessage), HttpUtil isContentLengthSet (HttpMessage), SpdySessionStatus equals (Object), SpdyHeaderBlockJZlibEncoder SpdyHeaderBlockJZlibEncoder (SpdyVersion, int, int, int), HttpUtil getMimeType (HttpMessage)]","268"
"1","netty/codec-http","f2fd0be03878810ca93e05e227dc7ff847e5291d","5fcccc9971dd42184d14fcd04e20075934584b4d","LOCAL_VAR_RENAMING","0","1","11","[BinaryWebSocketFrame copy (), BinaryWebSocketFrame duplicate (), BinaryWebSocketFrame BinaryWebSocketFrame (), BinaryWebSocketFrame retainedDuplicate (), BinaryWebSocketFrame retain (int), BinaryWebSocketFrame BinaryWebSocketFrame (ByteBuf), BinaryWebSocketFrame replace (ByteBuf), BinaryWebSocketFrame BinaryWebSocketFrame (boolean, int, ByteBuf), BinaryWebSocketFrame retain (), BinaryWebSocketFrame touch (), BinaryWebSocketFrame touch (Object)]","55"
"8","netty/codec-http","5fcccc9971dd42184d14fcd04e20075934584b4d","8f35aace11ce04ce817580cce147a102586ab1ad","LOCAL_VAR_RENAMING","0","1","2","[BinaryWebSocketFrame replace (ByteBuf), BinaryWebSocketFrame touch (Object)]","10"
"14","netty/codec-http","8f35aace11ce04ce817580cce147a102586ab1ad","ea9a06f0e28bad5391c445814c247d54f8df5804","LOCAL_VAR_RENAMING","0","1","2","[BinaryWebSocketFrame retain (int), BinaryWebSocketFrame BinaryWebSocketFrame (boolean, int, ByteBuf)]","10"
"18","netty/codec-http","ea9a06f0e28bad5391c445814c247d54f8df5804","501264e68a596edee4aa413eeffeddc725cd4d85","LOCAL_VAR_RENAMING","0","1","2","[BinaryWebSocketFrame BinaryWebSocketFrame (boolean, int, ByteBuf), BinaryWebSocketFrame touch (Object)]","10"
"20","netty/codec-http","501264e68a596edee4aa413eeffeddc725cd4d85","5377efc4485f08328f00eaf7fe6b9d84ac0afa8a","LOCAL_VAR_RENAMING","0","1","2","[BinaryWebSocketFrame BinaryWebSocketFrame (ByteBuf), BinaryWebSocketFrame BinaryWebSocketFrame (boolean, int, ByteBuf)]","10"
"28","netty/codec-http","5377efc4485f08328f00eaf7fe6b9d84ac0afa8a","d19b78e937539dd1a8f94bf5338155b27fc2a4c5","LOCAL_VAR_RENAMING","0","1","2","[BinaryWebSocketFrame retain (int), BinaryWebSocketFrame BinaryWebSocketFrame (ByteBuf)]","10"
"0","netty/codec-http2","d19b78e937539dd1a8f94bf5338155b27fc2a4c5","e9d2bb67f962ad857ea9e7983819824f676661f5","SWITCH_EQUAL_SIDES","14","1","201","[DefaultHttp2DataFrame release (), State updateStreamableBytes (int, boolean), DefaultHttp2DataFrame duplicate (), DefaultHttp2DataFrame DefaultHttp2DataFrame (ByteBuf, boolean, int), CompressorHttp2ConnectionEncoder cleanup (Http2Stream, EmbeddedChannel), Http2MultiplexCodec handlerRemoved0 (ChannelHandlerContext), HpackDecoder decodeULE128 (ByteBuf, long), CompressorHttp2ConnectionEncoder CompressorHttp2ConnectionEncoder (Http2ConnectionEncoder), State takeChild (Iterator<IntObjectMap.PrimitiveEntry<State>>, State, boolean, List<ParentChangedEvent>), InboundHttp2ToHttpAdapter onRstStreamRead (ChannelHandlerContext, int, long), Http2MultiplexCodecStreamChannel flush0 (ChannelHandlerContext), Http2Decompressor decompressor (), DefaultHttp2PriorityFrame hashCode (), State close (), Http2HeadersSink Http2HeadersSink (int, Http2Headers, long, boolean), DelegatingDecompressorFrameListener DelegatingDecompressorFrameListener (Http2Connection, Http2FrameListener, boolean), InboundHttp2ToHttpAdapter newMessage (Http2Stream, Http2Headers, boolean, ByteBufAllocator), InboundHttp2ToHttpAdapter onSettingsRead (ChannelHandlerContext, Http2Settings), State priorityQueueIndex (DefaultPriorityQueue<?>), State removePseudoTimeQueue (State), DefaultHttp2PriorityFrame DefaultHttp2PriorityFrame (int, short, boolean), Http2MultiplexCodec channelRead (ChannelHandlerContext, Object), HpackDecoder decodeULE128 (ByteBuf, int), WeightedFairQueueByteDistributor distribute (int, Writer, State), HpackDecoder HpackDecoder (long), CompressorHttp2ConnectionEncoder writeData (ChannelHandlerContext, int, ByteBuf, int, boolean, ChannelPromise), InboundHttp2ToHttpAdapter fireChannelRead (ChannelHandlerContext, FullHttpMessage, boolean, Http2Stream), CompressorHttp2ConnectionEncoder nextReadableBuf (EmbeddedChannel), InboundHttp2ToHttpAdapter mustSendImmediately (FullHttpMessage), Http2MultiplexCodec visit (Http2FrameStream), DefaultHttp2DataFrame isEndStream (), State updatePseudoTime (State, int, long), DefaultHttp2DataFrame equals (Object), InboundHttp2ToHttpAdapter onDataRead (ChannelHandlerContext, int, ByteBuf, int, boolean), Http2MultiplexCodec onHttp2StreamStateChanged (ChannelHandlerContext, DefaultHttp2FrameStream), InboundHttp2ToHttpAdapter copyIfNeeded (ByteBufAllocator, FullHttpMessage), DelegatingDecompressorFrameListener DelegatingDecompressorFrameListener (Http2Connection, Http2FrameListener), WeightedFairQueueByteDistributor isChild (int, int, short), DefaultHttp2DataFrame refCnt (), StateOnlyComparator compare (State, State), State initChildrenIfEmpty (), State State (int), DefaultHttp2PriorityFrame stream (Http2FrameStream), StatePseudoTimeComparator compare (State, State), DelegatingDecompressorFrameListener initDecompressor (ChannelHandlerContext, int, Http2Headers, boolean), Http2MultiplexCodecStreamChannel addChannelToReadCompletePendingQueue (), ConsumedBytesConverter unconsumedBytes (Http2Stream), WeightedFairQueueByteDistributor onStreamActive (Http2Stream), DefaultHttp2DataFrame retainedDuplicate (), CompressorHttp2ConnectionEncoder bindCompressorToStream (EmbeddedChannel, int), State getTotalWeight (), DelegatingDecompressorFrameListener decompressor (Http2Stream), WeightedFairQueueByteDistributor state (Http2Stream), State State (Http2Stream, int), DefaultHttp2PriorityFrame streamDependency (), HpackHuffmanDecoder processNibble (int), State pollPseudoTimeQueue (), Http2MultiplexCodecStreamChannel isParentReadInProgress (), Http2MultiplexCodecStreamChannel parentContext (), HpackHuffmanDecoder process (byte), InboundHttp2ToHttpAdapter onHeadersRead (ChannelHandlerContext, int, Http2Headers, int, short, boolean, int, boolean), Http2MultiplexCodec channelWritabilityChanged (ChannelHandlerContext), HpackDecoder getIndexedHeader (int), DefaultHttp2DataFrame DefaultHttp2DataFrame (ByteBuf), DefaultHttp2DataFrame initialFlowControlledBytes (), State setDistributing (), State offerPseudoTimeQueue (State), State setParent (State), WeightedFairQueueByteDistributor notifyParentChanged (List<ParentChangedEvent>), State offerAndInitializePseudoTime (State), ConsumedBytesConverter initialWindowSize (Http2Stream), DefaultHttp2DataFrame toString (), InboundHttp2ToHttpAdapter onHeadersRead (ChannelHandlerContext, int, Http2Headers, int, boolean), State removeAllChildrenExcept (State), CompressorHttp2ConnectionEncoder getTargetContentEncoding (CharSequence), WeightedFairQueueByteDistributor numChildren (int), HpackDecoder readName (int), WeightedFairQueueByteDistributor distributeToChildren (int, Writer, State), Http2MultiplexCodec processPendingReadCompleteQueue (), InboundHttp2ToHttpAdapter onRstStreamRead (Http2Stream, FullHttpMessage), DefaultHttp2DataFrame touch (Object), Http2MultiplexCodec Http2MultiplexCodec (Http2ConnectionEncoder, Http2ConnectionDecoder, Http2Settings, ChannelHandler, ChannelHandler, boolean, boolean), CompressorHttp2ConnectionEncoder newCompressor (ChannelHandlerContext, Http2Headers, boolean), Http2MultiplexCodec flush0 (ChannelHandlerContext), WeightedFairQueueByteDistributor distribute (int, Writer), Http2Decompressor Http2Decompressor (EmbeddedChannel), DefaultHttp2DataFrame stream (Http2FrameStream), DelegatingDecompressorFrameListener nextReadableBuf (EmbeddedChannel), DefaultHttp2PriorityFrame toString (), ConsumedBytesConverter initialWindowSize (), HpackDecoder notEnoughDataException (ByteBuf), InboundHttp2ToHttpAdapter InboundHttp2ToHttpAdapter (Http2Connection, int, boolean, boolean), DefaultHttp2DataFrame DefaultHttp2DataFrame (ByteBuf, boolean), State initChildren (), WeightedFairQueueByteDistributor updateDependencyTree (int, int, short, boolean), WeightedFairQueueByteDistributor allocationQuantum (int), ConsumedBytesConverter ConsumedBytesConverter (Http2LocalFlowController), DefaultHttp2DataFrame copy (), ConsumedBytesConverter incrementWindowSize (Http2Stream, int), HpackDecoder getMaxHeaderListSize (), DefaultHttp2DataFrame retain (int), DelegatingDecompressorFrameListener cleanup (Http2Decompressor), InboundHttp2ToHttpAdapter putMessage (Http2Stream, FullHttpMessage), Http2MultiplexCodec channelReadComplete (ChannelHandlerContext), Http2MultiplexCodec onHttp2Frame (ChannelHandlerContext, Http2Frame), HpackDecoder decode (ByteBuf, Http2HeadersSink), DelegatingDecompressorFrameListener newContentDecompressor (ChannelHandlerContext, CharSequence), InboundHttp2ToHttpAdapter removeMessage (Http2Stream, boolean), ConsumedBytesConverter initialWindowSize (int), CompressorHttp2ConnectionEncoder defaultCompressionOptions (), DefaultHttp2PriorityFrame exclusive (), ImmediateSendDetector copyIfNeeded (ByteBufAllocator, FullHttpMessage), State activeCountChangeForTree (int), HpackDecoder getMaxHeaderTableSize (), DefaultHttp2DataFrame release (int), State removeChild (State), DefaultHttp2PriorityFrame name (), State priorityQueueIndex (DefaultPriorityQueue<?>, int), State peekPseudoTimeQueue (), ParentChangedEvent ParentChangedEvent (State, State), HpackDecoder HpackDecoder (long, int), DefaultHttp2DataFrame padding (), WeightedFairQueueByteDistributor onStreamAdded (Http2Stream), WeightedFairQueueByteDistributor onStreamClosed (Http2Stream), Http2MultiplexCodecStreamChannel write0 (ChannelHandlerContext, Object), State isActive (), Http2MultiplexCodec onHttpClientUpgrade (), CompressorHttp2ConnectionEncoder writeHeaders (ChannelHandlerContext, int, Http2Headers, int, boolean, ChannelPromise), DefaultHttp2DataFrame DefaultHttp2DataFrame (boolean), Http2MultiplexCodec onUserEventTriggered (ChannelHandlerContext, Object), CompressorHttp2ConnectionEncoder onStreamRemoved (Http2Stream), InboundHttp2ToHttpAdapter onStreamRemoved (Http2Stream), HpackDecoder getHeaderField (int), Http2HeadersSink appendToHeaderList (AsciiString, AsciiString), DefaultHttp2DataFrame name (), DefaultHttp2DataFrame replace (ByteBuf), Http2MultiplexCodec handlerAdded0 (ChannelHandlerContext), DefaultHttp2PriorityFrame weight (), InboundHttp2ToHttpAdapter getMessage (Http2Stream), DefaultHttp2DataFrame retain (), DelegatingDecompressorFrameListener onHeadersRead (ChannelHandlerContext, int, Http2Headers, int, boolean), DelegatingDecompressorFrameListener onHeadersRead (ChannelHandlerContext, int, Http2Headers, int, short, boolean, int, boolean), HpackDecoder decode (int, ByteBuf, Http2Headers, boolean), State setStreamReservedOrActivated (), State unsetActive (), HpackDecoder decodeDynamicTableSizeUpdates (ByteBuf), ConsumedBytesConverter windowSize (Http2Stream), State toString (), State takeChild (State, boolean, List<ParentChangedEvent>), State State (int, Http2Stream, int), HpackDecoder readStringLiteral (ByteBuf, int, boolean), Http2MultiplexCodec onHttp2FrameStreamException (ChannelHandlerContext, Http2FrameStreamException), DefaultHttp2PriorityFrame equals (Object), HpackDecoder validateHeader (int, AsciiString, CharSequence, HeaderType), Http2MultiplexCodecStreamChannel Http2MultiplexCodecStreamChannel (DefaultHttp2FrameStream, ChannelHandler), Http2Decompressor incrementDecompressedBytes (int), WeightedFairQueueByteDistributor WeightedFairQueueByteDistributor (Http2Connection), InboundHttp2ToHttpAdapter processHeadersEnd (ChannelHandlerContext, Http2Stream, FullHttpMessage, boolean), State unsetDistributing (), DefaultHttp2DataFrame touch (), Http2HeadersSink finish (), Http2Decompressor incrementCompressedBytes (int), HpackDecoder insertHeader (Http2HeadersSink, AsciiString, AsciiString, IndexType), CompressorHttp2ConnectionEncoder newContentCompressor (ChannelHandlerContext, CharSequence), CompressorHttp2ConnectionEncoder CompressorHttp2ConnectionEncoder (Http2ConnectionEncoder, int, int, int), State write (int, Writer), HpackHuffmanDecoder HpackHuffmanDecoder (), Http2MultiplexCodec newOutboundStream (), ConsumedBytesConverter channelHandlerContext (ChannelHandlerContext), State isDistributing (), DelegatingDecompressorFrameListener onDataRead (ChannelHandlerContext, int, ByteBuf, int, boolean), CompressorHttp2ConnectionEncoder newCompressionChannel (ChannelHandlerContext, ZlibWrapper), ConsumedBytesConverter receiveFlowControlledFrame (Http2Stream, ByteBuf, int, boolean), HpackDecoder length (), WeightedFairQueueByteDistributor WeightedFairQueueByteDistributor (Http2Connection, int), ConsumedBytesConverter consumeBytes (Http2Stream, int), InboundHttp2ToHttpAdapter processHeadersBegin (ChannelHandlerContext, Http2Stream, Http2Headers, boolean, boolean, boolean), HpackDecoder setMaxHeaderTableSize (long), State setActive (), State toString (StringBuilder), State wasStreamReservedOrActivated (), DelegatingDecompressorFrameListener getTargetContentEncoding (CharSequence), WeightedFairQueueByteDistributor onStreamRemoved (Http2Stream), State isDescendantOf (State), HpackHuffmanDecoder decode (ByteBuf, int), ConsumedBytesConverter frameWriter (Http2FrameWriter), CompressorHttp2ConnectionEncoder writeHeaders (ChannelHandlerContext, int, Http2Headers, int, short, boolean, int, boolean, ChannelPromise), HpackDecoder setMaxHeaderListSize (long), CompressorHttp2ConnectionEncoder CompressorHttp2ConnectionEncoder (Http2ConnectionEncoder, CompressionOptions), Http2Decompressor consumeBytes (int, int), HpackDecoder setDynamicTableSize (long), InboundHttp2ToHttpAdapter onPushPromiseRead (ChannelHandlerContext, int, int, Http2Headers, int), HpackDecoder size (), Http2MultiplexCodec onHttp2GoAwayFrame (ChannelHandlerContext, Http2GoAwayFrame), WeightedFairQueueByteDistributor updateStreamableBytes (StreamState), WeightedFairQueueByteDistributor state (int), State State (Http2Stream), DelegatingDecompressorFrameListener onStreamRemoved (Http2Stream), DefaultHttp2DataFrame hashCode (), ImmediateSendDetector mustSendImmediately (FullHttpMessage), DefaultHttp2DataFrame content ()]","1809"
"3","netty/codec-http2","e9d2bb67f962ad857ea9e7983819824f676661f5","ed1165e080c00f0ee5f9e1319cd0e92e4c11f256","SWITCH_EQUAL_SIDES","14","1","1","[DefaultHttp2DataFrame equals (Object)]","9"
"6","netty/codec-http2","ed1165e080c00f0ee5f9e1319cd0e92e4c11f256","8af9d58b771260790b4d5a00273c2453a4140ab1","SWITCH_EQUAL_SIDES","14","1","1","[DefaultHttp2DataFrame equals (Object)]","9"
"7","netty/codec-http2","8af9d58b771260790b4d5a00273c2453a4140ab1","c3e455678d35444cca2c2260b628339fdcba07b4","REVERSE_IF_ELSE","3","1","1","[DefaultHttp2DataFrame equals (Object)]","9"
"9","netty/codec-http2","c3e455678d35444cca2c2260b628339fdcba07b4","b98746ab03a825e3a1247708fc48b403d17acd31","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DefaultHttp2DataFrame DefaultHttp2DataFrame (ByteBuf, boolean, int)]","9"
"11","netty/codec-http2","b98746ab03a825e3a1247708fc48b403d17acd31","ca1b40b4085999e3e5fbc43703d9de1cd88871e7","REVERSE_IF_ELSE","3","1","2","[DefaultHttp2DataFrame DefaultHttp2DataFrame (ByteBuf, boolean, int), DefaultHttp2DataFrame equals (Object)]","18"
"27","netty/codec-http2","ca1b40b4085999e3e5fbc43703d9de1cd88871e7","f297f30e0679bb49658f4babdc64c6ece6bc04bb","LOCAL_VAR_RENAMING","0","1","7","[DefaultHttp2DataFrame DefaultHttp2DataFrame (ByteBuf, boolean, int), DefaultHttp2DataFrame toString (), DefaultHttp2DataFrame stream (Http2FrameStream), DefaultHttp2DataFrame equals (Object), DefaultHttp2DataFrame replace (ByteBuf), DefaultHttp2DataFrame hashCode (), DefaultHttp2DataFrame padding ()]","63"
"29","netty/codec-http2","f297f30e0679bb49658f4babdc64c6ece6bc04bb","042bb3ea38ea1b278e8e5f6461eca63fd86426c0","LOCAL_VAR_RENAMING","0","1","1","[DefaultHttp2DataFrame DefaultHttp2DataFrame (ByteBuf, boolean)]","9"
"0","netty/codec-memcache","042bb3ea38ea1b278e8e5f6461eca63fd86426c0","1a01c3bad6243c9b1ffe737324b36ebcfb41c5d8","REVERSE_IF_ELSE","3","1","54","[AbstractBinaryMemcacheMessage setMagic (byte), AbstractBinaryMemcacheMessage setOpaque (int), AbstractMemcacheObjectEncoder encodeAndRetain (Object), AbstractBinaryMemcacheMessage retain (), AbstractMemcacheObjectEncoder encodeMessage (ChannelHandlerContext, M), AbstractBinaryMemcacheMessage setKey (ByteBuf), DefaultFullBinaryMemcacheRequest touch (), AbstractBinaryMemcacheMessage key (), AbstractBinaryMemcacheMessage setDataType (byte), AbstractBinaryMemcacheMessage extras (), DefaultFullBinaryMemcacheRequest deallocate (), BinaryMemcacheResponseDecoder BinaryMemcacheResponseDecoder (), AbstractBinaryMemcacheMessage setExtras (ByteBuf), AbstractBinaryMemcacheMessage dataType (), AbstractBinaryMemcacheMessage opcode (), DefaultFullBinaryMemcacheRequest newInstance (ByteBuf, ByteBuf, ByteBuf), AbstractBinaryMemcacheEncoder encodeKey (ByteBuf, ByteBuf), AbstractBinaryMemcacheEncoder encodeMessage (ChannelHandlerContext, M), AbstractBinaryMemcacheEncoder encodeHeader (ByteBuf, M), AbstractBinaryMemcacheMessage touch (), AbstractMemcacheObjectEncoder encode (ChannelHandlerContext, Object, List<Object>), BinaryMemcacheResponseDecoder decodeHeader (ByteBuf), BinaryMemcacheResponseDecoder BinaryMemcacheResponseDecoder (int), AbstractBinaryMemcacheMessage magic (), AbstractBinaryMemcacheMessage keyLength (), BinaryMemcacheResponseDecoder buildInvalidMessage (), AbstractBinaryMemcacheMessage extrasLength (), DefaultFullBinaryMemcacheRequest content (), DefaultFullBinaryMemcacheRequest retain (), AbstractBinaryMemcacheMessage AbstractBinaryMemcacheMessage (ByteBuf, ByteBuf), AbstractBinaryMemcacheMessage touch (Object), AbstractBinaryMemcacheMessage setOpcode (byte), AbstractBinaryMemcacheMessage copyMeta (AbstractBinaryMemcacheMessage), DefaultFullBinaryMemcacheRequest DefaultFullBinaryMemcacheRequest (ByteBuf, ByteBuf, ByteBuf), AbstractBinaryMemcacheMessage setKeyLength (short), AbstractBinaryMemcacheMessage setExtrasLength (byte), AbstractBinaryMemcacheMessage deallocate (), AbstractBinaryMemcacheMessage setTotalBodyLength (int), AbstractBinaryMemcacheMessage totalBodyLength (), BinaryMemcacheRequestEncoder encodeHeader (ByteBuf, BinaryMemcacheRequest), AbstractBinaryMemcacheMessage retain (int), DefaultFullBinaryMemcacheRequest copy (), DefaultFullBinaryMemcacheRequest replace (ByteBuf), AbstractBinaryMemcacheMessage cas (), DefaultFullBinaryMemcacheRequest retain (int), AbstractMemcacheObjectEncoder acceptOutboundMessage (Object), AbstractBinaryMemcacheMessage opaque (), AbstractBinaryMemcacheMessage setCas (long), AbstractBinaryMemcacheEncoder encodeExtras (ByteBuf, ByteBuf), AbstractMemcacheObjectEncoder contentLength (Object), DefaultFullBinaryMemcacheRequest duplicate (), DefaultFullBinaryMemcacheRequest touch (Object), DefaultFullBinaryMemcacheRequest retainedDuplicate (), DefaultFullBinaryMemcacheRequest DefaultFullBinaryMemcacheRequest (ByteBuf, ByteBuf)]","324"
"2","netty/codec-memcache","1a01c3bad6243c9b1ffe737324b36ebcfb41c5d8","6637d264d85558e313e2eeacdc35d6d1e2c23590","REVERSE_IF_ELSE","3","1","3","[AbstractMemcacheObjectEncoder contentLength (Object), AbstractMemcacheObjectEncoder encode (ChannelHandlerContext, Object, List<Object>), AbstractMemcacheObjectEncoder encodeAndRetain (Object)]","18"
"21","netty/codec-memcache","6637d264d85558e313e2eeacdc35d6d1e2c23590","ea90bbaf22ead0b0bebc37d132383012cec1e3af","REVERSE_IF_ELSE","3","1","1","[AbstractMemcacheObjectEncoder encodeAndRetain (Object)]","6"
"28","netty/codec-memcache","ea90bbaf22ead0b0bebc37d132383012cec1e3af","5204148b0c37b457a330367bcd21cfb5b22ed73e","LOCAL_VAR_RENAMING","0","1","10","[DefaultBinaryMemcacheRequest setReserved (short), DefaultBinaryMemcacheRequest touch (Object), DefaultBinaryMemcacheRequest DefaultBinaryMemcacheRequest (), DefaultBinaryMemcacheRequest reserved (), DefaultBinaryMemcacheRequest DefaultBinaryMemcacheRequest (ByteBuf), DefaultBinaryMemcacheRequest retain (int), DefaultBinaryMemcacheRequest touch (), DefaultBinaryMemcacheRequest retain (), DefaultBinaryMemcacheRequest DefaultBinaryMemcacheRequest (ByteBuf, ByteBuf), DefaultBinaryMemcacheRequest copyMeta (DefaultBinaryMemcacheRequest)]","70"
"0","netty/codec-mqtt","5204148b0c37b457a330367bcd21cfb5b22ed73e","53fb9f58f286b8989421648046edac1477850264","IF_DIVIDING","9","1","69","[MqttDecoder decodeSubscribePayload (ByteBuf, int), MqttConnectPayload toString (), MqttConnectMessage payload (), MqttPublishMessage retainedDuplicate (), MqttCodecUtil getMqttVersion (ChannelHandlerContext), MqttPublishMessage touch (Object), MqttDecoder MqttDecoder (int, int), MqttConnectPayload MqttConnectPayload (String, String, byte[], String, byte[]), MqttDecoder decodeMessageIdAndPropertiesVariableHeader (ChannelHandlerContext, ByteBuf), MqttPublishMessage replace (ByteBuf), MqttDecoder MqttDecoder (), MqttDecoder decodePubReplyMessage (ByteBuf), MqttDecoder decodeConnAckVariableHeader (ChannelHandlerContext, ByteBuf), MqttConnectPayload willMessage (), MqttConnectPayload willProperties (), MqttConnectPayload passwordInBytes (), MqttCodecUtil MqttCodecUtil (), MqttPublishMessage MqttPublishMessage (MqttFixedHeader, MqttPublishVariableHeader, ByteBuf), MqttDecoder decodeMessageId (ByteBuf), Result decodeProperties (ByteBuf), MqttDecoder decodeByteArray (ByteBuf), MqttPublishMessage release (), MqttPublishMessage retain (int), MqttDecoder decodeSubackPayload (ByteBuf, int), MqttPublishMessage retain (), MqttConnectPayload clientIdentifier (), MqttDecoder decodeVariableHeader (ChannelHandlerContext, ByteBuf, MqttFixedHeader), Result Result (T, int), MqttPublishMessage variableHeader (), MqttConnectPayload willTopic (), MqttDecoder decodeFixedHeader (ChannelHandlerContext, ByteBuf), MqttDecoder MqttDecoder (int), MqttDecoder decodePublishVariableHeader (ChannelHandlerContext, ByteBuf, MqttFixedHeader), MqttDecoder packInts (int, int), MqttCodecUtil isValidClientId (MqttVersion, int, String), MqttConnectPayload willMessageInBytes (), MqttDecoder decodePayload (ChannelHandlerContext, ByteBuf, MqttMessageType, int, int, Object), MqttPublishMessage content (), MqttPublishMessage payload (), MqttDecoder decodePublishPayload (ByteBuf, int), MqttDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), MqttCodecUtil isValidPublishTopicName (String), MqttDecoder decodeConnectionVariableHeader (ChannelHandlerContext, ByteBuf), MqttDecoder unpackB (long), MqttDecoder decodeMsbLsb (ByteBuf), MqttDecoder unpackA (long), MqttConnectMessage variableHeader (), MqttConnectPayload userName (), MqttDecoder decodeString (ByteBuf), MqttDecoder decodeUnsubAckPayload (ChannelHandlerContext, ByteBuf, int), MqttPublishMessage refCnt (), MqttConnectMessage MqttConnectMessage (MqttFixedHeader, MqttConnectVariableHeader, MqttConnectPayload), MqttCodecUtil setMqttVersion (ChannelHandlerContext, MqttVersion), MqttDecoder decodeVariableByteInteger (ByteBuf), MqttPublishMessage release (int), MqttDecoder decodeConnectionPayload (ByteBuf, int, MqttConnectVariableHeader), MqttDecoder decodeUnsubscribePayload (ByteBuf, int), MqttCodecUtil isValidMessageId (int), MqttCodecUtil validateFixedHeader (ChannelHandlerContext, MqttFixedHeader), MqttPublishMessage copy (), MqttConnectPayload password (), MqttPublishMessage duplicate (), MqttConnectPayload MqttConnectPayload (String, String, String, String, String), MqttDecoder decodeReasonCodeAndPropertiesVariableHeader (ByteBuf), MqttPublishMessage touch (), MqttConnectPayload MqttConnectPayload (String, MqttProperties, String, byte[], String, byte[]), MqttCodecUtil resetUnusedFields (MqttFixedHeader), MqttDecoder decodeString (ByteBuf, int, int), MqttDecoder invalidMessage (Throwable)]","345"
"2","netty/codec-mqtt","53fb9f58f286b8989421648046edac1477850264","c16e3b47ccc5d8bd1ac9a2d495c2cbdb4325b28c","CASE_TO_IF_ELSE","17","1","12","[MqttSubscriptionOption equals (Object), MqttSubscriptionOption RetainedHandlingPolicy (int), MqttSubscriptionOption value (), MqttSubscriptionOption onlyFromQos (MqttQoS), MqttSubscriptionOption MqttSubscriptionOption (MqttQoS, boolean, boolean, RetainedHandlingPolicy), MqttSubscriptionOption isNoLocal (), MqttSubscriptionOption qos (), MqttSubscriptionOption hashCode (), MqttSubscriptionOption retainHandling (), MqttSubscriptionOption valueOf (int), MqttSubscriptionOption isRetainAsPublished (), MqttSubscriptionOption toString ()]","72"
"3","netty/codec-mqtt","c16e3b47ccc5d8bd1ac9a2d495c2cbdb4325b28c","48c14b3cb566ed3e27e1a82f87cddf4409a40ff4","LOCAL_VAR_RENAMING","0","1","7","[MqttUnsubAckPayload MqttUnsubAckPayload (short), MqttUnsubAckPayload MqttUnsubAckPayload (Iterable<Short>), MqttUnsubAckPayload unsubscribeReasonCodes (), MqttUnsubAckPayload typedReasonCodesToOrdinal (), MqttUnsubAckPayload withEmptyDefaults (MqttUnsubAckPayload), MqttUnsubAckPayload toString (), MqttUnsubAckPayload typedReasonCodes ()]","49"
"4","netty/codec-mqtt","48c14b3cb566ed3e27e1a82f87cddf4409a40ff4","59d6d55e7bb0129fd02a825408af0c492cf47e99","SWITCH_EQUAL_SIDES","14","1","1","[MqttUnsubAckPayload withEmptyDefaults (MqttUnsubAckPayload)]","7"
"13","netty/codec-mqtt","59d6d55e7bb0129fd02a825408af0c492cf47e99","2cdbc7a6ad25ad5d6cef5bc1c9374167ea70ca26","SWITCH_EQUAL_SIDES","14","1","1","[MqttUnsubAckPayload withEmptyDefaults (MqttUnsubAckPayload)]","7"
"0","netty/codec-redis","2cdbc7a6ad25ad5d6cef5bc1c9374167ea70ca26","1692f49838963f4d378239864d90b4abc67c7ae6","WHILE_TO_FOR","2","1","33","[RedisMessagePool getError (ByteBuf), RedisDecoder readEndOfLine (ByteBuf), RedisMessagePool getByteBufOfInteger (long), RedisCodecException RedisCodecException (Throwable), RedisDecoder newInlineRedisMessage (RedisMessageType, ByteBuf), ArrayHeaderRedisMessage isNull (), RedisDecoder RedisDecoder (int, RedisMessagePool, boolean), ToPositiveLongProcessor reset (), RedisMessagePool getSimpleString (ByteBuf), RedisMessagePool getInteger (long), RedisMessagePool getError (String), RedisDecoder decodeBulkStringContent (ByteBuf, List<Object>), RedisDecoder RedisDecoder (boolean), RedisDecoder decodeBulkStringEndOfLine (ByteBuf, List<Object>), RedisDecoder RedisDecoder (), ArrayHeaderRedisMessage length (), RedisMessagePool getInteger (ByteBuf), RedisDecoder decodeInline (ByteBuf, List<Object>), RedisMessagePool getSimpleString (String), RedisDecoder decodeBulkString (ByteBuf, List<Object>), RedisDecoder resetDecoder (), ToPositiveLongProcessor content (), ToPositiveLongProcessor process (byte), RedisDecoder RedisDecoder (int, RedisMessagePool), ArrayHeaderRedisMessage toString (), RedisCodecException RedisCodecException (String), RedisDecoder decodeLength (ByteBuf, List<Object>), ArrayHeaderRedisMessage ArrayHeaderRedisMessage (long), RedisDecoder parseRedisNumber (ByteBuf), RedisDecoder parsePositiveNumber (ByteBuf), RedisDecoder decodeType (ByteBuf), RedisDecoder readLine (ByteBuf), RedisDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","132"
"0","netty/codec-smtp","1692f49838963f4d378239864d90b4abc67c7ae6","cf1675b438fc52a88100868e618dd361183484b2","REVERSE_IF_ELSE","3","1","27","[DefaultSmtpResponse DefaultSmtpResponse (int, List<CharSequence>), DefaultSmtpResponse equals (Object), SmtpResponseDecoder SmtpResponseDecoder (int), SmtpResponseDecoder newDecoderException (ByteBuf, int, int), SmtpUtils SmtpUtils (), DefaultSmtpResponse DefaultSmtpResponse (int), DefaultSmtpRequest toString (), SmtpUtils toUnmodifiableList (CharSequence), DefaultSmtpResponse toString (), DefaultSmtpRequest DefaultSmtpRequest (SmtpCommand, CharSequence), DefaultSmtpRequest parameters (), DefaultSmtpResponse DefaultSmtpResponse (int, CharSequence), SmtpResponseDecoder parseCode (ByteBuf), DefaultSmtpRequest command (), SmtpRequestEncoder acceptOutboundMessage (Object), SmtpRequestEncoder encode (ChannelHandlerContext, Object, List<Object>), DefaultSmtpRequest DefaultSmtpRequest (SmtpCommand), DefaultSmtpResponse details (), SmtpRequestEncoder writeParameters (List<CharSequence>, ByteBuf, boolean), DefaultSmtpRequest DefaultSmtpRequest (SmtpCommand, List<CharSequence>), DefaultSmtpResponse code (), DefaultSmtpRequest equals (Object), DefaultSmtpRequest hashCode (), DefaultSmtpRequest DefaultSmtpRequest (CharSequence, CharSequence), DefaultSmtpResponse hashCode (), SmtpResponseDecoder parseNumber (byte), SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","135"
"2","netty/codec-smtp","cf1675b438fc52a88100868e618dd361183484b2","9ffa6d145598649fca5c665287727bf9f635363f","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","5"
"5","netty/codec-smtp","9ffa6d145598649fca5c665287727bf9f635363f","40e31768dfd66e17a1f3cd3699fe35ce812b2ba3","REVERSE_IF_ELSE","3","1","1","[SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","5"
"6","netty/codec-smtp","40e31768dfd66e17a1f3cd3699fe35ce812b2ba3","96b56428088ee1cea90df38f82cd2f8bc2cc1b23","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","5"
"8","netty/codec-smtp","96b56428088ee1cea90df38f82cd2f8bc2cc1b23","7138d7fd38b7e76b03001c76616c26c7265ab155","SWITCH_EQUAL_SIDES","14","1","1","[SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","5"
"9","netty/codec-smtp","7138d7fd38b7e76b03001c76616c26c7265ab155","d6424c43036f641cc1945aa04833f3a9321530d0","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","5"
"11","netty/codec-smtp","d6424c43036f641cc1945aa04833f3a9321530d0","fc29fcc6fa04f493aa46763e70ef43a1c24fb431","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","5"
"15","netty/codec-smtp","fc29fcc6fa04f493aa46763e70ef43a1c24fb431","92a94945daefe1bd8d536bb51381c1b168def0c7","CASE_TO_IF_ELSE","17","1","1","[SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","5"
"16","netty/codec-smtp","92a94945daefe1bd8d536bb51381c1b168def0c7","1929694e07bc84211b0b092e6713077bb15e0005","REVERSE_IF_ELSE","3","1","1","[SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","5"
"17","netty/codec-smtp","1929694e07bc84211b0b092e6713077bb15e0005","d0382c4b17ed90b51af84cb4a341243b1dfe1fda","LOCAL_VAR_RENAMING","0","1","1","[SmtpResponseDecoder newDecoderException (ByteBuf, int, int)]","5"
"19","netty/codec-smtp","d0382c4b17ed90b51af84cb4a341243b1dfe1fda","7dc0c8942036e81e8b9436166f166e9ddab2bbbc","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","5"
"23","netty/codec-smtp","7dc0c8942036e81e8b9436166f166e9ddab2bbbc","87098ada22efbc79f78e94a43883badbd043be1e","SWITCH_EQUAL_SIDES","14","1","1","[SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","5"
"26","netty/codec-smtp","87098ada22efbc79f78e94a43883badbd043be1e","b4357226b847e667ea3cb87fa09f844c30562a2b","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","5"
"28","netty/codec-smtp","b4357226b847e667ea3cb87fa09f844c30562a2b","b5f95cea193d55ec368bee1c8d8e0a63bd2d1234","REVERSE_IF_ELSE","3","1","1","[SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","5"
"0","netty/codec-socks","b5f95cea193d55ec368bee1c8d8e0a63bd2d1234","8fc0c7585ca5a04d81965e1b07ad2c499a95f23a","FOR_TO_WHILE","1","1","33","[SocksAuthResponseDecoder SocksAuthResponseDecoder (), SocksCmdResponse encodeAsByteBuf (ByteBuf), Socks4CommandType compareTo (Socks4CommandType), Socks4CommandType hashCode (), Socks4CommandType toString (), DefaultSocks5InitialResponse DefaultSocks5InitialResponse (Socks5AuthMethod), Socks4CommandType Socks4CommandType (int, String), Socks5ServerEncoder encode (ChannelHandlerContext, Socks5Message, ByteBuf), Socks5ServerEncoder encodePasswordAuthResponse (Socks5PasswordAuthResponse, ByteBuf), SocksCmdResponse SocksCmdResponse (SocksCmdStatus, SocksAddressType), DefaultSocks5InitialResponse authMethod (), Socks5PasswordAuthRequestDecoder fail (List<Object>, Exception), SocksCmdResponse cmdStatus (), SocksCmdResponse port (), Socks5ServerEncoder addressEncoder (), Socks5InitialRequestDecoder Socks5InitialRequestDecoder (), Socks5InitialRequestDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), Socks5ServerEncoder Socks5ServerEncoder (), DefaultSocks5InitialResponse toString (), Socks5InitialRequestDecoder fail (List<Object>, Exception), SocksCmdResponse addressType (), Socks5ServerEncoder Socks5ServerEncoder (Socks5AddressEncoder), SocksAuthResponseDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), SocksCmdResponse SocksCmdResponse (SocksCmdStatus, SocksAddressType, String, int), Socks5ServerEncoder encodeAuthMethodResponse (Socks5InitialResponse, ByteBuf), Socks5ServerEncoder encodeCommandResponse (Socks5CommandResponse, ByteBuf), SocksCmdResponse host (), Socks4CommandType equals (Object), Socks4CommandType Socks4CommandType (int), Socks4CommandType valueOf (byte), Socks5PasswordAuthRequestDecoder Socks5PasswordAuthRequestDecoder (), Socks4CommandType byteValue (), Socks5PasswordAuthRequestDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","231"
"1","netty/codec-socks","8fc0c7585ca5a04d81965e1b07ad2c499a95f23a","8a533f3ebfae083b9f5f57b172a3e0e8b47ac5ee","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","3","[Socks5InitialResponseDecoder Socks5InitialResponseDecoder (), Socks5InitialResponseDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), Socks5InitialResponseDecoder fail (List<Object>, Exception)]","24"
"3","netty/codec-socks","8a533f3ebfae083b9f5f57b172a3e0e8b47ac5ee","1ca5b0bd8a7509ee5a50d64cc85a6e268bd82fea","LOCAL_VAR_RENAMING","0","1","6","[DefaultSocks5CommandRequest dstAddrType (), DefaultSocks5CommandRequest type (), DefaultSocks5CommandRequest toString (), DefaultSocks5CommandRequest dstPort (), DefaultSocks5CommandRequest DefaultSocks5CommandRequest (Socks5CommandType, Socks5AddressType, String, int), DefaultSocks5CommandRequest dstAddr ()]","54"
"9","netty/codec-socks","1ca5b0bd8a7509ee5a50d64cc85a6e268bd82fea","04adc3fd3f23828fa88c89a641b1394ca9ce0da1","CASE_TO_IF_ELSE","17","1","1","[Socks5InitialResponseDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","9"
"14","netty/codec-socks","04adc3fd3f23828fa88c89a641b1394ca9ce0da1","f8ef45f3fc3d30b3cf74d39f208f42ec901037c0","LOCAL_VAR_RENAMING","0","1","1","[DefaultSocks5CommandRequest DefaultSocks5CommandRequest (Socks5CommandType, Socks5AddressType, String, int)]","9"
"16","netty/codec-socks","f8ef45f3fc3d30b3cf74d39f208f42ec901037c0","d4d7d6b0669f1076e048b13fb2d33c6a8fdf11c9","SWITCH_EQUAL_SIDES","14","1","1","[Socks5InitialResponseDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","9"
"17","netty/codec-socks","d4d7d6b0669f1076e048b13fb2d33c6a8fdf11c9","122ada81bd593f07a4744ac40021f982e2f5022f","REVERSE_IF_ELSE","3","1","2","[DefaultSocks5CommandRequest toString (), DefaultSocks5CommandRequest DefaultSocks5CommandRequest (Socks5CommandType, Socks5AddressType, String, int)]","18"
"27","netty/codec-socks","122ada81bd593f07a4744ac40021f982e2f5022f","7d2da96c178e0698c1a2e890db00e259c64569ea","REVERSE_IF_ELSE","3","1","1","[Socks5InitialResponseDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","9"
"28","netty/codec-socks","7d2da96c178e0698c1a2e890db00e259c64569ea","93c1268d88594b1d9ba236618580d1583709f8de","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DefaultSocks5CommandRequest DefaultSocks5CommandRequest (Socks5CommandType, Socks5AddressType, String, int)]","9"
"29","netty/codec-socks","93c1268d88594b1d9ba236618580d1583709f8de","25dda0a16e1fd1e3a9a2f87660bee962255e45a1","LOCAL_VAR_RENAMING","0","1","2","[Socks5InitialResponseDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), Socks5InitialResponseDecoder fail (List<Object>, Exception)]","18"
"0","netty/codec-stomp","25dda0a16e1fd1e3a9a2f87660bee962255e45a1","867eba4e45514e5b0a367fbccbfb1e1dafb7c26a","IF_DIVIDING","9","1","50","[DefaultStompHeadersSubframe headers (), StompSubframeDecoder StompSubframeDecoder (), StompSubframeDecoder readCommand (ByteBuf), DefaultStompFrame release (int), DefaultStompFrame touch (), DefaultStompFrame touch (Object), Utf8LineParser charSequence (), Utf8LineParser Utf8LineParser (AppendableCharSequence, int), StompSubframeDecoder StompSubframeDecoder (int, int), DefaultStompFrame retain (), DefaultStompHeadersSubframe toString (), DefaultStompFrame copy (), DefaultStompFrame release (), StompSubframeDecoder getContentLength (StompHeaders), DefaultStompFrame DefaultStompFrame (StompCommand, ByteBuf), DefaultStompFrame DefaultStompFrame (StompCommand, ByteBuf, DefaultStompHeaders), StompHeaders contains (CharSequence, CharSequence, boolean), DefaultStompHeadersSubframe setDecoderResult (DecoderResult), DefaultStompFrame retain (int), Utf8LineParser process (byte), DefaultStompFrame retainedDuplicate (), StompSubframeDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), StompHeaders iteratorAsString (), DefaultStompFrame replace (ByteBuf), HeaderParser HeaderParser (AppendableCharSequence, int, boolean), HeaderParser parseHeader (StompHeadersSubframe, ByteBuf), DefaultStompHeadersSubframe DefaultStompHeadersSubframe (StompCommand, DefaultStompHeaders), HeaderParser appendTo (AppendableCharSequence, char), DefaultStompHeadersSubframe decoderResult (), DefaultStompFrame content (), StompSubframeDecoder skipNullCharacter (ByteBuf), HeaderParser shouldUnescape (StompCommand), Utf8LineParser reset (), HeaderParser reset (), DefaultStompHeadersSubframe command (), HeaderParser process (byte), DefaultStompFrame refCnt (), DefaultStompFrame duplicate (), StompSubframeDecoder skipControlCharacters (ByteBuf), DefaultStompFrame DefaultStompFrame (StompCommand), StompHeaders getAllAsString (CharSequence), StompSubframeDecoder readHeaders (ByteBuf, StompHeadersSubframe), Utf8LineParser appendTo (AppendableCharSequence, char), Utf8LineParser parse (ByteBuf), StompSubframeDecoder StompSubframeDecoder (int, int, boolean), DefaultStompFrame toString (), DefaultStompHeadersSubframe DefaultStompHeadersSubframe (StompCommand), StompHeaders getAsString (CharSequence), StompSubframeDecoder StompSubframeDecoder (boolean), StompSubframeDecoder resetDecoder ()]","200"
"4","netty/codec-stomp","867eba4e45514e5b0a367fbccbfb1e1dafb7c26a","f5dd22922221ca296aa272d00681f78cc0689d6f","LOCAL_VAR_RENAMING","0","1","10","[StompSubframeAggregator beginAggregation (StompHeadersSubframe, ByteBuf), StompSubframeAggregator isStartMessage (StompSubframe), StompSubframeAggregator newContinueResponse (StompHeadersSubframe, int, ChannelPipeline), StompSubframeAggregator StompSubframeAggregator (int), StompSubframeAggregator closeAfterContinueResponse (Object), StompSubframeAggregator ignoreContentAfterContinueResponse (Object), StompSubframeAggregator isContentLengthInvalid (StompHeadersSubframe, int), StompSubframeAggregator isLastContentMessage (StompContentSubframe), StompSubframeAggregator isAggregated (StompSubframe), StompSubframeAggregator isContentMessage (StompSubframe)]","50"
"25","netty/codec-stomp","f5dd22922221ca296aa272d00681f78cc0689d6f","63a6afabc506600c9e888a098e054745f59ba82c","LOCAL_VAR_RENAMING","0","1","2","[StompSubframeAggregator isStartMessage (StompSubframe), StompSubframeAggregator closeAfterContinueResponse (Object)]","10"
"0","netty/codec-xml","63a6afabc506600c9e888a098e054745f59ba82c","5c20ee54804435f6ace2b06c8e52d8712ae2bc9e","INFIX_EXPRESSION_DIVIDING","8","1","25","[XmlDTD hashCode (), XmlAttribute toString (), XmlElementStart attributes (), XmlContent data (), XmlElementStart hashCode (), XmlAttribute hashCode (), XmlDTD equals (Object), XmlContent hashCode (), XmlElementStart toString (), XmlDTD toString (), XmlAttribute namespace (), XmlAttribute name (), XmlDTD XmlDTD (String), XmlAttribute type (), XmlContent equals (Object), XmlDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), XmlAttribute prefix (), XmlAttribute equals (Object), XmlAttribute XmlAttribute (String, String, String, String, String), XmlElementStart equals (Object), XmlDTD text (), XmlElementStart XmlElementStart (String, String, String), XmlAttribute value (), XmlContent toString (), XmlContent XmlContent (String)]","125"
"2","netty/codec-xml","5c20ee54804435f6ace2b06c8e52d8712ae2bc9e","0081b006aa15a6ec6cef1e1fbeda3e5359ce7edd","LOCAL_VAR_RENAMING","0","1","1","[XmlDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","5"
"6","netty/codec-xml","0081b006aa15a6ec6cef1e1fbeda3e5359ce7edd","45a8726e4aa181d33d2853c3f7d331ba53ac5486","REVERSE_IF_ELSE","3","1","1","[XmlDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","5"
"8","netty/codec-xml","45a8726e4aa181d33d2853c3f7d331ba53ac5486","a4d27cf0109fbf67f03739263cf3ddfeead12375","SWITCH_EQUAL_SIDES","14","1","1","[XmlDTD equals (Object)]","5"
"10","netty/codec-xml","a4d27cf0109fbf67f03739263cf3ddfeead12375","a15948cf5be6e0a6c6f874be56005f70a3d05d1e","SWITCH_EQUAL_SIDES","14","1","1","[XmlDTD equals (Object)]","5"
"12","netty/codec-xml","a15948cf5be6e0a6c6f874be56005f70a3d05d1e","3e451de6c3778d826e4917a34845bcc65c49484f","INFIX_EXPRESSION_DIVIDING","8","1","1","[XmlDTD equals (Object)]","5"
"13","netty/codec-xml","3e451de6c3778d826e4917a34845bcc65c49484f","dba15b3d6a5b62ab456607bee37d70f461aa4745","REVERSE_IF_ELSE","3","1","1","[XmlDTD equals (Object)]","5"
"15","netty/codec-xml","dba15b3d6a5b62ab456607bee37d70f461aa4745","c1ec9c907d485e2b9f45ab8b135026b224b8afa6","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","1","[XmlDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","5"
"16","netty/codec-xml","c1ec9c907d485e2b9f45ab8b135026b224b8afa6","53b7a3e959e5d79c96f347e0d12fc3d2541a39a4","VAR_DECLARATION_MERGING","12","1","1","[XmlDTD equals (Object)]","5"
"23","netty/codec-xml","53b7a3e959e5d79c96f347e0d12fc3d2541a39a4","c0b1d2b86ecc23e5e3f13a556cdb98582854056c","SWITCH_STRING_EQUAL","15","1","1","[XmlDTD equals (Object)]","5"
"24","netty/codec-xml","c0b1d2b86ecc23e5e3f13a556cdb98582854056c","3b2f11f79cc13f5d0a2bfda7533129d145e4934c","LOCAL_VAR_RENAMING","0","1","1","[XmlDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","5"
"0","netty/codec","3b2f11f79cc13f5d0a2bfda7533129d145e4934c","4ef77623d6c5a4425cac2240320a6c23bd9321c4","FOR_TO_WHILE","1","1","52","[JsonObjectDecoder reset (), JsonObjectDecoder decodeByte (byte, ByteBuf, int), ZlibChecksumMethods updateByteBuffer (Checksum), JsonObjectDecoder extractObject (ChannelHandlerContext, ByteBuf, int, int), ZlibChecksumMethods update (ByteBuf, int, int), LimitingByteInput skip (long), Bzip2Encoder isClosed (), LimitingByteInput LimitingByteInput (ByteInput, long), ZlibChecksumMethods process (byte), JsonObjectDecoder JsonObjectDecoder (), JsonObjectDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), Crc32c update (int), LimitingByteInput read (byte[]), Bzip2Encoder finishEncode (ChannelHandlerContext, ChannelPromise), Crc32c crc32c (int, int), ReflectiveByteBufChecksum ReflectiveByteBufChecksum (Checksum, Method), Bzip2Encoder Bzip2Encoder (int), JsonObjectDecoder JsonObjectDecoder (int, boolean), ChannelBufferByteInput read (byte[], int, int), Crc32c reset (), JsonObjectDecoder JsonObjectDecoder (boolean), LimitingByteInput readable (int), JsonObjectDecoder initDecoding (byte), Bzip2Encoder close (ChannelPromise), SlowByteBufChecksum getValue (), Bzip2Encoder run (), SlowByteBufChecksum update (int), ReflectiveByteBufChecksum update (ByteBuf, int, int), Crc32c update (byte[], int, int), LimitingByteInput read (), ChannelBufferByteInput close (), LimitingByteInput close (), Bzip2Encoder handlerAdded (ChannelHandlerContext), Bzip2Encoder Bzip2Encoder (), Bzip2Encoder close (ChannelHandlerContext, ChannelPromise), ChannelBufferByteInput skip (long), ChannelBufferByteInput available (), SlowByteBufChecksum update (byte[], int, int), SlowByteBufChecksum SlowByteBufChecksum (Checksum), Bzip2Encoder encode (ChannelHandlerContext, ByteBuf, ByteBuf), LimitingByteInput read (byte[], int, int), SlowByteBufChecksum reset (), ChannelBufferByteInput read (), Bzip2Encoder closeBlock (ByteBuf), Bzip2Encoder close (), ChannelBufferByteInput read (byte[]), ZlibChecksumMethods wrapChecksum (Checksum), Bzip2Encoder ctx (), ChannelBufferByteInput ChannelBufferByteInput (ByteBuf), LimitingByteInput available (), Crc32c getValue (), JsonObjectDecoder JsonObjectDecoder (int)]","312"
"1","netty/codec","4ef77623d6c5a4425cac2240320a6c23bd9321c4","cf815fd8b5e290a9debe426aeb1b815f1ee4798d","REVERSE_IF_ELSE","3","1","6","[LengthFieldPrepender LengthFieldPrepender (ByteOrder, int, int, boolean), LengthFieldPrepender LengthFieldPrepender (int, boolean), LengthFieldPrepender LengthFieldPrepender (int), LengthFieldPrepender LengthFieldPrepender (int, int, boolean), LengthFieldPrepender encode (ChannelHandlerContext, ByteBuf, List<Object>), LengthFieldPrepender LengthFieldPrepender (int, int)]","42"
"3","netty/codec","cf815fd8b5e290a9debe426aeb1b815f1ee4798d","2e1fc7f1673a2551a92d41551007a36a5db28562","LOCAL_VAR_RENAMING","0","1","2","[LengthFieldPrepender encode (ChannelHandlerContext, ByteBuf, List<Object>), LengthFieldPrepender LengthFieldPrepender (int, int)]","14"
"4","netty/codec","2e1fc7f1673a2551a92d41551007a36a5db28562","4574c41b74098008b98e204a1e51da8189139342","CASE_TO_IF_ELSE","17","1","1","[LengthFieldPrepender encode (ChannelHandlerContext, ByteBuf, List<Object>)]","7"
"5","netty/codec","4574c41b74098008b98e204a1e51da8189139342","2f343cea22b56fa0d0fcead849bef3871c884319","SWITCH_EQUAL_SIDES","14","1","1","[LengthFieldPrepender encode (ChannelHandlerContext, ByteBuf, List<Object>)]","7"
"7","netty/codec","2f343cea22b56fa0d0fcead849bef3871c884319","181f1a3b5cca90d2b630a3e1c905893a02742415","SWITCH_EQUAL_SIDES","14","1","1","[LengthFieldPrepender encode (ChannelHandlerContext, ByteBuf, List<Object>)]","7"
"9","netty/codec","181f1a3b5cca90d2b630a3e1c905893a02742415","f8591191f8853985d7b49ea6eade388511974aaa","REVERSE_IF_ELSE","3","1","1","[LengthFieldPrepender encode (ChannelHandlerContext, ByteBuf, List<Object>)]","7"
"16","netty/codec","f8591191f8853985d7b49ea6eade388511974aaa","46c3daca2a396e40721e5bd51f5822a3960be3f2","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[LengthFieldPrepender encode (ChannelHandlerContext, ByteBuf, List<Object>)]","7"
"18","netty/codec","46c3daca2a396e40721e5bd51f5822a3960be3f2","0a71df07e2994ed480a1b4a71d086c4460b6bd64","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[LengthFieldPrepender LengthFieldPrepender (ByteOrder, int, int, boolean)]","7"
"21","netty/codec","0a71df07e2994ed480a1b4a71d086c4460b6bd64","79a9e69d32f4596bf3c636bf713cb2f35cacdcfe","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[LengthFieldPrepender LengthFieldPrepender (ByteOrder, int, int, boolean)]","7"
"22","netty/codec","79a9e69d32f4596bf3c636bf713cb2f35cacdcfe","d88e9d60d440150c61b31cdf7e19eea935b28c8d","LOCAL_VAR_RENAMING","0","1","2","[LengthFieldPrepender LengthFieldPrepender (ByteOrder, int, int, boolean), LengthFieldPrepender encode (ChannelHandlerContext, ByteBuf, List<Object>)]","14"
"24","netty/codec","d88e9d60d440150c61b31cdf7e19eea935b28c8d","8771f933507b0c3cc048cc6dcfa069aa758ff9d2","REVERSE_IF_ELSE","3","1","1","[LengthFieldPrepender encode (ChannelHandlerContext, ByteBuf, List<Object>)]","7"
"28","netty/codec","8771f933507b0c3cc048cc6dcfa069aa758ff9d2","715606fa34c2b063d3e3faaf0d7693d42b9afa17","SWITCH_EQUAL_SIDES","14","1","1","[LengthFieldPrepender encode (ChannelHandlerContext, ByteBuf, List<Object>)]","7"
"0","netty/common","715606fa34c2b063d3e3faaf0d7693d42b9afa17","762ff4789f73493c96f223e87eb56bd1bd887028","STATEMENTS_ORDER_REARRANGEMENT","10","1","322","[PlatformDependent putShort (byte[], int, short), SingleThreadEventExecutor hasTasks (), SingleThreadEventExecutor threadProperties (), SocketUtils bind (DatagramChannel, SocketAddress), PlatformDependent putInt (byte[], int, int), PlatformDependent isAndroid (), ThreadLocalRandomProvider current (), LeanCancellationException checkDeadLock (), PlatformDependent putLong (byte[], int, long), Signal hashCode (), PlatformDependent equals (byte[], int, byte[], int, int), PlatformDependent hashCodeAsciiCompute (CharSequence, int, int), SingleThreadEventExecutor SingleThreadEventExecutor (EventExecutorGroup, Executor, boolean, int, RejectedExecutionHandler), PlatformDependent hashCodeAsciiSanitizeInt (CharSequence, int), Mpsc normalizedOs (), Mpsc bitMode0 (), DefaultThreadProperties isDaemon (), ConstantTimeUtils equalsConstantTime (CharSequence, CharSequence), Mpsc newSpscQueue (), PlatformDependent decrementMemoryCounter (int), ConstantTimeUtils equalsConstantTime (int, int), LeanCancellationException cause0 (Object), PlatformDependent throwException (Throwable), ConstantTimeUtils ConstantTimeUtils (), SocketUtils connect (SocketChannel, SocketAddress), LeanCancellationException isCancelled (), Mpsc isZeroSafe (byte[], int, int), DefaultPromise DefaultPromise (), PlatformDependent newConcurrentHashMap (int), NonWakeupRunnable drainTasks (), SignalConstant SignalConstant (int, String), PlatformDependent putShort (long, short), LeanCancellationException toStringBuilder (), LeanCancellationException awaitUninterruptibly (long), Mpsc maybeSuperUser0 (), SocketUtils localSocketAddress (ServerSocket), Signal compareTo (Signal), Mpsc normalizedLinuxClassifiers (), PlatformDependent newLongCounter (), SingleThreadEventExecutor executeExpiredScheduledTasks (), SingleThreadEventExecutor fetchFromScheduledTaskQueue (), PromiseNotifier cascade (F, Promise<? super V>), PlatformDependent setMemory (long, long, byte), SocketUtils loopbackAddress (), PlatformDependent newConcurrentHashMap (int, float), PlatformDependent directBufferPreferred (), ThreadLocalRandomProvider PlatformDependent (), PlatformDependent reallocateDirectNoCleaner (ByteBuffer, int), Mpsc newMpscQueue (int, int), SingleThreadEventExecutor confirmShutdown (), CharsetUtil decoder (Charset, CodingErrorAction), PlatformDependent safeConstructPutInt (Object, long, int), LeanCancellationException await (long, TimeUnit), LeanCancellationException executor (), LeanCancellationException get (), Mpsc isJ9Jvm (), SingleThreadEventExecutor runExistingTasksFrom (Queue<Runnable>), LeanCancellationException addListener0 (GenericFutureListener<? extends Future<? super V>>), SingleThreadEventExecutor run (), SingleThreadEventExecutor removeTask (Runnable), CharsetUtil encoder (Charset, CodingErrorAction), PlatformDependent allocateMemory (long), LeanCancellationException syncUninterruptibly (), LeanCancellationException fillInStackTrace (), CharsetUtil getDecoder (Charset), Signal expect (Signal), DefaultPromise setUncancellable (), CharsetUtil decoder (Charset, CodingErrorAction, CodingErrorAction), PlatformDependent align (long, int), PlatformDependent equalsConstantTime (byte[], int, byte[], int, int), PlatformDependent javaVersion (), SingleThreadEventExecutor removeShutdownHook (Runnable), SingleThreadEventExecutor wakeup (boolean), PlatformDependent incrementMemoryCounter (int), PlatformDependent hashCodeAsciiSanitizeShort (CharSequence, int), PlatformDependent hashCodeAscii (byte[], int, int), SocketUtils accept (ServerSocketChannel), Mpsc newMpscQueue (), DefaultThreadProperties isInterrupted (), Mpsc getClassLoader (Class<?>), Mpsc normalizeArch (String), PlatformDependent setMemory (byte[], int, long, byte), SingleThreadEventExecutor delayNanos (long), LeanCancellationException notifyListeners0 (DefaultFutureListeners), PlatformDependent getShortSafe (byte[], int), PlatformDependent getLong (byte[], int), AtomicLongCounter value (), SocketUtils empty (), LeanCancellationException cancel (boolean), SingleThreadEventExecutor shutdown (), SingleThreadEventExecutor addShutdownHook (Runnable), LeanCancellationException getNow (), PlatformDependent copyMemory (byte[], int, byte[], int, long), SingleThreadEventExecutor inEventLoop (Thread), LeanCancellationException sync (), PlatformDependent directBufferAddress (ByteBuffer), DefaultThreadProperties name (), SocketUtils SocketUtils (), SocketUtils socketAddress (String, int), DefaultThreadProperties isAlive (), PlatformDependent canEnableTcpNoDelayByDefault (), PlatformDependent hasUnsafe (), PlatformDependent throwException0 (Throwable), Mpsc newFixedMpmcQueue (int), NonWakeupRunnable startThread (), PlatformDependent run (), PlatformDependent hashCodeAscii (CharSequence), SingleThreadEventExecutor offerTask (Runnable), DefaultThreadProperties state (), PlatformDependent getObject (Object, long), PlatformDependent addFilesystemOsClassifiers (Set<String>, Set<String>), DefaultThreadProperties stackTrace (), SingleThreadEventExecutor lazyExecute0 (Runnable), LeanCancellationException decWaiters (), Signal toString (), PlatformDependent freeDirectBuffer (ByteBuffer), SocketUtils bind (SocketChannel, SocketAddress), PlatformDependent isOsx (), PlatformDependent putInt (long, int), SingleThreadEventExecutor invokeAny (Collection<? extends Callable<T>>), DefaultPromise isCancellable (), LeanCancellationException notifyProgressiveListeners (long, long), LeanCancellationException setValue0 (Object), SingleThreadEventExecutor runShutdownHooks (), PlatformDependent putLong (long, long), DefaultPromise isSuccess (), Mpsc newFixedMpscQueue (int), PlatformDependent getInt (Object, long), AtomicLongCounter increment (), PlatformDependent toIntExact8 (long), NonWakeupRunnable ensureThreadStarted (int), PlatformDependent newConcurrentHashMap (Map<? extends K,? extends V>), LeanCancellationException isCancelled0 (Object), SingleThreadEventExecutor deadlineNanos (), PlatformDependent getInt (long), LeanCancellationException setFailure0 (Throwable), Signal initCause (Throwable), Mpsc getMaxDirectMemorySizeArgPattern (), Mpsc addClassifier (Set<String>, Set<String>, String), SingleThreadEventExecutor execute (Runnable), SocketUtils connect (Socket, SocketAddress, int), CharsetUtil values (), PromiseNotifier operationComplete (F), PlatformDependent getLong (long), Mpsc unsafeUnavailabilityCause0 (), SingleThreadEventExecutor invokeAll (Collection<? extends Callable<T>>, long, TimeUnit), AtomicLongCounter decrement (), CharsetUtil getEncoder (Charset), PlatformDependent copyMemory (long, long, long), DefaultThreadProperties id (), SingleThreadEventExecutor runAllTasks (long), Mpsc getSystemClassLoader (), PlatformDependent newConcurrentHashMap (), Mpsc isWindows0 (), SingleThreadEventExecutor runScheduledAndExecutorTasks (int), PlatformDependent usedDirectMemory (), PlatformDependent getByte (long), PlatformDependent current (), PlatformDependent copyMemory (long, byte[], int, long), StacklessCancellationException fillInStackTrace (), NonWakeupRunnable reject (), PlatformDependent getIntVolatile (long), PlatformDependent directBuffer (long, int), SocketUtils allAddressesByName (String), PlatformDependent putByte (Object, long, byte), LeanCancellationException await (long), SingleThreadEventExecutor cleanup (), LeanCancellationException isDone (), CharsetUtil encoder (Charset, CodingErrorAction, CodingErrorAction), Signal valueOf (Class<?>, String), PlatformDependent useDirectBufferNoCleaner (), AtomicLongCounter add (long), PlatformDependent getInt (int[], long), SingleThreadEventExecutor interruptThread (), SingleThreadEventExecutor execute (Runnable, boolean), CharsetUtil CharsetUtil (), StacklessCancellationException StacklessCancellationException (), LeanCancellationException run (), PromiseNotifier PromiseNotifier (boolean, Promise<? super V>), PlatformDependent isUnaligned (), CauseHolder CauseHolder (Throwable), CharsetUtil encoder (Charset), Mpsc createTempFile (String, String, File), Mpsc toDirectory (String), PlatformDependent allocateDirectNoCleaner (int), PlatformDependent getByte (byte[], long), PlatformDependent hashCodeAsciiSanitizeByte (char), SingleThreadEventExecutor runAllTasks (), PlatformDependent putByte (long, byte), DefaultPromise setFailure (Throwable), PlatformDependent maybeSuperUser (), Mpsc normalize (String), PlatformDependent putObject (Object, long, Object), DefaultPromise tryFailure (Throwable), LeanCancellationException removeListeners (GenericFutureListener<? extends Future<? super V>>), Mpsc addressSize0 (), LeanCancellationException awaitUninterruptibly (), Signal fillInStackTrace (), Mpsc isIkvmDotNet (), Mpsc isOsx0 (), DefaultPromise trySuccess (V), PlatformDependent getIntSafe (byte[], int), DefaultThreadProperties DefaultThreadProperties (Thread), CauseHolder safeExecute (EventExecutor, Runnable), SingleThreadEventExecutor pollTask (), DefaultPromise setSuccess (V), NonWakeupRunnable wakesUpForTask (Runnable), LeanCancellationException await (), Mpsc threadLocalRandom (), PlatformDependent addressSize (), Signal newConstant (int, String), PlatformDependent getShort (long), PlatformDependent reallocateMemory (long, long), SingleThreadEventExecutor SingleThreadEventExecutor (EventExecutorGroup, ThreadFactory, boolean), LeanCancellationException addListener (GenericFutureListener<? extends Future<? super V>>), StacklessCancellationException newInstance (Class<?>, String), SingleThreadEventExecutor pollTaskFrom (Queue<Runnable>), SocketUtils addressesFromNetworkInterface (NetworkInterface), PlatformDependent addPropertyOsClassifiers (Set<String>, Set<String>), Mpsc tmpdir0 (), SingleThreadEventExecutor addTask (Runnable), LeanCancellationException incWaiters (), LeanCancellationException notifyProgressiveListener0 (ProgressiveFuture, GenericProgressiveFutureListener, long, long), ConstantTimeUtils equalsConstantTime (byte[], int, byte[], int, int), LeanCancellationException notifyListeners (), PlatformDependent isWindows (), Mpsc isIkvmDotNet0 (), PlatformDependent freeDirectNoCleaner (ByteBuffer), Signal Signal (int, String), Mpsc estimateMaxDirectMemory (), PlatformDependent hasAlignDirectByteBuffer (), LeanCancellationException checkNotifyWaiters (), SingleThreadEventExecutor pendingTasks (), DefaultPromise DefaultPromise (EventExecutor), Signal name (), LeanCancellationException removeListener (GenericFutureListener<? extends Future<? super V>>), SingleThreadEventExecutor SingleThreadEventExecutor (EventExecutorGroup, Executor, boolean), LeanCancellationException rethrowIfFailed (), PlatformDependent toIntExact (long), SingleThreadEventExecutor shutdownGracefully (long, long, TimeUnit), LeanCancellationException removeListener0 (GenericFutureListener<? extends Future<? super V>>), PlatformDependent getShort (byte[], int), PromiseNotifier cascade (boolean, F, Promise<? super V>), PlatformDependent getByte (byte[], int), SocketUtils hardwareAddressFromNetworkInterface (NetworkInterface), Mpsc getContextClassLoader (), Signal id (), Mpsc run (), LeanCancellationException notifyListenerWithStackOverFlowProtection (EventExecutor, Future<?>, GenericFutureListener<?>), PlatformDependent alignDirectBuffer (ByteBuffer, int), LeanCancellationException notifyListenersNow (), NonWakeupRunnable doStartThread (), SingleThreadEventExecutor terminationFuture (), SocketUtils run (), NonWakeupRunnable reject (Runnable), Mpsc equalsSafe (byte[], int, byte[], int, int), PlatformDependent tmpdir (), Mpsc normalizeOsReleaseVariableValue (String), Signal valueOf (String), Mpsc newMpscQueue (int), Signal equals (Object), LeanCancellationException toString (), DefaultThreadProperties priority (), PlatformDependent getLongSafe (byte[], int), LeanCancellationException progressiveListeners (), Mpsc byteArrayBaseOffset0 (), PlatformDependent isZero (byte[], int, int), PlatformDependent bitMode (), LeanCancellationException setSuccess0 (V), LeanCancellationException await0 (long, boolean), Mpsc normalizeOs (String), Mpsc isJ9Jvm0 (), PromiseNotifier PromiseNotifier (Promise<? super V>), PlatformDependent objectFieldOffset (Field), SingleThreadEventExecutor afterRunningAllTasks (), SingleThreadEventExecutor newTaskQueue (), SingleThreadEventExecutor newTaskQueue (int), CharsetUtil decoder (Charset), Mpsc newChunkedMpscQueue (int, int), SingleThreadEventExecutor throwIfInEventLoop (String), PlatformDependent byteArrayBaseOffset (), SingleThreadEventExecutor peekTask (), LeanCancellationException addListeners (GenericFutureListener<? extends Future<? super V>>), SingleThreadEventExecutor SingleThreadEventExecutor (EventExecutorGroup, ThreadFactory, boolean, int, RejectedExecutionHandler), SocketUtils bind (Socket, SocketAddress), PlatformDependent getUnsafeUnavailabilityCause (), SingleThreadEventExecutor runAllTasksFrom (Queue<Runnable>), ConstantTimeUtils equalsConstantTime (long, long), PromiseNotifier operationComplete (Future), Mpsc normalizedArch (), Mpsc Mpsc (), PlatformDependent hasDirectBufferNoCleanerConstructor (), PlatformDependent putIntOrdered (long, int), SingleThreadEventExecutor lazyExecute (Runnable), PlatformDependent allocateUninitializedArray (int), LeanCancellationException isDone0 (Object), SingleThreadEventExecutor awaitTermination (long, TimeUnit), PlatformDependent freeMemory (long), PlatformDependent copyMemory (byte[], int, long, long), PlatformDependent getLong (long[], long), PlatformDependent putByte (byte[], int, byte), SingleThreadEventExecutor execute0 (Runnable), SingleThreadEventExecutor invokeAll (Collection<? extends Callable<T>>), LeanCancellationException notifyProgressiveListeners0 (ProgressiveFuture<?>, GenericProgressiveFutureListener<?>[], long, long), SocketUtils addressByName (String), LeanCancellationException cause (), SingleThreadEventExecutor takeTask (), LeanCancellationException awaitUninterruptibly (long, TimeUnit), PlatformDependent newConcurrentHashMap (int, float, int), SingleThreadEventExecutor isShuttingDown (), LeanCancellationException notifyListener (EventExecutor, Future<?>, GenericFutureListener<?>), Mpsc hashCodeAsciiSafe (byte[], int, int), LeanCancellationException get (long, TimeUnit), SingleThreadEventExecutor isTerminated (), SingleThreadEventExecutor updateLastExecutionTime (), SingleThreadEventExecutor invokeAny (Collection<? extends Callable<T>>, long, TimeUnit), Mpsc newConcurrentDeque (), SingleThreadEventExecutor isShutdown (), SingleThreadEventExecutor SingleThreadEventExecutor (EventExecutorGroup, Executor, boolean, Queue<Runnable>, RejectedExecutionHandler), PlatformDependent getInt (byte[], int), LeanCancellationException notifyListener0 (Future, GenericFutureListener), PlatformDependent maxDirectMemory ()]","2576"
"5","netty/common","762ff4789f73493c96f223e87eb56bd1bd887028","97d1a94a135b1cefe9095287e9ee1ece1c9caa1a","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[PromiseNotifier PromiseNotifier (boolean, Promise<? super V>)]","8"
"13","netty/common","97d1a94a135b1cefe9095287e9ee1ece1c9caa1a","71bc703e62446476b0215d12fba0c80445469f20","LOCAL_VAR_RENAMING","0","1","2","[NativeLibraryUtil NativeLibraryUtil (), NativeLibraryUtil loadLibrary (String, boolean)]","18"
"15","netty/common","71bc703e62446476b0215d12fba0c80445469f20","0f31241b346c491c4e0e702bd2421ba57d086ecd","REVERSE_IF_ELSE","3","1","1","[NativeLibraryUtil loadLibrary (String, boolean)]","9"
"16","netty/common","0f31241b346c491c4e0e702bd2421ba57d086ecd","0d17f8e67db771fdb92d3a80e4c70153061a60c4","LOCAL_VAR_RENAMING","0","1","2","[PromiseNotifier operationComplete (Future), PromiseNotifier cascade (boolean, F, Promise<? super V>)]","18"
"19","netty/common","0d17f8e67db771fdb92d3a80e4c70153061a60c4","554ea5043a0bb8af163d97f54f0d6df25d862e44","LOCAL_VAR_RENAMING","0","1","1","[NativeLibraryUtil loadLibrary (String, boolean)]","9"
"20","netty/common","554ea5043a0bb8af163d97f54f0d6df25d862e44","ce6f99a2fa2f1009bb3070e502266d369b167a63","LOCAL_VAR_RENAMING","0","1","1","[NativeLibraryUtil loadLibrary (String, boolean)]","9"
"21","netty/common","ce6f99a2fa2f1009bb3070e502266d369b167a63","21409c34f33e249e0e39dad7194bc0597cfc6945","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[PromiseNotifier operationComplete (F)]","9"
"23","netty/common","21409c34f33e249e0e39dad7194bc0597cfc6945","2e2508655612e6064e06ac8584456cf077024d27","LOCAL_VAR_RENAMING","0","1","1","[PromiseNotifier PromiseNotifier (boolean, Promise<? super V>)]","9"
"28","netty/common","2e2508655612e6064e06ac8584456cf077024d27","2187a12fcbbe971fef2a5fad5aad22968a557eba","REVERSE_IF_ELSE","3","1","1","[PromiseNotifier operationComplete (F)]","9"
"0","netty/example","2187a12fcbbe971fef2a5fad5aad22968a557eba","e7d84d645b5be18aac14a974b2db10dc7c721119","PP_TO_ADD_ASSIGNMENT","6","1","21","[ByteEchoPeerBase initChannel (UdtChannel), StompClientHandler exceptionCaught (ChannelHandlerContext, Throwable), ByteEchoPeerBase ByteEchoPeerBase (int, SocketAddress, SocketAddress), ObjectEchoClient main (String[]), FactorialClientHandler operationComplete (ChannelFuture), Http2Server initChannel (SocketChannel), ByteEchoPeerBase run (), FactorialClientHandler channelActive (ChannelHandlerContext), FactorialClientHandler exceptionCaught (ChannelHandlerContext, Throwable), Http2Server start (), FactorialClientHandler sendNumbers (), Http2Server Http2Server (EventLoopGroup), WebSocketServer main (String[]), WebSocketClient main (String[]), ObjectEchoClient initChannel (SocketChannel), FactorialClientHandler getFactorial (), FactorialClientHandler channelRead0 (ChannelHandlerContext, BigInteger), StompClientHandler channelActive (ChannelHandlerContext), StompClientHandler channelRead0 (ChannelHandlerContext, StompFrame), Http2Server configureTLS (), WebSocketClient initChannel (SocketChannel)]","147"
"1","netty/example","e7d84d645b5be18aac14a974b2db10dc7c721119","9c2fd81cfcd159ba0d2ac753eab9d43e636eaa89","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","2","[Http2FrameClient main (String[]), Http2FrameClient Http2FrameClient ()]","16"
"4","netty/example","9c2fd81cfcd159ba0d2ac753eab9d43e636eaa89","2ac36368dfdb1139df3009b660523a3d61dfd95f","SWITCH_EQUAL_SIDES","14","1","12","[Http2StaticFileServerHandler sendListing (ChannelHandlerContext, File, String), Http2StaticFileServerHandler setContentTypeHeader (Http2Headers, File), Http2StaticFileServerHandler sendError (ChannelHandlerContext, HttpResponseStatus), Http2StaticFileServerHandler sanitizeUri (String), Http2StaticFileServerHandler sendNotModified (ChannelHandlerContext), Http2StaticFileServerHandler operationProgressed (ChannelProgressiveFuture, long, long), Http2StaticFileServerHandler exceptionCaught (ChannelHandlerContext, Throwable), Http2StaticFileServerHandler setDateAndCacheHeaders (Http2Headers, File), Http2StaticFileServerHandler sendRedirect (ChannelHandlerContext, String), Http2StaticFileServerHandler setDateHeader (Http2Headers), Http2StaticFileServerHandler channelRead (ChannelHandlerContext, Object), Http2StaticFileServerHandler operationComplete (ChannelProgressiveFuture)]","108"
"5","netty/example","2ac36368dfdb1139df3009b660523a3d61dfd95f","c48413efa17a7462a3d3d706d12281cbc36a3650","REVERSE_IF_ELSE","3","1","2","[RxtxClientHandler channelRead0 (ChannelHandlerContext, String), RxtxClientHandler channelActive (ChannelHandlerContext)]","20"
"15","netty/example","c48413efa17a7462a3d3d706d12281cbc36a3650","e030c2844cee74f6bb04ff75b09d9bd7518c69d7","REVERSE_IF_ELSE","3","1","1","[RxtxClientHandler channelRead0 (ChannelHandlerContext, String)]","10"
"0","netty/handler-proxy","e030c2844cee74f6bb04ff75b09d9bd7518c69d7","bfb636b03888cb94de5f80066de1717895df72e3","PP_TO_ADD_ASSIGNMENT","6","1","52","[ProxyHandler removeEncoder (ChannelHandlerContext), Socks5ProxyHandler protocol (), ProxyHandler failPendingWritesAndClose (Throwable), Socks5ProxyHandler password (), ProxyHandler destinationAddress (), ProxyHandler isConnected (), ProxyHandler setConnectSuccess (), ProxyHandler protocol (), Socks5ProxyHandler Socks5ProxyHandler (SocketAddress), ProxyHandler cancelConnectTimeoutFuture (), ProxyHandler safeRemoveEncoder (), ProxyHandler proxyAddress (), ProxyHandler readIfNeeded (ChannelHandlerContext), ProxyHandler connect (ChannelHandlerContext, SocketAddress, SocketAddress, ChannelPromise), ProxyHandler setConnectFailure (Throwable), ProxyHandler failPendingWrites (Throwable), Socks5ProxyHandler removeEncoder (ChannelHandlerContext), ProxyHandler handleResponse (ChannelHandlerContext, Object), ProxyHandler writePendingWrites (), ProxyHandler exceptionCaught (ChannelHandlerContext, Throwable), ProxyHandler sendInitialMessage (ChannelHandlerContext), Socks5ProxyHandler handleResponse (ChannelHandlerContext, Object), ProxyHandler channelActive (ChannelHandlerContext), LazyChannelPromise executor (), ProxyHandler connectFuture (), ProxyHandler ProxyHandler (SocketAddress), ProxyHandler write (ChannelHandlerContext, Object, ChannelPromise), ProxyHandler safeRemoveDecoder (), ProxyHandler exceptionMessage (String), ProxyHandler operationComplete (ChannelFuture), Socks5ProxyHandler Socks5ProxyHandler (SocketAddress, String, String), ProxyHandler authScheme (), ProxyHandler newInitialMessage (ChannelHandlerContext), Socks5ProxyHandler newInitialMessage (ChannelHandlerContext), ProxyHandler setConnectTimeoutMillis (long), ProxyHandler channelReadComplete (ChannelHandlerContext), ProxyHandler addPendingWrite (ChannelHandlerContext, Object, ChannelPromise), Socks5ProxyHandler removeDecoder (ChannelHandlerContext), ProxyHandler addCodec (ChannelHandlerContext), Socks5ProxyHandler authScheme (), ProxyHandler sendToProxyServer (Object), Socks5ProxyHandler username (), ProxyHandler handlerAdded (ChannelHandlerContext), ProxyHandler removeDecoder (ChannelHandlerContext), ProxyHandler channelInactive (ChannelHandlerContext), ProxyHandler channelRead (ChannelHandlerContext, Object), ProxyHandler flush (ChannelHandlerContext), ProxyHandler run (), ProxyHandler connectTimeoutMillis (), Socks5ProxyHandler addCodec (ChannelHandlerContext), Socks5ProxyHandler sendConnectCommand (ChannelHandlerContext), Socks5ProxyHandler socksAuthMethod ()]","104"
"3","netty/handler-proxy","bfb636b03888cb94de5f80066de1717895df72e3","c09629081bd70bccf08313dd3a6d794a0c174323","SWITCH_EQUAL_SIDES","14","1","10","[Socks4ProxyHandler username (), Socks4ProxyHandler newInitialMessage (ChannelHandlerContext), Socks4ProxyHandler removeEncoder (ChannelHandlerContext), Socks4ProxyHandler removeDecoder (ChannelHandlerContext), Socks4ProxyHandler protocol (), Socks4ProxyHandler handleResponse (ChannelHandlerContext, Object), Socks4ProxyHandler Socks4ProxyHandler (SocketAddress), Socks4ProxyHandler Socks4ProxyHandler (SocketAddress, String), Socks4ProxyHandler authScheme (), Socks4ProxyHandler addCodec (ChannelHandlerContext)]","30"
"5","netty/handler-proxy","c09629081bd70bccf08313dd3a6d794a0c174323","c6146c02bda6ba784be317b020c816f6031ed3ee","SWITCH_EQUAL_SIDES","14","1","1","[Socks4ProxyHandler handleResponse (ChannelHandlerContext, Object)]","3"
"7","netty/handler-proxy","c6146c02bda6ba784be317b020c816f6031ed3ee","3a2b7a7fe2be823e7df37d9ab08f2465df083ff5","STATEMENTS_ORDER_REARRANGEMENT","10","1","6","[ProxyConnectionEvent authScheme (), ProxyConnectionEvent destinationAddress (), ProxyConnectionEvent proxyAddress (), ProxyConnectionEvent protocol (), ProxyConnectionEvent toString (), ProxyConnectionEvent ProxyConnectionEvent (String, String, SocketAddress, SocketAddress)]","24"
"17","netty/handler-proxy","3a2b7a7fe2be823e7df37d9ab08f2465df083ff5","4e621ecca2fd586bdcb17352afb8176395bc2dd0","LOCAL_VAR_RENAMING","0","1","3","[ProxyConnectionEvent protocol (), ProxyConnectionEvent toString (), ProxyConnectionEvent ProxyConnectionEvent (String, String, SocketAddress, SocketAddress)]","12"
"0","netty/handler-ssl-ocsp","4e621ecca2fd586bdcb17352afb8176395bc2dd0","4271817dfe50d76f960fcc067c1c3097b08ca706","LOOP_IF_CONTINUE_TO_ELSE","11","1","16","[OcspClient validateResponse (Promise<BasicOCSPResp>, BasicOCSPResp, DEROctetString, X509Certificate, boolean), OcspClient operationComplete (Future<OCSPResp>), OcspClient parseOcspUrlFromCertificate (X509Certificate), OcspClient validateNonce (BasicOCSPResp, DEROctetString), Initializer Initializer (Promise<OCSPResp>), OcspClient run (), OcspValidationEvent toString (), Initializer OcspClient (), OcspClient validateSignature (BasicOCSPResp, X509Certificate), Initializer initChannel (SocketChannel), OcspClient query (EventLoop, ByteBuf, String, int, String, IoTransport, DnsNameResolver), OcspValidationEvent OcspValidationEvent (OcspResponse), OcspClient operationComplete (Future<InetAddress>), OcspValidationEvent response (), OcspClient operationComplete (ChannelFuture), OcspClient query (X509Certificate, X509Certificate, boolean, IoTransport, DnsNameResolver)]","32"
"2","netty/handler-ssl-ocsp","4271817dfe50d76f960fcc067c1c3097b08ca706","f0596217d4db6d73d5929fcb04d9234763c85808","LOCAL_VAR_RENAMING","0","1","3","[OcspValidationEvent OcspValidationEvent (OcspResponse), OcspValidationEvent response (), OcspValidationEvent toString ()]","6"
"23","netty/handler-ssl-ocsp","f0596217d4db6d73d5929fcb04d9234763c85808","ed41f765fd9d9b727fb8f94fc6d7ba1992ce9601","LOCAL_VAR_RENAMING","0","1","5","[OcspResponse status (), OcspResponse thisUpdate (), OcspResponse nextUpdate (), OcspResponse toString (), OcspResponse OcspResponse (Status, Date, Date)]","15"
"24","netty/handler-ssl-ocsp","ed41f765fd9d9b727fb8f94fc6d7ba1992ce9601","84339938f9412b208637e6c95d4f373dd80d949d","LOCAL_VAR_RENAMING","0","1","3","[OcspValidationEvent OcspValidationEvent (OcspResponse), OcspValidationEvent response (), OcspValidationEvent toString ()]","9"
"0","netty/handler","84339938f9412b208637e6c95d4f373dd80d949d","c9f4de6a3584dce25276d589c6cf14edc12c45d6","STATEMENTS_ORDER_REARRANGEMENT","10","1","127","[ChunkedStream progress (), SslContextBuilder protocols (Iterable<String>), AbstractSniHandler AbstractSniHandler (), ChunkedStream transferredBytes (), OpenSslCertificateException OpenSslCertificateException (Throwable, int), SslContextBuilder forServer (InputStream, InputStream), SslContextBuilder trustManager (TrustManagerFactory), OpenSslCachingKeyMaterialProvider chooseKeyMaterial (ByteBufAllocator, String), OpenSslServerCertificateCallback OpenSslServerCertificateCallback (OpenSslEngineMap, OpenSslKeyMaterialManager), SslContextBuilder keyManager (InputStream, InputStream), SslContextBuilder forServer (File, File, String), OpenSslPrivateKeyMaterial touch (Object), OpenSslSniHostnameMatcher OpenSslSniHostnameMatcher (OpenSslEngineMap), OpenSslPrivateKeyMaterial retain (), OpenSslSniHostnameMatcher match (long, String), OpenSslPrivateKey OpenSslPrivateKey (long), AbstractSniHandler lookup (ChannelHandlerContext, String), OpenSslPrivateKeyMaterial touch (), OpenSslPrivateKeyMaterial privateKeyAddress (), OpenSslCachingKeyMaterialProvider destroy (), OpenSslPrivateKey retain (), ChunkedStream ChunkedStream (InputStream), SslContextBuilder forClient (), AbstractSniHandler onLookupComplete (ChannelHandlerContext, Future<T>), SslContextBuilder endpointIdentificationAlgorithm (String), OpenSslPrivateKeyMaterial certificateChain (), AbstractSniHandler AbstractSniHandler (int, long), ExtendedTrustManagerVerifyCallback verify (ReferenceCountedOpenSslEngine, X509Certificate[], String), OpenSslPrivateKey touch (), SslContextBuilder build (), SslContextBuilder sslContextProvider (Provider), AbstractSniHandler lookup (ChannelHandlerContext, ByteBuf), SniCompletionEvent SniCompletionEvent (Throwable), ChunkedStream length (), SslContextBuilder sessionCacheSize (long), AbstractSniHandler handlerAdded (ChannelHandlerContext), OpenSslPrivateKey retain (int), OpenSslPrivateKeyMaterial certificateChainAddress (), OpenSslCertificateException OpenSslCertificateException (String, int), ChunkedStream readChunk (ChannelHandlerContext), JdkNpnApplicationProtocolNegotiator JdkNpnApplicationProtocolNegotiator (boolean, String), OpenSslCertificateException checkErrorCode (int), OpenSslPrivateKey isDestroyed (), ReferenceCountedOpenSslServerContext sessionContext (), AbstractSniHandler checkStartTimeout (ChannelHandlerContext), ChunkedStream ChunkedStream (InputStream, int), SslContextBuilder trustManager (InputStream), JdkNpnApplicationProtocolNegotiator JdkNpnApplicationProtocolNegotiator (boolean, boolean, String), SslContextBuilder ciphers (Iterable<String>, CipherSuiteFilter), OpenSslPrivateKey getFormat (), JdkNpnApplicationProtocolNegotiator wrapSslEngine (SSLEngine, JdkApplicationProtocolNegotiator, boolean), SslContextBuilder ciphers (Iterable<String>), TrustManagerVerifyCallback TrustManagerVerifyCallback (OpenSslEngineMap, X509TrustManager), OpenSslPrivateKey destroy (), OpenSslPrivateKey getAlgorithm (), SslContextBuilder trustManager (Iterable<? extends X509Certificate>), OpenSslPrivateKeyMaterial releaseChain (), SslContextBuilder option (SslContextOption<T>, T), SslContextBuilder keyManager (KeyManager), OpenSslCertificateException OpenSslCertificateException (String, Throwable, int), AbstractSniHandler onLookupComplete (ChannelHandlerContext, String, Future<T>), SslContextBuilder forServer (File, File), SslContextBuilder keyManager (KeyManagerFactory), OpenSslServerCertificateCallback handle (long, byte[], byte[][]), ChunkedStream close (), SslContextBuilder forServer (PrivateKey, X509Certificate), OpenSslPrivateKey deallocate (), ReferenceCountedOpenSslServerContext newSessionContext (ReferenceCountedOpenSslContext, long, OpenSslEngineMap, X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, String, long, long), SslContextBuilder forServer (KeyManagerFactory), OpenSslCertificateException errorCode (), SniCompletionEvent hostname (), SslContextBuilder enableOcsp (boolean), SslContextBuilder sslProvider (SslProvider), SslContextBuilder keyManager (PrivateKey, String, X509Certificate), SslContextBuilder forServer (KeyManager), SslContextBuilder clientAuth (ClientAuth), SslContextBuilder secureRandom (SecureRandom), OpenSslPrivateKey touch (Object), AbstractSniHandler AbstractSniHandler (long), JdkNpnApplicationProtocolNegotiator JdkNpnApplicationProtocolNegotiator (boolean, boolean, Iterable<String>), SslContextBuilder SslContextBuilder (boolean), SslContextBuilder keyManager (File, File, String), ExtendedTrustManagerVerifyCallback ExtendedTrustManagerVerifyCallback (OpenSslEngineMap, X509ExtendedTrustManager), OpenSslCachingKeyMaterialProvider OpenSslCachingKeyMaterialProvider (X509KeyManager, String, int), SslContextBuilder keyManager (PrivateKey, String, Iterable<? extends X509Certificate>), OpenSslCertificateException OpenSslCertificateException (int), SslContextBuilder keyManager (PrivateKey, Iterable<? extends X509Certificate>), JdkNpnApplicationProtocolNegotiator JdkNpnApplicationProtocolNegotiator (String), AbstractSniHandler fireSniCompletionEvent (ChannelHandlerContext, String, Future<?>), SslContextBuilder protocols (String), AbstractSniHandler extractSniHostname (ByteBuf), JdkNpnApplicationProtocolNegotiator JdkNpnApplicationProtocolNegotiator (ProtocolSelectorFactory, ProtocolSelectionListenerFactory, String), ReferenceCountedOpenSslServerContext ReferenceCountedOpenSslServerContext (X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, Iterable<String>, CipherSuiteFilter, ApplicationProtocolConfig, long, long, ClientAuth, String[], boolean, boolean, String, Map.Entry<SslContextOption<?>,Object>), OpenSslPrivateKeyMaterial OpenSslPrivateKeyMaterial (long, X509Certificate[]), SslContextBuilder applicationProtocolConfig (ApplicationProtocolConfig), SslContextBuilder trustManager (TrustManager), ReferenceCountedOpenSslServerContext ReferenceCountedOpenSslServerContext (X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, Iterable<String>, CipherSuiteFilter, OpenSslApplicationProtocolNegotiator, long, long, ClientAuth, String[], boolean, boolean, String, Map.Entry<SslContextOption<?>,Object>), SslContextBuilder sessionTimeout (long), SniCompletionEvent toString (), OpenSslPrivateKey newKeyMaterial (long, X509Certificate[]), ChunkedStream isEndOfInput (), JdkNpnApplicationProtocolNegotiator JdkNpnApplicationProtocolNegotiator (boolean, Iterable<String>), OpenSslPrivateKey getEncoded (), SslContextBuilder keyManager (InputStream, InputStream, String), SslContextBuilder forServer (PrivateKey, String, Iterable<? extends X509Certificate>), SslContextBuilder trustManager (File), ReferenceCountedOpenSslServerContext setVerifyCallback (long, OpenSslEngineMap, X509TrustManager), OpenSslPrivateKeyMaterial deallocate (), JdkNpnApplicationProtocolNegotiator JdkNpnApplicationProtocolNegotiator (ProtocolSelectorFactory, ProtocolSelectionListenerFactory, Iterable<String>), SslContextBuilder keyManager (PrivateKey, X509Certificate), SslContextBuilder keyManager (File, File), SslContextBuilder forServer (InputStream, InputStream, String), SslContextBuilder forServer (PrivateKey, String, X509Certificate), SslContextBuilder forServer (PrivateKey, Iterable<? extends X509Certificate>), AbstractSniHandler channelActive (ChannelHandlerContext), SslContextBuilder trustManager (X509Certificate), OpenSslPrivateKeyMaterial retain (int), ChunkedStream readChunk (ByteBufAllocator), SniCompletionEvent SniCompletionEvent (String), JdkNpnApplicationProtocolNegotiator JdkNpnApplicationProtocolNegotiator (Iterable<String>), SslContextBuilder keyStoreType (String), AbstractSniHandler run (), SslContextBuilder startTls (boolean), OpenSslPrivateKey privateKeyAddress (), SniCompletionEvent SniCompletionEvent (String, Throwable), SslContextBuilder toArray (Iterable<? extends T>, T[]), TrustManagerVerifyCallback verify (ReferenceCountedOpenSslEngine, X509Certificate[], String)]","1143"
"2","netty/handler","c9f4de6a3584dce25276d589c6cf14edc12c45d6","7f1a8ad6fe2ab929c1df4a0ff6415ffc8984a7e1","STATEMENTS_ORDER_REARRANGEMENT","10","1","5","[ReferenceCountedOpenSslServerContext ReferenceCountedOpenSslServerContext (X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, Iterable<String>, CipherSuiteFilter, OpenSslApplicationProtocolNegotiator, long, long, ClientAuth, String[], boolean, boolean, String, Map.Entry<SslContextOption<?>,Object>), TrustManagerVerifyCallback TrustManagerVerifyCallback (OpenSslEngineMap, X509TrustManager), ExtendedTrustManagerVerifyCallback ExtendedTrustManagerVerifyCallback (OpenSslEngineMap, X509ExtendedTrustManager), OpenSslServerCertificateCallback OpenSslServerCertificateCallback (OpenSslEngineMap, OpenSslKeyMaterialManager), ReferenceCountedOpenSslServerContext newSessionContext (ReferenceCountedOpenSslContext, long, OpenSslEngineMap, X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, String, long, long)]","45"
"5","netty/handler","7f1a8ad6fe2ab929c1df4a0ff6415ffc8984a7e1","3a0bf320354444844e040fa1e93017c1197fc129","LOCAL_VAR_RENAMING","0","1","2","[ReferenceCountedOpenSslServerContext ReferenceCountedOpenSslServerContext (X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, Iterable<String>, CipherSuiteFilter, OpenSslApplicationProtocolNegotiator, long, long, ClientAuth, String[], boolean, boolean, String, Map.Entry<SslContextOption<?>,Object>), ReferenceCountedOpenSslServerContext newSessionContext (ReferenceCountedOpenSslContext, long, OpenSslEngineMap, X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, String, long, long)]","18"
"6","netty/handler","3a0bf320354444844e040fa1e93017c1197fc129","de90daa259f013750c7eac85070bfd2921576b87","LOCAL_VAR_RENAMING","0","1","1","[ReferenceCountedOpenSslServerContext ReferenceCountedOpenSslServerContext (X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, Iterable<String>, CipherSuiteFilter, ApplicationProtocolConfig, long, long, ClientAuth, String[], boolean, boolean, String, Map.Entry<SslContextOption<?>,Object>)]","9"
"9","netty/handler","de90daa259f013750c7eac85070bfd2921576b87","d72a59ebba870734b73269ec5afcd676e7d9ccde","SWITCH_EQUAL_SIDES","14","1","1","[OpenSslServerCertificateCallback handle (long, byte[], byte[][])]","9"
"11","netty/handler","d72a59ebba870734b73269ec5afcd676e7d9ccde","8e92521a646958652bcda7e76b218d3870ae345a","SWITCH_EQUAL_SIDES","14","1","2","[OpenSslServerCertificateCallback handle (long, byte[], byte[][]), ReferenceCountedOpenSslServerContext newSessionContext (ReferenceCountedOpenSslContext, long, OpenSslEngineMap, X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, String, long, long)]","18"
"17","netty/handler","8e92521a646958652bcda7e76b218d3870ae345a","fb0d0161ed9f7603827c4e8f798134f5a7fe0e16","INFIX_EXPRESSION_DIVIDING","8","1","1","[ReferenceCountedOpenSslServerContext newSessionContext (ReferenceCountedOpenSslContext, long, OpenSslEngineMap, X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, String, long, long)]","9"
"24","netty/handler","fb0d0161ed9f7603827c4e8f798134f5a7fe0e16","8aa11319eefa12da8c3c29d1649b0690fba67891","LOCAL_VAR_RENAMING","0","1","2","[ReferenceCountedOpenSslServerContext setVerifyCallback (long, OpenSslEngineMap, X509TrustManager), ReferenceCountedOpenSslServerContext ReferenceCountedOpenSslServerContext (X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, Iterable<String>, CipherSuiteFilter, ApplicationProtocolConfig, long, long, ClientAuth, String[], boolean, boolean, String, Map.Entry<SslContextOption<?>,Object>)]","18"
"26","netty/handler","8aa11319eefa12da8c3c29d1649b0690fba67891","c3f1c2354822750e1d65d664c2a21dc43c4bd17f","REVERSE_IF_ELSE","3","1","4","[ReferenceCountedOpenSslServerContext setVerifyCallback (long, OpenSslEngineMap, X509TrustManager), OpenSslServerCertificateCallback handle (long, byte[], byte[][]), ReferenceCountedOpenSslServerContext newSessionContext (ReferenceCountedOpenSslContext, long, OpenSslEngineMap, X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, String, long, long), OpenSslSniHostnameMatcher match (long, String)]","36"
"27","netty/handler","c3f1c2354822750e1d65d664c2a21dc43c4bd17f","1b3f2da9552e28c0ea6c3866dbb3a1b7ac89921f","INFIX_EXPRESSION_DIVIDING","8","1","1","[ReferenceCountedOpenSslServerContext newSessionContext (ReferenceCountedOpenSslContext, long, OpenSslEngineMap, X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, String, long, long)]","9"
"28","netty/handler","1b3f2da9552e28c0ea6c3866dbb3a1b7ac89921f","20a13282d1f7c557e7ef8fe63349746e59b8b566","SWITCH_EQUAL_SIDES","14","1","2","[OpenSslServerCertificateCallback handle (long, byte[], byte[][]), ReferenceCountedOpenSslServerContext newSessionContext (ReferenceCountedOpenSslContext, long, OpenSslEngineMap, X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, String, long, long)]","18"
"0","netty/microbench","20a13282d1f7c557e7ef8fe63349746e59b8b566","dddd7afcb0afb187db1e92fe76e6cc7ccdc6522e","REVERSE_IF_ELSE","3","1","36","[CompositeByteBufWriteOutBenchmark makeLargeChunks (int), HpackDecoderBenchmark setup (), CompositeByteBufWriteOutBenchmark jvmArgs (), CompositeByteBufWriteOutBenchmark setup (), SlicedByteBufBenchmark writeAsciiStringSlice (), AbstractByteBufGetCharSequenceBenchmark getCharSequenceOld (), HpackDecoderBenchmark decode (Blackhole), AbstractByteBufGetCharSequenceBenchmark traverse (CharSequence), HpackDecoderULE128Benchmark decodeMaxInt (), AbstractByteBufGetCharSequenceBenchmark newBuffer (byte[], int), HpackDecoderBenchmark add (CharSequence, CharSequence), CompositeByteBufWriteOutBenchmark makeSmallChunks (int), CompositeByteBufWriteOutBenchmark teardown (), HpackDecoderULE128Benchmark decodeMaxLong (), HpackDecoderULE128Benchmark decodeULE128 (ByteBuf, long), HpackDecoderULE128Benchmark decodeULE128UsingLong (ByteBuf, int), AbstractByteBufGetCharSequenceBenchmark jvmArgs (), SlicedByteBufBenchmark setup (), CompositeByteBufWriteOutBenchmark sourceBuffers (int), AbstractByteBufGetCharSequenceBenchmark getCharSequence (), HttpFragmentedRequestDecoderBenchmark testDecodeWholeRequestInMultipleStepsMixedDelimiters (), HpackDecoderULE128Benchmark decodeULE128 (ByteBuf, int), HpackDecoderULE128Benchmark decodeMaxIntWithLong (), HpackDecoderULE128Benchmark setup (), SlicedByteBufBenchmark tearDown (), AbstractByteBufGetCharSequenceBenchmark teardown (), SlicedByteBufBenchmark writeAsciiStringSliceAbstract (), HttpFragmentedRequestDecoderBenchmark releaseStepBuffers (), AbstractByteBufGetCharSequenceBenchmark setup (), HttpFragmentedRequestDecoderBenchmark initPipeline (), HpackDecoderBenchmark teardown (), CompositeByteBufWriteOutBenchmark writeFCBB (), CompositeByteBufWriteOutBenchmark writeCBB (), HpackDecoderBenchmark getSerializedHeaders (Http2Headers, boolean), HttpFragmentedRequestDecoderBenchmark stepsBuffers (ByteBufAllocator, byte[], int, boolean), HpackDecoderULE128Benchmark decodeMaxIntUsingLong ()]","216"
"6","netty/microbench","dddd7afcb0afb187db1e92fe76e6cc7ccdc6522e","c613a58cdb1e470a1d2fa172a5aebee741c34929","LOCAL_VAR_RENAMING","0","1","6","[UnsafeByteBufBenchmark setup (), UnsafeByteBufBenchmark setGetLongUnsafeByteBuf (), UnsafeByteBufBenchmark setLongByteBuffer (), UnsafeByteBufBenchmark setLongUnsafeByteBuf (), UnsafeByteBufBenchmark tearDown (), UnsafeByteBufBenchmark setGetLongByteBuffer ()]","42"
"20","netty/microbench","c613a58cdb1e470a1d2fa172a5aebee741c34929","122d17ac8b1b0e5ef7a926e3eb10a0612371228d","LOCAL_VAR_RENAMING","0","1","4","[SlicedByteBufBenchmark tearDown (), SlicedByteBufBenchmark writeAsciiStringSlice (), SlicedByteBufBenchmark writeAsciiStringSliceAbstract (), SlicedByteBufBenchmark setup ()]","28"
"21","netty/microbench","122d17ac8b1b0e5ef7a926e3eb10a0612371228d","44dabac8bcdab59ec28bced4f51225b0e5dc1cd4","LOCAL_VAR_RENAMING","0","1","3","[SlicedByteBufBenchmark tearDown (), SlicedByteBufBenchmark writeAsciiStringSlice (), SlicedByteBufBenchmark setup ()]","21"
"0","netty/resolver-dns-classes-macos","44dabac8bcdab59ec28bced4f51225b0e5dc1cd4","41ffdad3fb969dfaacfb11db2e7e84955825318f","LOCAL_VAR_RENAMING","0","1","17","[MacOSDnsServerAddressStreamProvider resolvers (), DnsResolver port (), MacOSDnsServerAddressStreamProvider nameServerAddressStream (String), MacOSDnsServerAddressStreamProvider compare (DnsResolver, DnsResolver), MacOSDnsServerAddressStreamProvider loadNativeLibrary (), DnsResolver nameservers (), DnsResolver options (), MacOSDnsServerAddressStreamProvider unavailabilityCause (), MacOSDnsServerAddressStreamProvider MacOSDnsServerAddressStreamProvider (), MacOSDnsServerAddressStreamProvider retrieveCurrentMappings (), MacOSDnsServerAddressStreamProvider isAvailable (), DnsResolver DnsResolver (String, byte[][], int, String[], String, int, int), DnsResolver domain (), DnsResolver searchOrder (), DnsResolver searches (), MacOSDnsServerAddressStreamProvider ensureAvailability (), DnsResolver timeout ()]","34"
"6","netty/resolver-dns-classes-macos","41ffdad3fb969dfaacfb11db2e7e84955825318f","a82197194147942fee610473633c2067fca0c4f6","INFIX_EXPRESSION_DIVIDING","8","1","2","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String), MacOSDnsServerAddressStreamProvider retrieveCurrentMappings ()]","4"
"8","netty/resolver-dns-classes-macos","a82197194147942fee610473633c2067fca0c4f6","3190c4ca37c770dff20676ef80588f3ab8e163ac","STATEMENTS_ORDER_REARRANGEMENT","10","1","4","[MacOSDnsServerAddressStreamProvider MacOSDnsServerAddressStreamProvider (), MacOSDnsServerAddressStreamProvider nameServerAddressStream (String), MacOSDnsServerAddressStreamProvider retrieveCurrentMappings (), MacOSDnsServerAddressStreamProvider loadNativeLibrary ()]","8"
"9","netty/resolver-dns-classes-macos","3190c4ca37c770dff20676ef80588f3ab8e163ac","cd6c314652a78d59e289171e43d2fc7dddd369ad","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String)]","2"
"13","netty/resolver-dns-classes-macos","cd6c314652a78d59e289171e43d2fc7dddd369ad","942cca8709484d07232496f56be48879bd1798c5","LOCAL_VAR_RENAMING","0","1","1","[MacOSDnsServerAddressStreamProvider loadNativeLibrary ()]","2"
"14","netty/resolver-dns-classes-macos","942cca8709484d07232496f56be48879bd1798c5","2c43ff2d240051d92cde8fbd801f465df1c15602","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","2","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String), MacOSDnsServerAddressStreamProvider retrieveCurrentMappings ()]","4"
"17","netty/resolver-dns-classes-macos","2c43ff2d240051d92cde8fbd801f465df1c15602","a4216cbe2eb2aa101d6b9a1d5d478ddde38c81b5","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String), MacOSDnsServerAddressStreamProvider loadNativeLibrary ()]","4"
"20","netty/resolver-dns-classes-macos","a4216cbe2eb2aa101d6b9a1d5d478ddde38c81b5","f4db8cdc35feb93ee05ad601dcac22a6e5fc5e01","REVERSE_IF_ELSE","3","1","2","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String), MacOSDnsServerAddressStreamProvider retrieveCurrentMappings ()]","4"
"21","netty/resolver-dns-classes-macos","f4db8cdc35feb93ee05ad601dcac22a6e5fc5e01","68737e3d8595b9ad726dbeb90e0b9877b44f5f03","INFIX_EXPRESSION_DIVIDING","8","1","2","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String), MacOSDnsServerAddressStreamProvider retrieveCurrentMappings ()]","4"
"22","netty/resolver-dns-classes-macos","68737e3d8595b9ad726dbeb90e0b9877b44f5f03","5d38368112bc73a22a3532ac07ddf6ef39e73997","LOCAL_VAR_RENAMING","0","1","1","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String)]","2"
"24","netty/resolver-dns-classes-macos","5d38368112bc73a22a3532ac07ddf6ef39e73997","3e494e9b93f4c4e29212311709cdf39a03f6c758","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[MacOSDnsServerAddressStreamProvider loadNativeLibrary ()]","2"
"29","netty/resolver-dns-classes-macos","3e494e9b93f4c4e29212311709cdf39a03f6c758","4bffc39f7327ac6f3f9f08dc0666986ba40ad4d5","LOCAL_VAR_RENAMING","0","1","2","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String), MacOSDnsServerAddressStreamProvider retrieveCurrentMappings ()]","4"
"0","netty/resolver-dns","4bffc39f7327ac6f3f9f08dc0666986ba40ad4d5","ae9257ef36beb899f8c4bfdf69d781e8e200952e","REVERSE_IF_ELSE","3","1","157","[DnsNameResolver run (), DatagramDnsQueryContext DatagramDnsQueryContext (Channel, Future<? extends Channel>, InetSocketAddress, DnsQueryContextManager, int, boolean, long, DnsQuestion, DnsRecord[], Promise<AddressedEnvelope<DnsResponse,InetSocketAddress>>, Bootstrap, boolean), DnsNameResolverBuilder queryServerAddressStream (DnsServerAddressStream), DnsNameResolver DnsNameResolver (EventLoop, ChannelFactory<? extends DatagramChannel>, DnsCache, DnsCache, DnsQueryLifecycleObserverFactory, long, ResolvedAddressTypes, boolean, int, boolean, int, boolean, HostsFileEntriesResolver, DnsServerAddressStreamProvider, String[], int, boolean), DnsNameResolverBuilder maxQueriesPerResolve (int), DnsNameResolverBuilder resolveCache (DnsCache), DnsNameResolver loopbackAddress (), DnsNameResolverBuilder getOrNewAuthoritativeDnsServerCache (), DefaultDnsCnameCache DefaultDnsCnameCache (), DnsNameResolver queryTimeoutMillis (), DnsNameResolverBuilder copy (), DnsNameResolver cnameCache (), DnsNameResolverBuilder cnameCache (DnsCnameCache), DefaultDnsCnameCache clear (String), DnsNameResolverBuilder resolvedAddressTypes (ResolvedAddressTypes), DnsQueryIdRange maxUsableIds (), DnsNameResolver doResolve (String, DnsRecord[], Promise<InetAddress>, DnsCache), DnsNameResolver nextNameServerAddress (), DnsNameResolver isDecodeIdn (), DnsNameResolver trySuccess (Promise<T>, T), DnsNameResolverBuilder newQueryServerAddressStream (DnsServerAddressStreamProvider), DnsNameResolver resolveAll (DnsQuestion, Iterable<DnsRecord>, Promise<List<DnsRecord>>), DnsNameResolver validateAdditional (DnsRecord, boolean), DatagramDnsQueryContext protocol (), DnsNameResolverBuilder socketChannelFactory (ChannelFactory<? extends SocketChannel>), DnsNameResolver isOptResourceEnabled (), DnsNameResolver doResolveCached (String, DnsRecord[], Promise<InetAddress>, DnsCache), DatagramDnsQueryContext newQuery (int, InetSocketAddress), DnsNameResolver resolveRecordTypes (), DnsNameResolver dnsQueryLifecycleObserverFactory (), DnsNameResolverBuilder ndots (int), DnsNameResolverBuilder channelFactory (), DnsNameResolverBuilder nameServerProvider (DnsServerAddressStreamProvider), DefaultDnsCnameCache DefaultDnsCnameCache (int, int), DefaultDnsCnameCache minTtl (), DnsNameResolverBuilder channelType (Class<? extends DatagramChannel>), DnsNameResolver supportsAAAARecords (), DnsNameResolver isTransportOrTimeoutError (Throwable), DnsNameResolver query (DnsQuestion, Iterable<DnsRecord>), DnsNameResolverBuilder build (), DnsQueryIdRange nextId (), DnsNameResolverBuilder searchDomains (Iterable<String>), DnsNameResolver operationComplete (Future<List<InetAddress>>), DnsNameResolver resolve (String, Iterable<DnsRecord>, Promise<InetAddress>), DnsNameResolver doResolveAllUncached (String, DnsRecord[], Promise<?>, Promise<List<InetAddress>>, DnsCache, boolean), DnsNameResolverBuilder negativeTtl (int), DnsQueryContextManager toIPv4Address (Inet6Address), DnsNameResolver query (DnsQuestion, Promise<AddressedEnvelope<? extends DnsResponse,InetSocketAddress>>), DnsNameResolver query (InetSocketAddress, DnsQuestion, Promise<AddressedEnvelope<? extends DnsResponse,InetSocketAddress>>), DnsQueryIdRange DnsQueryIdRange (int, int), DnsNameResolverBuilder channelFactory (ChannelFactory<? extends DatagramChannel>), DnsNameResolverBuilder ttl (int, int), DnsNameResolverBuilder dnsQueryLifecycleObserverFactory (DnsQueryLifecycleObserverFactory), DnsNameResolver isLocalWindowsHost (String), DnsNameResolver close (), DnsNameResolver anyInterfaceSupportsIpV6 (), DnsNameResolver maxQueriesPerResolve (), DnsResponseHandler channelActive (ChannelHandlerContext), DnsQueryContextMap add (DnsQueryContext), DnsNameResolver newNameServerAddressStream (String), DnsNameResolverBuilder DnsNameResolverBuilder (), DnsNameResolver operationComplete (ChannelFuture), DnsNameResolver query (InetSocketAddress, DnsQuestion, Iterable<DnsRecord>), DnsQueryIdSpace nextId (), DnsNameResolver resolveHostsFileEntry (String), DnsQueryContextMap get (int), DnsNameResolverBuilder consolidateCacheSize (int), DnsQueryIdSpace usableIds (), DnsNameResolverBuilder socketChannelType (Class<? extends SocketChannel>, boolean), DnsNameResolver doResolveAll (String, DnsRecord[], Promise<List<InetAddress>>, DnsCache), DnsNameResolver doResolveAllUncached0 (String, DnsRecord[], Promise<?>, Promise<List<InetAddress>>, DnsCache, boolean), DnsQueryContextMap remove (int), DnsNameResolver resolveAll (String, Iterable<DnsRecord>), DnsNameResolver doResolveUncached (String, DnsRecord[], Promise<InetAddress>, DnsCache, boolean), DnsNameResolver toArray (Iterable<DnsRecord>, boolean), DnsQueryIdSpace maxUsableIds (), DefaultDnsCnameCache clear (), DnsNameResolverBuilder queryServerAddressStream (), DnsNameResolver tryFailure (Promise<?>, Throwable), DnsNameResolver newRedirectDnsServerStream (String, List<InetSocketAddress>), DnsResponseHandler channelRead (ChannelHandlerContext, Object), DnsNameResolverBuilder getOrNewCnameCache (), DnsNameResolver resolvedAddressTypes (), DnsNameResolver doResolve (String, Promise<InetAddress>), DnsNameResolver searchDomains (), DnsNameResolverBuilder hostsFileEntriesResolver (HostsFileEntriesResolver), DnsNameResolver preferredAddressType (ResolvedAddressTypes), DnsNameResolverBuilder maxPayloadSize (int), DnsQueryIdSpace pushId (int), DnsQueryContextManager getOrCreateContextMap (InetSocketAddress), DnsResponseHandler exceptionCaught (ChannelHandlerContext, Throwable), DnsNameResolver doResolveAll (String, Promise<List<InetAddress>>), DnsNameResolverBuilder computeResolvedAddressTypes (InternetProtocolFamily), DefaultDnsCnameCache equals (String, String), DnsNameResolver newRedirectServerAddress (InetAddress), DefaultDnsCnameCache get (String), DnsNameResolver isTimeoutError (Throwable), DnsNameResolver hasEntries (List<? extends DnsCacheEntry>), DnsQueryIdRange pushId (int), DnsNameResolverBuilder recursionDesired (boolean), DnsNameResolver authoritativeDnsServerCache (), DnsNameResolver query (DnsQuestion), DnsNameResolverBuilder queryTimeoutMillis (long), DnsNameResolver decodeResponse (ChannelHandlerContext, DatagramPacket), DnsQueryContextManager getContextMap (InetSocketAddress), DnsNameResolver supportsARecords (), DnsNameResolver isSharable (), DnsNameResolver isRecursionDesired (), DnsNameResolver resolveCache (), DnsNameResolverBuilder nameServerProvider (), DefaultDnsCnameCache cache (String, String, long, EventLoop), DnsNameResolverBuilder getOrNewCache (), DnsNameResolverBuilder DnsNameResolverBuilder (EventLoop), DnsNameResolver resolveAll (DnsQuestion), DnsNameResolver ndots (), DnsNameResolver hostname (String), DnsQueryIdSpace DnsQueryIdSpace (), DnsQueryContextManager add (InetSocketAddress, DnsQueryContext), DnsNameResolverBuilder authoritativeDnsServerCache (DnsCache), DnsNameResolverBuilder traceEnabled (boolean), DnsNameResolver initChannel (DatagramChannel), DnsNameResolver query (InetSocketAddress, DnsQuestion, Iterable<DnsRecord>, Promise<AddressedEnvelope<? extends DnsResponse,InetSocketAddress>>), DnsResponseHandler DnsResponseHandler (Promise<Channel>), DnsNameResolver resolveAll (DnsQuestion, DnsRecord[], Promise<List<DnsRecord>>), DnsNameResolverBuilder localAddress (SocketAddress), DnsNameResolverBuilder eventLoop (EventLoop), DnsQueryIdRange usableIds (), DnsNameResolverBuilder socketChannelType (Class<? extends SocketChannel>), DnsNameResolverBuilder authoritativeDnsServerCache (AuthoritativeDnsServerCache), DnsNameResolver cast (Promise<?>), DnsNameResolver doResolveAllCached (String, DnsRecord[], Promise<List<InetAddress>>, DnsCache, String[], int, InternetProtocolFamily[]), DnsNameResolver query (InetSocketAddress, DnsQuestion), DnsNameResolver getSearchDomainsHack (), DnsNameResolverBuilder decodeIdn (boolean), DnsNameResolver resolve (String, Iterable<DnsRecord>), DnsNameResolver maxPayloadSize (), DnsNameResolver resolveAll (String, Iterable<DnsRecord>, Promise<List<InetAddress>>), DnsNameResolver resolveNow (String, DnsRecord[], Promise<?>, Promise<List<InetAddress>>, DnsCache, boolean), DnsNameResolverBuilder optResourceEnabled (boolean), DnsNameResolver queryDnsServerAddressStream (), DnsQueryIdSpace newBucket (int), DnsNameResolver resolvedInternetProtocolFamiliesUnsafe (), DnsNameResolver preferredAddressType (), DnsNameResolverBuilder socketChannelFactory (ChannelFactory<? extends SocketChannel>, boolean), DefaultDnsCnameCache shouldReplaceAll (String), DefaultDnsCnameCache maxTtl (), DnsNameResolver executor (), DnsNameResolverBuilder completeOncePreferredResolved (boolean), DnsQueryContextManager get (InetSocketAddress, int), DnsNameResolver hostsFileEntriesResolver (), DnsNameResolver DnsNameResolver (EventLoop, ChannelFactory<? extends DatagramChannel>, ChannelFactory<? extends SocketChannel>, boolean, DnsCache, DnsCnameCache, AuthoritativeDnsServerCache, SocketAddress, DnsQueryLifecycleObserverFactory, long, ResolvedAddressTypes, boolean, int, boolean, int, boolean, HostsFileEntriesResolver, DnsServerAddressStreamProvider, DnsServerAddressStream, String[], int, boolean, boolean, int), DnsNameResolver DnsNameResolver (EventLoop, ChannelFactory<? extends DatagramChannel>, DnsCache, AuthoritativeDnsServerCache, DnsQueryLifecycleObserverFactory, long, ResolvedAddressTypes, boolean, int, boolean, int, boolean, HostsFileEntriesResolver, DnsServerAddressStreamProvider, String[], int, boolean), DnsNameResolver doQuery (Channel, Future<? extends Channel>, InetSocketAddress, DnsQuestion, DnsQueryLifecycleObserver, DnsRecord[], boolean, Promise<AddressedEnvelope<? extends DnsResponse,InetSocketAddress>>), DnsNameResolver resolveAll (DnsQuestion, Iterable<DnsRecord>), DnsNameResolver resolveHostsFileEntries (String), DnsQueryContextManager remove (InetSocketAddress, int), DnsQueryContextManager toCompactAddress (Inet4Address)]","942"
"7","netty/resolver-dns","ae9257ef36beb899f8c4bfdf69d781e8e200952e","28be495da7b5c29d1bf7f2f9559dd610eac272ca","REVERSE_IF_ELSE","3","1","2","[DefaultDnsCnameCache get (String), DefaultDnsCnameCache DefaultDnsCnameCache (int, int)]","12"
"9","netty/resolver-dns","28be495da7b5c29d1bf7f2f9559dd610eac272ca","ca3d94bc808128c8e8f8b7a7533c8f50568d78c7","REVERSE_IF_ELSE","3","1","1","[DefaultDnsCnameCache get (String)]","6"
"13","netty/resolver-dns","ca3d94bc808128c8e8f8b7a7533c8f50568d78c7","dd1b03a7403688b178aea1c2b05aab5b49821636","REVERSE_IF_ELSE","3","1","2","[DefaultDnsCnameCache get (String), DefaultDnsCnameCache DefaultDnsCnameCache (int, int)]","12"
"14","netty/resolver-dns","dd1b03a7403688b178aea1c2b05aab5b49821636","ae2e38515b4736a321285ea466283419567259dd","STATEMENTS_ORDER_REARRANGEMENT","10","1","11","[Builder build (), Builder setNdots (int), UnixResolverOptions UnixResolverOptions (int, int, int), UnixResolverOptions toString (), Builder setAttempts (int), Builder setTimeout (int), UnixResolverOptions ndots (), UnixResolverOptions attempts (), Builder Builder (), UnixResolverOptions newBuilder (), UnixResolverOptions timeout ()]","77"
"0","netty/resolver","ae2e38515b4736a321285ea466283419567259dd","d0e8af28ffceee3f0ad8975244f64edb714fe444","CASE_TO_IF_ELSE","17","1","37","[RoundRobinInetAddressResolver doResolve (String, Promise<InetAddress>), Parser parse (Reader), ParserImpl parseSilently (), Parser parse (), ParserImpl parse (File, Charset), RoundRobinInetAddressResolver doResolveAll (String, Promise<List<InetAddress>>), HostsFileParser parse (File, Charset), ParserImpl ParserImpl (), Parser ipv6Entries (), ParserImpl parse (Reader), Parser ipv4Entries (), RoundRobinInetAddressResolver close (), Parser parseSilently (), HostsFileParser parse (File), HostsFileParser parse (), RoundRobinInetAddressResolver RoundRobinInetAddressResolver (EventExecutor, NameResolver<InetAddress>), Parser parse (Charset), HostsFileParser HostsFileParser (), InetNameResolver InetNameResolver (EventExecutor), HostsFileParser parse (Reader), ParserImpl parseSilently (Charset), ParserImpl parse (), HostsFileParser parseSilently (), Parser HostsFileEntriesProvider (Map<String,List<InetAddress>>, Map<String,List<InetAddress>>), ParserImpl parse (Charset), ParserImpl parseSilently (File, Charset), Parser parseSilently (Charset), HostsFileParser parseSilently (Charset), RoundRobinInetAddressResolver operationComplete (Future<List<InetAddress>>), RoundRobinInetAddressResolver randomIndex (int), Parser parse (File, Charset), Parser parseSilently (File, Charset), HostsFileParser hostsFileEntries (HostsFileEntriesProvider), InetNameResolver asAddressResolver (), ParserImpl locateHostsFile (), HostsFileParser toMapWithSingleValue (Map<String,List<InetAddress>>), Parser parser ()]","148"
"3","netty/resolver","d0e8af28ffceee3f0ad8975244f64edb714fe444","5b94d943d39e0711e1b96d67ffabc3a2d13d9972","SWITCH_EQUAL_SIDES","14","1","5","[AddressResolverGroup AddressResolverGroup (), AddressResolverGroup newResolver (EventExecutor), AddressResolverGroup close (), AddressResolverGroup getResolver (EventExecutor), AddressResolverGroup operationComplete (Future<Object>)]","25"
"8","netty/resolver","5b94d943d39e0711e1b96d67ffabc3a2d13d9972","f92d90a7937f4bd15db20758f6a655680c49732e","REVERSE_IF_ELSE","3","1","1","[AddressResolverGroup getResolver (EventExecutor)]","5"
"13","netty/resolver","f92d90a7937f4bd15db20758f6a655680c49732e","be2216c96b2eb6a1759085acdaec1b943798957b","LOCAL_VAR_RENAMING","0","1","1","[AddressResolverGroup newResolver (EventExecutor)]","5"
"15","netty/resolver","be2216c96b2eb6a1759085acdaec1b943798957b","682ce88ea83cef31f37a02c84f507c1f024096e6","LOCAL_VAR_RENAMING","0","1","2","[AddressResolverGroup getResolver (EventExecutor), AddressResolverGroup operationComplete (Future<Object>)]","10"
"20","netty/resolver","682ce88ea83cef31f37a02c84f507c1f024096e6","98ebf6d7f4ca060515a6afa3a9c87240f35f1f92","SWITCH_EQUAL_SIDES","14","1","1","[AddressResolverGroup getResolver (EventExecutor)]","5"
"24","netty/resolver","98ebf6d7f4ca060515a6afa3a9c87240f35f1f92","dcea3266bce6e9b5e93d6bbd4242840ab6abeec6","LOCAL_VAR_RENAMING","0","1","3","[AddressResolverGroup close (), AddressResolverGroup getResolver (EventExecutor), AddressResolverGroup operationComplete (Future<Object>)]","15"
"26","netty/resolver","dcea3266bce6e9b5e93d6bbd4242840ab6abeec6","7ef411afea8aa403abdccf29c4403bc9283661d6","SWITCH_EQUAL_SIDES","14","1","1","[AddressResolverGroup getResolver (EventExecutor)]","5"
"0","netty/testsuite-autobahn","7ef411afea8aa403abdccf29c4403bc9283661d6","bb35cd425ec51c66cfaf2763a669b4eca2c6407a","SWITCH_STRING_EQUAL","15","1","11","[AutobahnServer AutobahnServer (int), AutobahnServerHandler sendHttpResponse (ChannelHandlerContext, HttpRequest, FullHttpResponse), AutobahnServerHandler handleHttpRequest (ChannelHandlerContext, HttpRequest), AutobahnServerInitializer initChannel (SocketChannel), AutobahnServer main (String[]), AutobahnServer run (), AutobahnServerHandler getWebSocketLocation (HttpRequest), AutobahnServerHandler channelReadComplete (ChannelHandlerContext), AutobahnServerHandler handleWebSocketFrame (ChannelHandlerContext, WebSocketFrame), AutobahnServerHandler exceptionCaught (ChannelHandlerContext, Throwable), AutobahnServerHandler channelRead (ChannelHandlerContext, Object)]","33"
"9","netty/testsuite-autobahn","bb35cd425ec51c66cfaf2763a669b4eca2c6407a","96a22e689e92de2f37a45a5488857ae66ecab946","LOCAL_VAR_RENAMING","0","1","1","[AutobahnServerInitializer initChannel (SocketChannel)]","3"
"0","netty/testsuite-http2","96a22e689e92de2f37a45a5488857ae66ecab946","119a582e195a8a324e8a4326066bb3fe59dfd247","PRE_POST_FIX_EXPRESSION_DIVIDING","16","1","3","[Http2Server Http2Server (int), Http2Server main (String[]), Http2Server run ()]","3"
"19","netty/testsuite-http2","119a582e195a8a324e8a4326066bb3fe59dfd247","d6fd756ff8bc2624bb4f5fad0570dfc3649cd8bc","LOCAL_VAR_RENAMING","0","1","2","[Http2Server Http2Server (int), Http2Server run ()]","2"
"0","netty/testsuite-native-image-client-runtime-init","d6fd756ff8bc2624bb4f5fad0570dfc3649cd8bc","845f56aebf211fab2179ff5d024bb22d19f0d138","SWITCH_STRING_EQUAL","15","1","2","[NativeClientWithNettyInitAtRuntime main (String[]), NativeClientWithNettyInitAtRuntime NativeClientWithNettyInitAtRuntime ()]","2"
"5","netty/testsuite-native-image-client-runtime-init","845f56aebf211fab2179ff5d024bb22d19f0d138","a8086e9793365a8da16026f380a305b20730f5fb","LOCAL_VAR_RENAMING","0","1","1","[NativeClientWithNettyInitAtRuntime main (String[])]","1"
"13","netty/testsuite-native-image-client-runtime-init","a8086e9793365a8da16026f380a305b20730f5fb","5fef6902b01fb416196374ed7426e64490edb077","LOCAL_VAR_RENAMING","0","1","1","[NativeClientWithNettyInitAtRuntime main (String[])]","1"
"0","netty/testsuite-native-image-client","5fef6902b01fb416196374ed7426e64490edb077","f157767fe8361b536d9326cded2ea54d7daed18b","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[DnsNativeClient DnsNativeClient (), DnsNativeClient main (String[])]","2"
"17","netty/testsuite-native-image-client","f157767fe8361b536d9326cded2ea54d7daed18b","7dd23def864f5768ae07282ba4ff5a1c148e38e0","LOCAL_VAR_RENAMING","0","1","1","[DnsNativeClient main (String[])]","1"
"0","netty/testsuite-native-image","7dd23def864f5768ae07282ba4ff5a1c148e38e0","fb8701c6f793b27d663f14313e1cb74a64d0d5e7","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","6","[HttpNativeServer HttpNativeServer (), HttpNativeServerHandler channelReadComplete (ChannelHandlerContext), HttpNativeServerInitializer initChannel (SocketChannel), HttpNativeServerHandler channelRead0 (ChannelHandlerContext, HttpObject), HttpNativeServerHandler exceptionCaught (ChannelHandlerContext, Throwable), HttpNativeServer main (String[])]","18"
"2","netty/testsuite-native-image","fb8701c6f793b27d663f14313e1cb74a64d0d5e7","8c49e68f164ce289fe1a181b6a195495c4f6b9e4","LOCAL_VAR_RENAMING","0","1","2","[HttpNativeServerHandler channelRead0 (ChannelHandlerContext, HttpObject), HttpNativeServerHandler exceptionCaught (ChannelHandlerContext, Throwable)]","6"
"6","netty/testsuite-native-image","8c49e68f164ce289fe1a181b6a195495c4f6b9e4","7951146d9df060d6f3d472a4fd92c2273292fc52","REVERSE_IF_ELSE","3","1","1","[HttpNativeServerHandler channelRead0 (ChannelHandlerContext, HttpObject)]","3"
"24","netty/testsuite-native-image","7951146d9df060d6f3d472a4fd92c2273292fc52","c668de2ae71336fd141dabe58154d9c8513f4365","LOCAL_VAR_RENAMING","0","1","2","[HttpNativeServerHandler channelReadComplete (ChannelHandlerContext), HttpNativeServerHandler channelRead0 (ChannelHandlerContext, HttpObject)]","6"
"0","netty/testsuite","c668de2ae71336fd141dabe58154d9c8513f4365","ad3f7ddf7c34b89e37b0ef7beb035707b0aca85d","VAR_DECLARATION_MERGING","12","1","72","[EchoHandler exceptionCaught (ChannelHandlerContext, Throwable), SocketStartTlsTest testStartTlsNotAutoRead (ServerBootstrap, Bootstrap, SslContext, SslContext), StartTlsClientHandler StartTlsClientHandler (SSLEngine, boolean), TestNumReadsRecvByteBufAllocator newHandle (), SocketStartTlsTest testStartTls (ServerBootstrap, Bootstrap, SslContext, SslContext, boolean), SocketReadPendingTest testReadPendingIsResetAfterEachRead (ServerBootstrap, Bootstrap), SocketEchoTest run (ServerBootstrap, Bootstrap), SocketEchoTest testSimpleEchoWithAdditionalExecutorAndVoidPromise (ServerBootstrap, Bootstrap), TestNumReadsRecvByteBufAllocator lastBytesRead (int), SocketEchoTest testSimpleEcho0 (ServerBootstrap, Bootstrap, boolean, boolean, boolean), SocketEchoTest testSimpleEchoWithVoidPromise (ServerBootstrap, Bootstrap), TestNumReadsRecvByteBufAllocator allocate (ByteBufAllocator), SocketEchoTest testSimpleEchoWithVoidPromiseNotAutoRead (ServerBootstrap, Bootstrap), TestNumReadsRecvByteBufAllocator attemptedBytesRead (int), TestNumReadsRecvByteBufAllocator readComplete (), StartTlsServerHandler channelReadComplete (ChannelHandlerContext), SocketEchoTest testSimpleEchoWithVoidPromise (TestInfo), SocketStartTlsTest shutdownExecutor (), ReadPendingReadHandler channelReadComplete (ChannelHandlerContext), TestNumReadsRecvByteBufAllocator reset (ChannelConfig), ReadPendingReadHandler assertAllRead (), StartTlsClientHandler exceptionCaught (ChannelHandlerContext, Throwable), EchoHandler channelReadComplete (ChannelHandlerContext), SocketEchoTest testSimpleEchoWithAdditionalExecutorNotAutoRead (ServerBootstrap, Bootstrap), StartTlsServerHandler StartTlsServerHandler (SSLEngine, boolean), EchoHandler EchoHandler (boolean), SocketEchoTest testSimpleEcho (TestInfo), SocketStartTlsTest initChannel (Channel), ReadPendingReadHandler channelRead (ChannelHandlerContext, Object), SocketEchoTest testSimpleEchoNotAutoRead (TestInfo), TestNumReadsRecvByteBufAllocator attemptedBytesRead (), SocketStartTlsTest data (), SocketEchoTest destroyGroup (), SocketEchoTest testSimpleEchoWithAdditionalExecutorNotAutoRead (TestInfo), SocketStartTlsTest run (ServerBootstrap, Bootstrap), SocketStartTlsTest testStartTls (ServerBootstrap, Bootstrap, SslContext, SslContext), SocketStartTlsTest createExecutor (), SocketEchoTest testSimpleEcho (ServerBootstrap, Bootstrap), ReadPendingInitializer initChannel (Channel), SocketEchoTest initChannel (Channel), StartTlsClientHandler channelRead0 (ChannelHandlerContext, String), SocketEchoTest testSimpleEchoWithAdditionalExecutorAndVoidPromise (TestInfo), SocketEchoTest testSimpleEchoWithAdditionalExecutor (ServerBootstrap, Bootstrap), SocketEchoTest testSimpleEchoNotAutoRead (ServerBootstrap, Bootstrap), BootstrapComboFactory newServerInstance (), BootstrapFactory newInstance (), StartTlsServerHandler channelRead0 (ChannelHandlerContext, String), SocketEchoTest exceptionCaught (ChannelHandlerContext, Throwable), TestNumReadsRecvByteBufAllocator continueReading (UncheckedBooleanSupplier), EchoHandler channelActive (ChannelHandlerContext), StartTlsServerHandler channelActive (ChannelHandlerContext), StartTlsClientHandler channelReadComplete (ChannelHandlerContext), TestsuitePermutation allocator (), SocketReadPendingTest run (ServerBootstrap, Bootstrap), StartTlsClientHandler channelActive (ChannelHandlerContext), SocketReadPendingTest testReadPendingIsResetAfterEachRead (TestInfo), SocketStartTlsTest testStartTlsNotAutoRead (SslContext, SslContext, TestInfo), EchoHandler channelRead0 (ChannelHandlerContext, ByteBuf), SocketEchoTest testSimpleEchoWithVoidPromiseNotAutoRead (TestInfo), AbstractSctpTest configure (ServerBootstrap, Bootstrap, ByteBufAllocator), TestNumReadsRecvByteBufAllocator continueReading (), BootstrapComboFactory newClientInstance (), SocketStartTlsTest testStartTls (SslContext, SslContext, TestInfo), SocketEchoTest createGroup (), SocketEchoTest testSimpleEchoWithAdditionalExecutor (TestInfo), TestNumReadsRecvByteBufAllocator lastBytesRead (), TestNumReadsRecvByteBufAllocator guess (), TestNumReadsRecvByteBufAllocator incMessagesRead (int), StartTlsServerHandler exceptionCaught (ChannelHandlerContext, Throwable), TestsuitePermutation TestsuitePermutation (), AbstractSctpTest newFactories (), TestNumReadsRecvByteBufAllocator TestNumReadsRecvByteBufAllocator (int)]","360"
"4","netty/testsuite","ad3f7ddf7c34b89e37b0ef7beb035707b0aca85d","68188b0a0149c5273c2cc0c8ae3534145cf1d845","VAR_DECLARATION_DIVIDING","13","1","1","[SocketStartTlsTest testStartTls (ServerBootstrap, Bootstrap, SslContext, SslContext, boolean)]","5"
"5","netty/testsuite","68188b0a0149c5273c2cc0c8ae3534145cf1d845","23e3ef3cf85ec035dc0655191923d175d3fe95c0","STATEMENTS_ORDER_REARRANGEMENT","10","1","5","[AcceptedChannelCounter AcceptedChannelCounter (int), ServerSocketSuspendTest testSuspendAndResumeAccept (ServerBootstrap), ServerSocketSuspendTest run (ServerBootstrap), AcceptedChannelCounter channelActive (ChannelHandlerContext), ServerSocketSuspendTest testSuspendAndResumeAccept (TestInfo)]","30"
"6","netty/testsuite","23e3ef3cf85ec035dc0655191923d175d3fe95c0","4a8017270c7c71937c8ea5d0566702b11392a901","REVERSE_IF_ELSE","3","1","5","[DatagramConnectNotExistsTest newFactories (), DatagramConnectNotExistsTest testConnectNotExists (Bootstrap), DatagramConnectNotExistsTest exceptionCaught (ChannelHandlerContext, Throwable), DatagramConnectNotExistsTest testConnectNotExists (TestInfo), DatagramConnectNotExistsTest run (Bootstrap)]","35"
"15","netty/testsuite","4a8017270c7c71937c8ea5d0566702b11392a901","676263c435b25c747fd2ba3a1055e59e9c092f49","LOCAL_VAR_RENAMING","0","1","2","[DatagramConnectNotExistsTest testConnectNotExists (Bootstrap), DatagramConnectNotExistsTest exceptionCaught (ChannelHandlerContext, Throwable)]","14"
"0","netty/transport-classes-epoll","676263c435b25c747fd2ba3a1055e59e9c092f49","de862c2592f31fc0749dbc8a3d15b6bab50e0b6a","INFIX_EXPRESSION_DIVIDING","8","1","157","[Epoll isTcpFastOpenServerSideAvailable (), EpollSocketChannelConfig setWriteBufferHighWaterMark (int), EpollSocketChannelConfig setIpBindAddressNoPort (boolean), EpollSocketChannelConfig setTcpMd5Sig (Map<InetAddress,byte[]>), Native splice (int, long, int, long, long), EpollEventLoopGroup EpollEventLoopGroup (ThreadFactory), EpollSocketChannelConfig getSendBufferSize (), Native epollWait0 (int, long, int, int, int, int, long), Native eventFd (), Native offsetofEpollData (), EpollSocketChannelConfig setAutoClose (boolean), Native sendmmsg0 (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket[], int, int), EpollSocketChannelConfig getOption (ChannelOption<T>), EpollSocketChannelConfig setAutoRead (boolean), EpollServerSocketChannel config (), EpollSocketChannelConfig isIpBindAddressNoPort (), EpollServerChannelConfig setMaxMessagesPerRead (int), EpollEventLoopGroup EpollEventLoopGroup (int, Executor, EventExecutorChooserFactory, SelectStrategyFactory, RejectedExecutionHandler, EventLoopTaskQueueFactory, EventLoopTaskQueueFactory), EpollSocketChannelConfig getTcpKeepCnt (), EpollSocketChannelConfig setSoLinger (int), EpollServerChannelConfig setBacklog (int), EpollSocketChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), Native recvmsg (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket), Epoll Epoll (), EpollServerChannelConfig setReceiveBufferSize (int), Native registerUnix (), EpollSocketChannelConfig isAllowHalfClosure (), EpollSocketChannelConfig setTcpKeepCntl (int), Native newEventFd (), EpollServerChannelConfig setConnectTimeoutMillis (int), Epoll unavailabilityCause (), EpollServerChannelConfig setWriteBufferHighWaterMark (int), EpollServerChannelConfig setAllocator (ByteBufAllocator), EpollSocketChannelConfig getTrafficClass (), EpollServerSocketChannel remoteAddress (), EpollSocketChannelConfig isTcpFastOpenConnect (), EpollSocketChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), EpollEventLoopGroup EpollEventLoopGroup (int, ThreadFactory, int), EpollSocketChannelConfig setSendBufferSize (int), EpollServerSocketChannel localAddress (), EpollEventLoopGroup EpollEventLoopGroup (int), EpollSocketChannelConfig isTcpNoDelay (), EpollSocketChannelConfig setWriteBufferLowWaterMark (int), Native sizeofEpollEvent (), EpollServerSocketChannel EpollServerSocketChannel (), EpollServerSocketChannel EpollServerSocketChannel (InternetProtocolFamily), EpollServerChannelConfig getTcpFastopen (), EpollServerSocketChannel EpollServerSocketChannel (LinuxSocket, boolean), Native epollWait (int, long, int, int), EpollSocketChannelConfig getSoLinger (), Native epollCtlAdd (int, int, int), EpollSocketChannelConfig EpollSocketChannelConfig (EpollSocketChannel), EpollServerChannelConfig setMessageSizeEstimator (MessageSizeEstimator), EpollSocketChannelConfig setTcpNotSentLowAt (long), EpollSocketChannelConfig setAllocator (ByteBufAllocator), EpollServerSocketChannel EpollServerSocketChannel (int), EpollServerChannelConfig setTcpFastopen (int), EpollEventLoopGroup EpollEventLoopGroup (int, SelectStrategyFactory), EpollEventLoopGroup EpollEventLoopGroup (int, Executor, EventExecutorChooserFactory, SelectStrategyFactory, RejectedExecutionHandler, EventLoopTaskQueueFactory), EpollServerChannelConfig isReuseAddress (), EpollSocketChannelConfig isIpTransparent (), EpollServerChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), EpollSocketChannelConfig setTcpKeepIdle (int), Native eventFdRead (int), Native recvmmsg (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket[], int, int), EpollSocketChannelConfig setTcpNoDelay (boolean), Native epollWait (FileDescriptor, EpollEventArray, FileDescriptor, int, int), EpollEventLoopGroup EpollEventLoopGroup (), Native recvmsg0 (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket), EpollServerSocketChannel isCompatible (EventLoop), EpollSocketChannelConfig setAllowHalfClosure (boolean), Native epollWait (FileDescriptor, EpollEventArray, boolean), Native splice0 (int, long, int, long, long), Native eventFdWrite (int, long), EpollSocketChannelConfig isKeepAlive (), Epoll ensureAvailability (), EpollSocketChannelConfig setKeepAlive (boolean), Native epollTimerWasUsed (long), Native isSupportingUdpSegment (), EpollServerSocketChannel setTcpMd5Sig (Map<InetAddress,byte[]>), EpollSocketChannelConfig getOptions (), EpollSocketChannelConfig setConnectTimeoutMillis (int), EpollSocketChannelConfig getReceiveBufferSize (), EpollSocketChannelConfig isTcpCork (), EpollServerChannelConfig getReceiveBufferSize (), EpollSocketChannelConfig getTcpUserTimeout (), EpollServerChannelConfig setWriteBufferLowWaterMark (int), Native Native (), EpollSocketChannelConfig setPerformancePreferences (int, int, int), EpollSocketChannelConfig setMessageSizeEstimator (MessageSizeEstimator), EpollServerChannelConfig setPerformancePreferences (int, int, int), EpollSocketChannelConfig setWriteSpinCount (int), Native newEpollCreate (), EpollEventLoopGroup newChild (Executor, Object), Native epollCtlMod0 (int, int, int), EpollServerChannelConfig setWriteSpinCount (int), Native recvmmsg0 (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket[], int, int), EpollServerChannelConfig getBacklog (), Native epollCtlDel (int, int), EpollServerSocketChannel tcpMd5SigAddresses (), EpollServerChannelConfig setOption (ChannelOption<T>, T), EpollSocketChannelConfig getSoBusyPoll (), EpollEventLoopGroup EpollEventLoopGroup (int, Executor, SelectStrategyFactory), EpollServerSocketChannel newChildChannel (int, byte[], int, int), EpollEventLoopGroup EpollEventLoopGroup (int, ThreadFactory), Native epollCtlAdd0 (int, int, int), EpollServerChannelConfig setAutoRead (boolean), EpollSocketChannelConfig setTcpQuickAck (boolean), Native newTimerFd (), EpollEventLoopGroup EpollEventLoopGroup (int, ThreadFactory, int, SelectStrategyFactory), EpollSocketChannelConfig getTcpKeepIntvl (), EpollSocketChannelConfig setReceiveBufferSize (int), Native sendmmsg (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket[], int, int), EpollServerChannelConfig EpollServerChannelConfig (AbstractEpollChannel), Native epollCtlMod (int, int, int), Native epollBusyWait (FileDescriptor, EpollEventArray), Epoll isTcpFastOpenClientSideAvailable (), EpollEventLoopGroup EpollEventLoopGroup (int, Executor, EventExecutorChooserFactory, SelectStrategyFactory, RejectedExecutionHandler), EpollServerChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), Native epollCreate (), EpollEventLoopGroup EpollEventLoopGroup (int, ThreadFactory, SelectStrategyFactory), EpollServerChannelConfig getOption (ChannelOption<T>), EpollSocketChannelConfig setTcpKeepIntvl (int), EpollEventLoopGroup EpollEventLoopGroup (int, Executor), EpollEventLoopGroup setIoRatio (int), EpollSocketChannelConfig calculateMaxBytesPerGatheringWrite (), EpollSocketChannelConfig setTcpCork (boolean), EpollServerChannelConfig setReuseAddress (boolean), EpollServerSocketChannel doBind (SocketAddress), EpollSocketChannelConfig setMaxMessagesPerRead (int), EpollSocketChannelConfig setTcpKeepCnt (int), EpollSocketChannelConfig getTcpNotSentLowAt (), EpollSocketChannelConfig isReuseAddress (), EpollServerSocketChannel EpollServerSocketChannel (LinuxSocket), EpollServerChannelConfig getOptions (), EpollSocketChannelConfig setTcpFastOpenConnect (boolean), EpollServerChannelConfig setEpollMode (EpollMode), EpollSocketChannelConfig setOption (ChannelOption<T>, T), EpollSocketChannelConfig setTcpUserTimeout (int), Native epollBusyWait0 (int, long, int), Native epollWait (FileDescriptor, EpollEventArray, int), EpollSocketChannelConfig setTrafficClass (int), Native run (), EpollEventLoopGroup EpollEventLoopGroup (int, Executor, EventExecutorChooserFactory, SelectStrategyFactory), Native loadNativeLibrary (), EpollSocketChannelConfig getTcpKeepIdle (), Native epollCtlDel0 (int, int), EpollSocketChannelConfig setEpollMode (EpollMode), EpollSocketChannelConfig setSoBusyPoll (int), EpollSocketChannelConfig isTcpQuickAck (), EpollSocketChannelConfig setIpTransparent (boolean), Native epollReady (long), Native sendmmsg (int, NativeDatagramPacketArray.NativeDatagramPacket[], int, int), EpollSocketChannelConfig setReuseAddress (boolean), Native timerFd (), Epoll isAvailable (), Native epollWait (FileDescriptor, EpollEventArray, FileDescriptor, int, int, long)]","942"
"1","netty/transport-classes-epoll","de862c2592f31fc0749dbc8a3d15b6bab50e0b6a","b97e8526cb56953d55a035cab991fa7c0d43ddc3","LOCAL_VAR_RENAMING","0","1","1","[Native recvmsg0 (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket)]","6"
"3","netty/transport-classes-epoll","b97e8526cb56953d55a035cab991fa7c0d43ddc3","a91469b6f16cd191fbcf5de96a34ab322ca15859","REVERSE_IF_ELSE","3","1","11","[Native epollBusyWait (FileDescriptor, EpollEventArray), Native recvmmsg (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket[], int, int), Native epollCtlDel (int, int), Native splice (int, long, int, long, long), Native epollWait (FileDescriptor, EpollEventArray, int), Native recvmsg (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket), Native epollCtlAdd (int, int, int), Native sendmmsg (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket[], int, int), Native loadNativeLibrary (), Native epollCtlMod (int, int, int), Native epollWait (FileDescriptor, EpollEventArray, FileDescriptor, int, int, long)]","66"
"8","netty/transport-classes-epoll","a91469b6f16cd191fbcf5de96a34ab322ca15859","95a753a3464ddcd97fc12a4c00dbf7a88d6c55cd","INFIX_EXPRESSION_DIVIDING","8","1","1","[Native epollWait (FileDescriptor, EpollEventArray, FileDescriptor, int, int, long)]","6"
"10","netty/transport-classes-epoll","95a753a3464ddcd97fc12a4c00dbf7a88d6c55cd","3615ceac0ba820c1d3207bfaaa5efb92be15f115","SWITCH_STRING_EQUAL","15","1","1","[Native loadNativeLibrary ()]","6"
"16","netty/transport-classes-epoll","3615ceac0ba820c1d3207bfaaa5efb92be15f115","ac4935198b715e733277ab2a77e5ae162eb861c5","VAR_DECLARATION_MERGING","12","1","1","[Native epollWait (FileDescriptor, EpollEventArray, FileDescriptor, int, int, long)]","6"
"18","netty/transport-classes-epoll","ac4935198b715e733277ab2a77e5ae162eb861c5","602135d9f459f51e002398ebda9bea0b4818a982","SWITCH_EQUAL_SIDES","14","1","1","[Native epollWait (FileDescriptor, EpollEventArray, FileDescriptor, int, int, long)]","6"
"22","netty/transport-classes-epoll","602135d9f459f51e002398ebda9bea0b4818a982","26cb6bd63f21635281cfa2820680de73881a413b","SWITCH_STRING_EQUAL","15","1","1","[Native loadNativeLibrary ()]","6"
"0","netty/transport-classes-kqueue","26cb6bd63f21635281cfa2820680de73881a413b","bd1cabd1716d037ef7cdc17a60d17fa760b11fff","REVERSE_IF_ELSE","3","1","131","[AbstractKQueueUnsafe flush0 (), AbstractKQueueChannel newDirectBuffer (Object, ByteBuf), KQueueDomainDatagramChannelConfig getSendBufferSize (), KQueueDomainUnsafe readReadyFd (), AbstractKQueueUnsafe fulfillConnectPromise (ChannelPromise, Throwable), AbstractKQueueChannel doDisconnect (), KQueueDomainSocketChannel KQueueDomainSocketChannel (), AbstractKQueueUnsafe doFinishConnect (), KQueueDomainSocketChannel config (), KQueueServerChannelConfig setWriteBufferLowWaterMark (int), KQueueDomainDatagramChannelConfig setSendBufferSize (int), KQueueDomainDatagramChannelConfig setAutoClose (boolean), AbstractKQueueChannel isAllowHalfClosure (ChannelConfig), KQueueDomainDatagramChannelConfig setMessageSizeEstimator (MessageSizeEstimator), KQueueDomainDatagramChannelConfig setMaxMessagesPerWrite (int), KQueueServerChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), KQueueServerChannelConfig setMaxMessagesPerRead (int), KQueueServerChannelConfig isTcpFastOpen (), AbstractKQueueChannel doBeginRead (), KQueueServerChannelConfig getBacklog (), KQueueServerSocketChannel KQueueServerSocketChannel (BsdSocket, boolean), AbstractKQueueUnsafe readReadyBefore (), AbstractKQueueUnsafe connect (SocketAddress, SocketAddress, ChannelPromise), KQueueDomainDatagramChannelConfig setActiveOnOpen (boolean), AbstractKQueueUnsafe failConnectPromise (Throwable), AbstractKQueueChannel isSoErrorZero (BsdSocket), AbstractKQueueChannel AbstractKQueueChannel (Channel, BsdSocket, SocketAddress), AbstractKQueueChannel doWriteBytes (ChannelOutboundBuffer, ByteBuf), AbstractKQueueChannel fd (), KQueueServerSocketChannel remoteAddress (), AbstractKQueueChannel doClose (), KQueueDomainSocketChannel KQueueDomainSocketChannel (int), AbstractKQueueChannel newDirectBuffer0 (Object, ByteBuf, ByteBufAllocator, int), KQueueDomainDatagramChannelConfig setConnectTimeoutMillis (int), AbstractKQueueUnsafe shutdownInput (boolean), AbstractKQueueUnsafe clearReadFilter0 (), KQueueDomainSocketChannel doBind (SocketAddress), KQueueServerChannelConfig isReuseAddress (), AbstractKQueueUnsafe readEOF (), AbstractKQueueUnsafe readReady (long), KQueueDomainSocketChannel filterOutboundMessage (Object), AbstractKQueueChannel newUnsafe (), KQueueServerSocketChannel KQueueServerSocketChannel (BsdSocket), KQueueServerSocketChannel isCompatible (EventLoop), AbstractKQueueChannel shouldBreakReadReady (ChannelConfig), AbstractKQueueChannel isActive (), AbstractKQueueUnsafe executeReadReadyRunnable (ChannelConfig), KQueueDomainDatagramChannelConfig KQueueDomainDatagramChannelConfig (KQueueDomainDatagramChannel), KQueueServerSocketChannel config (), AbstractKQueueChannel run (), AbstractKQueueUnsafe doConnect0 (SocketAddress, SocketAddress), KQueueDomainDatagramChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), AbstractKQueueChannel doDeregister (), KQueueDomainDatagramChannelConfig setAllocator (ByteBufAllocator), KQueueDomainDatagramChannelConfig getOptions (), AbstractKQueueChannel evSet0 (short, short), AbstractKQueueChannel unregisterFilters (), AbstractKQueueChannel doReadBytes (ByteBuf), AbstractKQueueUnsafe localAddress0 (), AbstractKQueueUnsafe readReady (KQueueRecvByteAllocatorHandle), KQueueDomainDatagramChannelConfig getOption (ChannelOption<T>), KQueueDomainSocketChannel doWriteSingle (ChannelOutboundBuffer), KQueueServerChannelConfig getReceiveBufferSize (), KQueueServerSocketChannel newChildChannel (int, byte[], int, int), AbstractKQueueDatagramChannel doWriteMessage (Object), AbstractKQueueUnsafe recvBufAllocHandle (), AbstractKQueueUnsafe fireEventAndClose (Object), KQueueServerChannelConfig setConnectTimeoutMillis (int), KQueueServerChannelConfig setRcvAllocTransportProvidesGuess (boolean), KQueueServerChannelConfig setWriteSpinCount (int), AbstractKQueueDatagramChannel AbstractKQueueDatagramChannel (Channel, BsdSocket, boolean), KQueueServerChannelConfig setPerformancePreferences (int, int, int), KQueueDomainSocketChannel doConnect (SocketAddress, SocketAddress), KQueueServerChannelConfig setOption (ChannelOption<T>, T), KQueueDomainDatagramChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), AbstractKQueueChannel isCompatible (EventLoop), KQueueServerChannelConfig getOption (ChannelOption<T>), KQueueServerChannelConfig setMessageSizeEstimator (MessageSizeEstimator), AbstractKQueueDatagramChannel doWrite (ChannelOutboundBuffer), KQueueServerSocketChannel doBind (SocketAddress), AbstractKQueueUnsafe fulfillConnectPromise (ChannelPromise, boolean), AbstractKQueueChannel clearRdHup0 (), KQueueServerChannelConfig setReuseAddress (boolean), KQueueDomainDatagramChannelConfig getActiveOnOpen (), AbstractKQueueChannel writeFilter (boolean), AbstractKQueueUnsafe doConnect (SocketAddress, SocketAddress), KQueueDomainSocketChannel newUnsafe (), AbstractKQueueUnsafe operationComplete (ChannelFuture), AbstractKQueueChannel resetCachedAddresses (), KQueueServerSocketChannel localAddress (), AbstractKQueueChannel evSet (short, short), AbstractKQueueChannel newDirectBuffer (ByteBuf), AbstractKQueueChannel config (), KQueueServerChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), KQueueDomainDatagramChannelConfig setWriteSpinCount (int), AbstractKQueueChannel AbstractKQueueChannel (Channel, BsdSocket, boolean), KQueueDomainSocketChannel KQueueDomainSocketChannel (Channel, BsdSocket), KQueueDomainDatagramChannelConfig setMaxMessagesPerRead (int), AbstractKQueueChannel evSet0 (short, short, int), KQueueDomainSocketChannel localAddress (), AbstractKQueueDatagramChannel metadata (), AbstractKQueueUnsafe writeReady (), KQueueServerChannelConfig setAutoRead (boolean), KQueueServerChannelConfig setAllocator (ByteBufAllocator), AbstractKQueueChannel clearReadFilter (), AbstractKQueueUnsafe remoteAddress0 (), KQueueDomainSocketChannel remoteAddress (), AbstractKQueueChannel isOpen (), KQueueDomainDatagramChannelConfig setRcvAllocTransportProvidesGuess (boolean), AbstractKQueueChannel doRegister (), AbstractKQueueChannel metadata (), KQueueDomainDatagramChannelConfig setOption (ChannelOption<T>, T), KQueueServerChannelConfig setWriteBufferHighWaterMark (int), AbstractKQueueUnsafe doBind (SocketAddress), KQueueDomainUnsafe readReady (KQueueRecvByteAllocatorHandle), KQueueServerChannelConfig setBacklog (int), KQueueDomainSocketChannel peerCredentials (), AbstractKQueueChannel checkResolvable (InetSocketAddress), AbstractKQueueUnsafe run (), KQueueDomainSocketChannel localAddress0 (), KQueueServerChannelConfig setReceiveBufferSize (int), AbstractKQueueChannel readFilter (boolean), KQueueDomainDatagramChannelConfig setAutoRead (boolean), KQueueDomainSocketChannel remoteAddress0 (), AbstractKQueueUnsafe finishConnect (), AbstractKQueueUnsafe readReadyFinally (ChannelConfig), KQueueServerChannelConfig getOptions (), KQueueServerSocketChannel KQueueServerSocketChannel (), KQueueServerSocketChannel KQueueServerSocketChannel (int), KQueueServerChannelConfig setTcpFastOpen (boolean), KQueueServerChannelConfig KQueueServerChannelConfig (AbstractKQueueChannel)]","786"
"2","netty/transport-classes-kqueue","bd1cabd1716d037ef7cdc17a60d17fa760b11fff","256a92026d7c5730e21e1514bdd78c5dce5b0c95","LOCAL_VAR_RENAMING","0","1","2","[KQueueServerSocketChannel KQueueServerSocketChannel (BsdSocket, boolean), KQueueServerSocketChannel newChildChannel (int, byte[], int, int)]","12"
"3","netty/transport-classes-kqueue","256a92026d7c5730e21e1514bdd78c5dce5b0c95","cf861e47bab6048b5d319904af924fc3060d0f35","CASE_TO_IF_ELSE","17","1","23","[KQueueEventLoop cleanArray (), KQueueEventLoop processReady (int), KQueueEventLoop kqueueWaitNow (), KQueueEventLoop getIoRatio (), KQueueEventLoop kqueueWait (boolean), KQueueEventLoop add (AbstractKQueueChannel), KQueueEventLoop handleLoopException (Throwable), KQueueEventLoop remove (AbstractKQueueChannel), KQueueEventLoop closeAll (), KQueueEventLoop run (), KQueueEventLoop evSet (AbstractKQueueChannel, short, short, int), KQueueEventLoop setIoRatio (int), KQueueEventLoop registeredChannels (), KQueueEventLoop wakeup (boolean), KQueueEventLoop newTaskQueue0 (int), KQueueEventLoop newTaskQueue (EventLoopTaskQueueFactory), KQueueEventLoop newTaskQueue (int), KQueueEventLoop KQueueEventLoop (EventLoopGroup, Executor, int, SelectStrategy, RejectedExecutionHandler, EventLoopTaskQueueFactory, EventLoopTaskQueueFactory), KQueueEventLoop cleanup (), KQueueEventLoop kqueueWait (int, int), KQueueEventLoop wakeup (), KQueueEventLoop get (), KQueueEventLoop registeredChannelsIterator ()]","161"
"14","netty/transport-classes-kqueue","cf861e47bab6048b5d319904af924fc3060d0f35","6f4df9d463399a4642b91c66e13b8b6301147ac8","STATEMENTS_ORDER_REARRANGEMENT","10","1","3","[KQueueServerSocketChannel KQueueServerSocketChannel (BsdSocket), KQueueServerSocketChannel KQueueServerSocketChannel (BsdSocket, boolean), KQueueServerSocketChannel KQueueServerSocketChannel ()]","21"
"18","netty/transport-classes-kqueue","6f4df9d463399a4642b91c66e13b8b6301147ac8","5a63e986716c3f0e94282a7c94955025631eaf92","LOCAL_VAR_RENAMING","0","1","6","[KQueueServerSocketChannel KQueueServerSocketChannel (BsdSocket), KQueueServerSocketChannel config (), KQueueServerSocketChannel KQueueServerSocketChannel (BsdSocket, boolean), KQueueServerSocketChannel doBind (SocketAddress), KQueueServerSocketChannel newChildChannel (int, byte[], int, int), KQueueServerSocketChannel KQueueServerSocketChannel ()]","42"
"24","netty/transport-classes-kqueue","5a63e986716c3f0e94282a7c94955025631eaf92","86e07694d6b26bd0d52fe15d6e4973c893ddf79c","REVERSE_IF_ELSE","3","1","6","[KQueueEventLoop setIoRatio (int), KQueueEventLoop wakeup (boolean), KQueueEventLoop newTaskQueue (EventLoopTaskQueueFactory), KQueueEventLoop kqueueWait (boolean), KQueueEventLoop KQueueEventLoop (EventLoopGroup, Executor, int, SelectStrategy, RejectedExecutionHandler, EventLoopTaskQueueFactory, EventLoopTaskQueueFactory), KQueueEventLoop run ()]","42"
"0","netty/transport-native-unix-common-tests","86e07694d6b26bd0d52fe15d6e4973c893ddf79c","877e16033f39cef48b90a6ef001e3baf0e1a334d","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","28","[DetectPeerCloseWithoutReadTest channelActive (ChannelHandlerContext), SocketTest testSendBufferSize (), DetectPeerCloseWithoutReadTest initChannel (Channel), SocketTest setup (), DetectPeerCloseWithoutReadTest clientCloseWithoutServerReadIsDetectedExtraReadRequested (), SocketTest testSoLinger (), DetectPeerCloseWithoutReadTest clientCloseWithoutServerReadIsDetectedNoExtraReadRequested (), DetectPeerCloseWithoutReadTest serverCloseWithoutClientReadIsDetectedNoExtraReadRequested (), SocketTest testIntOpt (), DetectPeerCloseWithoutReadTest clientChannel (), SocketTest level (), SocketTest newSocket (), TestHandler channelInactive (ChannelHandlerContext), DetectPeerCloseWithoutReadTest newGroup (), SocketTest tearDown (), SocketTest testRawOpt (), SocketTest testDoubleCloseDoesNotThrow (), SocketTest testTcpNoDelay (), DetectPeerCloseWithoutReadTest serverCloseWithoutClientReadIsDetected0 (boolean), DetectPeerCloseWithoutReadTest serverChannel (), SocketTest testKeepAlive (), TestHandler channelRead0 (ChannelHandlerContext, ByteBuf), DetectPeerCloseWithoutReadTest serverCloseWithoutClientReadIsDetectedExtraReadRequested (), SocketTest testTrafficClass (), TestHandler TestHandler (AtomicInteger, boolean, CountDownLatch), SocketTest testReceivedBufferSize (), DetectPeerCloseWithoutReadTest clientCloseWithoutServerReadIsDetected0 (boolean), SocketTest optname ()]","56"
"4","netty/transport-native-unix-common-tests","877e16033f39cef48b90a6ef001e3baf0e1a334d","b1df463594a75598fdc4f5970880159c108ed70e","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","5","[UnixTestUtils newSocketAddress (), UnixTestUtils UnixTestUtils (), UnixTestUtils getLoopbackAddress (), UnixTestUtils newInetLoopbackSocketAddress (), UnixTestUtils newDomainSocketAddress ()]","15"
"21","netty/transport-native-unix-common-tests","b1df463594a75598fdc4f5970880159c108ed70e","d5d2be32bf9c6a02dbc52b42c5f850ec36054f5a","STATEMENTS_ORDER_REARRANGEMENT","10","1","4","[IovArrayTest testNotFailsWihtoutMemoryAddress (), NoMemoryAddressByteBuf NoMemoryAddressByteBuf (int), NoMemoryAddressByteBuf memoryAddress (), NoMemoryAddressByteBuf hasMemoryAddress ()]","16"
"0","netty/transport-native-unix-common","d5d2be32bf9c6a02dbc52b42c5f850ec36054f5a","fbd287f745cfe807276e9095a96e0b8057ee0d5a","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","25","[IovArray IovArray (), IovArray add (ByteBuf, int, int), DomainSocketAddress hashCode (), IovArray maxBytes (long), DomainSocketAddress DomainSocketAddress (File), DomainSocketAddress toString (), DomainSocketAddress DomainSocketAddress (String), IovArray idx (int), DatagramSocketAddress localAddress (), DatagramSocketAddress newAddress (byte[], int), IovArray memoryAddress (int), IovArray size (), IovArray maxBytes (), IovArray IovArray (ByteBuf), IovArray release (), Limits Limits (), DatagramSocketAddress receivedAmount (), DomainSocketAddress equals (Object), IovArray processMessage (Object), IovArray add (ByteBuf), DomainSocketAddress path (), IovArray add (long, long, int), IovArray clear (), IovArray count (), DatagramSocketAddress DatagramSocketAddress (byte[], int, int, int, DatagramSocketAddress)]","100"
"1","netty/transport-native-unix-common","fbd287f745cfe807276e9095a96e0b8057ee0d5a","084703b79f5faf5c4a59a65b58ed8da6a8d6b6ed","REVERSE_IF_ELSE","3","1","4","[UnixChannelUtil UnixChannelUtil (), UnixChannelUtil computeRemoteAddr (InetSocketAddress, InetSocketAddress), UnixChannelUtil isBufferCopyNeededForWrite (ByteBuf), UnixChannelUtil isBufferCopyNeededForWrite (ByteBuf, int)]","20"
"3","netty/transport-native-unix-common","084703b79f5faf5c4a59a65b58ed8da6a8d6b6ed","af41c4ff4318f7b3aeeac1b356762d4eb638bcf7","REVERSE_IF_ELSE","3","1","1","[UnixChannelUtil computeRemoteAddr (InetSocketAddress, InetSocketAddress)]","5"
"21","netty/transport-native-unix-common","af41c4ff4318f7b3aeeac1b356762d4eb638bcf7","b9f11facc08e3b5c2a26d3e79c7551e393c89c8d","LOCAL_VAR_RENAMING","0","1","2","[UnixChannelUtil computeRemoteAddr (InetSocketAddress, InetSocketAddress), UnixChannelUtil isBufferCopyNeededForWrite (ByteBuf, int)]","10"
"23","netty/transport-native-unix-common","b9f11facc08e3b5c2a26d3e79c7551e393c89c8d","ea7407b15afd3e4d37bddadbfca42f8161620f00","LOCAL_VAR_RENAMING","0","1","2","[UnixChannelUtil computeRemoteAddr (InetSocketAddress, InetSocketAddress), UnixChannelUtil isBufferCopyNeededForWrite (ByteBuf, int)]","10"
"28","netty/transport-native-unix-common","ea7407b15afd3e4d37bddadbfca42f8161620f00","942a3706f10fa1879482fbcf54f72883e8ba5b40","REVERSE_IF_ELSE","3","1","1","[UnixChannelUtil computeRemoteAddr (InetSocketAddress, InetSocketAddress)]","5"
"0","netty/transport-rxtx","942a3706f10fa1879482fbcf54f72883e8ba5b40","3ebb82fa15678edcc7e488a5aefa62e488c0f328","PRE_POST_FIX_EXPRESSION_DIVIDING","16","1","67","[RxtxChannelConfig isRts (), RxtxChannelConfig Databits (int), RxtxChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), RxtxChannelConfig setConnectTimeoutMillis (int), DefaultRxtxChannelConfig setWaitTimeMillis (int), RxtxDeviceAddress RxtxDeviceAddress (String), DefaultRxtxChannelConfig setAutoClose (boolean), DefaultRxtxChannelConfig isRts (), RxtxChannelConfig setStopbits (Stopbits), DefaultRxtxChannelConfig getParitybit (), DefaultRxtxChannelConfig setMaxMessagesPerRead (int), DefaultRxtxChannelConfig setOption (ChannelOption<T>, T), RxtxChannelConfig value (), DefaultRxtxChannelConfig setRts (boolean), RxtxChannelConfig getDatabits (), RxtxChannelConfig setMaxMessagesPerRead (int), DefaultRxtxChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), DefaultRxtxChannelConfig setConnectTimeoutMillis (int), RxtxChannelConfig getStopbits (), DefaultRxtxChannelConfig setAllocator (ByteBufAllocator), RxtxChannelConfig getReadTimeout (), RxtxChannelConfig getBaudrate (), DefaultRxtxChannelConfig setParitybit (Paritybit), RxtxChannelConfig Paritybit (int), RxtxChannelConfig setReadTimeout (int), DefaultRxtxChannelConfig setBaudrate (int), DefaultRxtxChannelConfig getBaudrate (), RxtxDeviceAddress value (), RxtxChannelConfig setMessageSizeEstimator (MessageSizeEstimator), DefaultRxtxChannelConfig setReadTimeout (int), DefaultRxtxChannelConfig getStopbits (), RxtxChannelConfig setWriteBufferHighWaterMark (int), RxtxChannelConfig setWaitTimeMillis (int), DefaultRxtxChannelConfig getOption (ChannelOption<T>), DefaultRxtxChannelConfig isDtr (), DefaultRxtxChannelConfig setMessageSizeEstimator (MessageSizeEstimator), RxtxChannelConfig setWriteSpinCount (int), DefaultRxtxChannelConfig setStopbits (Stopbits), DefaultRxtxChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), DefaultRxtxChannelConfig getOptions (), DefaultRxtxChannelConfig setWriteSpinCount (int), RxtxChannelConfig DATABITS_5 (), RxtxChannelConfig Stopbits (int), RxtxChannelConfig getWaitTimeMillis (), RxtxChannelConfig setAllocator (ByteBufAllocator), RxtxChannelConfig setAutoClose (boolean), RxtxChannelConfig setRts (boolean), DefaultRxtxChannelConfig getDatabits (), RxtxChannelConfig setAutoRead (boolean), RxtxChannelConfig setParitybit (Paritybit), RxtxChannelConfig NONE (), DefaultRxtxChannelConfig setWriteBufferLowWaterMark (int), RxtxChannelConfig setBaudrate (int), RxtxChannelConfig setDatabits (Databits), RxtxChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), DefaultRxtxChannelConfig DefaultRxtxChannelConfig (RxtxChannel), DefaultRxtxChannelConfig setAutoRead (boolean), RxtxChannelConfig valueOf (int), DefaultRxtxChannelConfig getWaitTimeMillis (), DefaultRxtxChannelConfig setWriteBufferHighWaterMark (int), DefaultRxtxChannelConfig setDatabits (Databits), RxtxChannelConfig setWriteBufferLowWaterMark (int), RxtxChannelConfig isDtr (), DefaultRxtxChannelConfig setDtr (boolean), DefaultRxtxChannelConfig getReadTimeout (), RxtxChannelConfig setDtr (boolean), RxtxChannelConfig getParitybit ()]","201"
"1","netty/transport-rxtx","3ebb82fa15678edcc7e488a5aefa62e488c0f328","a462cdfc56af88b3497f4c3a68eb62bc77bf6bb7","LOCAL_VAR_RENAMING","0","1","1","[RxtxChannelOption RxtxChannelOption ()]","4"
"8","netty/transport-rxtx","a462cdfc56af88b3497f4c3a68eb62bc77bf6bb7","02a87f508ee76c14e6a2573cab16eb8074fcc113","LOCAL_VAR_RENAMING","0","1","0","[]","0"
"15","netty/transport-rxtx","02a87f508ee76c14e6a2573cab16eb8074fcc113","12bb5ce5aa45dd1068e74a8d0950e284097ced41","LOCAL_VAR_RENAMING","0","1","0","[]","0"
"29","netty/transport-rxtx","12bb5ce5aa45dd1068e74a8d0950e284097ced41","f751a4d432a4753881370b8d772dd6fcfa785982","LOCAL_VAR_RENAMING","0","1","0","[]","0"
"0","netty/transport-sctp","f751a4d432a4753881370b8d772dd6fcfa785982","387ed61e6e5d955a6b6c992d497738d7c40afdf0","WHILE_TO_FOR","2","1","112","[NioSctpServerChannel NioSctpServerChannel (), SctpServerChannelConfig setConnectTimeoutMillis (int), SctpChannel open (), SctpServerChannelConfig setAllocator (ByteBufAllocator), SctpChannel SctpChannel (SelectorProvider), NioSctpServerChannel doFinishConnect (), OioSctpServerChannel doWrite (ChannelOutboundBuffer), NioSctpServerChannel remoteAddress0 (), DefaultSctpServerChannelConfig getOptions (), OioSctpServerChannel unbindAddress (InetAddress), NioSctpServerChannel allLocalAddresses (), OioSctpServerChannel doDisconnect (), SctpServerChannelConfig setBacklog (int), SctpChannel send (ByteBuffer, MessageInfo), SctpChannel supportedOptions (), OioSctpServerChannel OioSctpServerChannel (SctpServerChannel), OioSctpServerChannel bindAddress (InetAddress, ChannelPromise), DefaultSctpServerChannelConfig setAllocator (ByteBufAllocator), NioSctpServerChannel unbindAddress (InetAddress), NioSctpServerChannel remoteAddress (), NioSctpServerChannel run (), OioSctpServerChannel bindAddress (InetAddress), NioSctpServerChannelConfig NioSctpServerChannelConfig (NioSctpServerChannel, SctpServerChannel), SctpOutboundByteStreamHandler SctpOutboundByteStreamHandler (int, int, boolean), DefaultSctpServerChannelConfig setWriteBufferLowWaterMark (int), NioSctpServerChannel doClose (), DefaultSctpServerChannelConfig setOption (ChannelOption<T>, T), SctpServerChannelConfig setMaxMessagesPerRead (int), NioSctpServerChannel filterOutboundMessage (Object), DefaultSctpServerChannelConfig setMessageSizeEstimator (MessageSizeEstimator), NioSctpServerChannel doDisconnect (), NioSctpServerChannel localAddress0 (), OioSctpServerChannel doBind (SocketAddress), NioSctpServerChannel doWriteMessage (Object, ChannelOutboundBuffer), OioSctpServerChannel newServerSocket (), SctpServerChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), NioSctpServerChannel doReadMessages (List<Object>), DefaultSctpServerChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), SctpChannel bind (SocketAddress), SctpServerChannelConfig setMessageSizeEstimator (MessageSizeEstimator), DefaultSctpServerChannelConfig getBacklog (), OioSctpServerChannelConfig OioSctpServerChannelConfig (OioSctpServerChannel, SctpServerChannel), DefaultSctpServerChannelConfig setWriteBufferHighWaterMark (int), DefaultSctpServerChannelConfig setBacklog (int), DefaultSctpServerChannelConfig setSendBufferSize (int), OioSctpServerChannel remoteAddress0 (), DefaultSctpServerChannelConfig getInitMaxStreams (), NioSctpServerChannel config (), OioSctpServerChannel isOpen (), OioSctpServerChannel unbindAddress (InetAddress, ChannelPromise), OioSctpServerChannel doReadMessages (List<Object>), OioSctpServerChannel localAddress (), DefaultSctpServerChannelConfig setAutoRead (boolean), NioSctpServerChannel metadata (), OioSctpServerChannel filterOutboundMessage (Object), SctpServerChannelConfig setAutoRead (boolean), OioSctpServerChannel metadata (), SctpServerChannelConfig getReceiveBufferSize (), SctpChannel getRemoteAddresses (), SctpServerChannelConfig setWriteBufferHighWaterMark (int), OioSctpServerChannel doClose (), NioSctpServerChannel newSocket (), OioSctpServerChannel run (), SctpChannel unbindAddress (InetAddress), SctpChannel getAllLocalAddresses (), SctpServerChannelConfig setAutoClose (boolean), SctpServerChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), DefaultSctpServerChannelConfig getOption (ChannelOption<T>), SctpChannel bindAddress (InetAddress), OioSctpServerChannel isActive (), SctpServerChannelConfig setInitMaxStreams (InitMaxStreams), SctpServerChannelConfig setWriteSpinCount (int), SctpChannel association (), OioSctpServerChannel allLocalAddresses (), NioSctpServerChannel doConnect (SocketAddress, SocketAddress), NioSctpServerChannel unbindAddress (InetAddress, ChannelPromise), SctpServerChannelConfig getSendBufferSize (), NioSctpServerChannel bindAddress (InetAddress, ChannelPromise), DefaultSctpServerChannelConfig setConnectTimeoutMillis (int), SctpServerChannelConfig setReceiveBufferSize (int), OioSctpServerChannelConfig autoReadCleared (), SctpOutboundByteStreamHandler SctpOutboundByteStreamHandler (int, int), OioSctpServerChannel doConnect (SocketAddress, SocketAddress), OioSctpServerChannel OioSctpServerChannel (), NioSctpServerChannel doBind (SocketAddress), SctpServerChannelConfig getInitMaxStreams (), OioSctpServerChannel localAddress0 (), NioSctpServerChannel localAddress (), DefaultSctpServerChannelConfig DefaultSctpServerChannelConfig (io.netty.channel.sctp.SctpServerChannel, SctpServerChannel), DefaultSctpServerChannelConfig setReceiveBufferSize (int), NioSctpServerChannel bindAddress (InetAddress), SctpChannel connect (SocketAddress), OioSctpServerChannel config (), NioSctpServerChannelConfig autoReadCleared (), SctpChannel receive (ByteBuffer, T, NotificationHandler<T>), SctpChannel finishConnect (), SctpOutboundByteStreamHandler encode (ChannelHandlerContext, ByteBuf, List<Object>), SctpChannel setOption (SctpSocketOption<T>, T), DefaultSctpServerChannelConfig getReceiveBufferSize (), SctpChannel getOption (SctpSocketOption<T>), OioSctpServerChannel remoteAddress (), DefaultSctpServerChannelConfig setInitMaxStreams (SctpStandardSocketOptions.InitMaxStreams), DefaultSctpServerChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), NioSctpServerChannel isActive (), DefaultSctpServerChannelConfig setMaxMessagesPerRead (int), NioSctpServerChannel javaChannel (), DefaultSctpServerChannelConfig getSendBufferSize (), DefaultSctpServerChannelConfig setWriteSpinCount (int), SctpServerChannelConfig getBacklog (), DefaultSctpServerChannelConfig setAutoClose (boolean), SctpServerChannelConfig setSendBufferSize (int), SctpServerChannelConfig setWriteBufferLowWaterMark (int)]","672"
"11","netty/transport-sctp","387ed61e6e5d955a6b6c992d497738d7c40afdf0","32fd2ccdb126c8969432d2c4621fcc68ad95be97","REVERSE_IF_ELSE","3","1","4","[OioSctpServerChannel bindAddress (InetAddress, ChannelPromise), OioSctpServerChannel localAddress0 (), OioSctpServerChannel unbindAddress (InetAddress, ChannelPromise), OioSctpServerChannel doReadMessages (List<Object>)]","24"
"12","netty/transport-sctp","32fd2ccdb126c8969432d2c4621fcc68ad95be97","27a83f19d66c7c71847b312716a30cc9671f997a","FOR_TO_WHILE","1","1","1","[OioSctpServerChannel doReadMessages (List<Object>)]","6"
"18","netty/transport-sctp","27a83f19d66c7c71847b312716a30cc9671f997a","95c75af897880572987d3cd8b6e8800d75d46519","WHILE_TO_FOR","2","1","1","[OioSctpServerChannel doReadMessages (List<Object>)]","6"
"19","netty/transport-sctp","95c75af897880572987d3cd8b6e8800d75d46519","e020dbc19b438645078cad923b25bb3bdf9d1f96","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SctpMessageToMessageDecoder acceptInboundMessage (Object)]","7"
"23","netty/transport-sctp","e020dbc19b438645078cad923b25bb3bdf9d1f96","488906a73c1e516d7a09ee9f7165a5ef936a568d","LOCAL_VAR_RENAMING","0","1","1","[SctpMessageToMessageDecoder acceptInboundMessage (Object)]","7"
"24","netty/transport-sctp","488906a73c1e516d7a09ee9f7165a5ef936a568d","535e4f8a3921150fbca5844f32b835b3f01235ed","LOCAL_VAR_RENAMING","0","1","1","[SctpMessageToMessageDecoder acceptInboundMessage (Object)]","7"
"0","netty/transport-udt","535e4f8a3921150fbca5844f32b835b3f01235ed","2995ea6d7041cdb9a2f309d9340b54744846b2fd","VAR_DECLARATION_DIVIDING","13","1","52","[DefaultUdtChannelConfig setSystemSendBufferSize (int), DefaultUdtChannelConfig setProtocolReceiveBufferSize (int), NioUdtProvider NioUdtProvider (TypeUDT, KindUDT), UdtMessage retain (), NioUdtProvider newConnectorChannelUDT (TypeUDT), DefaultUdtChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), DefaultUdtChannelConfig setReuseAddress (boolean), NioUdtProvider channelUDT (Channel), UdtMessage retain (int), DefaultUdtChannelConfig setSoLinger (int), DefaultUdtChannelConfig getProtocolSendBufferSize (), DefaultUdtChannelConfig setWriteBufferLowWaterMark (int), DefaultUdtChannelConfig setProtocolSendBufferSize (int), UdtMessage retainedDuplicate (), DefaultUdtChannelConfig setReceiveBufferSize (int), DefaultUdtChannelConfig getOptions (), NioUdtProvider type (), UdtMessage copy (), UdtMessage touch (), DefaultUdtChannelConfig getOption (ChannelOption<T>), DefaultUdtChannelConfig getSendBufferSize (), DefaultUdtChannelConfig setConnectTimeoutMillis (int), UdtMessage UdtMessage (ByteBuf), DefaultUdtChannelConfig DefaultUdtChannelConfig (UdtChannel, ChannelUDT, boolean), DefaultUdtChannelConfig getSystemSendBufferSize (), NioUdtProvider socketUDT (Channel), DefaultUdtChannelConfig setAutoClose (boolean), DefaultUdtChannelConfig apply (ChannelUDT), NioUdtProvider newRendezvousChannelUDT (TypeUDT), DefaultUdtChannelConfig setMessageSizeEstimator (MessageSizeEstimator), NioUdtMessageAcceptorChannel NioUdtMessageAcceptorChannel (), UdtMessage touch (Object), DefaultUdtChannelConfig getSoLinger (), NioUdtProvider kind (), DefaultUdtChannelConfig setSendBufferSize (int), UdtMessage replace (ByteBuf), DefaultUdtChannelConfig getSystemReceiveBufferSize (), NioUdtProvider newChannel (), UdtMessage duplicate (), DefaultUdtChannelConfig getProtocolReceiveBufferSize (), DefaultUdtChannelConfig setWriteSpinCount (int), DefaultUdtChannelConfig setAllocator (ByteBufAllocator), DefaultUdtChannelConfig setOption (ChannelOption<T>, T), DefaultUdtChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), NioUdtMessageAcceptorChannel newConnectorChannel (SocketChannelUDT), DefaultUdtChannelConfig isReuseAddress (), NioUdtProvider newAcceptorChannelUDT (TypeUDT), DefaultUdtChannelConfig setMaxMessagesPerRead (int), DefaultUdtChannelConfig setAutoRead (boolean), DefaultUdtChannelConfig getReceiveBufferSize (), DefaultUdtChannelConfig setSystemReceiveBufferSize (int), DefaultUdtChannelConfig setWriteBufferHighWaterMark (int)]","208"
"1","netty/transport-udt","2995ea6d7041cdb9a2f309d9340b54744846b2fd","b4627e4b97d12bc1c1940dd81d3df4dfd9509752","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","21","[NioUdtMessageConnectorChannel doClose (), NioUdtMessageConnectorChannel doDisconnect (), NioUdtMessageConnectorChannel javaChannel (), NioUdtMessageConnectorChannel remoteAddress0 (), NioUdtMessageConnectorChannel config (), NioUdtMessageConnectorChannel localAddress (), NioUdtMessageConnectorChannel NioUdtMessageConnectorChannel (SocketChannelUDT), NioUdtMessageConnectorChannel doBind (SocketAddress), NioUdtMessageConnectorChannel NioUdtMessageConnectorChannel (), NioUdtMessageConnectorChannel doConnect (SocketAddress, SocketAddress), NioUdtMessageConnectorChannel localAddress0 (), NioUdtMessageConnectorChannel doWriteMessage (Object, ChannelOutboundBuffer), NioUdtMessageConnectorChannel privilegedBind (SocketChannelUDT, SocketAddress), NioUdtMessageConnectorChannel NioUdtMessageConnectorChannel (Channel, SocketChannelUDT), NioUdtMessageConnectorChannel doReadMessages (List<Object>), NioUdtMessageConnectorChannel remoteAddress (), NioUdtMessageConnectorChannel metadata (), NioUdtMessageConnectorChannel NioUdtMessageConnectorChannel (TypeUDT), NioUdtMessageConnectorChannel doFinishConnect (), NioUdtMessageConnectorChannel isActive (), NioUdtMessageConnectorChannel run ()]","105"
"3","netty/transport-udt","b4627e4b97d12bc1c1940dd81d3df4dfd9509752","945125db69dc918106dfd08eb6cca819e7e996f8","INFIX_EXPRESSION_DIVIDING","8","1","1","[NioUdtMessageConnectorChannel doWriteMessage (Object, ChannelOutboundBuffer)]","5"
"4","netty/transport-udt","945125db69dc918106dfd08eb6cca819e7e996f8","a84423024193b8627b8c802f82d475f1901ab935","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[NioUdtMessageConnectorChannel doWriteMessage (Object, ChannelOutboundBuffer), NioUdtMessageConnectorChannel doConnect (SocketAddress, SocketAddress)]","10"
"6","netty/transport-udt","a84423024193b8627b8c802f82d475f1901ab935","84448f157c7c40e8e1c17379a92e8549533c1bc9","CASE_TO_IF_ELSE","17","1","1","[NioUdtMessageConnectorChannel NioUdtMessageConnectorChannel (Channel, SocketChannelUDT)]","5"
"7","netty/transport-udt","84448f157c7c40e8e1c17379a92e8549533c1bc9","236e5ddb1303f5828f2953d02612ee91873fc219","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[NioUdtMessageConnectorChannel doWriteMessage (Object, ChannelOutboundBuffer), NioUdtMessageConnectorChannel doConnect (SocketAddress, SocketAddress)]","10"
"8","netty/transport-udt","236e5ddb1303f5828f2953d02612ee91873fc219","081576cfed58226ee370b572374d980e9baf37a5","INFIX_EXPRESSION_DIVIDING","8","1","1","[NioUdtMessageConnectorChannel doWriteMessage (Object, ChannelOutboundBuffer)]","5"
"13","netty/transport-udt","081576cfed58226ee370b572374d980e9baf37a5","db8107d3b5de81d94efe43c27c440b023943d088","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[NioUdtMessageConnectorChannel doWriteMessage (Object, ChannelOutboundBuffer)]","5"
"16","netty/transport-udt","db8107d3b5de81d94efe43c27c440b023943d088","684a408b0cf2c9894fb663d0e41c896330cb4a74","SWITCH_EQUAL_SIDES","14","1","1","[NioUdtMessageConnectorChannel doWriteMessage (Object, ChannelOutboundBuffer)]","5"
"18","netty/transport-udt","684a408b0cf2c9894fb663d0e41c896330cb4a74","2cab257abd472138b47467bbd8df0bdf13aad828","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[NioUdtMessageConnectorChannel doWriteMessage (Object, ChannelOutboundBuffer)]","5"
"21","netty/transport-udt","2cab257abd472138b47467bbd8df0bdf13aad828","b0c1a5eaf4ef88fb694ed54eba3e3e9bb0e24cf9","STATEMENTS_ORDER_REARRANGEMENT","10","1","3","[NioUdtMessageConnectorChannel doWriteMessage (Object, ChannelOutboundBuffer), NioUdtMessageConnectorChannel NioUdtMessageConnectorChannel (Channel, SocketChannelUDT), NioUdtMessageConnectorChannel doConnect (SocketAddress, SocketAddress)]","15"
"23","netty/transport-udt","b0c1a5eaf4ef88fb694ed54eba3e3e9bb0e24cf9","92fcf02d9db0c00ac272edc7cdc3bdc87da64ce3","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[NioUdtMessageConnectorChannel doWriteMessage (Object, ChannelOutboundBuffer)]","5"
"24","netty/transport-udt","92fcf02d9db0c00ac272edc7cdc3bdc87da64ce3","1eb2bf927e18133b69e64948d377fb71e98b5bc5","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[NioUdtMessageConnectorChannel NioUdtMessageConnectorChannel (Channel, SocketChannelUDT)]","5"
"25","netty/transport-udt","1eb2bf927e18133b69e64948d377fb71e98b5bc5","f7b55253016df501fbb7a75fea1da1617c33c5d5","REVERSE_IF_ELSE","3","1","4","[NioUdtMessageConnectorChannel doWriteMessage (Object, ChannelOutboundBuffer), NioUdtMessageConnectorChannel doReadMessages (List<Object>), NioUdtMessageConnectorChannel doConnect (SocketAddress, SocketAddress), NioUdtMessageConnectorChannel doFinishConnect ()]","20"
"0","netty/transport","f7b55253016df501fbb7a75fea1da1617c33c5d5","8cba23725b578cf41e9a4ef492288265c125bb14","LOCAL_VAR_RENAMING","0","1","102","[DefaultChannelProgressivePromise addListeners (GenericFutureListener<? extends Future<? super Void>>), DefaultChannelProgressivePromise await (), DefaultChannelProgressivePromise setSuccess (Void), DefaultChannelProgressivePromise flushCheckpoint (), HandleImpl guess (), HandleImpl attemptedBytesRead (int), SelectorTuple SelectorTuple (Selector, Selector), DefaultChannelProgressivePromise awaitUninterruptibly (), DefaultChannelProgressivePromise sync (), SelectorTuple wakeup (boolean), DefaultChannelProgressivePromise flushCheckpoint (long), SelectorTuple afterScheduledTaskSubmitted (long), SelectorTuple SelectorTuple (Selector), DefaultChannelProgressivePromise promise (), NioEventLoopGroup NioEventLoopGroup (int, Executor, EventExecutorChooserFactory, SelectorProvider, SelectStrategyFactory), HandleImpl lastBytesRead (int), SelectorTuple register (SelectableChannel, int, NioTask<?>), SelectorTuple closeAll (), HandleImpl maxBytesPerRead (int), SelectorTuple cleanup (), SelectorTuple select (long), DefaultChannelProgressivePromise trySuccess (), NioEventLoopGroup NioEventLoopGroup (int, Executor, SelectorProvider, SelectStrategyFactory), DefaultChannelProgressivePromise syncUninterruptibly (), SelectorTuple selectNow (), EmbeddedSocketAddress toString (), SelectorTuple setIoRatio (int), HandleImpl incMessagesRead (int), HandleImpl checkMaxBytesPerReadPair (int, int), DefaultChannelProgressivePromise unvoid (), DefaultChannelProgressivePromise channel (), NioEventLoop get (), NioEventLoopGroup NioEventLoopGroup (int, Executor, EventExecutorChooserFactory, SelectorProvider, SelectStrategyFactory, RejectedExecutionHandler), NioEventLoopGroup NioEventLoopGroup (int, Executor, EventExecutorChooserFactory, SelectorProvider, SelectStrategyFactory, RejectedExecutionHandler, EventLoopTaskQueueFactory), SelectorTuple processSelectedKey (SelectionKey, NioTask<SelectableChannel>), SelectorTuple registeredChannels (), DefaultChannelProgressivePromise setProgress (long, long), DefaultChannelProgressivePromise DefaultChannelProgressivePromise (Channel), NioEventLoop NioEventLoop (NioEventLoopGroup, Executor, SelectorProvider, SelectStrategy, RejectedExecutionHandler, EventLoopTaskQueueFactory, EventLoopTaskQueueFactory), SelectorTuple newTaskQueue0 (int), SelectorTuple rebuildSelector (), DefaultChannelProgressivePromise executor (), ChannelHandler handlerRemoved (ChannelHandlerContext), HandleImpl DefaultMaxBytesRecvByteBufAllocator (), SelectorTuple processSelectedKey (SelectionKey, AbstractNioChannel), SelectorTuple processSelectedKeys (), NioEventLoopGroup NioEventLoopGroup (), HandleImpl readComplete (), HandleImpl DefaultMaxBytesRecvByteBufAllocator (int, int), NioEventLoopGroup setIoRatio (int), SelectorTuple beforeScheduledTaskSubmitted (long), HandleImpl maxBytesPerRead (), DefaultChannelProgressivePromise addListener (GenericFutureListener<? extends Future<? super Void>>), SelectorTuple unwrappedSelector (), SelectorTuple rebuildSelector0 (), HandleImpl allocate (ByteBufAllocator), SelectorTuple selectAgain (), SelectorTuple invokeChannelUnregistered (NioTask<SelectableChannel>, SelectionKey, Throwable), HandleImpl lastBytesRead (), DefaultChannelProgressivePromise removeListeners (GenericFutureListener<? extends Future<? super Void>>), HandleImpl reset (ChannelConfig), DefaultChannelProgressivePromise isVoid (), SelectorTuple processSelectedKeysOptimized (), HandleImpl continueReading (UncheckedBooleanSupplier), NioEventLoopGroup NioEventLoopGroup (int), SelectorTuple run (), SelectorTuple unexpectedSelectorWakeup (int), HandleImpl newHandle (), SelectorTuple getIoRatio (), HandleImpl maxBytesPerReadPair (int, int), HandleImpl get (), SelectorTuple openSelector (), DefaultChannelProgressivePromise checkDeadLock (), SelectorTuple newTaskQueue (int), ChannelHandler handlerAdded (ChannelHandlerContext), DefaultChannelProgressivePromise DefaultChannelProgressivePromise (Channel, EventExecutor), HandleImpl maxBytesPerIndividualRead (int), HandleImpl maxBytesPerReadPair (), HandleImpl continueReading (), SelectorTuple registeredChannelsIterator (), SelectorTuple selectorProvider (), SelectorTuple cancel (SelectionKey), ChannelHandler exceptionCaught (ChannelHandlerContext, Throwable), NioEventLoopGroup NioEventLoopGroup (int, ThreadFactory), NioEventLoop newTaskQueue (EventLoopTaskQueueFactory), NioEventLoopGroup NioEventLoopGroup (int, ThreadFactory, SelectorProvider, SelectStrategyFactory), DefaultChannelProgressivePromise setFailure (Throwable), NioEventLoopGroup NioEventLoopGroup (int, Executor, SelectorProvider), NioEventLoop run (), NioEventLoopGroup NioEventLoopGroup (int, ThreadFactory, SelectorProvider), DefaultChannelProgressivePromise setSuccess (), NioEventLoopGroup NioEventLoopGroup (int, Executor, EventExecutorChooserFactory, SelectorProvider, SelectStrategyFactory, RejectedExecutionHandler, EventLoopTaskQueueFactory, EventLoopTaskQueueFactory), NioEventLoopGroup NioEventLoopGroup (int, Executor), SelectorTuple processSelectedKeysPlain (Set<SelectionKey>), SelectorTuple register0 (SelectableChannel, int, NioTask<?>), NioEventLoopGroup rebuildSelectors (), NioEventLoopGroup newChild (Executor, Object), DefaultChannelProgressivePromise removeListener (GenericFutureListener<? extends Future<? super Void>>), SelectorTuple handleLoopException (Throwable), HandleImpl attemptedBytesRead (), HandleImpl maxBytesPerIndividualRead (), NioEventLoopGroup NioEventLoopGroup (ThreadFactory)]","612"
"1","netty/transport","8cba23725b578cf41e9a4ef492288265c125bb14","89c9b7f8b7347e9deff05fa71240f02168fb31aa","REVERSE_IF_ELSE","3","1","12","[SelectorTuple rebuildSelector0 (), SelectorTuple unexpectedSelectorWakeup (int), SelectorTuple processSelectedKey (SelectionKey, NioTask<SelectableChannel>), SelectorTuple processSelectedKeysOptimized (), SelectorTuple processSelectedKeysPlain (Set<SelectionKey>), SelectorTuple closeAll (), SelectorTuple wakeup (boolean), SelectorTuple processSelectedKey (SelectionKey, AbstractNioChannel), SelectorTuple processSelectedKeys (), SelectorTuple run (), SelectorTuple cancel (SelectionKey), SelectorTuple select (long)]","72"
"4","netty/transport","89c9b7f8b7347e9deff05fa71240f02168fb31aa","329665b4ead7d5c764f416f04444cda793282443","STATEMENTS_ORDER_REARRANGEMENT","10","1","9","[SelectorTuple rebuildSelector0 (), SelectorTuple openSelector (), SelectorTuple SelectorTuple (Selector, Selector), SelectorTuple selectAgain (), NioEventLoop NioEventLoop (NioEventLoopGroup, Executor, SelectorProvider, SelectStrategy, RejectedExecutionHandler, EventLoopTaskQueueFactory, EventLoopTaskQueueFactory), SelectorTuple processSelectedKeysOptimized (), SelectorTuple processSelectedKeysPlain (Set<SelectionKey>), SelectorTuple run (), SelectorTuple cancel (SelectionKey)]","54"
"6","netty/transport","329665b4ead7d5c764f416f04444cda793282443","271c6908191a723455ecdbacc4d79c0295649b0a","VAR_DECLARATION_MERGING","12","1","1","[SelectorTuple openSelector ()]","6"
"9","netty/transport","271c6908191a723455ecdbacc4d79c0295649b0a","e800db2652f8e4cdee96d21d3f5b004fef7d2f97","REVERSE_IF_ELSE","3","1","7","[SelectorTuple processSelectedKey (SelectionKey, NioTask<SelectableChannel>), SelectorTuple processSelectedKeysOptimized (), SelectorTuple processSelectedKeysPlain (Set<SelectionKey>), SelectorTuple closeAll (), SelectorTuple wakeup (boolean), SelectorTuple processSelectedKey (SelectionKey, AbstractNioChannel), SelectorTuple select (long)]","42"
"12","netty/transport","e800db2652f8e4cdee96d21d3f5b004fef7d2f97","b13a8aaf0a45918df48a41eea9bf3d167b2d6c09","STATEMENTS_ORDER_REARRANGEMENT","10","1","8","[SelectorTuple rebuildSelector0 (), SelectorTuple openSelector (), SelectorTuple SelectorTuple (Selector, Selector), SelectorTuple selectAgain (), NioEventLoop NioEventLoop (NioEventLoopGroup, Executor, SelectorProvider, SelectStrategy, RejectedExecutionHandler, EventLoopTaskQueueFactory, EventLoopTaskQueueFactory), SelectorTuple processSelectedKeysOptimized (), SelectorTuple run (), SelectorTuple cancel (SelectionKey)]","48"
"13","netty/transport","b13a8aaf0a45918df48a41eea9bf3d167b2d6c09","16819596616429650482cd5df6f859c456aeccbf","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[SelectorTuple run ()]","6"
"16","netty/transport","16819596616429650482cd5df6f859c456aeccbf","40f2da43ebbde3247b6865a5c70e4cf50e606c68","INFIX_EXPRESSION_DIVIDING","8","1","7","[SelectorTuple rebuildSelector0 (), SelectorTuple unexpectedSelectorWakeup (int), SelectorTuple wakeup (boolean), SelectorTuple processSelectedKey (SelectionKey, AbstractNioChannel), SelectorTuple setIoRatio (int), SelectorTuple run (), SelectorTuple select (long)]","42"
"19","netty/transport","40f2da43ebbde3247b6865a5c70e4cf50e606c68","ccd47d1f65cbcd2d1430d1ca5abaa53f793c6399","VAR_DECLARATION_MERGING","12","1","1","[SelectorTuple processSelectedKey (SelectionKey, AbstractNioChannel)]","6"
"20","netty/transport","ccd47d1f65cbcd2d1430d1ca5abaa53f793c6399","7e6deab4714c745c4e8afe7510a9fd6ba68b921e","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[SelectorTuple run ()]","6"
"21","netty/transport","7e6deab4714c745c4e8afe7510a9fd6ba68b921e","3a76eba52997934d31756119f9d3e075f7f3bdb0","INFIX_EXPRESSION_DIVIDING","8","1","1","[SelectorTuple processSelectedKey (SelectionKey, AbstractNioChannel)]","6"
"22","netty/transport","3a76eba52997934d31756119f9d3e075f7f3bdb0","8f098b50be075aeca1aaa18e885ec0a2580638fb","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[SelectorTuple run ()]","6"
"25","netty/transport","8f098b50be075aeca1aaa18e885ec0a2580638fb","510568abb5ca8537afc134f300360b7ebd13276e","STATEMENTS_ORDER_REARRANGEMENT","10","1","5","[SelectorTuple rebuildSelector0 (), SelectorTuple selectAgain (), NioEventLoop NioEventLoop (NioEventLoopGroup, Executor, SelectorProvider, SelectStrategy, RejectedExecutionHandler, EventLoopTaskQueueFactory, EventLoopTaskQueueFactory), SelectorTuple processSelectedKeysOptimized (), SelectorTuple processSelectedKey (SelectionKey, AbstractNioChannel)]","30"
"26","netty/transport","510568abb5ca8537afc134f300360b7ebd13276e","e3f124ead7b2eec3dba80005a5bc374fe8fbd7f4","VAR_DECLARATION_MERGING","12","1","1","[SelectorTuple processSelectedKey (SelectionKey, AbstractNioChannel)]","6"
"29","netty/transport","e3f124ead7b2eec3dba80005a5bc374fe8fbd7f4","c66ccd842b2433f12d1c33b07d742db565dc4298","CASE_TO_IF_ELSE","17","1","2","[SelectorTuple processSelectedKey (SelectionKey, NioTask<SelectableChannel>), SelectorTuple run ()]","12"
"0","netty/buffer","afb475dabd5ca9eaa94ccf07f0ecd8431db008ba","f494ea012d8aa9cce3a6dad0f2aecbfc2b819f65","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","692","[ByteWrapper toString (), UnpooledUnsafeHeapByteBuf _setLongLE (int, long), UnpooledDirectByteBuf _getByte (int), AdvancedLeakAwareByteBuf forEachByteDesc (int, int, ByteProcessor), ReadOnlyByteBufferBuf _setInt (int, int), ByteWrapper getBytes (int, ByteBuf, int, int), Component transferTo (ByteBuf), ByteWrapper isEmpty (T), UnpooledDirectByteBuf UnpooledDirectByteBuf (ByteBufAllocator, ByteBuffer, int), ReadOnlyByteBufferBuf memoryAddress (), AdvancedLeakAwareByteBuf getMediumLE (int), AdvancedLeakAwareByteBuf writeByte (int), ByteWrapper _getIntLE (int), ReadOnlyByteBufferBuf setByte (int, int), AdvancedLeakAwareByteBuf readRetainedSlice (int), UnsafeByteBufUtil setMediumLE (byte[], int, int), AdvancedLeakAwareByteBuf readBytes (ByteBuf, int), ReadOnlyByteBufferBuf setLongLE (int, long), UnpooledDirectByteBuf getByte (int), AdvancedLeakAwareByteBuf writeShortLE (int), AdvancedLeakAwareByteBuf copy (int, int), UnsafeByteBufUtil getBytes (AbstractByteBuf, long, int, byte[], int, int), UnpooledDirectByteBuf hasMemoryAddress (), ByteWrapper componentAtOffset (int), ByteWrapper _getShortLE (int), Component getBytes (int, ByteBuf), ReadOnlyByteBufferBuf readBytes (GatheringByteChannel, int), ByteWrapper checkForOverflow (int, int), Component unwrap (), ReadOnlyByteBufferBuf _setLong (int, long), Component setBytes (int, byte[]), AdvancedLeakAwareByteBuf setBytes (int, byte[], int, int), ByteWrapper internalComponentAtOffset (int), ReadOnlyByteBufferBuf alloc (), ByteWrapper _setLongLE (int, long), UnpooledDirectByteBuf _setIntLE (int, int), AdvancedLeakAwareByteBuf setBytes (int, byte[]), AdvancedLeakAwareByteBuf readByte (), Component writeBytes (ByteBuf, int), AbstractByteBufAllocator newHeapBuffer (int, int), UnpooledDirectByteBuf _getLong (int), ByteWrapper _setLong (int, long), AdvancedLeakAwareByteBuf getMedium (int), AdvancedLeakAwareByteBuf readBytes (byte[], int, int), AdvancedLeakAwareByteBuf toString (Charset), UnpooledDirectByteBuf freeDirect (ByteBuffer), ByteWrapper isEmpty (byte[]), ReadOnlyByteBufferBuf asReadOnly (), AbstractByteBufAllocator heapBuffer (), AdvancedLeakAwareByteBuf getUnsignedShort (int), AdvancedLeakAwareByteBuf writeBytes (ByteBuffer), PoolChunk collapsePast (long), Component markReaderIndex (), IntPriorityQueue isEmpty (), ByteWrapper _setShortLE (int, int), UnsafeByteBufUtil getUnsignedMedium (long), UnsafeByteBufUtil setMediumLE (long, int), Processor reset (), ByteWrapper _getUnsignedMedium (int), AdvancedLeakAwareByteBuf getBytes (int, ByteBuffer), UnsafeByteBufUtil getLongLE (long), AdvancedLeakAwareByteBuf readShort (), Component writeBoolean (boolean), AdvancedLeakAwareByteBuf readBytes (OutputStream, int), AdvancedLeakAwareByteBuf retain (int), UnpooledUnsafeHeapByteBuf _setMediumLE (int, int), PoolChunk splitLargeRun (long, int), Component deallocate (), ReadOnlyByteBufferBuf getBytes (int, ByteBuf, int, int, boolean), AdvancedLeakAwareByteBuf getShortLE (int), AdvancedLeakAwareByteBuf readChar (), ReadOnlyByteBufferBuf isReadOnly (), ByteWrapper _setMediumLE (int, int), AdvancedLeakAwareByteBuf getIntLE (int), UnsafeByteBufUtil getLong (byte[], int), AdvancedLeakAwareByteBuf getBytes (int, FileChannel, long, int), UnpooledDirectByteBuf capacity (), UnsafeByteBufUtil setShortLE (byte[], int, int), UnsafeByteBufUtil setZero (byte[], int, int), AbstractByteBufAllocator compositeHeapBuffer (int), AdvancedLeakAwareByteBuf setLong (int, long), UnsafeByteBufUtil setByte (byte[], int, int), ByteWrapper forEachByteAsc0 (int, int, ByteProcessor), ReadOnlyDuplicatedByteBuf ensureWritable (int, boolean), ReadOnlyByteBufferBuf slice (int, int), ByteWrapper addComponent (boolean, int, ByteBuf), AdvancedLeakAwareByteBuf writeBoolean (boolean), UnpooledDirectByteBuf _getShort (int), ReadOnlyByteBufferBuf _setMediumLE (int, int), UnpooledDirectByteBuf setBytes (int, ByteBuffer), ReadOnlyByteBufferBuf setBytes (int, ByteBuf, int, int), AbstractByteBufAllocator directBuffer (int, int), AdvancedLeakAwareByteBuf touch (Object), UnsafeByteBufUtil getShortLE (byte[], int), ByteWrapper setBytes (int, InputStream, int), AdvancedLeakAwareByteBuf duplicate (), Component skipBytes (int), AdvancedLeakAwareByteBuf AdvancedLeakAwareByteBuf (ByteBuf, ByteBuf, ResourceLeakTracker<ByteBuf>), Component writeMedium (int), ByteWrapper consolidate (int, int), AdvancedLeakAwareByteBuf getUnsignedByte (int), AdvancedLeakAwareByteBuf setInt (int, int), CompositeByteBufIterator removeComp (int), PoolChunk isUsed (long), UnpooledDirectByteBuf getBytes (int, FileChannel, long, int, boolean), AdvancedLeakAwareByteBuf readBytes (int), ByteWrapper internalComponent (int), ReadOnlySlicedByteBuf slice (int, int), AdvancedLeakAwareByteBuf getCharSequence (int, int, Charset), CompositeByteBufIterator hasNext (), UnsafeByteBufUtil getShort (long), AdvancedLeakAwareByteBuf readUnsignedInt (), UnpooledDirectByteBuf _setShortLE (int, int), ReadOnlyByteBufferBuf getInt (int), PoolChunk removeAvailRun0 (long), AdvancedLeakAwareByteBuf readSlice (int), AbstractByteBufAllocator toString (), ByteWrapper _getInt (int), CompositeByteBuf CompositeByteBuf (ByteBufAllocator, boolean, int, Iterable<ByteBuf>), AdvancedLeakAwareByteBuf setBytes (int, ByteBuf, int), UnpooledUnsafeHeapByteBuf setShort (int, int), UnpooledDirectByteBuf UnpooledDirectByteBuf (ByteBufAllocator, int, int), AdvancedLeakAwareByteBuf setBytes (int, ByteBuf, int, int), ByteWrapper CompositeByteBuf (ByteBufAllocator, boolean, int, ByteWrapper<T>, T[], int), Component isAccessible (), UnpooledDirectByteBuf setBytes (int, ScatteringByteChannel, int), UnpooledDirectByteBuf _getInt (int), UnsafeByteBufUtil setShortLE (long, int), UnsafeByteBufUtil getLongLE (byte[], int), ByteWrapper setMedium (int, int), UnpooledDirectByteBuf getBytes (int, byte[], int, int, boolean), ByteWrapper addComponents0 (boolean, int, ByteBuf[], int), AdvancedLeakAwareByteBuf writeBytes (byte[]), UnsafeByteBufUtil copy (AbstractByteBuf, long, int, int), AdvancedLeakAwareByteBuf forEachByte (int, int, ByteProcessor), UnsafeByteBufUtil batchSetZero (long, int), AdvancedLeakAwareByteBuf writeMedium (int), ReadOnlyByteBufferBuf duplicate (), UnpooledUnsafeHeapByteBuf _getShort (int), ReadOnlySlicedByteBuf isWritable (int), ByteWrapper copyTo (int, int, int, ByteBuf), AdvancedLeakAwareByteBuf readInt (), AdvancedLeakAwareByteBuf writeLongLE (long), UnpooledUnsafeHeapByteBuf getByte (int), AdvancedLeakAwareByteBuf getBytes (int, OutputStream, int), ReadOnlyByteBufferBuf getBytes (int, FileChannel, long, int, boolean), AbstractByteBufAllocator directBuffer (int), PoolChunk destroy (), AbstractByteBufAllocator heapBuffer (int), ByteWrapper discardReadComponents (), PoolChunk getAvailRunByOffset (int), ByteWrapper consolidate0 (int, int), UnsafeByteBufUtil setBytes (AbstractByteBuf, long, int, ByteBuf, int, int), UnsafeByteBufUtil getInt (long), ByteWrapper setInt (int, int), ByteWrapper findComponent (int), ByteWrapper _getShort (int), AdvancedLeakAwareByteBuf getInt (int), UnsafeByteBufUtil getShort (byte[], int), PoolChunk pinnedBytes (), UnpooledDirectByteBuf setBytes (int, FileChannel, long, int), ByteWrapper arrayOffset (), AbstractByteBufAllocator directBuffer (), ReadOnlyByteBufferBuf getBytes (int, ByteBuffer, boolean), AdvancedLeakAwareByteBuf retainedSlice (int, int), PoolChunk PoolChunk (PoolArena<T>, Object, T, int), PoolChunk allocate (PooledByteBuf<T>, int, int, PoolThreadCache), PoolChunk lastPage (int, int), UnpooledDirectByteBuf nioBufferCount (), ReadOnlyByteBufferBuf _getIntLE (int), PoolChunk runFirstBestFit (int), Component writeBytes (ByteBuf, int, int), AdvancedLeakAwareByteBuf setIntLE (int, int), UnpooledDirectByteBuf setBytes (int, InputStream, int), ByteWrapper _getUnsignedMediumLE (int), UnpooledDirectByteBuf getBytes (int, ByteBuffer, boolean), AdvancedLeakAwareByteBuf order (ByteOrder), UnpooledDirectByteBuf getBytes (int, FileChannel, long, int), ReadOnlySlicedByteBuf asReadOnly (), Component writerIndex (int), AdvancedLeakAwareByteBuf copy (), AdvancedLeakAwareByteBuf setBoolean (int, boolean), ByteWrapper hasArray (), ReadOnlySlicedByteBuf ensureWritable (int, boolean), PoolChunk calculateRunSize (int), AdvancedLeakAwareByteBuf readBytes (ByteBuffer), AdvancedLeakAwareByteBuf writeLong (long), ByteWrapper discardReadBytes (), PoolChunk PoolChunk (PoolArena<T>, Object, T, int, int, int, int), PoolChunk allocateSubpage (int, PoolSubpage<T>), ByteWrapper copy (int, int), AbstractByteBufAllocator calculateNewCapacity (int, int), ByteWrapper getBytes (int, OutputStream, int), ByteWrapper _setShort (int, int), ReadOnlyByteBufferBuf getUnsignedMedium (int), UnsafeByteBufUtil getLong (long), UnpooledUnsafeHeapByteBuf setIntLE (int, int), CompositeByteBufIterator next (), AdvancedLeakAwareByteBuf readLongLE (), UnpooledDirectByteBuf order (), Component clear (), ByteWrapper hasMemoryAddress (), UnpooledDirectByteBuf getBytes (int, OutputStream, int, boolean), UnpooledUnsafeHeapByteBuf getLong (int), UnsafeByteBufUtil setBytes (AbstractByteBuf, long, int, byte[], int, int), PoolChunk usage (), AdvancedLeakAwareByteBuf writeFloat (float), Processor process (byte), ReadOnlyByteBufferBuf setInt (int, int), AdvancedLeakAwareByteBuf writeIntLE (int), Component resetReaderIndex (), ByteWrapper addComponents (boolean, ByteBuf), AdvancedLeakAwareByteBuf readBytes (ByteBuf, int, int), UnpooledUnsafeHeapByteBuf _setIntLE (int, int), AdvancedLeakAwareByteBuf getLong (int), AdvancedLeakAwareByteBuf bytesBefore (int, byte), ByteWrapper _getByte (int), ByteWrapper getBytes (int, FileChannel, long, int), IntPriorityQueue remove (int), AdvancedLeakAwareByteBuf getBytes (int, byte[]), PoolChunk toRunHandle (int, int, int), ReadOnlyByteBufferBuf _setIntLE (int, int), AdvancedLeakAwareByteBuf readBytes (GatheringByteChannel, int), AdvancedLeakAwareByteBuf getLongLE (int), ReadOnlyByteBufferBuf getUnsignedMediumLE (int), ByteWrapper capacity (), ReadOnlyByteBufferBuf isDirect (), UnsafeByteBufUtil setIntLE (long, int), Component reposition (int), ReadOnlyByteBufferBuf hasMemoryAddress (), PoolChunk chunkSize (), Processor Processor (int[], int[]), ByteWrapper _setIntLE (int, int), UnsafeByteBufUtil getUnsignedMediumLE (byte[], int), ByteWrapper setShort (int, int), UnpooledUnsafeHeapByteBuf _setInt (int, int), ReadOnlyByteBufferBuf readBytes (ByteBuffer), UnpooledDirectByteBuf _setLongLE (int, long), ReadOnlyByteBufferBuf getBytes (int, GatheringByteChannel, int), ReadOnlyByteBufferBuf getLongLE (int), AdvancedLeakAwareByteBuf skipBytes (int), ReadOnlyByteBufferBuf unwrap (), AdvancedLeakAwareByteBuf readUnsignedShortLE (), UnsafeByteBufUtil setLongLE (byte[], int, long), AdvancedLeakAwareByteBuf getBytes (int, ByteBuf), UnpooledDirectByteBuf _setShort (int, int), UnpooledUnsafeHeapByteBuf setByte (int, int), Component setZero (int, int), ByteWrapper numComponents (), UnpooledUnsafeHeapByteBuf writeZero (int), AdvancedLeakAwareByteBuf writeBytes (InputStream, int), Component writeByte (int), AdvancedLeakAwareByteBuf readBytes (FileChannel, long, int), AdvancedLeakAwareByteBuf AdvancedLeakAwareByteBuf (ByteBuf, ResourceLeakTracker<ByteBuf>), UnpooledUnsafeHeapByteBuf _getIntLE (int), ReadOnlyByteBufferBuf nioBuffers (int, int), AdvancedLeakAwareByteBuf nioBuffer (), ByteWrapper internalNioBuffer (int, int), UnpooledDirectByteBuf internalNioBuffer (int, int), PoolChunk isSubpage (long), UnsafeByteBufUtil getByte (long), UnpooledUnsafeHeapByteBuf _setLong (int, long), AbstractByteBufAllocator newDirectBuffer (int, int), PoolChunk removeAvailRun (long), PoolChunk usage (int), AbstractByteBufAllocator heapBuffer (int, int), AdvancedLeakAwareByteBuf writeCharSequence (CharSequence, Charset), PoolChunk incrementPinnedMemory (int), AdvancedLeakAwareByteBuf readIntLE (), ReadOnlyByteBufferBuf order (), ReadOnlyByteBufferBuf _getShort (int), AdvancedLeakAwareByteBuf nioBufferCount (), AdvancedLeakAwareByteBuf slice (int, int), Component setBytes (int, ByteBuf, int), ByteWrapper addComponent (int, ByteBuf), IntPriorityQueue sink (int), ByteWrapper consolidateIfNeeded (), AbstractByteBufAllocator buffer (), UnsafeByteBufUtil getIntLE (byte[], int), Component slice (), AdvancedLeakAwareByteBuf getChar (int), AdvancedLeakAwareByteBuf getUnsignedIntLE (int), AdvancedLeakAwareByteBuf forEachByte (ByteProcessor), ByteWrapper checkComponentIndex (int), ReadOnlyByteBufferBuf internalNioBuffer (), UnpooledDirectByteBuf arrayOffset (), Component readBytes (ByteBuf, int), UnpooledDirectByteBuf alloc (), ReadOnlyByteBufferBuf isWritable (int), AdvancedLeakAwareByteBuf capacity (int), ReadOnlyByteBufferBuf _getLong (int), ReadOnlyByteBufferBuf _getUnsignedMediumLE (int), Processor getFoundNeedleId (), UnpooledUnsafeHeapByteBuf _setByte (int, int), AdvancedLeakAwareByteBuf getUnsignedShortLE (int), ReadOnlyByteBufferBuf setShortLE (int, int), AdvancedLeakAwareByteBuf getBytes (int, GatheringByteChannel, int), ReadOnlyByteBufferBuf capacity (), Component setDouble (int, double), AdvancedLeakAwareByteBuf writeMediumLE (int), UnsafeByteBufUtil setMedium (byte[], int, int), Component length (), UnsafeByteBufUtil getIntLE (long), UnsafeByteBufUtil setSingleBytes (AbstractByteBuf, long, int, ByteBuffer, int), ReadOnlyByteBufferBuf ensureWritable (int), Component writeZero (int), AdvancedLeakAwareByteBuf nioBuffer (int, int), UnpooledDirectByteBuf setMedium (int, int), ReadOnlyByteBufferBuf _getUnsignedMedium (int), UnsafeByteBufUtil setZero (long, int), Component writeBytes (ByteBuf), AdvancedLeakAwareByteBuf setDouble (int, double), AdvancedLeakAwareByteBuf setLongLE (int, long), ByteWrapper _setInt (int, int), Component setFloat (int, float), Component writeFloat (float), UnpooledUnsafeHeapByteBuf getUnsignedMediumLE (int), UnpooledUnsafeHeapByteBuf _setShortLE (int, int), AdvancedLeakAwareByteBuf discardSomeReadBytes (), AdvancedLeakAwareByteBuf getShort (int), AdvancedLeakAwareByteBuf writeBytes (byte[], int, int), UnpooledUnsafeHeapByteBuf _setMedium (int, int), ByteWrapper addComponent (ByteBuf), AbstractByteBufAllocator buffer (int, int), AdvancedLeakAwareByteBuf ensureWritable (int, boolean), AdvancedLeakAwareByteBuf bytesBefore (byte), ReadOnlyByteBufferBuf _getLongLE (int), ReadOnlyByteBufferBuf setBytes (int, InputStream, int), PoolChunk bitmapIdx (long), ByteWrapper updateComponentOffsets (int), AdvancedLeakAwareByteBuf setBytes (int, ByteBuffer), UnpooledDirectByteBuf setBytes (int, ByteBuf, int, int), UnsafeByteBufUtil getUnsignedMedium (byte[], int), ReadOnlyDuplicatedByteBuf asReadOnly (), UnpooledDirectByteBuf _getUnsignedMedium (int), ReadOnlyByteBufferBuf readBytes (byte[], int, int), ByteWrapper setByte (int, int), CompositeByteBufIterator clearComps (), ReadOnlyByteBufferBuf getShortLE (int), ReadOnlyByteBufferBuf getBytes (int, byte[], int, int, boolean), UnpooledDirectByteBuf hasArray (), AdvancedLeakAwareByteBuf readFloat (), Component markWriterIndex (), UnsafeByteBufUtil setLong (long, long), ReadOnlyByteBufferBuf getBytes (int, byte[], int, int), Component readBytes (byte[], int, int), ByteWrapper toComponentIndex0 (int), UnpooledUnsafeHeapByteBuf setInt (int, int), ReadOnlyByteBufferBuf getShort (int), ByteWrapper allocBuffer (int), ByteWrapper newComponent (ByteBuf, int), AdvancedLeakAwareByteBuf readUnsignedShort (), ReadOnlySlicedByteBuf duplicate (), ByteWrapper ensureAccessible (ByteBuf), UnpooledUnsafeHeapByteBuf setMediumLE (int, int), ReadOnlyByteBufferBuf readBytes (ByteBuf, int, int), Component Component (ByteBuf, int, ByteBuf, int, int, int, ByteBuf), UnpooledDirectByteBuf nioBuffers (int, int), AdvancedLeakAwareByteBuf touch (), PoolChunk freeBytes (), UnpooledDirectByteBuf setInt (int, int), ReadOnlyByteBufferBuf getByte (int), Component nioBuffers (), ReadOnlyByteBufferBuf _setMedium (int, int), ByteWrapper isDirect (), ReadOnlyByteBufferBuf setBytes (int, ByteBuffer), ReadOnlyByteBufferBuf getBytes (int, FileChannel, long, int), ByteWrapper setBytes (int, byte[], int, int), AdvancedLeakAwareByteBuf getFloat (int), AdvancedLeakAwareByteBuf writeDouble (double), AdvancedLeakAwareByteBuf ensureWritable (int), ReadOnlyByteBufferBuf _setShortLE (int, int), ByteWrapper capacity (int), AbstractByteBufAllocator toLeakAwareBuffer (CompositeByteBuf), UnpooledDirectByteBuf getBytes (int, byte[], int, int), AdvancedLeakAwareByteBuf recordLeakNonRefCountingOperation (ResourceLeakTracker<ByteBuf>), Component discardSomeReadBytes (), UnpooledUnsafeHeapByteBuf _getByte (int), ByteWrapper wrap (byte[]), ReadOnlyByteBufferBuf setLong (int, long), ByteWrapper removeComponent (int), UnpooledUnsafeHeapByteBuf allocateArray (int), UnsafeByteBufUtil getUnsignedMediumLE (long), ByteWrapper alloc (), ReadOnlyByteBufferBuf nioBuffer (int, int), Component retain (int), AdvancedLeakAwareByteBuf readBytes (ByteBuf), ByteWrapper nioBuffer (int, int), Component readBytes (ByteBuf, int, int), UnpooledUnsafeHeapByteBuf _getUnsignedMedium (int), ReadOnlyByteBufferBuf getIntLE (int), UnsafeByteBufUtil setIntLE (byte[], int, int), ByteWrapper wrap (ByteBuffer), ReadOnlyByteBufferBuf hasArray (), ByteWrapper _setMedium (int, int), UnsafeByteBufUtil batchSetZero (byte[], int, int), UnsafeByteBufUtil UnsafeByteBufUtil (), UnpooledUnsafeHeapByteBuf getShort (int), ReadOnlyByteBufferBuf ReadOnlyByteBufferBuf (ByteBufAllocator, ByteBuffer), ReadOnlyByteBufferBuf setBytes (int, FileChannel, long, int), ReadOnlyByteBufferBuf setBytes (int, byte[], int, int), UnpooledDirectByteBuf copy (int, int), ReadOnlyByteBufferBuf isWritable (), PoolChunk decrementPinnedMemory (int), ReadOnlyByteBufferBuf arrayOffset (), ByteWrapper findComponent0 (int), ByteWrapper addComponent (boolean, ByteBuf), AdvancedLeakAwareByteBuf slice (), Component setBoolean (int, boolean), AdvancedLeakAwareByteBuf writeBytes (ByteBuf, int), UnpooledUnsafeHeapByteBuf _getInt (int), IntPriorityQueue offer (int), ReadOnlyDuplicatedByteBuf duplicate (), UnpooledUnsafeHeapByteBuf setShortLE (int, int), AbstractByteBufAllocator compositeBuffer (), AdvancedLeakAwareByteBuf readMedium (), UnsafeByteBufUtil setLongLE (long, long), UnsafeByteBufUtil setBytes (AbstractByteBuf, long, int, InputStream, int), UnpooledUnsafeHeapByteBuf _getLong (int), UnpooledDirectByteBuf readBytes (GatheringByteChannel, int), AdvancedLeakAwareByteBuf setZero (int, int), UnpooledDirectByteBuf readBytes (FileChannel, long, int), AbstractByteBufAllocator ioBuffer (), Component writeBytes (byte[]), ReadOnlyByteBufferBuf setIntLE (int, int), AdvancedLeakAwareByteBuf writeBytes (ByteBuf), AdvancedLeakAwareByteBuf readMediumLE (), UnpooledUnsafeHeapByteBuf getInt (int), UnsafeByteBufUtil setByte (long, int), UnpooledDirectByteBuf setShort (int, int), ByteWrapper order (), UnpooledUnsafeHeapByteBuf _getShortLE (int), AdvancedLeakAwareByteBuf setFloat (int, float), ReadOnlyByteBufferBuf internalNioBuffer (int, int), ReadOnlyByteBufferBuf getBytes (int, OutputStream, int), UnpooledUnsafeHeapByteBuf setLongLE (int, long), PoolChunk insertAvailRun0 (int, long), PoolChunk runSize (int, long), ByteWrapper iterator (), ReadOnlyByteBufferBuf ensureWritable (int, boolean), Component writeLong (long), UnpooledUnsafeHeapByteBuf _setShort (int, int), PoolChunk initBufWithSubpage (PooledByteBuf<T>, ByteBuffer, long, int, PoolThreadCache), Component getBytes (int, byte[]), UnpooledDirectByteBuf unwrap (), AdvancedLeakAwareByteBuf getDouble (int), UnpooledDirectByteBuf deallocate (), ReadOnlyByteBufferBuf _getByte (int), UnsafeByteBufUtil setInt (byte[], int, int), UnpooledUnsafeHeapByteBuf _getLongLE (int), ReadOnlyByteBufferBuf getLong (int), ByteWrapper addComponents (boolean, Iterable<ByteBuf>), Component writeDouble (double), AdvancedLeakAwareByteBuf setShort (int, int), UnsafeByteBufUtil zeroTillAligned (long, int), CompositeByteBuf CompositeByteBuf (ByteBufAllocator, boolean, int, ByteBuf), AdvancedLeakAwareByteBuf writeBytes (ScatteringByteChannel, int), ReadOnlyByteBufferBuf getBytes (int, ByteBuf, int, int), UnpooledDirectByteBuf setLong (int, long), ByteWrapper forEachByteDesc0 (int, int, ByteProcessor), ByteWrapper getByte (int), Component readBytes (ByteBuffer), Component free (), Component writeBytes (byte[], int, int), AbstractByteBufAllocator AbstractByteBufAllocator (), UnpooledUnsafeHeapByteBuf getShortLE (int), ByteWrapper addComponents (int, ByteBuf), AdvancedLeakAwareByteBuf setShortLE (int, int), PoolChunk allocateRun (int), AdvancedLeakAwareByteBuf toString (int, int, Charset), ByteWrapper toComponentIndex (int), Component ensureWritable (int), AbstractByteBufAllocator compositeHeapBuffer (), ByteWrapper addComponents0 (boolean, int, ByteWrapper<T>, T[], int), AbstractByteBufAllocator compositeDirectBuffer (int), AdvancedLeakAwareByteBuf readUnsignedByte (), UnsafeByteBufUtil setShort (byte[], int, int), UnpooledDirectByteBuf setByte (int, int), UnpooledDirectByteBuf nioBuffer (int, int), UnsafeByteBufUtil getBytes (AbstractByteBuf, long, int, ByteBuffer), AbstractByteBufAllocator validate (int, int), UnpooledDirectByteBuf _setInt (int, int), PoolChunk insertAvailRun (int, int, long), ByteWrapper memoryAddress (), UnpooledDirectByteBuf isContiguous (), AdvancedLeakAwareByteBuf internalNioBuffer (int, int), AdvancedLeakAwareByteBuf readShortLE (), UnsafeByteBufUtil setLong (byte[], int, long), AdvancedLeakAwareByteBuf getBytes (int, ByteBuf, int, int), AdvancedLeakAwareByteBuf writeBytes (ByteBuf, int, int), ByteWrapper _setByte (int, int), Component srcIdx (int), AdvancedLeakAwareByteBuf writeShort (int), Processor AhoCorasicSearchProcessorFactory (byte[]), Processor newSearchProcessor (), UnpooledDirectByteBuf _getLongLE (int), Component readBytes (OutputStream, int), AdvancedLeakAwareByteBuf writeChar (int), ReadOnlyByteBufferBuf _getShortLE (int), ByteWrapper decompose (int, int), ByteWrapper getBytes (int, byte[], int, int), PoolChunk newRunsAvailqueueArray (int), ByteWrapper consolidate (), UnpooledUnsafeHeapByteBuf getIntLE (int), ReadOnlyDuplicatedByteBuf slice (int, int), AbstractByteBufAllocator compositeDirectBuffer (), UnpooledUnsafeHeapByteBuf setLong (int, long), Component touch (Object), ByteWrapper maxNumComponents (), ReadOnlyByteBufferBuf nioBuffer (boolean), Component writeChar (int), ByteWrapper setBytes (int, ByteBuf, int, int), UnpooledUnsafeHeapByteBuf UnpooledUnsafeHeapByteBuf (ByteBufAllocator, int, int), AbstractByteBufAllocator ioBuffer (int), CompositeByteBuf CompositeByteBuf (ByteBufAllocator, boolean, int, int), AdvancedLeakAwareByteBuf setByte (int, int), UnpooledDirectByteBuf UnpooledDirectByteBuf (ByteBufAllocator, ByteBuffer, int, boolean, boolean), AdvancedLeakAwareByteBuf writeBytes (FileChannel, long, int), UnpooledDirectByteBuf setBytes (int, byte[], int, int), IntPriorityQueue lift (int), AdvancedLeakAwareByteBuf setBytes (int, InputStream, int), AdvancedLeakAwareByteBuf retainedDuplicate (), ByteWrapper nioBuffers (int, int), ReadOnlyByteBufferBuf getBytes (int, OutputStream, int, boolean), UnsafeByteBufUtil getBytes (long, byte[], int, int, OutputStream, int), ByteWrapper setBytes (int, ScatteringByteChannel, int), AbstractByteBufAllocator AbstractByteBufAllocator (boolean), AdvancedLeakAwareByteBuf retain (), PoolChunk initBuf (PooledByteBuf<T>, ByteBuffer, long, int, PoolThreadCache), Component readBytes (byte[]), UnpooledDirectByteBuf isDirect (), UnpooledDirectByteBuf _getUnsignedMediumLE (int), UnsafeByteBufUtil setInt (long, int), PoolChunk runOffset (long), ByteWrapper component (int), Component retain (), AdvancedLeakAwareByteBuf getUnsignedInt (int), AdvancedLeakAwareByteBuf readCharSequence (int, Charset), UnpooledDirectByteBuf capacity (int), UnpooledUnsafeHeapByteBuf getLongLE (int), ReadOnlyByteBufferBuf _setShort (int, int), AdvancedLeakAwareByteBuf readBoolean (), UnpooledDirectByteBuf getBytes (int, ByteBuffer), ReadOnlyByteBufferBuf _getInt (int), AdvancedLeakAwareByteBuf getBytes (int, ByteBuf, int), Component readerIndex (int), Component getBytes (int, ByteBuf, int), AbstractByteBufAllocator toLeakAwareBuffer (ByteBuf), AdvancedLeakAwareByteBuf writeZero (int), UnsafeByteBufUtil getByte (byte[], int), Component resetWriterIndex (), AdvancedLeakAwareByteBuf asReadOnly (), ReadOnlySlicedByteBuf isWritable (), UnpooledDirectByteBuf _setMediumLE (int, int), ReadOnlyByteBufferBuf isContiguous (), ByteWrapper isEmpty (ByteBuffer), PoolChunk free (long, int, ByteBuffer), ByteWrapper addComponents (Iterable<ByteBuf>), ByteWrapper addComponents (boolean, int, Iterable<ByteBuf>), AdvancedLeakAwareByteBuf getBoolean (int), ByteWrapper setBytes (int, FileChannel, long, int), AdvancedLeakAwareByteBuf nioBuffers (int, int), UnpooledDirectByteBuf getBytes (int, GatheringByteChannel, int, boolean), AdvancedLeakAwareByteBuf setChar (int, int), AdvancedLeakAwareByteBuf setMedium (int, int), UnpooledDirectByteBuf getInt (int), Component setChar (int, int), AdvancedLeakAwareByteBuf readLong (), CompositeByteBufIterator remove (), UnpooledUnsafeHeapByteBuf getUnsignedMedium (int), AbstractByteBufAllocator buffer (int), CompositeByteBuf CompositeByteBuf (ByteBufAllocator, boolean, int), UnpooledDirectByteBuf readBytes (byte[], int, int), AdvancedLeakAwareByteBuf getByte (int), AdvancedLeakAwareByteBuf getUnsignedMedium (int), UnsafeByteBufUtil setMedium (long, int), Component writeShort (int), AdvancedLeakAwareByteBuf release (int), UnsafeByteBufUtil setShort (long, int), UnpooledDirectByteBuf internalNioBuffer (), AdvancedLeakAwareByteBuf release (), ReadOnlyByteBufferBuf getBytes (int, ByteBuffer), ReadOnlyDuplicatedByteBuf isWritable (int), ByteWrapper removeComponents (int, int), UnpooledDirectByteBuf array (), ByteWrapper _getLong (int), PoolChunk toString (), ReadOnlyByteBufferBuf setShort (int, int), UnpooledDirectByteBuf _getIntLE (int), AdvancedLeakAwareByteBuf setCharSequence (int, CharSequence, Charset), ReadOnlyByteBufferBuf setBytes (int, ScatteringByteChannel, int), ByteWrapper array (), UnpooledDirectByteBuf getBytes (int, GatheringByteChannel, int), ReadOnlyByteBufferBuf array (), ByteWrapper addComponents (int, Iterable<ByteBuf>), ReadOnlyByteBufferBuf readBytes (FileChannel, long, int), IntPriorityQueue peek (), UnpooledDirectByteBuf getShort (int), Processor linkSuffixes (), UnpooledDirectByteBuf _getShortLE (int), ByteWrapper nioBufferCount (), ReadOnlyByteBufferBuf setMediumLE (int, int), PoolChunk isRun (long), Component duplicate (), AdvancedLeakAwareByteBuf readBytes (byte[]), UnpooledDirectByteBuf readBytes (OutputStream, int), Component writeBytes (ByteBuffer), UnpooledDirectByteBuf getBytes (int, ByteBuf, int, int), UnpooledDirectByteBuf memoryAddress (), ReadOnlyByteBufferBuf deallocate (), AdvancedLeakAwareByteBuf setBytes (int, FileChannel, long, int), ReadOnlyByteBufferBuf capacity (int), UnpooledUnsafeHeapByteBuf setMedium (int, int), AdvancedLeakAwareByteBuf bytesBefore (int, int, byte), ByteWrapper setBytes (int, ByteBuffer), UnsafeByteBufUtil getShortLE (long), UnpooledDirectByteBuf readBytes (ByteBuffer), UnsafeByteBufUtil getBytes (AbstractByteBuf, long, int, OutputStream, int), ByteWrapper _getLongLE (int), UnpooledUnsafeHeapByteBuf newSwappedByteBuf (), AdvancedLeakAwareByteBuf forEachByteDesc (ByteProcessor), ReadOnlySlicedByteBuf ReadOnlySlicedByteBuf (ByteBuf, int, int), UnpooledUnsafeHeapByteBuf _getUnsignedMediumLE (int), AbstractByteBufAllocator compositeBuffer (int), UnpooledDirectByteBuf getUnsignedMedium (int), IntPriorityQueue subord (int, int), ByteWrapper addComponent0 (boolean, int, ByteBuf), UnsafeByteBufUtil setBytes (AbstractByteBuf, long, int, ByteBuffer), UnpooledDirectByteBuf _setMedium (int, int), CompositeByteBuf CompositeByteBuf (ByteBufAllocator, boolean, int, ByteBuf[], int), ReadOnlyByteBufferBuf _setLongLE (int, long), Component idx (int), AbstractByteBufAllocator ioBuffer (int, int), UnpooledDirectByteBuf getBytes (int, OutputStream, int), ByteWrapper CompositeByteBuf (ByteBufAllocator), AdvancedLeakAwareByteBuf getUnsignedMediumLE (int), ReadOnlyByteBufferBuf getBytes (int, GatheringByteChannel, int, boolean), AdvancedLeakAwareByteBuf readDouble (), UnsafeByteBufUtil newUnsafeDirectByteBuf (ByteBufAllocator, int, int), ByteWrapper findIt (int), ByteWrapper checkComponentIndex (int, int), UnpooledDirectByteBuf setByteBuffer (ByteBuffer, boolean), ReadOnlyDuplicatedByteBuf isWritable (), ByteWrapper addFlattenedComponents (boolean, ByteBuf), ReadOnlyDuplicatedByteBuf ReadOnlyDuplicatedByteBuf (ByteBuf), CompositeByteBufIterator removeCompRange (int, int), PoolChunk collapseNext (long), AdvancedLeakAwareByteBuf setBytes (int, ScatteringByteChannel, int), AdvancedLeakAwareByteBuf indexOf (int, int, byte), UnsafeByteBufUtil getBytes (AbstractByteBuf, long, int, ByteBuf, int, int), ByteWrapper toByteIndex (int), Component setBytes (int, ByteBuf), UnpooledDirectByteBuf _setLong (int, long), ReadOnlyByteBufferBuf setMedium (int, int), ByteWrapper getBytes (int, GatheringByteChannel, int), IntPriorityQueue swap (int, int), UnpooledDirectByteBuf getLong (int), UnsafeByteBufUtil getInt (byte[], int), ByteWrapper newCompArray (int, int), PoolChunk runPages (long), IntPriorityQueue poll (), Component readBytes (ByteBuf), ByteWrapper setLong (int, long), Component touch (), ByteWrapper addComponents (ByteBuf), AdvancedLeakAwareByteBuf setMediumLE (int, int), ReadOnlyByteBufferBuf readBytes (OutputStream, int), Processor buildTrie (byte[][]), UnpooledDirectByteBuf allocateDirect (int), PoolChunk collapseRuns (long), ReadOnlyByteBufferBuf copy (int, int), CompositeByteBufIterator shiftComps (int, int), UnpooledDirectByteBuf _setByte (int, int), AdvancedLeakAwareByteBuf setBytes (int, ByteBuf), AdvancedLeakAwareByteBuf newLeakAwareByteBuf (ByteBuf, ByteBuf, ResourceLeakTracker<ByteBuf>), Component writeInt (int), UnpooledUnsafeHeapByteBuf setZero (int, int), AdvancedLeakAwareByteBuf getBytes (int, byte[], int, int), AdvancedLeakAwareByteBuf nioBuffers (), ReadOnlyByteBufferBuf nioBufferCount (), AdvancedLeakAwareByteBuf readUnsignedMediumLE (), ByteWrapper getBytes (int, ByteBuffer), Component internalNioBuffer (int, int), AdvancedLeakAwareByteBuf readUnsignedMedium (), ReadOnlyByteBufferBuf _setByte (int, int), ByteWrapper wrap (T), AdvancedLeakAwareByteBuf readUnsignedIntLE (), Component setIndex (int, int), AdvancedLeakAwareByteBuf discardReadBytes (), CompositeByteBufIterator addComp (int, Component), AdvancedLeakAwareByteBuf retainedSlice (), AdvancedLeakAwareByteBuf writeInt (int)]","6920"
"1","netty/buffer","f494ea012d8aa9cce3a6dad0f2aecbfc2b819f65","893b86dcff8804e79f36f8db5c46c191523bd8b2","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","3","[ReadOnlyByteBufferBuf readBytes (GatheringByteChannel, int), ReadOnlyByteBufferBuf readBytes (FileChannel, long, int), ReadOnlyByteBufferBuf readBytes (OutputStream, int)]","30"
"3","netty/buffer","893b86dcff8804e79f36f8db5c46c191523bd8b2","86464c417ba7448aeeff9bd26aa66206f2205d3f","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[ReadOnlyByteBufferBuf copy (int, int)]","10"
"8","netty/buffer","86464c417ba7448aeeff9bd26aa66206f2205d3f","33edc6783310ca2a3fe831b581b0f7ff4757a1d5","SWITCH_EQUAL_SIDES","14","1","4","[ReadOnlyByteBufferBuf getBytes (int, GatheringByteChannel, int, boolean), ReadOnlyByteBufferBuf internalNioBuffer (), ReadOnlyByteBufferBuf getBytes (int, OutputStream, int, boolean), ReadOnlyByteBufferBuf getBytes (int, FileChannel, long, int, boolean)]","40"
"11","netty/buffer","33edc6783310ca2a3fe831b581b0f7ff4757a1d5","19d5de35540b166d5409d758413802d486288b6a","STATEMENTS_ORDER_REARRANGEMENT","10","1","4","[ReadOnlyByteBufferBuf getBytes (int, GatheringByteChannel, int, boolean), ReadOnlyByteBufferBuf getBytes (int, OutputStream, int, boolean), ReadOnlyByteBufferBuf ReadOnlyByteBufferBuf (ByteBufAllocator, ByteBuffer), ReadOnlyByteBufferBuf getBytes (int, FileChannel, long, int, boolean)]","40"
"17","netty/buffer","19d5de35540b166d5409d758413802d486288b6a","54cf1a8e55104c33eb39fa8f000fa12def0af4c0","LOCAL_VAR_RENAMING","0","1","2","[ReadOnlyByteBufferBuf setBytes (int, FileChannel, long, int), ReadOnlyByteBufferBuf setBytes (int, ByteBuf, int, int)]","20"
"18","netty/buffer","54cf1a8e55104c33eb39fa8f000fa12def0af4c0","167dabdc0e228b467e415e5de934a4b628d63d92","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[ReadOnlyByteBufferBuf copy (int, int)]","10"
"25","netty/buffer","167dabdc0e228b467e415e5de934a4b628d63d92","70d46586e5daec3d9c5881f2ba7a22577229eb8c","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[ReadOnlyByteBufferBuf copy (int, int)]","10"
"27","netty/buffer","70d46586e5daec3d9c5881f2ba7a22577229eb8c","402edbb1eae1a8cdb8544fa07ec8c861c498c629","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ReadOnlyByteBufferBuf getBytes (int, OutputStream, int, boolean)]","10"
"0","netty/codec-dns","402edbb1eae1a8cdb8544fa07ec8c861c498c629","0e4156a8cb33ac82f272d9abd90705c322e7ec28","PRE_POST_FIX_EXPRESSION_DIVIDING","16","1","65","[DnsOpCode DnsOpCode (int), DefaultDnsResponse toString (), DefaultDnsResponse clear (), DefaultDnsResponse setAuthoritativeAnswer (boolean), DefaultDnsResponse addRecord (DnsSection, int, DnsRecord), DnsRecordType hashCode (), DnsRecordType name (), AbstractDnsRecord equals (Object), AbstractDnsRecord toString (), AbstractDnsRecord name (), DnsRecordType compareTo (DnsRecordType), DefaultDnsRecordEncoder encodePtrRecord (DnsPtrRecord, ByteBuf), DefaultDnsResponse setZ (int), DefaultDnsResponse code (), AbstractDnsRecord AbstractDnsRecord (String, DnsRecordType, long), DnsOpCode compareTo (DnsOpCode), DefaultDnsResponse setRecursionDesired (boolean), DefaultDnsResponse setRecursionAvailable (boolean), DefaultDnsRecordEncoder DefaultDnsRecordEncoder (), DnsOpCode valueOf (int), DefaultDnsResponse addRecord (DnsSection, DnsRecord), DefaultDnsRecordEncoder encodeRecord (DnsRecord, ByteBuf), DnsRecordType valueOf (int), DefaultDnsResponse DefaultDnsResponse (int, DnsOpCode), DefaultDnsResponse retain (), DnsOpCode byteValue (), AbstractDnsRecord hashCode (), DefaultDnsResponse touch (), DefaultDnsResponse clear (DnsSection), DefaultDnsResponse isAuthoritativeAnswer (), DefaultDnsResponse retain (int), DefaultDnsRecordEncoder encodeOptPseudoRecord (DnsOptPseudoRecord, ByteBuf), DnsRecordType toString (), DnsOpCode DnsOpCode (int, String), DefaultDnsResponse setTruncated (boolean), AbstractDnsRecord AbstractDnsRecord (String, DnsRecordType, int, long), DefaultDnsResponse setRecord (DnsSection, DnsRecord), DefaultDnsResponse isTruncated (), DefaultDnsRecordEncoder encodeName (String, ByteBuf), DefaultDnsResponse setOpCode (DnsOpCode), DefaultDnsResponse setCode (DnsResponseCode), DnsRecordType DnsRecordType (int), DnsRecordType equals (Object), DnsOpCode equals (Object), AbstractDnsRecord IDNtoASCII (String), DefaultDnsRecordEncoder padWithZeros (byte, int), AbstractDnsRecord timeToLive (), AbstractDnsRecord type (), DefaultDnsResponse DefaultDnsResponse (int), DefaultDnsResponse touch (Object), DefaultDnsRecordEncoder encodeRawRecord (DnsRawRecord, ByteBuf), DefaultDnsResponse DefaultDnsResponse (int, DnsOpCode, DnsResponseCode), DnsOpCode toString (), DefaultDnsRecordEncoder encodeRecord0 (DnsRecord, ByteBuf), DefaultDnsResponse isRecursionAvailable (), DnsOpCode hashCode (), AbstractDnsRecord dnsClass (), DefaultDnsResponse setId (int), DefaultDnsRecordEncoder encodeQuestion (DnsQuestion, ByteBuf), DefaultDnsRecordEncoder encodeOptEcsRecord (DnsOptEcsRecord, ByteBuf), DefaultDnsRecordEncoder calculateEcsAddressLength (int, int), DnsRecordType DnsRecordType (int, String), DnsRecordType intValue (), DnsRecordType valueOf (String), AbstractDnsRecord appendTrailingDot (String)]","325"
"7","netty/codec-dns","0e4156a8cb33ac82f272d9abd90705c322e7ec28","0ed2e93ed7c978e3244113e05f950c9ecfe9e3cd","REVERSE_IF_ELSE","3","1","2","[DefaultDnsRecordEncoder padWithZeros (byte, int), DefaultDnsRecordEncoder encodeOptEcsRecord (DnsOptEcsRecord, ByteBuf)]","10"
"8","netty/codec-dns","0ed2e93ed7c978e3244113e05f950c9ecfe9e3cd","d727ce9cdc51d7d0e2b96bc2b0d3add41a5cac39","INFIX_EXPRESSION_DIVIDING","8","1","2","[DefaultDnsRecordEncoder encodeOptEcsRecord (DnsOptEcsRecord, ByteBuf), DefaultDnsRecordEncoder calculateEcsAddressLength (int, int)]","10"
"15","netty/codec-dns","d727ce9cdc51d7d0e2b96bc2b0d3add41a5cac39","d4de26bf9fb2dafefeb22e5e848b8ab6c88a6fdd","VAR_DECLARATION_MERGING","12","1","1","[DefaultDnsRecordEncoder encodeOptEcsRecord (DnsOptEcsRecord, ByteBuf)]","5"
"19","netty/codec-dns","d4de26bf9fb2dafefeb22e5e848b8ab6c88a6fdd","b961282ea89027f920f910721d1e27c005be0341","SWITCH_EQUAL_SIDES","14","1","1","[DefaultDnsRecordEncoder padWithZeros (byte, int)]","5"
"21","netty/codec-dns","b961282ea89027f920f910721d1e27c005be0341","dd75517ff6e04336add2ee3b3889d6e5dba30bd3","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[DefaultDnsRecordEncoder encodeOptEcsRecord (DnsOptEcsRecord, ByteBuf)]","5"
"22","netty/codec-dns","dd75517ff6e04336add2ee3b3889d6e5dba30bd3","7e21233ef8e05f7852820765fc05f58fb7841b1c","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[DefaultDnsRecordEncoder encodeOptEcsRecord (DnsOptEcsRecord, ByteBuf), DefaultDnsRecordEncoder calculateEcsAddressLength (int, int)]","10"
"24","netty/codec-dns","7e21233ef8e05f7852820765fc05f58fb7841b1c","599ae8466275c89b902c3880397c09bc75fd60ee","INFIX_EXPRESSION_DIVIDING","8","1","1","[DefaultDnsRecordEncoder encodeOptEcsRecord (DnsOptEcsRecord, ByteBuf)]","5"
"0","netty/codec-haproxy","599ae8466275c89b902c3880397c09bc75fd60ee","74e235216a179ee2456f82aa3f940f028d143243","VAR_DECLARATION_DIVIDING","13","1","68","[StructHeaderExtractor StructHeaderExtractor (int), HAProxyMessageDecoder failOverLimit (ChannelHandlerContext, int), HAProxyMessageDecoder match (byte[], ByteBuf, int), HAProxySSLTLV contentNumBytes (), HAProxyMessage HAProxyMessage (HAProxyProtocolVersion, HAProxyCommand, HAProxyProxiedProtocol, String, String, int, int), HAProxyMessage sourceAddress (), HAProxySSLTLV isPP2ClientSSL (), StructHeaderExtractor delimiterLength (ByteBuf, int), HAProxySSLTLV HAProxySSLTLV (int, byte, List<HAProxyTLV>), HAProxyMessage proxiedProtocol (), HAProxyMessageDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), HAProxyMessageDecoder findEndOfHeader (ByteBuf), HAProxyConstants HAProxyConstants (), HAProxyMessage decodeHeader (ByteBuf), HAProxyMessage protocolVersion (), HeaderExtractor extract (ChannelHandlerContext, ByteBuf), HAProxyMessage release (int), HAProxyMessageDecoder failOverLimit (ChannelHandlerContext, String), HAProxyMessageDecoder detectProtocol (ByteBuf), HAProxySSLTLV toString (), HAProxyMessageDecoder HAProxyMessageDecoder (), HAProxyMessageDecoder HAProxyMessageDecoder (boolean), HAProxyMessageDecoder decodeLine (ChannelHandlerContext, ByteBuf), HAProxyMessage touch (Object), HAProxySSLTLV encapsulatedTLVs (), LineHeaderExtractor LineHeaderExtractor (int), HAProxyMessage retain (int), HAProxyMessage destinationAddress (), HAProxyMessage checkPort (int, AddressFamily), HAProxyMessage retain (), HAProxyMessage portStringToInt (String), HAProxyMessageDecoder decodeStruct (ChannelHandlerContext, ByteBuf), HAProxyMessage toString (), HAProxySSLTLV isPP2ClientCertSess (), HeaderExtractor findEndOfHeader (ByteBuf), StructHeaderExtractor findEndOfHeader (ByteBuf), HAProxyMessage touch (), LineHeaderExtractor delimiterLength (ByteBuf, int), HAProxyMessage HAProxyMessage (HAProxyProtocolVersion, HAProxyCommand, HAProxyProxiedProtocol, String, String, String, String), HAProxyMessage readTlvs (ByteBuf), HAProxyMessageDecoder findVersion (ByteBuf), HAProxyMessage decodeHeader (String), HAProxyMessage tryRecord (), HAProxyMessageDecoder channelRead (ChannelHandlerContext, Object), HeaderExtractor HeaderExtractor (int), HAProxyMessage tlvNumBytes (), HAProxyMessage command (), HAProxyMessage sourcePort (), LineHeaderExtractor findEndOfHeader (ByteBuf), HAProxyMessage readNextTLV (ByteBuf, int), HAProxyMessage ipBytesToString (ByteBuf, int), HAProxyMessage deallocate (), HAProxySSLTLV isPP2ClientCertConn (), HeaderExtractor delimiterLength (ByteBuf, int), HAProxySSLTLV client (), HAProxyMessage checkAddress (String, AddressFamily), HAProxySSLTLV HAProxySSLTLV (int, byte, List<HAProxyTLV>, ByteBuf), HAProxySSLTLV verify (), HAProxyMessage destinationPort (), HAProxyMessage tlvs (), HAProxyMessageDecoder HAProxyMessageDecoder (int), HAProxyMessageDecoder findEndOfLine (ByteBuf), HAProxyMessage release (), HAProxyMessage HAProxyMessage (HAProxyProtocolVersion, HAProxyCommand, HAProxyProxiedProtocol, String, String, int, int, List<? extends HAProxyTLV>), HAProxyMessage unknownMsg (HAProxyProtocolVersion, HAProxyCommand), HAProxyMessageDecoder fail (ChannelHandlerContext, String, Exception), HAProxyMessageDecoder isSingleDecode (), HAProxyMessageDecoder HAProxyMessageDecoder (int, boolean)]","272"
"16","netty/codec-haproxy","74e235216a179ee2456f82aa3f940f028d143243","58601135dc45a4b3271b8ea5a679d8003e7cd938","LOCAL_VAR_RENAMING","0","1","0","[]","0"
"0","netty/codec-http","58601135dc45a4b3271b8ea5a679d8003e7cd938","075978d99d93b1eba04eabaee9f516875f813630","SWITCH_EQUAL_SIDES","14","1","78","[AbstractDiskHttpData tempFile (), HttpUtil getCharset (CharSequence), AbstractDiskHttpData addContent (ByteBuf, boolean), AbstractDiskHttpData getString (), AbstractDiskHttpData setContent (InputStream), HttpUtil getCharset (HttpMessage), SpdySessionStatus toString (), BinaryWebSocketFrame retain (int), HttpUtil formatHostnameForHttp (InetSocketAddress), HttpUtil setKeepAlive (HttpHeaders, HttpVersion, boolean), AbstractDiskHttpData touch (Object), AbstractDiskHttpData renameTo (File), AbstractDiskHttpData deleteOnExit (), HttpUtil getCharset (CharSequence, Charset), BinaryWebSocketFrame retainedDuplicate (), HttpUtil getCharsetAsSequence (CharSequence), SpdySessionStatus statusPhrase (), AbstractDiskHttpData getPrefix (), AbstractDiskHttpData setContent (File), SpdySessionStatus code (), BinaryWebSocketFrame touch (Object), SpdyHeaderBlockJZlibEncoder encode (ByteBufAllocator, SpdyHeadersFrame), HttpUtil setKeepAlive (HttpMessage, boolean), HttpUtil isOriginForm (URI), HttpUtil isTransferEncodingChunked (HttpMessage), HttpUtil isKeepAlive (HttpMessage), HttpUtil setTransferEncodingChunked (HttpMessage, boolean), HttpUtil setContentLength (HttpMessage, long), HttpUtil HttpUtil (), HttpUtil set100ContinueExpected (HttpMessage, boolean), HttpUtil normalizeAndGetContentLength (List<? extends CharSequence>, boolean, boolean), HttpUtil getContentLength (HttpMessage), AbstractDiskHttpData getBaseDirectory (), BinaryWebSocketFrame BinaryWebSocketFrame (boolean, int, ByteBuf), BinaryWebSocketFrame touch (), AbstractDiskHttpData getFile (), AbstractDiskHttpData getChunk (int), HttpUtil getMimeType (CharSequence), AbstractDiskHttpData getDiskFilename (), HttpUtil isUnsupportedExpectation (HttpMessage), SpdySessionStatus hashCode (), HttpUtil isOriginForm (String), AbstractDiskHttpData getString (Charset), AbstractDiskHttpData getByteBuf (), BinaryWebSocketFrame duplicate (), HttpUtil isExpectHeaderValid (HttpMessage), BinaryWebSocketFrame BinaryWebSocketFrame (), HttpUtil isAsteriskForm (String), SpdyHeaderBlockJZlibEncoder end (), AbstractDiskHttpData get (), HttpUtil is100ContinueExpected (HttpMessage), AbstractDiskHttpData setContent (ByteBuf), AbstractDiskHttpData delete (), AbstractDiskHttpData AbstractDiskHttpData (String, Charset, long), AbstractDiskHttpData touch (), SpdyHeaderBlockJZlibEncoder encode (ByteBufAllocator), HttpUtil getContentLength (HttpMessage, long), AbstractDiskHttpData getPostfix (), HttpUtil getContentLength (HttpMessage, int), HttpUtil getWebSocketContentLength (HttpMessage), AbstractDiskHttpData isInMemory (), SpdySessionStatus SpdySessionStatus (int, String), SpdyHeaderBlockJZlibEncoder setInput (ByteBuf), HttpUtil getCharset (HttpMessage, Charset), HttpUtil isAsteriskForm (URI), BinaryWebSocketFrame BinaryWebSocketFrame (ByteBuf), HttpUtil getCharsetAsString (HttpMessage), AbstractDiskHttpData readFrom (File), BinaryWebSocketFrame retain (), BinaryWebSocketFrame copy (), SpdySessionStatus compareTo (SpdySessionStatus), SpdySessionStatus valueOf (int), HttpUtil getCharsetAsSequence (HttpMessage), HttpUtil isContentLengthSet (HttpMessage), SpdySessionStatus equals (Object), SpdyHeaderBlockJZlibEncoder SpdyHeaderBlockJZlibEncoder (SpdyVersion, int, int, int), BinaryWebSocketFrame replace (ByteBuf), HttpUtil getMimeType (HttpMessage)]","390"
"21","netty/codec-http","075978d99d93b1eba04eabaee9f516875f813630","388b5001f3abff54f6621af8002be5f160e80370","LOCAL_VAR_RENAMING","0","1","2","[BinaryWebSocketFrame retain (int), BinaryWebSocketFrame BinaryWebSocketFrame (boolean, int, ByteBuf)]","10"
"0","netty/codec-http2","388b5001f3abff54f6621af8002be5f160e80370","bb02344cdd5021566ec2e35f49e0d663729bf0b5","WHILE_TO_FOR","2","1","201","[DefaultHttp2DataFrame release (), State updateStreamableBytes (int, boolean), DefaultHttp2DataFrame duplicate (), DefaultHttp2DataFrame DefaultHttp2DataFrame (ByteBuf, boolean, int), CompressorHttp2ConnectionEncoder cleanup (Http2Stream, EmbeddedChannel), Http2MultiplexCodec handlerRemoved0 (ChannelHandlerContext), HpackDecoder decodeULE128 (ByteBuf, long), CompressorHttp2ConnectionEncoder CompressorHttp2ConnectionEncoder (Http2ConnectionEncoder), State takeChild (Iterator<IntObjectMap.PrimitiveEntry<State>>, State, boolean, List<ParentChangedEvent>), InboundHttp2ToHttpAdapter onRstStreamRead (ChannelHandlerContext, int, long), Http2MultiplexCodecStreamChannel flush0 (ChannelHandlerContext), Http2Decompressor decompressor (), DefaultHttp2PriorityFrame hashCode (), State close (), Http2HeadersSink Http2HeadersSink (int, Http2Headers, long, boolean), DelegatingDecompressorFrameListener DelegatingDecompressorFrameListener (Http2Connection, Http2FrameListener, boolean), InboundHttp2ToHttpAdapter newMessage (Http2Stream, Http2Headers, boolean, ByteBufAllocator), InboundHttp2ToHttpAdapter onSettingsRead (ChannelHandlerContext, Http2Settings), State priorityQueueIndex (DefaultPriorityQueue<?>), State removePseudoTimeQueue (State), DefaultHttp2PriorityFrame DefaultHttp2PriorityFrame (int, short, boolean), Http2MultiplexCodec channelRead (ChannelHandlerContext, Object), HpackDecoder decodeULE128 (ByteBuf, int), WeightedFairQueueByteDistributor distribute (int, Writer, State), HpackDecoder HpackDecoder (long), CompressorHttp2ConnectionEncoder writeData (ChannelHandlerContext, int, ByteBuf, int, boolean, ChannelPromise), InboundHttp2ToHttpAdapter fireChannelRead (ChannelHandlerContext, FullHttpMessage, boolean, Http2Stream), CompressorHttp2ConnectionEncoder nextReadableBuf (EmbeddedChannel), InboundHttp2ToHttpAdapter mustSendImmediately (FullHttpMessage), Http2MultiplexCodec visit (Http2FrameStream), DefaultHttp2DataFrame isEndStream (), State updatePseudoTime (State, int, long), DefaultHttp2DataFrame equals (Object), InboundHttp2ToHttpAdapter onDataRead (ChannelHandlerContext, int, ByteBuf, int, boolean), Http2MultiplexCodec onHttp2StreamStateChanged (ChannelHandlerContext, DefaultHttp2FrameStream), InboundHttp2ToHttpAdapter copyIfNeeded (ByteBufAllocator, FullHttpMessage), DelegatingDecompressorFrameListener DelegatingDecompressorFrameListener (Http2Connection, Http2FrameListener), WeightedFairQueueByteDistributor isChild (int, int, short), DefaultHttp2DataFrame refCnt (), StateOnlyComparator compare (State, State), State initChildrenIfEmpty (), State State (int), DefaultHttp2PriorityFrame stream (Http2FrameStream), StatePseudoTimeComparator compare (State, State), DelegatingDecompressorFrameListener initDecompressor (ChannelHandlerContext, int, Http2Headers, boolean), Http2MultiplexCodecStreamChannel addChannelToReadCompletePendingQueue (), ConsumedBytesConverter unconsumedBytes (Http2Stream), WeightedFairQueueByteDistributor onStreamActive (Http2Stream), DefaultHttp2DataFrame retainedDuplicate (), CompressorHttp2ConnectionEncoder bindCompressorToStream (EmbeddedChannel, int), State getTotalWeight (), DelegatingDecompressorFrameListener decompressor (Http2Stream), WeightedFairQueueByteDistributor state (Http2Stream), State State (Http2Stream, int), DefaultHttp2PriorityFrame streamDependency (), HpackHuffmanDecoder processNibble (int), State pollPseudoTimeQueue (), Http2MultiplexCodecStreamChannel isParentReadInProgress (), Http2MultiplexCodecStreamChannel parentContext (), HpackHuffmanDecoder process (byte), InboundHttp2ToHttpAdapter onHeadersRead (ChannelHandlerContext, int, Http2Headers, int, short, boolean, int, boolean), Http2MultiplexCodec channelWritabilityChanged (ChannelHandlerContext), HpackDecoder getIndexedHeader (int), DefaultHttp2DataFrame DefaultHttp2DataFrame (ByteBuf), DefaultHttp2DataFrame initialFlowControlledBytes (), State setDistributing (), State offerPseudoTimeQueue (State), State setParent (State), WeightedFairQueueByteDistributor notifyParentChanged (List<ParentChangedEvent>), State offerAndInitializePseudoTime (State), ConsumedBytesConverter initialWindowSize (Http2Stream), DefaultHttp2DataFrame toString (), InboundHttp2ToHttpAdapter onHeadersRead (ChannelHandlerContext, int, Http2Headers, int, boolean), State removeAllChildrenExcept (State), CompressorHttp2ConnectionEncoder getTargetContentEncoding (CharSequence), WeightedFairQueueByteDistributor numChildren (int), HpackDecoder readName (int), WeightedFairQueueByteDistributor distributeToChildren (int, Writer, State), Http2MultiplexCodec processPendingReadCompleteQueue (), InboundHttp2ToHttpAdapter onRstStreamRead (Http2Stream, FullHttpMessage), DefaultHttp2DataFrame touch (Object), Http2MultiplexCodec Http2MultiplexCodec (Http2ConnectionEncoder, Http2ConnectionDecoder, Http2Settings, ChannelHandler, ChannelHandler, boolean, boolean), CompressorHttp2ConnectionEncoder newCompressor (ChannelHandlerContext, Http2Headers, boolean), Http2MultiplexCodec flush0 (ChannelHandlerContext), WeightedFairQueueByteDistributor distribute (int, Writer), Http2Decompressor Http2Decompressor (EmbeddedChannel), DefaultHttp2DataFrame stream (Http2FrameStream), DelegatingDecompressorFrameListener nextReadableBuf (EmbeddedChannel), DefaultHttp2PriorityFrame toString (), ConsumedBytesConverter initialWindowSize (), HpackDecoder notEnoughDataException (ByteBuf), InboundHttp2ToHttpAdapter InboundHttp2ToHttpAdapter (Http2Connection, int, boolean, boolean), DefaultHttp2DataFrame DefaultHttp2DataFrame (ByteBuf, boolean), State initChildren (), WeightedFairQueueByteDistributor updateDependencyTree (int, int, short, boolean), WeightedFairQueueByteDistributor allocationQuantum (int), ConsumedBytesConverter ConsumedBytesConverter (Http2LocalFlowController), DefaultHttp2DataFrame copy (), ConsumedBytesConverter incrementWindowSize (Http2Stream, int), HpackDecoder getMaxHeaderListSize (), DefaultHttp2DataFrame retain (int), DelegatingDecompressorFrameListener cleanup (Http2Decompressor), InboundHttp2ToHttpAdapter putMessage (Http2Stream, FullHttpMessage), Http2MultiplexCodec channelReadComplete (ChannelHandlerContext), Http2MultiplexCodec onHttp2Frame (ChannelHandlerContext, Http2Frame), HpackDecoder decode (ByteBuf, Http2HeadersSink), DelegatingDecompressorFrameListener newContentDecompressor (ChannelHandlerContext, CharSequence), InboundHttp2ToHttpAdapter removeMessage (Http2Stream, boolean), ConsumedBytesConverter initialWindowSize (int), CompressorHttp2ConnectionEncoder defaultCompressionOptions (), DefaultHttp2PriorityFrame exclusive (), ImmediateSendDetector copyIfNeeded (ByteBufAllocator, FullHttpMessage), State activeCountChangeForTree (int), HpackDecoder getMaxHeaderTableSize (), DefaultHttp2DataFrame release (int), State removeChild (State), DefaultHttp2PriorityFrame name (), State priorityQueueIndex (DefaultPriorityQueue<?>, int), State peekPseudoTimeQueue (), ParentChangedEvent ParentChangedEvent (State, State), HpackDecoder HpackDecoder (long, int), DefaultHttp2DataFrame padding (), WeightedFairQueueByteDistributor onStreamAdded (Http2Stream), WeightedFairQueueByteDistributor onStreamClosed (Http2Stream), Http2MultiplexCodecStreamChannel write0 (ChannelHandlerContext, Object), State isActive (), Http2MultiplexCodec onHttpClientUpgrade (), CompressorHttp2ConnectionEncoder writeHeaders (ChannelHandlerContext, int, Http2Headers, int, boolean, ChannelPromise), DefaultHttp2DataFrame DefaultHttp2DataFrame (boolean), Http2MultiplexCodec onUserEventTriggered (ChannelHandlerContext, Object), CompressorHttp2ConnectionEncoder onStreamRemoved (Http2Stream), InboundHttp2ToHttpAdapter onStreamRemoved (Http2Stream), HpackDecoder getHeaderField (int), Http2HeadersSink appendToHeaderList (AsciiString, AsciiString), DefaultHttp2DataFrame name (), DefaultHttp2DataFrame replace (ByteBuf), Http2MultiplexCodec handlerAdded0 (ChannelHandlerContext), DefaultHttp2PriorityFrame weight (), InboundHttp2ToHttpAdapter getMessage (Http2Stream), DefaultHttp2DataFrame retain (), DelegatingDecompressorFrameListener onHeadersRead (ChannelHandlerContext, int, Http2Headers, int, boolean), DelegatingDecompressorFrameListener onHeadersRead (ChannelHandlerContext, int, Http2Headers, int, short, boolean, int, boolean), HpackDecoder decode (int, ByteBuf, Http2Headers, boolean), State setStreamReservedOrActivated (), State unsetActive (), HpackDecoder decodeDynamicTableSizeUpdates (ByteBuf), ConsumedBytesConverter windowSize (Http2Stream), State toString (), State takeChild (State, boolean, List<ParentChangedEvent>), State State (int, Http2Stream, int), HpackDecoder readStringLiteral (ByteBuf, int, boolean), Http2MultiplexCodec onHttp2FrameStreamException (ChannelHandlerContext, Http2FrameStreamException), DefaultHttp2PriorityFrame equals (Object), HpackDecoder validateHeader (int, AsciiString, CharSequence, HeaderType), Http2MultiplexCodecStreamChannel Http2MultiplexCodecStreamChannel (DefaultHttp2FrameStream, ChannelHandler), Http2Decompressor incrementDecompressedBytes (int), WeightedFairQueueByteDistributor WeightedFairQueueByteDistributor (Http2Connection), InboundHttp2ToHttpAdapter processHeadersEnd (ChannelHandlerContext, Http2Stream, FullHttpMessage, boolean), State unsetDistributing (), DefaultHttp2DataFrame touch (), Http2HeadersSink finish (), Http2Decompressor incrementCompressedBytes (int), HpackDecoder insertHeader (Http2HeadersSink, AsciiString, AsciiString, IndexType), CompressorHttp2ConnectionEncoder newContentCompressor (ChannelHandlerContext, CharSequence), CompressorHttp2ConnectionEncoder CompressorHttp2ConnectionEncoder (Http2ConnectionEncoder, int, int, int), State write (int, Writer), HpackHuffmanDecoder HpackHuffmanDecoder (), Http2MultiplexCodec newOutboundStream (), ConsumedBytesConverter channelHandlerContext (ChannelHandlerContext), State isDistributing (), DelegatingDecompressorFrameListener onDataRead (ChannelHandlerContext, int, ByteBuf, int, boolean), CompressorHttp2ConnectionEncoder newCompressionChannel (ChannelHandlerContext, ZlibWrapper), ConsumedBytesConverter receiveFlowControlledFrame (Http2Stream, ByteBuf, int, boolean), HpackDecoder length (), WeightedFairQueueByteDistributor WeightedFairQueueByteDistributor (Http2Connection, int), ConsumedBytesConverter consumeBytes (Http2Stream, int), InboundHttp2ToHttpAdapter processHeadersBegin (ChannelHandlerContext, Http2Stream, Http2Headers, boolean, boolean, boolean), HpackDecoder setMaxHeaderTableSize (long), State setActive (), State toString (StringBuilder), State wasStreamReservedOrActivated (), DelegatingDecompressorFrameListener getTargetContentEncoding (CharSequence), WeightedFairQueueByteDistributor onStreamRemoved (Http2Stream), State isDescendantOf (State), HpackHuffmanDecoder decode (ByteBuf, int), ConsumedBytesConverter frameWriter (Http2FrameWriter), CompressorHttp2ConnectionEncoder writeHeaders (ChannelHandlerContext, int, Http2Headers, int, short, boolean, int, boolean, ChannelPromise), HpackDecoder setMaxHeaderListSize (long), CompressorHttp2ConnectionEncoder CompressorHttp2ConnectionEncoder (Http2ConnectionEncoder, CompressionOptions), Http2Decompressor consumeBytes (int, int), HpackDecoder setDynamicTableSize (long), InboundHttp2ToHttpAdapter onPushPromiseRead (ChannelHandlerContext, int, int, Http2Headers, int), HpackDecoder size (), Http2MultiplexCodec onHttp2GoAwayFrame (ChannelHandlerContext, Http2GoAwayFrame), WeightedFairQueueByteDistributor updateStreamableBytes (StreamState), WeightedFairQueueByteDistributor state (int), State State (Http2Stream), DelegatingDecompressorFrameListener onStreamRemoved (Http2Stream), DefaultHttp2DataFrame hashCode (), ImmediateSendDetector mustSendImmediately (FullHttpMessage), DefaultHttp2DataFrame content ()]","1809"
"1","netty/codec-http2","bb02344cdd5021566ec2e35f49e0d663729bf0b5","babb481c97b60035501ba3d4b046e1beae68ae64","REVERSE_IF_ELSE","3","1","1","[DefaultHttp2DataFrame equals (Object)]","9"
"3","netty/codec-http2","babb481c97b60035501ba3d4b046e1beae68ae64","22fa2c88606540b7080d979a5bef0a559b990e75","SWITCH_EQUAL_SIDES","14","1","1","[DefaultHttp2DataFrame equals (Object)]","9"
"4","netty/codec-http2","22fa2c88606540b7080d979a5bef0a559b990e75","0d422ed745939ccf05cfdcb9a6987c63cc3bbbc9","REVERSE_IF_ELSE","3","1","1","[DefaultHttp2DataFrame equals (Object)]","9"
"6","netty/codec-http2","0d422ed745939ccf05cfdcb9a6987c63cc3bbbc9","704d219ad1812c0f7da3bea1aed103b5d4b53dad","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DefaultHttp2DataFrame DefaultHttp2DataFrame (ByteBuf, boolean, int)]","9"
"8","netty/codec-http2","704d219ad1812c0f7da3bea1aed103b5d4b53dad","4b6eebee270b7cc5e294a5f433ba6847622e934a","REVERSE_IF_ELSE","3","1","2","[DefaultHttp2DataFrame DefaultHttp2DataFrame (ByteBuf, boolean, int), DefaultHttp2DataFrame equals (Object)]","18"
"9","netty/codec-http2","4b6eebee270b7cc5e294a5f433ba6847622e934a","482bf3f11365a7bc231dbc413dcc735f1744217c","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DefaultHttp2DataFrame DefaultHttp2DataFrame (ByteBuf, boolean, int)]","9"
"12","netty/codec-http2","482bf3f11365a7bc231dbc413dcc735f1744217c","3280abc64a2173817515533b54d8ed66f3d324d2","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DefaultHttp2DataFrame DefaultHttp2DataFrame (ByteBuf, boolean, int)]","9"
"13","netty/codec-http2","3280abc64a2173817515533b54d8ed66f3d324d2","f5e3d524939245f1d1596be7270033a063176535","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DefaultHttp2DataFrame DefaultHttp2DataFrame (ByteBuf, boolean, int)]","9"
"14","netty/codec-http2","f5e3d524939245f1d1596be7270033a063176535","61c4ba87c56c72d9c0b6b1aeb004eacf28c3ef3d","SWITCH_EQUAL_SIDES","14","1","1","[DefaultHttp2DataFrame equals (Object)]","9"
"22","netty/codec-http2","61c4ba87c56c72d9c0b6b1aeb004eacf28c3ef3d","2869be75a5d4002bd142d563f0be2c7c2c3a4139","LOCAL_VAR_RENAMING","0","1","2","[DefaultHttp2DataFrame touch (Object), DefaultHttp2DataFrame retain (int)]","18"
"23","netty/codec-http2","2869be75a5d4002bd142d563f0be2c7c2c3a4139","ef699cf25cabfabb297dd4725998100d97e572f7","LOCAL_VAR_RENAMING","0","1","1","[DefaultHttp2DataFrame DefaultHttp2DataFrame (ByteBuf, boolean, int)]","9"
"28","netty/codec-http2","ef699cf25cabfabb297dd4725998100d97e572f7","b4c6f5b48ffc2171b08c14df09ed01044ffe080e","INFIX_EXPRESSION_DIVIDING","8","1","2","[DefaultHttp2DataFrame equals (Object), DefaultHttp2DataFrame hashCode ()]","18"
"0","netty/codec-memcache","b4c6f5b48ffc2171b08c14df09ed01044ffe080e","5d9a4d32508faa6a84db9c8ceb002562f2c4280b","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","64","[DefaultBinaryMemcacheRequest DefaultBinaryMemcacheRequest (ByteBuf), AbstractBinaryMemcacheMessage setMagic (byte), AbstractBinaryMemcacheMessage setOpaque (int), DefaultBinaryMemcacheRequest retain (), DefaultBinaryMemcacheRequest DefaultBinaryMemcacheRequest (ByteBuf, ByteBuf), DefaultBinaryMemcacheRequest copyMeta (DefaultBinaryMemcacheRequest), AbstractMemcacheObjectEncoder encodeAndRetain (Object), AbstractBinaryMemcacheMessage retain (), AbstractMemcacheObjectEncoder encodeMessage (ChannelHandlerContext, M), AbstractBinaryMemcacheMessage setKey (ByteBuf), DefaultFullBinaryMemcacheRequest touch (), AbstractBinaryMemcacheMessage key (), AbstractBinaryMemcacheMessage setDataType (byte), AbstractBinaryMemcacheMessage extras (), DefaultFullBinaryMemcacheRequest deallocate (), DefaultBinaryMemcacheRequest DefaultBinaryMemcacheRequest (), BinaryMemcacheResponseDecoder BinaryMemcacheResponseDecoder (), AbstractBinaryMemcacheMessage setExtras (ByteBuf), AbstractBinaryMemcacheMessage dataType (), AbstractBinaryMemcacheMessage opcode (), DefaultFullBinaryMemcacheRequest newInstance (ByteBuf, ByteBuf, ByteBuf), AbstractBinaryMemcacheEncoder encodeKey (ByteBuf, ByteBuf), AbstractBinaryMemcacheEncoder encodeMessage (ChannelHandlerContext, M), AbstractBinaryMemcacheEncoder encodeHeader (ByteBuf, M), AbstractBinaryMemcacheMessage touch (), AbstractMemcacheObjectEncoder encode (ChannelHandlerContext, Object, List<Object>), BinaryMemcacheResponseDecoder decodeHeader (ByteBuf), DefaultBinaryMemcacheRequest retain (int), BinaryMemcacheResponseDecoder BinaryMemcacheResponseDecoder (int), AbstractBinaryMemcacheMessage magic (), AbstractBinaryMemcacheMessage keyLength (), BinaryMemcacheResponseDecoder buildInvalidMessage (), AbstractBinaryMemcacheMessage extrasLength (), DefaultFullBinaryMemcacheRequest content (), DefaultFullBinaryMemcacheRequest retain (), AbstractBinaryMemcacheMessage AbstractBinaryMemcacheMessage (ByteBuf, ByteBuf), AbstractBinaryMemcacheMessage touch (Object), DefaultBinaryMemcacheRequest touch (), AbstractBinaryMemcacheMessage setOpcode (byte), AbstractBinaryMemcacheMessage copyMeta (AbstractBinaryMemcacheMessage), DefaultBinaryMemcacheRequest reserved (), DefaultFullBinaryMemcacheRequest DefaultFullBinaryMemcacheRequest (ByteBuf, ByteBuf, ByteBuf), AbstractBinaryMemcacheMessage setKeyLength (short), AbstractBinaryMemcacheMessage setExtrasLength (byte), AbstractBinaryMemcacheMessage deallocate (), AbstractBinaryMemcacheMessage setTotalBodyLength (int), AbstractBinaryMemcacheMessage totalBodyLength (), BinaryMemcacheRequestEncoder encodeHeader (ByteBuf, BinaryMemcacheRequest), DefaultBinaryMemcacheRequest setReserved (short), DefaultBinaryMemcacheRequest touch (Object), AbstractBinaryMemcacheMessage retain (int), DefaultFullBinaryMemcacheRequest copy (), DefaultFullBinaryMemcacheRequest replace (ByteBuf), AbstractBinaryMemcacheMessage cas (), DefaultFullBinaryMemcacheRequest retain (int), AbstractMemcacheObjectEncoder acceptOutboundMessage (Object), AbstractBinaryMemcacheMessage opaque (), AbstractBinaryMemcacheMessage setCas (long), AbstractBinaryMemcacheEncoder encodeExtras (ByteBuf, ByteBuf), AbstractMemcacheObjectEncoder contentLength (Object), DefaultFullBinaryMemcacheRequest duplicate (), DefaultFullBinaryMemcacheRequest touch (Object), DefaultFullBinaryMemcacheRequest retainedDuplicate (), DefaultFullBinaryMemcacheRequest DefaultFullBinaryMemcacheRequest (ByteBuf, ByteBuf)]","448"
"9","netty/codec-memcache","5d9a4d32508faa6a84db9c8ceb002562f2c4280b","44d3f1af1c4826c585940891633c06658e9c4d83","LOCAL_VAR_RENAMING","0","1","2","[DefaultBinaryMemcacheRequest DefaultBinaryMemcacheRequest (ByteBuf, ByteBuf), DefaultBinaryMemcacheRequest copyMeta (DefaultBinaryMemcacheRequest)]","14"
"15","netty/codec-memcache","44d3f1af1c4826c585940891633c06658e9c4d83","fa4bd5b4c1b9974b6e1be1fab2d1231b68a68737","LOCAL_VAR_RENAMING","0","1","3","[DefaultBinaryMemcacheRequest setReserved (short), DefaultBinaryMemcacheRequest reserved (), DefaultBinaryMemcacheRequest copyMeta (DefaultBinaryMemcacheRequest)]","21"
"26","netty/codec-memcache","fa4bd5b4c1b9974b6e1be1fab2d1231b68a68737","586998f9a4a38bb93e54c2802aad58da04036859","LOCAL_VAR_RENAMING","0","1","2","[DefaultBinaryMemcacheRequest setReserved (short), DefaultBinaryMemcacheRequest DefaultBinaryMemcacheRequest (ByteBuf, ByteBuf)]","14"
"0","netty/codec-mqtt","586998f9a4a38bb93e54c2802aad58da04036859","19676b2a69f1c419e2bf896148e9c7f6d8a97dc7","INFIX_EXPRESSION_DIVIDING","8","1","88","[MqttDecoder decodeSubscribePayload (ByteBuf, int), MqttConnectPayload toString (), MqttConnectMessage payload (), MqttPublishMessage retainedDuplicate (), MqttCodecUtil getMqttVersion (ChannelHandlerContext), MqttPublishMessage touch (Object), MqttDecoder MqttDecoder (int, int), MqttConnectPayload MqttConnectPayload (String, String, byte[], String, byte[]), MqttDecoder decodeMessageIdAndPropertiesVariableHeader (ChannelHandlerContext, ByteBuf), MqttSubscriptionOption retainHandling (), MqttSubscriptionOption toString (), MqttUnsubAckPayload MqttUnsubAckPayload (short), MqttPublishMessage replace (ByteBuf), MqttDecoder MqttDecoder (), MqttDecoder decodePubReplyMessage (ByteBuf), MqttDecoder decodeConnAckVariableHeader (ChannelHandlerContext, ByteBuf), MqttConnectPayload willMessage (), MqttConnectPayload willProperties (), MqttConnectPayload passwordInBytes (), MqttCodecUtil MqttCodecUtil (), MqttPublishMessage MqttPublishMessage (MqttFixedHeader, MqttPublishVariableHeader, ByteBuf), MqttDecoder decodeMessageId (ByteBuf), Result decodeProperties (ByteBuf), MqttDecoder decodeByteArray (ByteBuf), MqttPublishMessage release (), MqttPublishMessage retain (int), MqttDecoder decodeSubackPayload (ByteBuf, int), MqttSubscriptionOption qos (), MqttPublishMessage retain (), MqttConnectPayload clientIdentifier (), MqttUnsubAckPayload typedReasonCodes (), MqttSubscriptionOption RetainedHandlingPolicy (int), MqttDecoder decodeVariableHeader (ChannelHandlerContext, ByteBuf, MqttFixedHeader), Result Result (T, int), MqttPublishMessage variableHeader (), MqttConnectPayload willTopic (), MqttDecoder decodeFixedHeader (ChannelHandlerContext, ByteBuf), MqttDecoder MqttDecoder (int), MqttDecoder decodePublishVariableHeader (ChannelHandlerContext, ByteBuf, MqttFixedHeader), MqttDecoder packInts (int, int), MqttCodecUtil isValidClientId (MqttVersion, int, String), MqttConnectPayload willMessageInBytes (), MqttDecoder decodePayload (ChannelHandlerContext, ByteBuf, MqttMessageType, int, int, Object), MqttPublishMessage content (), MqttPublishMessage payload (), MqttDecoder decodePublishPayload (ByteBuf, int), MqttDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), MqttCodecUtil isValidPublishTopicName (String), MqttDecoder decodeConnectionVariableHeader (ChannelHandlerContext, ByteBuf), MqttDecoder unpackB (long), MqttDecoder decodeMsbLsb (ByteBuf), MqttUnsubAckPayload typedReasonCodesToOrdinal (), MqttUnsubAckPayload withEmptyDefaults (MqttUnsubAckPayload), MqttDecoder unpackA (long), MqttConnectMessage variableHeader (), MqttSubscriptionOption hashCode (), MqttSubscriptionOption valueOf (int), MqttConnectPayload userName (), MqttDecoder decodeString (ByteBuf), MqttSubscriptionOption value (), MqttDecoder decodeUnsubAckPayload (ChannelHandlerContext, ByteBuf, int), MqttPublishMessage refCnt (), MqttConnectMessage MqttConnectMessage (MqttFixedHeader, MqttConnectVariableHeader, MqttConnectPayload), MqttCodecUtil setMqttVersion (ChannelHandlerContext, MqttVersion), MqttSubscriptionOption isNoLocal (), MqttDecoder decodeVariableByteInteger (ByteBuf), MqttPublishMessage release (int), MqttSubscriptionOption equals (Object), MqttSubscriptionOption onlyFromQos (MqttQoS), MqttDecoder decodeConnectionPayload (ByteBuf, int, MqttConnectVariableHeader), MqttDecoder decodeUnsubscribePayload (ByteBuf, int), MqttUnsubAckPayload unsubscribeReasonCodes (), MqttSubscriptionOption MqttSubscriptionOption (MqttQoS, boolean, boolean, RetainedHandlingPolicy), MqttCodecUtil isValidMessageId (int), MqttCodecUtil validateFixedHeader (ChannelHandlerContext, MqttFixedHeader), MqttPublishMessage copy (), MqttConnectPayload password (), MqttPublishMessage duplicate (), MqttConnectPayload MqttConnectPayload (String, String, String, String, String), MqttDecoder decodeReasonCodeAndPropertiesVariableHeader (ByteBuf), MqttUnsubAckPayload MqttUnsubAckPayload (Iterable<Short>), MqttPublishMessage touch (), MqttConnectPayload MqttConnectPayload (String, MqttProperties, String, byte[], String, byte[]), MqttUnsubAckPayload toString (), MqttSubscriptionOption isRetainAsPublished (), MqttCodecUtil resetUnusedFields (MqttFixedHeader), MqttDecoder decodeString (ByteBuf, int, int), MqttDecoder invalidMessage (Throwable)]","616"
"2","netty/codec-mqtt","19676b2a69f1c419e2bf896148e9c7f6d8a97dc7","764cdbd819faf5b342efcbf7fd2a6febe61a677c","LOCAL_VAR_RENAMING","0","1","2","[MqttUnsubAckPayload typedReasonCodesToOrdinal (), MqttUnsubAckPayload withEmptyDefaults (MqttUnsubAckPayload)]","14"
"6","netty/codec-mqtt","764cdbd819faf5b342efcbf7fd2a6febe61a677c","dc77a0787e9fc5efcebb7a297df7dc284381b9c2","SWITCH_EQUAL_SIDES","14","1","1","[MqttUnsubAckPayload withEmptyDefaults (MqttUnsubAckPayload)]","7"
"8","netty/codec-mqtt","dc77a0787e9fc5efcebb7a297df7dc284381b9c2","fa1dd6d7a8d022179f9ccb3b899fe7a99e4d2146","LOCAL_VAR_RENAMING","0","1","1","[MqttUnsubAckPayload MqttUnsubAckPayload (Iterable<Short>)]","7"
"9","netty/codec-mqtt","fa1dd6d7a8d022179f9ccb3b899fe7a99e4d2146","b03a36e3e346f7000773e9ede5679e137520d6ac","REVERSE_IF_ELSE","3","1","1","[MqttUnsubAckPayload withEmptyDefaults (MqttUnsubAckPayload)]","7"
"14","netty/codec-mqtt","b03a36e3e346f7000773e9ede5679e137520d6ac","765f9ecd8e3f0225fca9e7621894208618f48b52","REVERSE_IF_ELSE","3","1","1","[MqttUnsubAckPayload withEmptyDefaults (MqttUnsubAckPayload)]","7"
"24","netty/codec-mqtt","765f9ecd8e3f0225fca9e7621894208618f48b52","184279467a06f606c0b4d5d41ea8e34768695390","SWITCH_EQUAL_SIDES","14","1","1","[MqttUnsubAckPayload withEmptyDefaults (MqttUnsubAckPayload)]","7"
"0","netty/codec-redis","184279467a06f606c0b4d5d41ea8e34768695390","51221181c5e4fea539b4f6a4c4c0faea9792d45d","PP_TO_ADD_ASSIGNMENT","6","1","33","[RedisMessagePool getError (ByteBuf), RedisDecoder readEndOfLine (ByteBuf), RedisMessagePool getByteBufOfInteger (long), RedisCodecException RedisCodecException (Throwable), RedisDecoder newInlineRedisMessage (RedisMessageType, ByteBuf), ArrayHeaderRedisMessage isNull (), RedisDecoder RedisDecoder (int, RedisMessagePool, boolean), ToPositiveLongProcessor reset (), RedisMessagePool getSimpleString (ByteBuf), RedisMessagePool getInteger (long), RedisMessagePool getError (String), RedisDecoder decodeBulkStringContent (ByteBuf, List<Object>), RedisDecoder RedisDecoder (boolean), RedisDecoder decodeBulkStringEndOfLine (ByteBuf, List<Object>), RedisDecoder RedisDecoder (), ArrayHeaderRedisMessage length (), RedisMessagePool getInteger (ByteBuf), RedisDecoder decodeInline (ByteBuf, List<Object>), RedisMessagePool getSimpleString (String), RedisDecoder decodeBulkString (ByteBuf, List<Object>), RedisDecoder resetDecoder (), ToPositiveLongProcessor content (), ToPositiveLongProcessor process (byte), RedisDecoder RedisDecoder (int, RedisMessagePool), ArrayHeaderRedisMessage toString (), RedisCodecException RedisCodecException (String), RedisDecoder decodeLength (ByteBuf, List<Object>), ArrayHeaderRedisMessage ArrayHeaderRedisMessage (long), RedisDecoder parseRedisNumber (ByteBuf), RedisDecoder parsePositiveNumber (ByteBuf), RedisDecoder decodeType (ByteBuf), RedisDecoder readLine (ByteBuf), RedisDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","132"
"10","netty/codec-redis","51221181c5e4fea539b4f6a4c4c0faea9792d45d","d0d139fe6c4b3a3c745c8f0622886c7448a17810","LOCAL_VAR_RENAMING","0","1","2","[RedisMessagePool getInteger (long), RedisMessagePool getError (String)]","8"
"0","netty/codec-smtp","d0d139fe6c4b3a3c745c8f0622886c7448a17810","f6ce7b02af15d26afc6e3f945daa128032dd44d1","REVERSE_IF_ELSE","3","1","27","[DefaultSmtpResponse DefaultSmtpResponse (int, List<CharSequence>), DefaultSmtpResponse equals (Object), SmtpResponseDecoder SmtpResponseDecoder (int), SmtpResponseDecoder newDecoderException (ByteBuf, int, int), SmtpUtils SmtpUtils (), DefaultSmtpResponse DefaultSmtpResponse (int), DefaultSmtpRequest toString (), SmtpUtils toUnmodifiableList (CharSequence), DefaultSmtpResponse toString (), DefaultSmtpRequest DefaultSmtpRequest (SmtpCommand, CharSequence), DefaultSmtpRequest parameters (), DefaultSmtpResponse DefaultSmtpResponse (int, CharSequence), SmtpResponseDecoder parseCode (ByteBuf), DefaultSmtpRequest command (), SmtpRequestEncoder acceptOutboundMessage (Object), SmtpRequestEncoder encode (ChannelHandlerContext, Object, List<Object>), DefaultSmtpRequest DefaultSmtpRequest (SmtpCommand), DefaultSmtpResponse details (), SmtpRequestEncoder writeParameters (List<CharSequence>, ByteBuf, boolean), DefaultSmtpRequest DefaultSmtpRequest (SmtpCommand, List<CharSequence>), DefaultSmtpResponse code (), DefaultSmtpRequest equals (Object), DefaultSmtpRequest hashCode (), DefaultSmtpRequest DefaultSmtpRequest (CharSequence, CharSequence), DefaultSmtpResponse hashCode (), SmtpResponseDecoder parseNumber (byte), SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","135"
"1","netty/codec-smtp","f6ce7b02af15d26afc6e3f945daa128032dd44d1","9ad6cb1ec3d007b6cfc63881927da0b91b98770b","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","5"
"3","netty/codec-smtp","9ad6cb1ec3d007b6cfc63881927da0b91b98770b","af1aeb24e1072ec7a9a85d5f2d558ab235c63c47","SWITCH_EQUAL_SIDES","14","1","1","[SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","5"
"8","netty/codec-smtp","af1aeb24e1072ec7a9a85d5f2d558ab235c63c47","d148010aa289a48e7ae6e163194bae7c9a4a4b7a","VAR_DECLARATION_MERGING","12","1","2","[SmtpResponseDecoder parseCode (ByteBuf), SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","10"
"9","netty/codec-smtp","d148010aa289a48e7ae6e163194bae7c9a4a4b7a","665e98297de61f864c19edf44157daef7b40fc5e","VAR_DECLARATION_MERGING","12","1","2","[SmtpResponseDecoder parseCode (ByteBuf), SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","10"
"12","netty/codec-smtp","665e98297de61f864c19edf44157daef7b40fc5e","768423c037113c0de7fbade426e8ae1bae7a2ad4","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","5"
"13","netty/codec-smtp","768423c037113c0de7fbade426e8ae1bae7a2ad4","1683caeea89bcacd80db2a37dc8ebecd1705c547","CASE_TO_IF_ELSE","17","1","1","[SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","5"
"16","netty/codec-smtp","1683caeea89bcacd80db2a37dc8ebecd1705c547","10e67eef7f66744ee807cc105c01f19c5ad68f7b","VAR_DECLARATION_MERGING","12","1","1","[SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","5"
"18","netty/codec-smtp","10e67eef7f66744ee807cc105c01f19c5ad68f7b","6435057dab6488726e97b0cf649e46ade596a905","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","5"
"20","netty/codec-smtp","6435057dab6488726e97b0cf649e46ade596a905","56f915191f7eba0e829ee0925921e32e106551f6","LOCAL_VAR_RENAMING","0","1","2","[SmtpResponseDecoder newDecoderException (ByteBuf, int, int), SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","10"
"21","netty/codec-smtp","56f915191f7eba0e829ee0925921e32e106551f6","3b89784f50d625c83bcaf65f216695e6f3ac95f8","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","5"
"22","netty/codec-smtp","3b89784f50d625c83bcaf65f216695e6f3ac95f8","a5f57de3df7f26022d777ecb483f27bc2ca3c912","LOCAL_VAR_RENAMING","0","1","2","[SmtpResponseDecoder parseCode (ByteBuf), SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","10"
"24","netty/codec-smtp","a5f57de3df7f26022d777ecb483f27bc2ca3c912","5fbd486416532d9feca81ba578750e61094718be","REVERSE_IF_ELSE","3","1","1","[SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","5"
"25","netty/codec-smtp","5fbd486416532d9feca81ba578750e61094718be","9cee3f8e842a70ba1065147a350bd640e1a70d28","REVERSE_IF_ELSE","3","1","1","[SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","5"
"0","netty/codec-socks","9cee3f8e842a70ba1065147a350bd640e1a70d28","a88b2130685fdf6efe4e807d6a32a1c6e29e4a2d","LOOP_IF_CONTINUE_TO_ELSE","11","1","42","[SocksAuthResponseDecoder SocksAuthResponseDecoder (), SocksCmdResponse encodeAsByteBuf (ByteBuf), Socks4CommandType compareTo (Socks4CommandType), Socks4CommandType hashCode (), Socks4CommandType toString (), DefaultSocks5InitialResponse DefaultSocks5InitialResponse (Socks5AuthMethod), Socks4CommandType Socks4CommandType (int, String), DefaultSocks5CommandRequest dstPort (), DefaultSocks5CommandRequest DefaultSocks5CommandRequest (Socks5CommandType, Socks5AddressType, String, int), Socks5ServerEncoder encode (ChannelHandlerContext, Socks5Message, ByteBuf), Socks5ServerEncoder encodePasswordAuthResponse (Socks5PasswordAuthResponse, ByteBuf), SocksCmdResponse SocksCmdResponse (SocksCmdStatus, SocksAddressType), DefaultSocks5InitialResponse authMethod (), DefaultSocks5CommandRequest dstAddrType (), Socks5PasswordAuthRequestDecoder fail (List<Object>, Exception), DefaultSocks5CommandRequest type (), SocksCmdResponse cmdStatus (), SocksCmdResponse port (), Socks5ServerEncoder addressEncoder (), DefaultSocks5CommandRequest toString (), Socks5InitialRequestDecoder Socks5InitialRequestDecoder (), Socks5InitialRequestDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), Socks5ServerEncoder Socks5ServerEncoder (), DefaultSocks5InitialResponse toString (), Socks5InitialRequestDecoder fail (List<Object>, Exception), SocksCmdResponse addressType (), Socks5InitialResponseDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), Socks5ServerEncoder Socks5ServerEncoder (Socks5AddressEncoder), SocksAuthResponseDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), SocksCmdResponse SocksCmdResponse (SocksCmdStatus, SocksAddressType, String, int), Socks5InitialResponseDecoder fail (List<Object>, Exception), DefaultSocks5CommandRequest dstAddr (), Socks5ServerEncoder encodeAuthMethodResponse (Socks5InitialResponse, ByteBuf), Socks5InitialResponseDecoder Socks5InitialResponseDecoder (), Socks5ServerEncoder encodeCommandResponse (Socks5CommandResponse, ByteBuf), SocksCmdResponse host (), Socks4CommandType equals (Object), Socks4CommandType Socks4CommandType (int), Socks4CommandType valueOf (byte), Socks5PasswordAuthRequestDecoder Socks5PasswordAuthRequestDecoder (), Socks4CommandType byteValue (), Socks5PasswordAuthRequestDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","378"
"2","netty/codec-socks","a88b2130685fdf6efe4e807d6a32a1c6e29e4a2d","aecc1591a426aca33d69d4bed3eea4d139e98e17","REVERSE_IF_ELSE","3","1","2","[DefaultSocks5CommandRequest toString (), DefaultSocks5CommandRequest DefaultSocks5CommandRequest (Socks5CommandType, Socks5AddressType, String, int)]","18"
"3","netty/codec-socks","aecc1591a426aca33d69d4bed3eea4d139e98e17","9a173f76fac8cd64d0866d94c53565c19f3053f2","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[Socks5InitialResponseDecoder fail (List<Object>, Exception)]","9"
"7","netty/codec-socks","9a173f76fac8cd64d0866d94c53565c19f3053f2","29ba2c1ef946359da56007d676e4cd89da8cc5c2","LOCAL_VAR_RENAMING","0","1","1","[DefaultSocks5CommandRequest DefaultSocks5CommandRequest (Socks5CommandType, Socks5AddressType, String, int)]","9"
"10","netty/codec-socks","29ba2c1ef946359da56007d676e4cd89da8cc5c2","74adc181834d20efb7d1f36c33f1f55b34dcb814","LOCAL_VAR_RENAMING","0","1","3","[DefaultSocks5CommandRequest type (), DefaultSocks5CommandRequest toString (), DefaultSocks5CommandRequest DefaultSocks5CommandRequest (Socks5CommandType, Socks5AddressType, String, int)]","27"
"14","netty/codec-socks","74adc181834d20efb7d1f36c33f1f55b34dcb814","704d8cc079d1a11b9e04bd3e40d1e7bd346ba326","INFIX_EXPRESSION_DIVIDING","8","1","1","[DefaultSocks5CommandRequest DefaultSocks5CommandRequest (Socks5CommandType, Socks5AddressType, String, int)]","9"
"19","netty/codec-socks","704d8cc079d1a11b9e04bd3e40d1e7bd346ba326","172ef695a792c64a460cd052ca0fc44640292597","LOCAL_VAR_RENAMING","0","1","2","[DefaultSocks5CommandRequest toString (), DefaultSocks5CommandRequest DefaultSocks5CommandRequest (Socks5CommandType, Socks5AddressType, String, int)]","18"
"22","netty/codec-socks","172ef695a792c64a460cd052ca0fc44640292597","5643622586375ae070912b5f828432e717a74f7d","REVERSE_IF_ELSE","3","1","2","[Socks5InitialResponseDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), Socks5InitialResponseDecoder fail (List<Object>, Exception)]","18"
"0","netty/codec-stomp","5643622586375ae070912b5f828432e717a74f7d","627f95fc9870f77125ed85a1dcbf7d533e868b5b","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","60","[DefaultStompHeadersSubframe headers (), StompSubframeAggregator isStartMessage (StompSubframe), StompSubframeDecoder StompSubframeDecoder (), StompSubframeDecoder readCommand (ByteBuf), StompSubframeAggregator ignoreContentAfterContinueResponse (Object), DefaultStompFrame release (int), DefaultStompFrame touch (), DefaultStompFrame touch (Object), Utf8LineParser charSequence (), Utf8LineParser Utf8LineParser (AppendableCharSequence, int), StompSubframeDecoder StompSubframeDecoder (int, int), DefaultStompFrame retain (), DefaultStompHeadersSubframe toString (), DefaultStompFrame copy (), DefaultStompFrame release (), StompSubframeDecoder getContentLength (StompHeaders), DefaultStompFrame DefaultStompFrame (StompCommand, ByteBuf), DefaultStompFrame DefaultStompFrame (StompCommand, ByteBuf, DefaultStompHeaders), StompHeaders contains (CharSequence, CharSequence, boolean), DefaultStompHeadersSubframe setDecoderResult (DecoderResult), StompSubframeAggregator isContentLengthInvalid (StompHeadersSubframe, int), DefaultStompFrame retain (int), StompSubframeAggregator isLastContentMessage (StompContentSubframe), Utf8LineParser process (byte), DefaultStompFrame retainedDuplicate (), StompSubframeDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), StompHeaders iteratorAsString (), DefaultStompFrame replace (ByteBuf), HeaderParser HeaderParser (AppendableCharSequence, int, boolean), HeaderParser parseHeader (StompHeadersSubframe, ByteBuf), DefaultStompHeadersSubframe DefaultStompHeadersSubframe (StompCommand, DefaultStompHeaders), HeaderParser appendTo (AppendableCharSequence, char), StompSubframeAggregator isContentMessage (StompSubframe), DefaultStompHeadersSubframe decoderResult (), DefaultStompFrame content (), StompSubframeDecoder skipNullCharacter (ByteBuf), HeaderParser shouldUnescape (StompCommand), Utf8LineParser reset (), HeaderParser reset (), DefaultStompHeadersSubframe command (), StompSubframeAggregator beginAggregation (StompHeadersSubframe, ByteBuf), HeaderParser process (byte), StompSubframeAggregator newContinueResponse (StompHeadersSubframe, int, ChannelPipeline), StompSubframeAggregator StompSubframeAggregator (int), DefaultStompFrame refCnt (), DefaultStompFrame duplicate (), StompSubframeAggregator isAggregated (StompSubframe), StompSubframeDecoder skipControlCharacters (ByteBuf), DefaultStompFrame DefaultStompFrame (StompCommand), StompHeaders getAllAsString (CharSequence), StompSubframeDecoder readHeaders (ByteBuf, StompHeadersSubframe), Utf8LineParser appendTo (AppendableCharSequence, char), Utf8LineParser parse (ByteBuf), StompSubframeDecoder StompSubframeDecoder (int, int, boolean), DefaultStompFrame toString (), StompSubframeAggregator closeAfterContinueResponse (Object), DefaultStompHeadersSubframe DefaultStompHeadersSubframe (StompCommand), StompHeaders getAsString (CharSequence), StompSubframeDecoder StompSubframeDecoder (boolean), StompSubframeDecoder resetDecoder ()]","300"
"1","netty/codec-stomp","627f95fc9870f77125ed85a1dcbf7d533e868b5b","b9b88ef4fc742d58aa3e0931968f700d8c232132","LOCAL_VAR_RENAMING","0","1","2","[StompSubframeAggregator newContinueResponse (StompHeadersSubframe, int, ChannelPipeline), StompSubframeAggregator isContentMessage (StompSubframe)]","10"
"0","netty/codec-xml","b9b88ef4fc742d58aa3e0931968f700d8c232132","0a3417e884e7943eac206d81f40a602aa41c91f6","IF_DIVIDING","9","1","25","[XmlDTD hashCode (), XmlAttribute toString (), XmlElementStart attributes (), XmlContent data (), XmlElementStart hashCode (), XmlAttribute hashCode (), XmlDTD equals (Object), XmlContent hashCode (), XmlElementStart toString (), XmlDTD toString (), XmlAttribute namespace (), XmlAttribute name (), XmlDTD XmlDTD (String), XmlAttribute type (), XmlContent equals (Object), XmlDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), XmlAttribute prefix (), XmlAttribute equals (Object), XmlAttribute XmlAttribute (String, String, String, String, String), XmlElementStart equals (Object), XmlDTD text (), XmlElementStart XmlElementStart (String, String, String), XmlAttribute value (), XmlContent toString (), XmlContent XmlContent (String)]","125"
"6","netty/codec-xml","0a3417e884e7943eac206d81f40a602aa41c91f6","6595a8a78af112d505a31d4110779505c0114295","VAR_DECLARATION_DIVIDING","13","1","1","[XmlDTD equals (Object)]","5"
"7","netty/codec-xml","6595a8a78af112d505a31d4110779505c0114295","38b1fe21f16f2bfbbc17bd8acb84da64c23e9cd4","SWITCH_EQUAL_SIDES","14","1","1","[XmlDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","5"
"9","netty/codec-xml","38b1fe21f16f2bfbbc17bd8acb84da64c23e9cd4","d7350ae9b982045a69c69346d039c8a2fddd9600","FOR_TO_WHILE","1","1","1","[XmlDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","5"
"11","netty/codec-xml","d7350ae9b982045a69c69346d039c8a2fddd9600","e7d388fe15e5844d3a7c2599597c59573acb7a1e","REVERSE_IF_ELSE","3","1","1","[XmlDTD equals (Object)]","5"
"25","netty/codec-xml","e7d388fe15e5844d3a7c2599597c59573acb7a1e","c247b933fea610c2042f6e954cc6d3d0e102998f","SWITCH_EQUAL_SIDES","14","1","1","[XmlDTD equals (Object)]","5"
"26","netty/codec-xml","c247b933fea610c2042f6e954cc6d3d0e102998f","efe0be964dd12d5c301046bbc9d8036b065c973b","LOCAL_VAR_RENAMING","0","1","1","[XmlDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","5"
"27","netty/codec-xml","efe0be964dd12d5c301046bbc9d8036b065c973b","7fa0ae8667d3dd399d2ea06ebb46d7f390cfe25c","REVERSE_IF_ELSE","3","1","1","[XmlDTD equals (Object)]","5"
"0","netty/codec","7fa0ae8667d3dd399d2ea06ebb46d7f390cfe25c","027ddbcd4f02250fa8ec3fa32eb64b27b4bae147","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","58","[JsonObjectDecoder reset (), JsonObjectDecoder decodeByte (byte, ByteBuf, int), ZlibChecksumMethods updateByteBuffer (Checksum), JsonObjectDecoder extractObject (ChannelHandlerContext, ByteBuf, int, int), ZlibChecksumMethods update (ByteBuf, int, int), LimitingByteInput skip (long), Bzip2Encoder isClosed (), LimitingByteInput LimitingByteInput (ByteInput, long), ZlibChecksumMethods process (byte), JsonObjectDecoder JsonObjectDecoder (), JsonObjectDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), Crc32c update (int), LimitingByteInput read (byte[]), Bzip2Encoder finishEncode (ChannelHandlerContext, ChannelPromise), Crc32c crc32c (int, int), ReflectiveByteBufChecksum ReflectiveByteBufChecksum (Checksum, Method), Bzip2Encoder Bzip2Encoder (int), JsonObjectDecoder JsonObjectDecoder (int, boolean), ChannelBufferByteInput read (byte[], int, int), Crc32c reset (), JsonObjectDecoder JsonObjectDecoder (boolean), LimitingByteInput readable (int), JsonObjectDecoder initDecoding (byte), Bzip2Encoder close (ChannelPromise), LengthFieldPrepender LengthFieldPrepender (int, int), SlowByteBufChecksum getValue (), Bzip2Encoder run (), SlowByteBufChecksum update (int), ReflectiveByteBufChecksum update (ByteBuf, int, int), LengthFieldPrepender LengthFieldPrepender (ByteOrder, int, int, boolean), Crc32c update (byte[], int, int), LengthFieldPrepender LengthFieldPrepender (int), LimitingByteInput read (), LengthFieldPrepender encode (ChannelHandlerContext, ByteBuf, List<Object>), ChannelBufferByteInput close (), LimitingByteInput close (), Bzip2Encoder handlerAdded (ChannelHandlerContext), Bzip2Encoder Bzip2Encoder (), Bzip2Encoder close (ChannelHandlerContext, ChannelPromise), ChannelBufferByteInput skip (long), ChannelBufferByteInput available (), SlowByteBufChecksum update (byte[], int, int), LengthFieldPrepender LengthFieldPrepender (int, boolean), SlowByteBufChecksum SlowByteBufChecksum (Checksum), Bzip2Encoder encode (ChannelHandlerContext, ByteBuf, ByteBuf), LimitingByteInput read (byte[], int, int), SlowByteBufChecksum reset (), ChannelBufferByteInput read (), Bzip2Encoder closeBlock (ByteBuf), Bzip2Encoder close (), LengthFieldPrepender LengthFieldPrepender (int, int, boolean), ChannelBufferByteInput read (byte[]), ZlibChecksumMethods wrapChecksum (Checksum), Bzip2Encoder ctx (), ChannelBufferByteInput ChannelBufferByteInput (ByteBuf), LimitingByteInput available (), Crc32c getValue (), JsonObjectDecoder JsonObjectDecoder (int)]","406"
"3","netty/codec","027ddbcd4f02250fa8ec3fa32eb64b27b4bae147","f2af961fb68dd5c287c1393cd22e18c6c0c22347","INFIX_EXPRESSION_DIVIDING","8","1","1","[LengthFieldPrepender LengthFieldPrepender (ByteOrder, int, int, boolean)]","7"
"4","netty/codec","f2af961fb68dd5c287c1393cd22e18c6c0c22347","4d03f119d9323b01eeffc2a48a164f484976a014","VAR_DECLARATION_MERGING","12","1","1","[LengthFieldPrepender LengthFieldPrepender (ByteOrder, int, int, boolean)]","7"
"6","netty/codec","4d03f119d9323b01eeffc2a48a164f484976a014","1cb910af287c0b8cc3825e3de9c286fdc7d144b4","VAR_DECLARATION_DIVIDING","13","1","1","[LengthFieldPrepender LengthFieldPrepender (ByteOrder, int, int, boolean)]","7"
"10","netty/codec","1cb910af287c0b8cc3825e3de9c286fdc7d144b4","21d433dfcc602434855ebe0e45752e46521213f9","VAR_DECLARATION_MERGING","12","1","1","[LengthFieldPrepender LengthFieldPrepender (ByteOrder, int, int, boolean)]","7"
"15","netty/codec","21d433dfcc602434855ebe0e45752e46521213f9","5f14d2ed2049ebcd69a46e1b07381c00aba7c8f5","LOCAL_VAR_RENAMING","0","1","2","[LengthFieldPrepender LengthFieldPrepender (int, int, boolean), LengthFieldPrepender LengthFieldPrepender (int, int)]","14"
"17","netty/codec","5f14d2ed2049ebcd69a46e1b07381c00aba7c8f5","c72af3d7c5b78969873ec00f6a395f7f0f021869","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[LengthFieldPrepender encode (ChannelHandlerContext, ByteBuf, List<Object>)]","7"
"18","netty/codec","c72af3d7c5b78969873ec00f6a395f7f0f021869","ad6c97154026ecc9bca182295c90e30284921803","LOCAL_VAR_RENAMING","0","1","2","[LengthFieldPrepender LengthFieldPrepender (ByteOrder, int, int, boolean), LengthFieldPrepender LengthFieldPrepender (int)]","14"
"19","netty/codec","ad6c97154026ecc9bca182295c90e30284921803","02324e8b584335be85c1e9991f792b9e07cc2cde","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[LengthFieldPrepender LengthFieldPrepender (ByteOrder, int, int, boolean)]","7"
"20","netty/codec","02324e8b584335be85c1e9991f792b9e07cc2cde","413be818e3cf81f531bfe76a59f060bccdee4f10","REVERSE_IF_ELSE","3","1","1","[LengthFieldPrepender encode (ChannelHandlerContext, ByteBuf, List<Object>)]","7"
"21","netty/codec","413be818e3cf81f531bfe76a59f060bccdee4f10","32e7c5fecf8d4024c9eb24811c1726a5296a1d50","VAR_DECLARATION_DIVIDING","13","1","1","[LengthFieldPrepender LengthFieldPrepender (ByteOrder, int, int, boolean)]","7"
"23","netty/codec","32e7c5fecf8d4024c9eb24811c1726a5296a1d50","ab2faa7615d99df3afd0304e86368664eddcb5bb","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[LengthFieldPrepender LengthFieldPrepender (ByteOrder, int, int, boolean)]","7"
"26","netty/codec","ab2faa7615d99df3afd0304e86368664eddcb5bb","f9d27f7f633708a202176e1130535d3836ef516b","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[LengthFieldPrepender LengthFieldPrepender (ByteOrder, int, int, boolean)]","7"
"28","netty/codec","f9d27f7f633708a202176e1130535d3836ef516b","ca9f2d0adae40dec57b8a0b19f27baa5a0c4fccf","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[LengthFieldPrepender LengthFieldPrepender (ByteOrder, int, int, boolean)]","7"
"0","netty/common","ca9f2d0adae40dec57b8a0b19f27baa5a0c4fccf","69429e0d9056d97f5e73aeaf5bd2eb9da0cf9fe2","STATEMENTS_ORDER_REARRANGEMENT","10","1","324","[PlatformDependent putShort (byte[], int, short), SingleThreadEventExecutor hasTasks (), SingleThreadEventExecutor threadProperties (), SocketUtils bind (DatagramChannel, SocketAddress), PlatformDependent putInt (byte[], int, int), PlatformDependent isAndroid (), ThreadLocalRandomProvider current (), LeanCancellationException checkDeadLock (), PlatformDependent putLong (byte[], int, long), Signal hashCode (), PlatformDependent equals (byte[], int, byte[], int, int), PlatformDependent hashCodeAsciiCompute (CharSequence, int, int), SingleThreadEventExecutor SingleThreadEventExecutor (EventExecutorGroup, Executor, boolean, int, RejectedExecutionHandler), PlatformDependent hashCodeAsciiSanitizeInt (CharSequence, int), Mpsc normalizedOs (), Mpsc bitMode0 (), DefaultThreadProperties isDaemon (), ConstantTimeUtils equalsConstantTime (CharSequence, CharSequence), Mpsc newSpscQueue (), PlatformDependent decrementMemoryCounter (int), ConstantTimeUtils equalsConstantTime (int, int), LeanCancellationException cause0 (Object), PlatformDependent throwException (Throwable), ConstantTimeUtils ConstantTimeUtils (), SocketUtils connect (SocketChannel, SocketAddress), LeanCancellationException isCancelled (), Mpsc isZeroSafe (byte[], int, int), DefaultPromise DefaultPromise (), PlatformDependent newConcurrentHashMap (int), NonWakeupRunnable drainTasks (), SignalConstant SignalConstant (int, String), PlatformDependent putShort (long, short), LeanCancellationException toStringBuilder (), LeanCancellationException awaitUninterruptibly (long), Mpsc maybeSuperUser0 (), SocketUtils localSocketAddress (ServerSocket), Signal compareTo (Signal), Mpsc normalizedLinuxClassifiers (), PlatformDependent newLongCounter (), SingleThreadEventExecutor executeExpiredScheduledTasks (), SingleThreadEventExecutor fetchFromScheduledTaskQueue (), PromiseNotifier cascade (F, Promise<? super V>), PlatformDependent setMemory (long, long, byte), SocketUtils loopbackAddress (), PlatformDependent newConcurrentHashMap (int, float), PlatformDependent directBufferPreferred (), ThreadLocalRandomProvider PlatformDependent (), PlatformDependent reallocateDirectNoCleaner (ByteBuffer, int), Mpsc newMpscQueue (int, int), SingleThreadEventExecutor confirmShutdown (), CharsetUtil decoder (Charset, CodingErrorAction), PlatformDependent safeConstructPutInt (Object, long, int), LeanCancellationException await (long, TimeUnit), LeanCancellationException executor (), LeanCancellationException get (), Mpsc isJ9Jvm (), SingleThreadEventExecutor runExistingTasksFrom (Queue<Runnable>), LeanCancellationException addListener0 (GenericFutureListener<? extends Future<? super V>>), SingleThreadEventExecutor run (), SingleThreadEventExecutor removeTask (Runnable), CharsetUtil encoder (Charset, CodingErrorAction), PlatformDependent allocateMemory (long), LeanCancellationException syncUninterruptibly (), LeanCancellationException fillInStackTrace (), CharsetUtil getDecoder (Charset), Signal expect (Signal), DefaultPromise setUncancellable (), CharsetUtil decoder (Charset, CodingErrorAction, CodingErrorAction), PlatformDependent align (long, int), PlatformDependent equalsConstantTime (byte[], int, byte[], int, int), PlatformDependent javaVersion (), SingleThreadEventExecutor removeShutdownHook (Runnable), SingleThreadEventExecutor wakeup (boolean), PlatformDependent incrementMemoryCounter (int), PlatformDependent hashCodeAsciiSanitizeShort (CharSequence, int), PlatformDependent hashCodeAscii (byte[], int, int), SocketUtils accept (ServerSocketChannel), Mpsc newMpscQueue (), DefaultThreadProperties isInterrupted (), Mpsc getClassLoader (Class<?>), Mpsc normalizeArch (String), PlatformDependent setMemory (byte[], int, long, byte), SingleThreadEventExecutor delayNanos (long), LeanCancellationException notifyListeners0 (DefaultFutureListeners), PlatformDependent getShortSafe (byte[], int), PlatformDependent getLong (byte[], int), AtomicLongCounter value (), SocketUtils empty (), LeanCancellationException cancel (boolean), SingleThreadEventExecutor shutdown (), SingleThreadEventExecutor addShutdownHook (Runnable), LeanCancellationException getNow (), PlatformDependent copyMemory (byte[], int, byte[], int, long), SingleThreadEventExecutor inEventLoop (Thread), LeanCancellationException sync (), PlatformDependent directBufferAddress (ByteBuffer), DefaultThreadProperties name (), SocketUtils SocketUtils (), SocketUtils socketAddress (String, int), DefaultThreadProperties isAlive (), PlatformDependent canEnableTcpNoDelayByDefault (), PlatformDependent hasUnsafe (), PlatformDependent throwException0 (Throwable), Mpsc newFixedMpmcQueue (int), NonWakeupRunnable startThread (), PlatformDependent run (), PlatformDependent hashCodeAscii (CharSequence), SingleThreadEventExecutor offerTask (Runnable), DefaultThreadProperties state (), PlatformDependent getObject (Object, long), PlatformDependent addFilesystemOsClassifiers (Set<String>, Set<String>), DefaultThreadProperties stackTrace (), SingleThreadEventExecutor lazyExecute0 (Runnable), LeanCancellationException decWaiters (), Signal toString (), PlatformDependent freeDirectBuffer (ByteBuffer), SocketUtils bind (SocketChannel, SocketAddress), PlatformDependent isOsx (), PlatformDependent putInt (long, int), SingleThreadEventExecutor invokeAny (Collection<? extends Callable<T>>), DefaultPromise isCancellable (), LeanCancellationException notifyProgressiveListeners (long, long), LeanCancellationException setValue0 (Object), SingleThreadEventExecutor runShutdownHooks (), PlatformDependent putLong (long, long), DefaultPromise isSuccess (), Mpsc newFixedMpscQueue (int), PlatformDependent getInt (Object, long), AtomicLongCounter increment (), PlatformDependent toIntExact8 (long), NonWakeupRunnable ensureThreadStarted (int), PlatformDependent newConcurrentHashMap (Map<? extends K,? extends V>), LeanCancellationException isCancelled0 (Object), SingleThreadEventExecutor deadlineNanos (), PlatformDependent getInt (long), LeanCancellationException setFailure0 (Throwable), Signal initCause (Throwable), Mpsc getMaxDirectMemorySizeArgPattern (), Mpsc addClassifier (Set<String>, Set<String>, String), SingleThreadEventExecutor execute (Runnable), SocketUtils connect (Socket, SocketAddress, int), CharsetUtil values (), PromiseNotifier operationComplete (F), PlatformDependent getLong (long), Mpsc unsafeUnavailabilityCause0 (), SingleThreadEventExecutor invokeAll (Collection<? extends Callable<T>>, long, TimeUnit), AtomicLongCounter decrement (), CharsetUtil getEncoder (Charset), PlatformDependent copyMemory (long, long, long), DefaultThreadProperties id (), SingleThreadEventExecutor runAllTasks (long), Mpsc getSystemClassLoader (), PlatformDependent newConcurrentHashMap (), Mpsc isWindows0 (), SingleThreadEventExecutor runScheduledAndExecutorTasks (int), PlatformDependent usedDirectMemory (), PlatformDependent getByte (long), PlatformDependent current (), PlatformDependent copyMemory (long, byte[], int, long), StacklessCancellationException fillInStackTrace (), NonWakeupRunnable reject (), PlatformDependent getIntVolatile (long), PlatformDependent directBuffer (long, int), SocketUtils allAddressesByName (String), PlatformDependent putByte (Object, long, byte), LeanCancellationException await (long), SingleThreadEventExecutor cleanup (), LeanCancellationException isDone (), CharsetUtil encoder (Charset, CodingErrorAction, CodingErrorAction), Signal valueOf (Class<?>, String), PlatformDependent useDirectBufferNoCleaner (), AtomicLongCounter add (long), PlatformDependent getInt (int[], long), SingleThreadEventExecutor interruptThread (), SingleThreadEventExecutor execute (Runnable, boolean), CharsetUtil CharsetUtil (), StacklessCancellationException StacklessCancellationException (), LeanCancellationException run (), PromiseNotifier PromiseNotifier (boolean, Promise<? super V>), PlatformDependent isUnaligned (), CauseHolder CauseHolder (Throwable), CharsetUtil encoder (Charset), Mpsc createTempFile (String, String, File), Mpsc toDirectory (String), PlatformDependent allocateDirectNoCleaner (int), PlatformDependent getByte (byte[], long), PlatformDependent hashCodeAsciiSanitizeByte (char), SingleThreadEventExecutor runAllTasks (), PlatformDependent putByte (long, byte), DefaultPromise setFailure (Throwable), PlatformDependent maybeSuperUser (), Mpsc normalize (String), PlatformDependent putObject (Object, long, Object), DefaultPromise tryFailure (Throwable), LeanCancellationException removeListeners (GenericFutureListener<? extends Future<? super V>>), Mpsc addressSize0 (), LeanCancellationException awaitUninterruptibly (), Signal fillInStackTrace (), Mpsc isIkvmDotNet (), Mpsc isOsx0 (), DefaultPromise trySuccess (V), PlatformDependent getIntSafe (byte[], int), DefaultThreadProperties DefaultThreadProperties (Thread), CauseHolder safeExecute (EventExecutor, Runnable), SingleThreadEventExecutor pollTask (), DefaultPromise setSuccess (V), NonWakeupRunnable wakesUpForTask (Runnable), LeanCancellationException await (), Mpsc threadLocalRandom (), PlatformDependent addressSize (), Signal newConstant (int, String), PlatformDependent getShort (long), PlatformDependent reallocateMemory (long, long), SingleThreadEventExecutor SingleThreadEventExecutor (EventExecutorGroup, ThreadFactory, boolean), LeanCancellationException addListener (GenericFutureListener<? extends Future<? super V>>), StacklessCancellationException newInstance (Class<?>, String), SingleThreadEventExecutor pollTaskFrom (Queue<Runnable>), SocketUtils addressesFromNetworkInterface (NetworkInterface), PlatformDependent addPropertyOsClassifiers (Set<String>, Set<String>), Mpsc tmpdir0 (), SingleThreadEventExecutor addTask (Runnable), LeanCancellationException incWaiters (), LeanCancellationException notifyProgressiveListener0 (ProgressiveFuture, GenericProgressiveFutureListener, long, long), ConstantTimeUtils equalsConstantTime (byte[], int, byte[], int, int), LeanCancellationException notifyListeners (), PlatformDependent isWindows (), Mpsc isIkvmDotNet0 (), PlatformDependent freeDirectNoCleaner (ByteBuffer), Signal Signal (int, String), Mpsc estimateMaxDirectMemory (), PlatformDependent hasAlignDirectByteBuffer (), LeanCancellationException checkNotifyWaiters (), SingleThreadEventExecutor pendingTasks (), DefaultPromise DefaultPromise (EventExecutor), Signal name (), LeanCancellationException removeListener (GenericFutureListener<? extends Future<? super V>>), SingleThreadEventExecutor SingleThreadEventExecutor (EventExecutorGroup, Executor, boolean), LeanCancellationException rethrowIfFailed (), PlatformDependent toIntExact (long), SingleThreadEventExecutor shutdownGracefully (long, long, TimeUnit), LeanCancellationException removeListener0 (GenericFutureListener<? extends Future<? super V>>), PlatformDependent getShort (byte[], int), PromiseNotifier cascade (boolean, F, Promise<? super V>), PlatformDependent getByte (byte[], int), SocketUtils hardwareAddressFromNetworkInterface (NetworkInterface), Mpsc getContextClassLoader (), Signal id (), Mpsc run (), LeanCancellationException notifyListenerWithStackOverFlowProtection (EventExecutor, Future<?>, GenericFutureListener<?>), PlatformDependent alignDirectBuffer (ByteBuffer, int), LeanCancellationException notifyListenersNow (), NonWakeupRunnable doStartThread (), SingleThreadEventExecutor terminationFuture (), SocketUtils run (), NonWakeupRunnable reject (Runnable), Mpsc equalsSafe (byte[], int, byte[], int, int), PlatformDependent tmpdir (), Mpsc normalizeOsReleaseVariableValue (String), Signal valueOf (String), Mpsc newMpscQueue (int), Signal equals (Object), LeanCancellationException toString (), DefaultThreadProperties priority (), PlatformDependent getLongSafe (byte[], int), LeanCancellationException progressiveListeners (), Mpsc byteArrayBaseOffset0 (), PlatformDependent isZero (byte[], int, int), PlatformDependent bitMode (), LeanCancellationException setSuccess0 (V), LeanCancellationException await0 (long, boolean), Mpsc normalizeOs (String), Mpsc isJ9Jvm0 (), PromiseNotifier PromiseNotifier (Promise<? super V>), NativeLibraryUtil loadLibrary (String, boolean), PlatformDependent objectFieldOffset (Field), SingleThreadEventExecutor afterRunningAllTasks (), SingleThreadEventExecutor newTaskQueue (), SingleThreadEventExecutor newTaskQueue (int), CharsetUtil decoder (Charset), Mpsc newChunkedMpscQueue (int, int), SingleThreadEventExecutor throwIfInEventLoop (String), PlatformDependent byteArrayBaseOffset (), SingleThreadEventExecutor peekTask (), LeanCancellationException addListeners (GenericFutureListener<? extends Future<? super V>>), SingleThreadEventExecutor SingleThreadEventExecutor (EventExecutorGroup, ThreadFactory, boolean, int, RejectedExecutionHandler), SocketUtils bind (Socket, SocketAddress), PlatformDependent getUnsafeUnavailabilityCause (), SingleThreadEventExecutor runAllTasksFrom (Queue<Runnable>), ConstantTimeUtils equalsConstantTime (long, long), PromiseNotifier operationComplete (Future), Mpsc normalizedArch (), Mpsc Mpsc (), PlatformDependent hasDirectBufferNoCleanerConstructor (), PlatformDependent putIntOrdered (long, int), SingleThreadEventExecutor lazyExecute (Runnable), PlatformDependent allocateUninitializedArray (int), LeanCancellationException isDone0 (Object), SingleThreadEventExecutor awaitTermination (long, TimeUnit), NativeLibraryUtil NativeLibraryUtil (), PlatformDependent freeMemory (long), PlatformDependent copyMemory (byte[], int, long, long), PlatformDependent getLong (long[], long), PlatformDependent putByte (byte[], int, byte), SingleThreadEventExecutor execute0 (Runnable), SingleThreadEventExecutor invokeAll (Collection<? extends Callable<T>>), LeanCancellationException notifyProgressiveListeners0 (ProgressiveFuture<?>, GenericProgressiveFutureListener<?>[], long, long), SocketUtils addressByName (String), LeanCancellationException cause (), SingleThreadEventExecutor takeTask (), LeanCancellationException awaitUninterruptibly (long, TimeUnit), PlatformDependent newConcurrentHashMap (int, float, int), SingleThreadEventExecutor isShuttingDown (), LeanCancellationException notifyListener (EventExecutor, Future<?>, GenericFutureListener<?>), Mpsc hashCodeAsciiSafe (byte[], int, int), LeanCancellationException get (long, TimeUnit), SingleThreadEventExecutor isTerminated (), SingleThreadEventExecutor updateLastExecutionTime (), SingleThreadEventExecutor invokeAny (Collection<? extends Callable<T>>, long, TimeUnit), Mpsc newConcurrentDeque (), SingleThreadEventExecutor isShutdown (), SingleThreadEventExecutor SingleThreadEventExecutor (EventExecutorGroup, Executor, boolean, Queue<Runnable>, RejectedExecutionHandler), PlatformDependent getInt (byte[], int), LeanCancellationException notifyListener0 (Future, GenericFutureListener), PlatformDependent maxDirectMemory ()]","2916"
"2","netty/common","69429e0d9056d97f5e73aeaf5bd2eb9da0cf9fe2","72fc4c98e81af0ddc20cfd734b27895c0d81b6b5","REVERSE_IF_ELSE","3","1","1","[PromiseNotifier operationComplete (F)]","9"
"6","netty/common","72fc4c98e81af0ddc20cfd734b27895c0d81b6b5","fda51482a67aeafc92923210590d82bfd28fd78b","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[PromiseNotifier operationComplete (F)]","9"
"14","netty/common","fda51482a67aeafc92923210590d82bfd28fd78b","fce0e3ab73b1d3af47418ebd0613745e79ac82db","LOCAL_VAR_RENAMING","0","1","1","[PromiseNotifier PromiseNotifier (boolean, Promise<? super V>)]","9"
"17","netty/common","fce0e3ab73b1d3af47418ebd0613745e79ac82db","066cbf7f5b88869831768898bee39f272f74debe","LOCAL_VAR_RENAMING","0","1","1","[NativeLibraryUtil loadLibrary (String, boolean)]","9"
"18","netty/common","066cbf7f5b88869831768898bee39f272f74debe","1fdc6886e5b00166d5ea423a863908ca22be6a58","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[PromiseNotifier operationComplete (F)]","9"
"23","netty/common","1fdc6886e5b00166d5ea423a863908ca22be6a58","2e287fefa8297603f3fa57080156b178b90453b9","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[PromiseNotifier operationComplete (F)]","9"
"0","netty/example","2e287fefa8297603f3fa57080156b178b90453b9","d172667a128df1a2ab8e560c7d66d1fd3af8ad35","VAR_DECLARATION_MERGING","12","1","37","[Http2StaticFileServerHandler sendListing (ChannelHandlerContext, File, String), ByteEchoPeerBase ByteEchoPeerBase (int, SocketAddress, SocketAddress), ObjectEchoClient main (String[]), RxtxClientHandler channelActive (ChannelHandlerContext), Http2StaticFileServerHandler sendError (ChannelHandlerContext, HttpResponseStatus), Http2Server initChannel (SocketChannel), ByteEchoPeerBase run (), Http2StaticFileServerHandler sanitizeUri (String), FactorialClientHandler exceptionCaught (ChannelHandlerContext, Throwable), WebSocketServer main (String[]), ObjectEchoClient initChannel (SocketChannel), Http2StaticFileServerHandler operationProgressed (ChannelProgressiveFuture, long, long), Http2StaticFileServerHandler sendRedirect (ChannelHandlerContext, String), StompClientHandler channelActive (ChannelHandlerContext), Http2StaticFileServerHandler channelRead (ChannelHandlerContext, Object), Http2Server configureTLS (), WebSocketClient initChannel (SocketChannel), ByteEchoPeerBase initChannel (UdtChannel), Http2StaticFileServerHandler setContentTypeHeader (Http2Headers, File), RxtxClientHandler channelRead0 (ChannelHandlerContext, String), StompClientHandler exceptionCaught (ChannelHandlerContext, Throwable), FactorialClientHandler operationComplete (ChannelFuture), FactorialClientHandler channelActive (ChannelHandlerContext), Http2StaticFileServerHandler sendNotModified (ChannelHandlerContext), Http2StaticFileServerHandler exceptionCaught (ChannelHandlerContext, Throwable), Http2StaticFileServerHandler setDateAndCacheHeaders (Http2Headers, File), Http2Server start (), Http2StaticFileServerHandler setDateHeader (Http2Headers), FactorialClientHandler sendNumbers (), Http2FrameClient main (String[]), Http2Server Http2Server (EventLoopGroup), WebSocketClient main (String[]), FactorialClientHandler getFactorial (), FactorialClientHandler channelRead0 (ChannelHandlerContext, BigInteger), Http2FrameClient Http2FrameClient (), StompClientHandler channelRead0 (ChannelHandlerContext, StompFrame), Http2StaticFileServerHandler operationComplete (ChannelProgressiveFuture)]","370"
"3","netty/example","d172667a128df1a2ab8e560c7d66d1fd3af8ad35","7411de07e2ba83d728a614ed4e53dcfdd4c800af","SWITCH_STRING_EQUAL","15","1","1","[RxtxClientHandler channelRead0 (ChannelHandlerContext, String)]","10"
"4","netty/example","7411de07e2ba83d728a614ed4e53dcfdd4c800af","d05fe13baf835568746853d1401b64058107f506","REVERSE_IF_ELSE","3","1","1","[RxtxClientHandler channelRead0 (ChannelHandlerContext, String)]","10"
"8","netty/example","d05fe13baf835568746853d1401b64058107f506","b6744a3b4733ba1dbe4b015f43efcf1c7de742db","REVERSE_IF_ELSE","3","1","1","[RxtxClientHandler channelRead0 (ChannelHandlerContext, String)]","10"
"13","netty/example","b6744a3b4733ba1dbe4b015f43efcf1c7de742db","3092772497782c4ad8368293172fbb464281e88f","SWITCH_STRING_EQUAL","15","1","1","[RxtxClientHandler channelRead0 (ChannelHandlerContext, String)]","10"
"15","netty/example","3092772497782c4ad8368293172fbb464281e88f","1aa53611ef06be45f8e9dc6b97ebbf43c1674a6b","INFIX_EXPRESSION_DIVIDING","8","1","1","[RxtxClientHandler channelRead0 (ChannelHandlerContext, String)]","10"
"22","netty/example","1aa53611ef06be45f8e9dc6b97ebbf43c1674a6b","4ea0f4af10d0e93d9249e317d570faab4a46f7fa","SWITCH_STRING_EQUAL","15","1","1","[RxtxClientHandler channelRead0 (ChannelHandlerContext, String)]","10"
"0","netty/handler-proxy","4ea0f4af10d0e93d9249e317d570faab4a46f7fa","3ccba2ece4fddd9e3cae7f557180c05ec5c8540c","REVERSE_IF_ELSE","3","1","68","[ProxyHandler removeEncoder (ChannelHandlerContext), Socks4ProxyHandler removeDecoder (ChannelHandlerContext), Socks5ProxyHandler protocol (), ProxyHandler failPendingWritesAndClose (Throwable), Socks5ProxyHandler password (), Socks4ProxyHandler addCodec (ChannelHandlerContext), ProxyHandler destinationAddress (), ProxyHandler isConnected (), ProxyHandler setConnectSuccess (), ProxyHandler protocol (), Socks5ProxyHandler Socks5ProxyHandler (SocketAddress), ProxyHandler cancelConnectTimeoutFuture (), ProxyConnectionEvent toString (), ProxyHandler safeRemoveEncoder (), ProxyHandler proxyAddress (), ProxyHandler readIfNeeded (ChannelHandlerContext), Socks4ProxyHandler newInitialMessage (ChannelHandlerContext), ProxyHandler connect (ChannelHandlerContext, SocketAddress, SocketAddress, ChannelPromise), ProxyHandler setConnectFailure (Throwable), ProxyConnectionEvent ProxyConnectionEvent (String, String, SocketAddress, SocketAddress), Socks4ProxyHandler authScheme (), ProxyHandler failPendingWrites (Throwable), Socks5ProxyHandler removeEncoder (ChannelHandlerContext), ProxyHandler handleResponse (ChannelHandlerContext, Object), ProxyHandler writePendingWrites (), ProxyHandler exceptionCaught (ChannelHandlerContext, Throwable), Socks4ProxyHandler username (), ProxyHandler sendInitialMessage (ChannelHandlerContext), Socks5ProxyHandler handleResponse (ChannelHandlerContext, Object), ProxyHandler channelActive (ChannelHandlerContext), LazyChannelPromise executor (), ProxyHandler connectFuture (), ProxyHandler ProxyHandler (SocketAddress), ProxyHandler write (ChannelHandlerContext, Object, ChannelPromise), ProxyHandler safeRemoveDecoder (), ProxyConnectionEvent authScheme (), ProxyHandler exceptionMessage (String), ProxyHandler operationComplete (ChannelFuture), ProxyConnectionEvent proxyAddress (), Socks5ProxyHandler Socks5ProxyHandler (SocketAddress, String, String), ProxyHandler authScheme (), ProxyHandler newInitialMessage (ChannelHandlerContext), Socks5ProxyHandler newInitialMessage (ChannelHandlerContext), ProxyHandler setConnectTimeoutMillis (long), ProxyHandler channelReadComplete (ChannelHandlerContext), Socks4ProxyHandler protocol (), ProxyHandler addPendingWrite (ChannelHandlerContext, Object, ChannelPromise), Socks4ProxyHandler handleResponse (ChannelHandlerContext, Object), ProxyConnectionEvent protocol (), Socks5ProxyHandler removeDecoder (ChannelHandlerContext), ProxyHandler addCodec (ChannelHandlerContext), Socks4ProxyHandler Socks4ProxyHandler (SocketAddress), Socks4ProxyHandler Socks4ProxyHandler (SocketAddress, String), Socks5ProxyHandler authScheme (), ProxyHandler sendToProxyServer (Object), ProxyConnectionEvent destinationAddress (), Socks4ProxyHandler removeEncoder (ChannelHandlerContext), Socks5ProxyHandler username (), ProxyHandler handlerAdded (ChannelHandlerContext), ProxyHandler removeDecoder (ChannelHandlerContext), ProxyHandler channelInactive (ChannelHandlerContext), ProxyHandler channelRead (ChannelHandlerContext, Object), ProxyHandler flush (ChannelHandlerContext), ProxyHandler run (), ProxyHandler connectTimeoutMillis (), Socks5ProxyHandler addCodec (ChannelHandlerContext), Socks5ProxyHandler sendConnectCommand (ChannelHandlerContext), Socks5ProxyHandler socksAuthMethod ()]","272"
"5","netty/handler-proxy","3ccba2ece4fddd9e3cae7f557180c05ec5c8540c","55bc9cd98ceaa5b177d5f580b4ef97fb3cc8a162","REVERSE_IF_ELSE","3","1","1","[ProxyConnectionEvent toString ()]","4"
"21","netty/handler-proxy","55bc9cd98ceaa5b177d5f580b4ef97fb3cc8a162","d24be0d371563d52f3de69d8f0b7e912ee394b8d","LOCAL_VAR_RENAMING","0","1","3","[ProxyConnectionEvent proxyAddress (), ProxyConnectionEvent toString (), ProxyConnectionEvent ProxyConnectionEvent (String, String, SocketAddress, SocketAddress)]","12"
"29","netty/handler-proxy","d24be0d371563d52f3de69d8f0b7e912ee394b8d","2e7fcc26e116ba2fad457f2987f7961226c374ca","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ProxyConnectionEvent toString ()]","4"
"0","netty/handler-ssl-ocsp","2e7fcc26e116ba2fad457f2987f7961226c374ca","d7d6bbd99e09206025d1834f36d8f67b51a0e7e7","REVERSE_IF_ELSE","3","1","21","[OcspClient validateResponse (Promise<BasicOCSPResp>, BasicOCSPResp, DEROctetString, X509Certificate, boolean), OcspResponse toString (), OcspClient operationComplete (Future<OCSPResp>), OcspClient parseOcspUrlFromCertificate (X509Certificate), OcspClient validateNonce (BasicOCSPResp, DEROctetString), Initializer Initializer (Promise<OCSPResp>), OcspClient run (), OcspValidationEvent toString (), Initializer OcspClient (), OcspClient validateSignature (BasicOCSPResp, X509Certificate), Initializer initChannel (SocketChannel), OcspResponse status (), OcspResponse thisUpdate (), OcspResponse nextUpdate (), OcspResponse OcspResponse (Status, Date, Date), OcspClient query (EventLoop, ByteBuf, String, int, String, IoTransport, DnsNameResolver), OcspValidationEvent OcspValidationEvent (OcspResponse), OcspClient operationComplete (Future<InetAddress>), OcspValidationEvent response (), OcspClient operationComplete (ChannelFuture), OcspClient query (X509Certificate, X509Certificate, boolean, IoTransport, DnsNameResolver)]","63"
"25","netty/handler-ssl-ocsp","d7d6bbd99e09206025d1834f36d8f67b51a0e7e7","4ec85702fd077cf184e5e04331067dcdb2562c94","LOCAL_VAR_RENAMING","0","1","3","[OcspValidationEvent OcspValidationEvent (OcspResponse), OcspValidationEvent response (), OcspValidationEvent toString ()]","9"
"0","netty/handler","4ec85702fd077cf184e5e04331067dcdb2562c94","f8bd8e6a117f7824cbbc4f5e2ce45527cde3a67b","IF_DIVIDING","9","1","127","[ChunkedStream progress (), SslContextBuilder protocols (Iterable<String>), AbstractSniHandler AbstractSniHandler (), ChunkedStream transferredBytes (), OpenSslCertificateException OpenSslCertificateException (Throwable, int), SslContextBuilder forServer (InputStream, InputStream), SslContextBuilder trustManager (TrustManagerFactory), OpenSslCachingKeyMaterialProvider chooseKeyMaterial (ByteBufAllocator, String), OpenSslServerCertificateCallback OpenSslServerCertificateCallback (OpenSslEngineMap, OpenSslKeyMaterialManager), SslContextBuilder keyManager (InputStream, InputStream), SslContextBuilder forServer (File, File, String), OpenSslPrivateKeyMaterial touch (Object), OpenSslSniHostnameMatcher OpenSslSniHostnameMatcher (OpenSslEngineMap), OpenSslPrivateKeyMaterial retain (), OpenSslSniHostnameMatcher match (long, String), OpenSslPrivateKey OpenSslPrivateKey (long), AbstractSniHandler lookup (ChannelHandlerContext, String), OpenSslPrivateKeyMaterial touch (), OpenSslPrivateKeyMaterial privateKeyAddress (), OpenSslCachingKeyMaterialProvider destroy (), OpenSslPrivateKey retain (), ChunkedStream ChunkedStream (InputStream), SslContextBuilder forClient (), AbstractSniHandler onLookupComplete (ChannelHandlerContext, Future<T>), SslContextBuilder endpointIdentificationAlgorithm (String), OpenSslPrivateKeyMaterial certificateChain (), AbstractSniHandler AbstractSniHandler (int, long), ExtendedTrustManagerVerifyCallback verify (ReferenceCountedOpenSslEngine, X509Certificate[], String), OpenSslPrivateKey touch (), SslContextBuilder build (), SslContextBuilder sslContextProvider (Provider), AbstractSniHandler lookup (ChannelHandlerContext, ByteBuf), SniCompletionEvent SniCompletionEvent (Throwable), ChunkedStream length (), SslContextBuilder sessionCacheSize (long), AbstractSniHandler handlerAdded (ChannelHandlerContext), OpenSslPrivateKey retain (int), OpenSslPrivateKeyMaterial certificateChainAddress (), OpenSslCertificateException OpenSslCertificateException (String, int), ChunkedStream readChunk (ChannelHandlerContext), JdkNpnApplicationProtocolNegotiator JdkNpnApplicationProtocolNegotiator (boolean, String), OpenSslCertificateException checkErrorCode (int), OpenSslPrivateKey isDestroyed (), ReferenceCountedOpenSslServerContext sessionContext (), AbstractSniHandler checkStartTimeout (ChannelHandlerContext), ChunkedStream ChunkedStream (InputStream, int), SslContextBuilder trustManager (InputStream), JdkNpnApplicationProtocolNegotiator JdkNpnApplicationProtocolNegotiator (boolean, boolean, String), SslContextBuilder ciphers (Iterable<String>, CipherSuiteFilter), OpenSslPrivateKey getFormat (), JdkNpnApplicationProtocolNegotiator wrapSslEngine (SSLEngine, JdkApplicationProtocolNegotiator, boolean), SslContextBuilder ciphers (Iterable<String>), TrustManagerVerifyCallback TrustManagerVerifyCallback (OpenSslEngineMap, X509TrustManager), OpenSslPrivateKey destroy (), OpenSslPrivateKey getAlgorithm (), SslContextBuilder trustManager (Iterable<? extends X509Certificate>), OpenSslPrivateKeyMaterial releaseChain (), SslContextBuilder option (SslContextOption<T>, T), SslContextBuilder keyManager (KeyManager), OpenSslCertificateException OpenSslCertificateException (String, Throwable, int), AbstractSniHandler onLookupComplete (ChannelHandlerContext, String, Future<T>), SslContextBuilder forServer (File, File), SslContextBuilder keyManager (KeyManagerFactory), OpenSslServerCertificateCallback handle (long, byte[], byte[][]), ChunkedStream close (), SslContextBuilder forServer (PrivateKey, X509Certificate), OpenSslPrivateKey deallocate (), ReferenceCountedOpenSslServerContext newSessionContext (ReferenceCountedOpenSslContext, long, OpenSslEngineMap, X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, String, long, long), SslContextBuilder forServer (KeyManagerFactory), OpenSslCertificateException errorCode (), SniCompletionEvent hostname (), SslContextBuilder enableOcsp (boolean), SslContextBuilder sslProvider (SslProvider), SslContextBuilder keyManager (PrivateKey, String, X509Certificate), SslContextBuilder forServer (KeyManager), SslContextBuilder clientAuth (ClientAuth), SslContextBuilder secureRandom (SecureRandom), OpenSslPrivateKey touch (Object), AbstractSniHandler AbstractSniHandler (long), JdkNpnApplicationProtocolNegotiator JdkNpnApplicationProtocolNegotiator (boolean, boolean, Iterable<String>), SslContextBuilder SslContextBuilder (boolean), SslContextBuilder keyManager (File, File, String), ExtendedTrustManagerVerifyCallback ExtendedTrustManagerVerifyCallback (OpenSslEngineMap, X509ExtendedTrustManager), OpenSslCachingKeyMaterialProvider OpenSslCachingKeyMaterialProvider (X509KeyManager, String, int), SslContextBuilder keyManager (PrivateKey, String, Iterable<? extends X509Certificate>), OpenSslCertificateException OpenSslCertificateException (int), SslContextBuilder keyManager (PrivateKey, Iterable<? extends X509Certificate>), JdkNpnApplicationProtocolNegotiator JdkNpnApplicationProtocolNegotiator (String), AbstractSniHandler fireSniCompletionEvent (ChannelHandlerContext, String, Future<?>), SslContextBuilder protocols (String), AbstractSniHandler extractSniHostname (ByteBuf), JdkNpnApplicationProtocolNegotiator JdkNpnApplicationProtocolNegotiator (ProtocolSelectorFactory, ProtocolSelectionListenerFactory, String), ReferenceCountedOpenSslServerContext ReferenceCountedOpenSslServerContext (X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, Iterable<String>, CipherSuiteFilter, ApplicationProtocolConfig, long, long, ClientAuth, String[], boolean, boolean, String, Map.Entry<SslContextOption<?>,Object>), OpenSslPrivateKeyMaterial OpenSslPrivateKeyMaterial (long, X509Certificate[]), SslContextBuilder applicationProtocolConfig (ApplicationProtocolConfig), SslContextBuilder trustManager (TrustManager), ReferenceCountedOpenSslServerContext ReferenceCountedOpenSslServerContext (X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, Iterable<String>, CipherSuiteFilter, OpenSslApplicationProtocolNegotiator, long, long, ClientAuth, String[], boolean, boolean, String, Map.Entry<SslContextOption<?>,Object>), SslContextBuilder sessionTimeout (long), SniCompletionEvent toString (), OpenSslPrivateKey newKeyMaterial (long, X509Certificate[]), ChunkedStream isEndOfInput (), JdkNpnApplicationProtocolNegotiator JdkNpnApplicationProtocolNegotiator (boolean, Iterable<String>), OpenSslPrivateKey getEncoded (), SslContextBuilder keyManager (InputStream, InputStream, String), SslContextBuilder forServer (PrivateKey, String, Iterable<? extends X509Certificate>), SslContextBuilder trustManager (File), ReferenceCountedOpenSslServerContext setVerifyCallback (long, OpenSslEngineMap, X509TrustManager), OpenSslPrivateKeyMaterial deallocate (), JdkNpnApplicationProtocolNegotiator JdkNpnApplicationProtocolNegotiator (ProtocolSelectorFactory, ProtocolSelectionListenerFactory, Iterable<String>), SslContextBuilder keyManager (PrivateKey, X509Certificate), SslContextBuilder keyManager (File, File), SslContextBuilder forServer (InputStream, InputStream, String), SslContextBuilder forServer (PrivateKey, String, X509Certificate), SslContextBuilder forServer (PrivateKey, Iterable<? extends X509Certificate>), AbstractSniHandler channelActive (ChannelHandlerContext), SslContextBuilder trustManager (X509Certificate), OpenSslPrivateKeyMaterial retain (int), ChunkedStream readChunk (ByteBufAllocator), SniCompletionEvent SniCompletionEvent (String), JdkNpnApplicationProtocolNegotiator JdkNpnApplicationProtocolNegotiator (Iterable<String>), SslContextBuilder keyStoreType (String), AbstractSniHandler run (), SslContextBuilder startTls (boolean), OpenSslPrivateKey privateKeyAddress (), SniCompletionEvent SniCompletionEvent (String, Throwable), SslContextBuilder toArray (Iterable<? extends T>, T[]), TrustManagerVerifyCallback verify (ReferenceCountedOpenSslEngine, X509Certificate[], String)]","1143"
"6","netty/handler","f8bd8e6a117f7824cbbc4f5e2ce45527cde3a67b","5ca8b55c694f35d475853a7c302a1501eedcf166","VAR_DECLARATION_MERGING","12","1","1","[ReferenceCountedOpenSslServerContext newSessionContext (ReferenceCountedOpenSslContext, long, OpenSslEngineMap, X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, String, long, long)]","9"
"8","netty/handler","5ca8b55c694f35d475853a7c302a1501eedcf166","8e1cfd0b4a7912d2478ab7437451be64571eb57e","SWITCH_EQUAL_SIDES","14","1","1","[OpenSslServerCertificateCallback handle (long, byte[], byte[][])]","9"
"15","netty/handler","8e1cfd0b4a7912d2478ab7437451be64571eb57e","fe3fb97c69bc577cc4c0b4e21270259787fc066d","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ReferenceCountedOpenSslServerContext ReferenceCountedOpenSslServerContext (X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, Iterable<String>, CipherSuiteFilter, OpenSslApplicationProtocolNegotiator, long, long, ClientAuth, String[], boolean, boolean, String, Map.Entry<SslContextOption<?>,Object>)]","9"
"21","netty/handler","fe3fb97c69bc577cc4c0b4e21270259787fc066d","e7ff82a49f2fca672cb70fcb373f93911170a25b","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[ReferenceCountedOpenSslServerContext newSessionContext (ReferenceCountedOpenSslContext, long, OpenSslEngineMap, X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, String, long, long)]","9"
"24","netty/handler","e7ff82a49f2fca672cb70fcb373f93911170a25b","b3dbe0ccdd6b16b3d4f6f6705a02f497e10a98b7","VAR_DECLARATION_DIVIDING","13","1","1","[ReferenceCountedOpenSslServerContext newSessionContext (ReferenceCountedOpenSslContext, long, OpenSslEngineMap, X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, String, long, long)]","9"
"25","netty/handler","b3dbe0ccdd6b16b3d4f6f6705a02f497e10a98b7","449ed5d79d6fe292be9cc0e3f71fb892eadfcf50","REVERSE_IF_ELSE","3","1","5","[ReferenceCountedOpenSslServerContext ReferenceCountedOpenSslServerContext (X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, Iterable<String>, CipherSuiteFilter, OpenSslApplicationProtocolNegotiator, long, long, ClientAuth, String[], boolean, boolean, String, Map.Entry<SslContextOption<?>,Object>), ReferenceCountedOpenSslServerContext setVerifyCallback (long, OpenSslEngineMap, X509TrustManager), OpenSslServerCertificateCallback handle (long, byte[], byte[][]), ReferenceCountedOpenSslServerContext newSessionContext (ReferenceCountedOpenSslContext, long, OpenSslEngineMap, X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, String, long, long), OpenSslSniHostnameMatcher match (long, String)]","45"
"26","netty/handler","449ed5d79d6fe292be9cc0e3f71fb892eadfcf50","8c5e9253a85ddcb79e8084dca79141ccdfafd64e","LOCAL_VAR_RENAMING","0","1","3","[ReferenceCountedOpenSslServerContext ReferenceCountedOpenSslServerContext (X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, Iterable<String>, CipherSuiteFilter, OpenSslApplicationProtocolNegotiator, long, long, ClientAuth, String[], boolean, boolean, String, Map.Entry<SslContextOption<?>,Object>), ReferenceCountedOpenSslServerContext sessionContext (), ReferenceCountedOpenSslServerContext newSessionContext (ReferenceCountedOpenSslContext, long, OpenSslEngineMap, X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, String, long, long)]","27"
"0","netty/microbench","8c5e9253a85ddcb79e8084dca79141ccdfafd64e","fc07e09fe2ebe1a8db7e7747ee5c2d1916db4076","SWITCH_STRING_EQUAL","15","1","42","[CompositeByteBufWriteOutBenchmark makeLargeChunks (int), HpackDecoderBenchmark setup (), UnsafeByteBufBenchmark setLongUnsafeByteBuf (), CompositeByteBufWriteOutBenchmark jvmArgs (), CompositeByteBufWriteOutBenchmark setup (), SlicedByteBufBenchmark writeAsciiStringSlice (), AbstractByteBufGetCharSequenceBenchmark getCharSequenceOld (), HpackDecoderBenchmark decode (Blackhole), AbstractByteBufGetCharSequenceBenchmark traverse (CharSequence), UnsafeByteBufBenchmark setup (), HpackDecoderULE128Benchmark decodeMaxInt (), AbstractByteBufGetCharSequenceBenchmark newBuffer (byte[], int), HpackDecoderBenchmark add (CharSequence, CharSequence), CompositeByteBufWriteOutBenchmark makeSmallChunks (int), UnsafeByteBufBenchmark setLongByteBuffer (), CompositeByteBufWriteOutBenchmark teardown (), HpackDecoderULE128Benchmark decodeMaxLong (), HpackDecoderULE128Benchmark decodeULE128 (ByteBuf, long), HpackDecoderULE128Benchmark decodeULE128UsingLong (ByteBuf, int), AbstractByteBufGetCharSequenceBenchmark jvmArgs (), SlicedByteBufBenchmark setup (), CompositeByteBufWriteOutBenchmark sourceBuffers (int), AbstractByteBufGetCharSequenceBenchmark getCharSequence (), HttpFragmentedRequestDecoderBenchmark testDecodeWholeRequestInMultipleStepsMixedDelimiters (), HpackDecoderULE128Benchmark decodeULE128 (ByteBuf, int), HpackDecoderULE128Benchmark decodeMaxIntWithLong (), HpackDecoderULE128Benchmark setup (), SlicedByteBufBenchmark tearDown (), AbstractByteBufGetCharSequenceBenchmark teardown (), SlicedByteBufBenchmark writeAsciiStringSliceAbstract (), HttpFragmentedRequestDecoderBenchmark releaseStepBuffers (), AbstractByteBufGetCharSequenceBenchmark setup (), UnsafeByteBufBenchmark setGetLongUnsafeByteBuf (), HttpFragmentedRequestDecoderBenchmark initPipeline (), HpackDecoderBenchmark teardown (), UnsafeByteBufBenchmark tearDown (), CompositeByteBufWriteOutBenchmark writeFCBB (), UnsafeByteBufBenchmark setGetLongByteBuffer (), CompositeByteBufWriteOutBenchmark writeCBB (), HpackDecoderBenchmark getSerializedHeaders (Http2Headers, boolean), HttpFragmentedRequestDecoderBenchmark stepsBuffers (ByteBufAllocator, byte[], int, boolean), HpackDecoderULE128Benchmark decodeMaxIntUsingLong ()]","294"
"1","netty/microbench","fc07e09fe2ebe1a8db7e7747ee5c2d1916db4076","d3dd658bdfcf20f45e1fe397e84e994ac8fed0db","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SlicedByteBufBenchmark setup ()]","7"
"10","netty/microbench","d3dd658bdfcf20f45e1fe397e84e994ac8fed0db","0de6a32d61faf192e66b3be48dbf6a99f3607bed","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[UnsafeByteBufBenchmark setup ()]","7"
"24","netty/microbench","0de6a32d61faf192e66b3be48dbf6a99f3607bed","2704cc8ae0bdeec3c46e8fd101c9142121f17ee6","FOR_TO_WHILE","1","1","1","[SlicedByteBufBenchmark setup ()]","7"
"25","netty/microbench","2704cc8ae0bdeec3c46e8fd101c9142121f17ee6","b01d6a55a4d7cce4af3ecf0adac7cb19e427f70b","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SlicedByteBufBenchmark setup ()]","7"
"27","netty/microbench","b01d6a55a4d7cce4af3ecf0adac7cb19e427f70b","c6b11c8994c23eaf3c87e0a32b8ac9e3007169d8","SWITCH_EQUAL_SIDES","14","1","1","[SlicedByteBufBenchmark setup ()]","7"
"0","netty/resolver-dns-classes-macos","c6b11c8994c23eaf3c87e0a32b8ac9e3007169d8","7ef21dcc4862e4d44193bb5a878ff7855a33275e","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","17","[MacOSDnsServerAddressStreamProvider resolvers (), DnsResolver port (), MacOSDnsServerAddressStreamProvider nameServerAddressStream (String), MacOSDnsServerAddressStreamProvider compare (DnsResolver, DnsResolver), MacOSDnsServerAddressStreamProvider loadNativeLibrary (), DnsResolver nameservers (), DnsResolver options (), MacOSDnsServerAddressStreamProvider unavailabilityCause (), MacOSDnsServerAddressStreamProvider MacOSDnsServerAddressStreamProvider (), MacOSDnsServerAddressStreamProvider retrieveCurrentMappings (), MacOSDnsServerAddressStreamProvider isAvailable (), DnsResolver DnsResolver (String, byte[][], int, String[], String, int, int), DnsResolver domain (), DnsResolver searchOrder (), DnsResolver searches (), MacOSDnsServerAddressStreamProvider ensureAvailability (), DnsResolver timeout ()]","34"
"5","netty/resolver-dns-classes-macos","7ef21dcc4862e4d44193bb5a878ff7855a33275e","6b725a29e16f438407588ea67c47f5818d59b975","SWITCH_EQUAL_SIDES","14","1","2","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String), MacOSDnsServerAddressStreamProvider retrieveCurrentMappings ()]","4"
"9","netty/resolver-dns-classes-macos","6b725a29e16f438407588ea67c47f5818d59b975","f33a7e89dcc889cd5663a77649e9f539fcb6ffc5","LOCAL_VAR_RENAMING","0","1","2","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String), MacOSDnsServerAddressStreamProvider retrieveCurrentMappings ()]","4"
"11","netty/resolver-dns-classes-macos","f33a7e89dcc889cd5663a77649e9f539fcb6ffc5","d7f5b06b5ebb5c89533f7d71aa7b1e7b543b594c","LOCAL_VAR_RENAMING","0","1","2","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String), MacOSDnsServerAddressStreamProvider compare (DnsResolver, DnsResolver)]","4"
"14","netty/resolver-dns-classes-macos","d7f5b06b5ebb5c89533f7d71aa7b1e7b543b594c","5effba8ccc288394fd1467924e7404d0042642e7","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[MacOSDnsServerAddressStreamProvider retrieveCurrentMappings (), MacOSDnsServerAddressStreamProvider loadNativeLibrary ()]","4"
"15","netty/resolver-dns-classes-macos","5effba8ccc288394fd1467924e7404d0042642e7","c87a2775f6a473ae5edd364aa75eb0b6c253e7fb","LOCAL_VAR_RENAMING","0","1","2","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String), MacOSDnsServerAddressStreamProvider compare (DnsResolver, DnsResolver)]","4"
"17","netty/resolver-dns-classes-macos","c87a2775f6a473ae5edd364aa75eb0b6c253e7fb","f5c13840b7dcd57d21a13d35ce2117be06006e59","STATEMENTS_ORDER_REARRANGEMENT","10","1","3","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String), MacOSDnsServerAddressStreamProvider retrieveCurrentMappings (), MacOSDnsServerAddressStreamProvider loadNativeLibrary ()]","6"
"21","netty/resolver-dns-classes-macos","f5c13840b7dcd57d21a13d35ce2117be06006e59","bca29731d346e72e2d3a74c5384ca6c39584dbb2","STATEMENTS_ORDER_REARRANGEMENT","10","1","3","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String), MacOSDnsServerAddressStreamProvider retrieveCurrentMappings (), MacOSDnsServerAddressStreamProvider loadNativeLibrary ()]","6"
"22","netty/resolver-dns-classes-macos","bca29731d346e72e2d3a74c5384ca6c39584dbb2","eed952c3b267ee67e5c58075880f18eab5f2c608","REVERSE_IF_ELSE","3","1","1","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String)]","2"
"26","netty/resolver-dns-classes-macos","eed952c3b267ee67e5c58075880f18eab5f2c608","6bd2af41758102dfa58ef395f5b6d9f522375cb2","REVERSE_IF_ELSE","3","1","1","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String)]","2"
"27","netty/resolver-dns-classes-macos","6bd2af41758102dfa58ef395f5b6d9f522375cb2","c167cd5eb3658593d670bc33b3a8b824115cc050","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String)]","2"
"29","netty/resolver-dns-classes-macos","c167cd5eb3658593d670bc33b3a8b824115cc050","eb483b0afc74a7649dbcc881e5b3e61731ec83d9","REVERSE_IF_ELSE","3","1","2","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String), MacOSDnsServerAddressStreamProvider retrieveCurrentMappings ()]","4"
"0","netty/resolver-dns","eb483b0afc74a7649dbcc881e5b3e61731ec83d9","36c8da4cee71c9fcfc35a35fe1444b0804f205f0","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","168","[DnsNameResolver run (), Builder setNdots (int), DatagramDnsQueryContext DatagramDnsQueryContext (Channel, Future<? extends Channel>, InetSocketAddress, DnsQueryContextManager, int, boolean, long, DnsQuestion, DnsRecord[], Promise<AddressedEnvelope<DnsResponse,InetSocketAddress>>, Bootstrap, boolean), DnsNameResolverBuilder queryServerAddressStream (DnsServerAddressStream), DnsNameResolver DnsNameResolver (EventLoop, ChannelFactory<? extends DatagramChannel>, DnsCache, DnsCache, DnsQueryLifecycleObserverFactory, long, ResolvedAddressTypes, boolean, int, boolean, int, boolean, HostsFileEntriesResolver, DnsServerAddressStreamProvider, String[], int, boolean), DnsNameResolverBuilder maxQueriesPerResolve (int), DnsNameResolverBuilder resolveCache (DnsCache), DnsNameResolver loopbackAddress (), UnixResolverOptions UnixResolverOptions (int, int, int), DnsNameResolverBuilder getOrNewAuthoritativeDnsServerCache (), DefaultDnsCnameCache DefaultDnsCnameCache (), DnsNameResolver queryTimeoutMillis (), DnsNameResolverBuilder copy (), DnsNameResolver cnameCache (), UnixResolverOptions newBuilder (), UnixResolverOptions timeout (), DnsNameResolverBuilder cnameCache (DnsCnameCache), DefaultDnsCnameCache clear (String), DnsNameResolverBuilder resolvedAddressTypes (ResolvedAddressTypes), DnsQueryIdRange maxUsableIds (), DnsNameResolver doResolve (String, DnsRecord[], Promise<InetAddress>, DnsCache), DnsNameResolver nextNameServerAddress (), DnsNameResolver isDecodeIdn (), DnsNameResolver trySuccess (Promise<T>, T), DnsNameResolverBuilder newQueryServerAddressStream (DnsServerAddressStreamProvider), DnsNameResolver resolveAll (DnsQuestion, Iterable<DnsRecord>, Promise<List<DnsRecord>>), DnsNameResolver validateAdditional (DnsRecord, boolean), DatagramDnsQueryContext protocol (), DnsNameResolverBuilder socketChannelFactory (ChannelFactory<? extends SocketChannel>), DnsNameResolver isOptResourceEnabled (), DnsNameResolver doResolveCached (String, DnsRecord[], Promise<InetAddress>, DnsCache), DatagramDnsQueryContext newQuery (int, InetSocketAddress), DnsNameResolver resolveRecordTypes (), DnsNameResolver dnsQueryLifecycleObserverFactory (), Builder build (), DnsNameResolverBuilder ndots (int), DnsNameResolverBuilder channelFactory (), DnsNameResolverBuilder nameServerProvider (DnsServerAddressStreamProvider), DefaultDnsCnameCache DefaultDnsCnameCache (int, int), DefaultDnsCnameCache minTtl (), DnsNameResolverBuilder channelType (Class<? extends DatagramChannel>), Builder setTimeout (int), DnsNameResolver supportsAAAARecords (), DnsNameResolver isTransportOrTimeoutError (Throwable), DnsNameResolver query (DnsQuestion, Iterable<DnsRecord>), Builder Builder (), DnsNameResolverBuilder build (), DnsQueryIdRange nextId (), DnsNameResolverBuilder searchDomains (Iterable<String>), DnsNameResolver operationComplete (Future<List<InetAddress>>), DnsNameResolver resolve (String, Iterable<DnsRecord>, Promise<InetAddress>), DnsNameResolver doResolveAllUncached (String, DnsRecord[], Promise<?>, Promise<List<InetAddress>>, DnsCache, boolean), DnsNameResolverBuilder negativeTtl (int), DnsQueryContextManager toIPv4Address (Inet6Address), DnsNameResolver query (DnsQuestion, Promise<AddressedEnvelope<? extends DnsResponse,InetSocketAddress>>), DnsNameResolver query (InetSocketAddress, DnsQuestion, Promise<AddressedEnvelope<? extends DnsResponse,InetSocketAddress>>), DnsQueryIdRange DnsQueryIdRange (int, int), DnsNameResolverBuilder channelFactory (ChannelFactory<? extends DatagramChannel>), DnsNameResolverBuilder ttl (int, int), DnsNameResolverBuilder dnsQueryLifecycleObserverFactory (DnsQueryLifecycleObserverFactory), DnsNameResolver isLocalWindowsHost (String), DnsNameResolver close (), DnsNameResolver anyInterfaceSupportsIpV6 (), DnsNameResolver maxQueriesPerResolve (), DnsResponseHandler channelActive (ChannelHandlerContext), DnsQueryContextMap add (DnsQueryContext), DnsNameResolver newNameServerAddressStream (String), DnsNameResolverBuilder DnsNameResolverBuilder (), DnsNameResolver operationComplete (ChannelFuture), DnsNameResolver query (InetSocketAddress, DnsQuestion, Iterable<DnsRecord>), DnsQueryIdSpace nextId (), DnsNameResolver resolveHostsFileEntry (String), UnixResolverOptions attempts (), DnsQueryContextMap get (int), DnsNameResolverBuilder consolidateCacheSize (int), DnsQueryIdSpace usableIds (), DnsNameResolverBuilder socketChannelType (Class<? extends SocketChannel>, boolean), DnsNameResolver doResolveAll (String, DnsRecord[], Promise<List<InetAddress>>, DnsCache), DnsNameResolver doResolveAllUncached0 (String, DnsRecord[], Promise<?>, Promise<List<InetAddress>>, DnsCache, boolean), Builder setAttempts (int), DnsQueryContextMap remove (int), DnsNameResolver resolveAll (String, Iterable<DnsRecord>), DnsNameResolver doResolveUncached (String, DnsRecord[], Promise<InetAddress>, DnsCache, boolean), DnsNameResolver toArray (Iterable<DnsRecord>, boolean), DnsQueryIdSpace maxUsableIds (), DefaultDnsCnameCache clear (), DnsNameResolverBuilder queryServerAddressStream (), DnsNameResolver tryFailure (Promise<?>, Throwable), DnsNameResolver newRedirectDnsServerStream (String, List<InetSocketAddress>), DnsResponseHandler channelRead (ChannelHandlerContext, Object), DnsNameResolverBuilder getOrNewCnameCache (), DnsNameResolver resolvedAddressTypes (), DnsNameResolver doResolve (String, Promise<InetAddress>), DnsNameResolver searchDomains (), DnsNameResolverBuilder hostsFileEntriesResolver (HostsFileEntriesResolver), DnsNameResolver preferredAddressType (ResolvedAddressTypes), DnsNameResolverBuilder maxPayloadSize (int), DnsQueryIdSpace pushId (int), DnsQueryContextManager getOrCreateContextMap (InetSocketAddress), DnsResponseHandler exceptionCaught (ChannelHandlerContext, Throwable), DnsNameResolver doResolveAll (String, Promise<List<InetAddress>>), DnsNameResolverBuilder computeResolvedAddressTypes (InternetProtocolFamily), DefaultDnsCnameCache equals (String, String), DnsNameResolver newRedirectServerAddress (InetAddress), DefaultDnsCnameCache get (String), DnsNameResolver isTimeoutError (Throwable), DnsNameResolver hasEntries (List<? extends DnsCacheEntry>), DnsQueryIdRange pushId (int), DnsNameResolverBuilder recursionDesired (boolean), DnsNameResolver authoritativeDnsServerCache (), DnsNameResolver query (DnsQuestion), DnsNameResolverBuilder queryTimeoutMillis (long), UnixResolverOptions toString (), DnsNameResolver decodeResponse (ChannelHandlerContext, DatagramPacket), DnsQueryContextManager getContextMap (InetSocketAddress), DnsNameResolver supportsARecords (), DnsNameResolver isSharable (), DnsNameResolver isRecursionDesired (), DnsNameResolver resolveCache (), DnsNameResolverBuilder nameServerProvider (), DefaultDnsCnameCache cache (String, String, long, EventLoop), DnsNameResolverBuilder getOrNewCache (), DnsNameResolverBuilder DnsNameResolverBuilder (EventLoop), DnsNameResolver resolveAll (DnsQuestion), DnsNameResolver ndots (), DnsNameResolver hostname (String), DnsQueryIdSpace DnsQueryIdSpace (), DnsQueryContextManager add (InetSocketAddress, DnsQueryContext), DnsNameResolverBuilder authoritativeDnsServerCache (DnsCache), DnsNameResolverBuilder traceEnabled (boolean), DnsNameResolver initChannel (DatagramChannel), DnsNameResolver query (InetSocketAddress, DnsQuestion, Iterable<DnsRecord>, Promise<AddressedEnvelope<? extends DnsResponse,InetSocketAddress>>), DnsResponseHandler DnsResponseHandler (Promise<Channel>), DnsNameResolver resolveAll (DnsQuestion, DnsRecord[], Promise<List<DnsRecord>>), DnsNameResolverBuilder localAddress (SocketAddress), DnsNameResolverBuilder eventLoop (EventLoop), DnsQueryIdRange usableIds (), DnsNameResolverBuilder socketChannelType (Class<? extends SocketChannel>), DnsNameResolverBuilder authoritativeDnsServerCache (AuthoritativeDnsServerCache), DnsNameResolver cast (Promise<?>), DnsNameResolver doResolveAllCached (String, DnsRecord[], Promise<List<InetAddress>>, DnsCache, String[], int, InternetProtocolFamily[]), DnsNameResolver query (InetSocketAddress, DnsQuestion), DnsNameResolver getSearchDomainsHack (), DnsNameResolverBuilder decodeIdn (boolean), DnsNameResolver resolve (String, Iterable<DnsRecord>), DnsNameResolver maxPayloadSize (), DnsNameResolver resolveAll (String, Iterable<DnsRecord>, Promise<List<InetAddress>>), DnsNameResolver resolveNow (String, DnsRecord[], Promise<?>, Promise<List<InetAddress>>, DnsCache, boolean), DnsNameResolverBuilder optResourceEnabled (boolean), UnixResolverOptions ndots (), DnsNameResolver queryDnsServerAddressStream (), DnsQueryIdSpace newBucket (int), DnsNameResolver resolvedInternetProtocolFamiliesUnsafe (), DnsNameResolver preferredAddressType (), DnsNameResolverBuilder socketChannelFactory (ChannelFactory<? extends SocketChannel>, boolean), DefaultDnsCnameCache shouldReplaceAll (String), DefaultDnsCnameCache maxTtl (), DnsNameResolver executor (), DnsNameResolverBuilder completeOncePreferredResolved (boolean), DnsQueryContextManager get (InetSocketAddress, int), DnsNameResolver hostsFileEntriesResolver (), DnsNameResolver DnsNameResolver (EventLoop, ChannelFactory<? extends DatagramChannel>, ChannelFactory<? extends SocketChannel>, boolean, DnsCache, DnsCnameCache, AuthoritativeDnsServerCache, SocketAddress, DnsQueryLifecycleObserverFactory, long, ResolvedAddressTypes, boolean, int, boolean, int, boolean, HostsFileEntriesResolver, DnsServerAddressStreamProvider, DnsServerAddressStream, String[], int, boolean, boolean, int), DnsNameResolver DnsNameResolver (EventLoop, ChannelFactory<? extends DatagramChannel>, DnsCache, AuthoritativeDnsServerCache, DnsQueryLifecycleObserverFactory, long, ResolvedAddressTypes, boolean, int, boolean, int, boolean, HostsFileEntriesResolver, DnsServerAddressStreamProvider, String[], int, boolean), DnsNameResolver doQuery (Channel, Future<? extends Channel>, InetSocketAddress, DnsQuestion, DnsQueryLifecycleObserver, DnsRecord[], boolean, Promise<AddressedEnvelope<? extends DnsResponse,InetSocketAddress>>), DnsNameResolver resolveAll (DnsQuestion, Iterable<DnsRecord>), DnsNameResolver resolveHostsFileEntries (String), DnsQueryContextManager remove (InetSocketAddress, int), DnsQueryContextManager toCompactAddress (Inet4Address)]","1176"
"8","netty/resolver-dns","36c8da4cee71c9fcfc35a35fe1444b0804f205f0","f9673d560913913e612b8fc7770c64d0889458f7","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[UnixResolverOptions UnixResolverOptions (int, int, int)]","7"
"29","netty/resolver-dns","f9673d560913913e612b8fc7770c64d0889458f7","fd6402cad231c694c25d862e5186f796dabdce34","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[UnixResolverOptions UnixResolverOptions (int, int, int)]","7"
"0","netty/resolver","fd6402cad231c694c25d862e5186f796dabdce34","4e501c41964d3de77d29b00b71ddf493276d4461","STATEMENTS_ORDER_REARRANGEMENT","10","1","42","[RoundRobinInetAddressResolver doResolve (String, Promise<InetAddress>), AddressResolverGroup close (), Parser parse (Reader), ParserImpl parseSilently (), Parser parse (), ParserImpl parse (File, Charset), RoundRobinInetAddressResolver doResolveAll (String, Promise<List<InetAddress>>), HostsFileParser parse (File, Charset), ParserImpl ParserImpl (), AddressResolverGroup AddressResolverGroup (), Parser ipv6Entries (), ParserImpl parse (Reader), Parser ipv4Entries (), RoundRobinInetAddressResolver close (), Parser parseSilently (), HostsFileParser parse (File), HostsFileParser parse (), RoundRobinInetAddressResolver RoundRobinInetAddressResolver (EventExecutor, NameResolver<InetAddress>), Parser parse (Charset), HostsFileParser HostsFileParser (), InetNameResolver InetNameResolver (EventExecutor), AddressResolverGroup newResolver (EventExecutor), HostsFileParser parse (Reader), ParserImpl parseSilently (Charset), AddressResolverGroup getResolver (EventExecutor), ParserImpl parse (), AddressResolverGroup operationComplete (Future<Object>), HostsFileParser parseSilently (), Parser HostsFileEntriesProvider (Map<String,List<InetAddress>>, Map<String,List<InetAddress>>), ParserImpl parse (Charset), ParserImpl parseSilently (File, Charset), Parser parseSilently (Charset), HostsFileParser parseSilently (Charset), RoundRobinInetAddressResolver operationComplete (Future<List<InetAddress>>), RoundRobinInetAddressResolver randomIndex (int), Parser parse (File, Charset), Parser parseSilently (File, Charset), HostsFileParser hostsFileEntries (HostsFileEntriesProvider), InetNameResolver asAddressResolver (), ParserImpl locateHostsFile (), HostsFileParser toMapWithSingleValue (Map<String,List<InetAddress>>), Parser parser ()]","210"
"4","netty/resolver","4e501c41964d3de77d29b00b71ddf493276d4461","5f670be1c874891e4c80fd466af89ba2cfa22671","REVERSE_IF_ELSE","3","1","1","[AddressResolverGroup getResolver (EventExecutor)]","5"
"5","netty/resolver","5f670be1c874891e4c80fd466af89ba2cfa22671","e62701d7ae1551ecd653dcd08d5ffdd47093fe05","LOCAL_VAR_RENAMING","0","1","2","[AddressResolverGroup getResolver (EventExecutor), AddressResolverGroup operationComplete (Future<Object>)]","10"
"6","netty/resolver","e62701d7ae1551ecd653dcd08d5ffdd47093fe05","5c7718e0d25b77b8c43058eae329f8861455c906","REVERSE_IF_ELSE","3","1","1","[AddressResolverGroup getResolver (EventExecutor)]","5"
"12","netty/resolver","5c7718e0d25b77b8c43058eae329f8861455c906","ab79ec749bd7a95401063e74e22216343ac9691d","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[AddressResolverGroup close (), AddressResolverGroup getResolver (EventExecutor)]","10"
"16","netty/resolver","ab79ec749bd7a95401063e74e22216343ac9691d","0b16a878f142a3ca07be1885b55ca34758f977d4","LOCAL_VAR_RENAMING","0","1","3","[AddressResolverGroup close (), AddressResolverGroup getResolver (EventExecutor), AddressResolverGroup operationComplete (Future<Object>)]","15"
"19","netty/resolver","0b16a878f142a3ca07be1885b55ca34758f977d4","04bb6ff7f33c677798b3e394e53364ffafbd3d29","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[AddressResolverGroup close (), AddressResolverGroup getResolver (EventExecutor)]","10"
"0","netty/testsuite-autobahn","04bb6ff7f33c677798b3e394e53364ffafbd3d29","b931271030fd262422fc0f2df42b6fe9a89c85ca","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","11","[AutobahnServer AutobahnServer (int), AutobahnServerHandler sendHttpResponse (ChannelHandlerContext, HttpRequest, FullHttpResponse), AutobahnServerHandler handleHttpRequest (ChannelHandlerContext, HttpRequest), AutobahnServerInitializer initChannel (SocketChannel), AutobahnServer main (String[]), AutobahnServer run (), AutobahnServerHandler getWebSocketLocation (HttpRequest), AutobahnServerHandler channelReadComplete (ChannelHandlerContext), AutobahnServerHandler handleWebSocketFrame (ChannelHandlerContext, WebSocketFrame), AutobahnServerHandler exceptionCaught (ChannelHandlerContext, Throwable), AutobahnServerHandler channelRead (ChannelHandlerContext, Object)]","33"
"21","netty/testsuite-autobahn","b931271030fd262422fc0f2df42b6fe9a89c85ca","963f2be3261fc7dae4507523245fc2b08cd7e812","LOCAL_VAR_RENAMING","0","1","1","[AutobahnServerInitializer initChannel (SocketChannel)]","3"
"25","netty/testsuite-autobahn","963f2be3261fc7dae4507523245fc2b08cd7e812","a843b25dfaaf2bc36558b5d9448fd944f7bc0b18","LOCAL_VAR_RENAMING","0","1","1","[AutobahnServerInitializer initChannel (SocketChannel)]","3"
"0","netty/testsuite-http2","a843b25dfaaf2bc36558b5d9448fd944f7bc0b18","6c409e6ebf3bddb0e82d73b355a82f9393d87d63","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","3","[Http2Server Http2Server (int), Http2Server main (String[]), Http2Server run ()]","3"
"2","netty/testsuite-http2","6c409e6ebf3bddb0e82d73b355a82f9393d87d63","831b7d864dd8fe3f1d2c3d81a0cfb3949b9bf517","LOCAL_VAR_RENAMING","0","1","2","[Http2Server Http2Server (int), Http2Server run ()]","2"
"5","netty/testsuite-http2","831b7d864dd8fe3f1d2c3d81a0cfb3949b9bf517","3a69881e3ad8d496d6333b093945b659ef01e843","LOCAL_VAR_RENAMING","0","1","2","[Http2Server Http2Server (int), Http2Server run ()]","2"
"6","netty/testsuite-http2","3a69881e3ad8d496d6333b093945b659ef01e843","0f409d186368a3b522e6586dd2b0005f27918251","LOCAL_VAR_RENAMING","0","1","2","[Http2Server Http2Server (int), Http2Server run ()]","2"
"0","netty/testsuite-native-image-client-runtime-init","0f409d186368a3b522e6586dd2b0005f27918251","4646f63990921cb59834cdf3093c627bd92298dd","VAR_DECLARATION_MERGING","12","1","2","[NativeClientWithNettyInitAtRuntime main (String[]), NativeClientWithNettyInitAtRuntime NativeClientWithNettyInitAtRuntime ()]","2"
"8","netty/testsuite-native-image-client-runtime-init","4646f63990921cb59834cdf3093c627bd92298dd","ca29b7680d7760dfa289448da1ea7acfd804e61d","LOCAL_VAR_RENAMING","0","1","1","[NativeClientWithNettyInitAtRuntime main (String[])]","1"
"20","netty/testsuite-native-image-client-runtime-init","ca29b7680d7760dfa289448da1ea7acfd804e61d","53a58c6152e2abba0134c0566c27223ea326bd67","LOCAL_VAR_RENAMING","0","1","1","[NativeClientWithNettyInitAtRuntime main (String[])]","1"
"0","netty/testsuite-native-image-client","53a58c6152e2abba0134c0566c27223ea326bd67","2380a234ad24251111a77a8d9255d400cc970b2c","CASE_TO_IF_ELSE","17","1","2","[DnsNativeClient DnsNativeClient (), DnsNativeClient main (String[])]","2"
"16","netty/testsuite-native-image-client","2380a234ad24251111a77a8d9255d400cc970b2c","7f2e67c54c2d93ae3d7f312fe1dbfab5b2f06835","LOCAL_VAR_RENAMING","0","1","1","[DnsNativeClient main (String[])]","1"
"22","netty/testsuite-native-image-client","7f2e67c54c2d93ae3d7f312fe1dbfab5b2f06835","5f3225140ccc059cf19dc25394cde58ce5d2e77d","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DnsNativeClient main (String[])]","1"
"24","netty/testsuite-native-image-client","5f3225140ccc059cf19dc25394cde58ce5d2e77d","16dad4656607d5d433e177318c438cb334bcac1c","LOCAL_VAR_RENAMING","0","1","1","[DnsNativeClient main (String[])]","1"
"0","netty/testsuite-native-image","16dad4656607d5d433e177318c438cb334bcac1c","ea64b591dfa5f6b937c72ff9e9842f3ee2bcf759","STATEMENTS_ORDER_REARRANGEMENT","10","1","6","[HttpNativeServer HttpNativeServer (), HttpNativeServerHandler channelReadComplete (ChannelHandlerContext), HttpNativeServerInitializer initChannel (SocketChannel), HttpNativeServerHandler channelRead0 (ChannelHandlerContext, HttpObject), HttpNativeServerHandler exceptionCaught (ChannelHandlerContext, Throwable), HttpNativeServer main (String[])]","18"
"4","netty/testsuite-native-image","ea64b591dfa5f6b937c72ff9e9842f3ee2bcf759","cdc8ca9e70c12e79f1890b54082f9f99122cd754","LOCAL_VAR_RENAMING","0","1","2","[HttpNativeServerHandler channelReadComplete (ChannelHandlerContext), HttpNativeServerHandler exceptionCaught (ChannelHandlerContext, Throwable)]","6"
"22","netty/testsuite-native-image","cdc8ca9e70c12e79f1890b54082f9f99122cd754","cbe6faee3af7e2ae141231efbf15faf54459f9ac","LOCAL_VAR_RENAMING","0","1","2","[HttpNativeServerHandler channelRead0 (ChannelHandlerContext, HttpObject), HttpNativeServerHandler exceptionCaught (ChannelHandlerContext, Throwable)]","6"
"0","netty/testsuite","cbe6faee3af7e2ae141231efbf15faf54459f9ac","5da0729008fb1044e52e96a63ae93abc52d6444a","REVERSE_IF_ELSE","3","1","82","[EchoHandler exceptionCaught (ChannelHandlerContext, Throwable), SocketStartTlsTest testStartTlsNotAutoRead (ServerBootstrap, Bootstrap, SslContext, SslContext), StartTlsClientHandler StartTlsClientHandler (SSLEngine, boolean), TestNumReadsRecvByteBufAllocator newHandle (), SocketStartTlsTest testStartTls (ServerBootstrap, Bootstrap, SslContext, SslContext, boolean), SocketReadPendingTest testReadPendingIsResetAfterEachRead (ServerBootstrap, Bootstrap), SocketEchoTest run (ServerBootstrap, Bootstrap), SocketEchoTest testSimpleEchoWithAdditionalExecutorAndVoidPromise (ServerBootstrap, Bootstrap), TestNumReadsRecvByteBufAllocator lastBytesRead (int), SocketEchoTest testSimpleEcho0 (ServerBootstrap, Bootstrap, boolean, boolean, boolean), SocketEchoTest testSimpleEchoWithVoidPromise (ServerBootstrap, Bootstrap), TestNumReadsRecvByteBufAllocator allocate (ByteBufAllocator), SocketEchoTest testSimpleEchoWithVoidPromiseNotAutoRead (ServerBootstrap, Bootstrap), TestNumReadsRecvByteBufAllocator attemptedBytesRead (int), TestNumReadsRecvByteBufAllocator readComplete (), DatagramConnectNotExistsTest exceptionCaught (ChannelHandlerContext, Throwable), ServerSocketSuspendTest run (ServerBootstrap), StartTlsServerHandler channelReadComplete (ChannelHandlerContext), SocketEchoTest testSimpleEchoWithVoidPromise (TestInfo), SocketStartTlsTest shutdownExecutor (), ReadPendingReadHandler channelReadComplete (ChannelHandlerContext), TestNumReadsRecvByteBufAllocator reset (ChannelConfig), ReadPendingReadHandler assertAllRead (), StartTlsClientHandler exceptionCaught (ChannelHandlerContext, Throwable), EchoHandler channelReadComplete (ChannelHandlerContext), SocketEchoTest testSimpleEchoWithAdditionalExecutorNotAutoRead (ServerBootstrap, Bootstrap), StartTlsServerHandler StartTlsServerHandler (SSLEngine, boolean), EchoHandler EchoHandler (boolean), SocketEchoTest testSimpleEcho (TestInfo), SocketStartTlsTest initChannel (Channel), ReadPendingReadHandler channelRead (ChannelHandlerContext, Object), SocketEchoTest testSimpleEchoNotAutoRead (TestInfo), TestNumReadsRecvByteBufAllocator attemptedBytesRead (), SocketStartTlsTest data (), SocketEchoTest destroyGroup (), SocketEchoTest testSimpleEchoWithAdditionalExecutorNotAutoRead (TestInfo), SocketStartTlsTest run (ServerBootstrap, Bootstrap), SocketStartTlsTest testStartTls (ServerBootstrap, Bootstrap, SslContext, SslContext), SocketStartTlsTest createExecutor (), SocketEchoTest testSimpleEcho (ServerBootstrap, Bootstrap), ReadPendingInitializer initChannel (Channel), DatagramConnectNotExistsTest testConnectNotExists (TestInfo), SocketEchoTest initChannel (Channel), StartTlsClientHandler channelRead0 (ChannelHandlerContext, String), SocketEchoTest testSimpleEchoWithAdditionalExecutorAndVoidPromise (TestInfo), DatagramConnectNotExistsTest run (Bootstrap), AcceptedChannelCounter AcceptedChannelCounter (int), SocketEchoTest testSimpleEchoWithAdditionalExecutor (ServerBootstrap, Bootstrap), SocketEchoTest testSimpleEchoNotAutoRead (ServerBootstrap, Bootstrap), BootstrapComboFactory newServerInstance (), BootstrapFactory newInstance (), StartTlsServerHandler channelRead0 (ChannelHandlerContext, String), SocketEchoTest exceptionCaught (ChannelHandlerContext, Throwable), TestNumReadsRecvByteBufAllocator continueReading (UncheckedBooleanSupplier), EchoHandler channelActive (ChannelHandlerContext), StartTlsServerHandler channelActive (ChannelHandlerContext), StartTlsClientHandler channelReadComplete (ChannelHandlerContext), TestsuitePermutation allocator (), SocketReadPendingTest run (ServerBootstrap, Bootstrap), StartTlsClientHandler channelActive (ChannelHandlerContext), SocketReadPendingTest testReadPendingIsResetAfterEachRead (TestInfo), AcceptedChannelCounter channelActive (ChannelHandlerContext), SocketStartTlsTest testStartTlsNotAutoRead (SslContext, SslContext, TestInfo), EchoHandler channelRead0 (ChannelHandlerContext, ByteBuf), SocketEchoTest testSimpleEchoWithVoidPromiseNotAutoRead (TestInfo), AbstractSctpTest configure (ServerBootstrap, Bootstrap, ByteBufAllocator), TestNumReadsRecvByteBufAllocator continueReading (), BootstrapComboFactory newClientInstance (), DatagramConnectNotExistsTest newFactories (), ServerSocketSuspendTest testSuspendAndResumeAccept (ServerBootstrap), DatagramConnectNotExistsTest testConnectNotExists (Bootstrap), SocketStartTlsTest testStartTls (SslContext, SslContext, TestInfo), SocketEchoTest createGroup (), SocketEchoTest testSimpleEchoWithAdditionalExecutor (TestInfo), TestNumReadsRecvByteBufAllocator lastBytesRead (), TestNumReadsRecvByteBufAllocator guess (), TestNumReadsRecvByteBufAllocator incMessagesRead (int), StartTlsServerHandler exceptionCaught (ChannelHandlerContext, Throwable), TestsuitePermutation TestsuitePermutation (), AbstractSctpTest newFactories (), TestNumReadsRecvByteBufAllocator TestNumReadsRecvByteBufAllocator (int), ServerSocketSuspendTest testSuspendAndResumeAccept (TestInfo)]","574"
"12","netty/testsuite","5da0729008fb1044e52e96a63ae93abc52d6444a","958cc1df80bb2f2aafd183665809505518a876f9","LOCAL_VAR_RENAMING","0","1","4","[DatagramConnectNotExistsTest testConnectNotExists (Bootstrap), DatagramConnectNotExistsTest exceptionCaught (ChannelHandlerContext, Throwable), DatagramConnectNotExistsTest testConnectNotExists (TestInfo), DatagramConnectNotExistsTest run (Bootstrap)]","28"
"24","netty/testsuite","958cc1df80bb2f2aafd183665809505518a876f9","ff80fbb1d1db597f8d8a440b561bfc1393df30f8","REVERSE_IF_ELSE","3","1","1","[DatagramConnectNotExistsTest testConnectNotExists (Bootstrap)]","7"
"26","netty/testsuite","ff80fbb1d1db597f8d8a440b561bfc1393df30f8","2884f2d2315c8be762b867d9329c00b64203c664","LOCAL_VAR_RENAMING","0","1","4","[DatagramConnectNotExistsTest testConnectNotExists (Bootstrap), DatagramConnectNotExistsTest exceptionCaught (ChannelHandlerContext, Throwable), DatagramConnectNotExistsTest testConnectNotExists (TestInfo), DatagramConnectNotExistsTest run (Bootstrap)]","28"
"0","netty/transport-classes-epoll","2884f2d2315c8be762b867d9329c00b64203c664","fb4477557e164153cc61f0b22c9648dbc233fde3","SWITCH_STRING_EQUAL","15","1","157","[Epoll isTcpFastOpenServerSideAvailable (), EpollSocketChannelConfig setWriteBufferHighWaterMark (int), EpollSocketChannelConfig setIpBindAddressNoPort (boolean), EpollSocketChannelConfig setTcpMd5Sig (Map<InetAddress,byte[]>), Native splice (int, long, int, long, long), EpollEventLoopGroup EpollEventLoopGroup (ThreadFactory), EpollSocketChannelConfig getSendBufferSize (), Native epollWait0 (int, long, int, int, int, int, long), Native eventFd (), Native offsetofEpollData (), EpollSocketChannelConfig setAutoClose (boolean), Native sendmmsg0 (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket[], int, int), EpollSocketChannelConfig getOption (ChannelOption<T>), EpollSocketChannelConfig setAutoRead (boolean), EpollServerSocketChannel config (), EpollSocketChannelConfig isIpBindAddressNoPort (), EpollServerChannelConfig setMaxMessagesPerRead (int), EpollEventLoopGroup EpollEventLoopGroup (int, Executor, EventExecutorChooserFactory, SelectStrategyFactory, RejectedExecutionHandler, EventLoopTaskQueueFactory, EventLoopTaskQueueFactory), EpollSocketChannelConfig getTcpKeepCnt (), EpollSocketChannelConfig setSoLinger (int), EpollServerChannelConfig setBacklog (int), EpollSocketChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), Native recvmsg (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket), Epoll Epoll (), EpollServerChannelConfig setReceiveBufferSize (int), Native registerUnix (), EpollSocketChannelConfig isAllowHalfClosure (), EpollSocketChannelConfig setTcpKeepCntl (int), Native newEventFd (), EpollServerChannelConfig setConnectTimeoutMillis (int), Epoll unavailabilityCause (), EpollServerChannelConfig setWriteBufferHighWaterMark (int), EpollServerChannelConfig setAllocator (ByteBufAllocator), EpollSocketChannelConfig getTrafficClass (), EpollServerSocketChannel remoteAddress (), EpollSocketChannelConfig isTcpFastOpenConnect (), EpollSocketChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), EpollEventLoopGroup EpollEventLoopGroup (int, ThreadFactory, int), EpollSocketChannelConfig setSendBufferSize (int), EpollServerSocketChannel localAddress (), EpollEventLoopGroup EpollEventLoopGroup (int), EpollSocketChannelConfig isTcpNoDelay (), EpollSocketChannelConfig setWriteBufferLowWaterMark (int), Native sizeofEpollEvent (), EpollServerSocketChannel EpollServerSocketChannel (), EpollServerSocketChannel EpollServerSocketChannel (InternetProtocolFamily), EpollServerChannelConfig getTcpFastopen (), EpollServerSocketChannel EpollServerSocketChannel (LinuxSocket, boolean), Native epollWait (int, long, int, int), EpollSocketChannelConfig getSoLinger (), Native epollCtlAdd (int, int, int), EpollSocketChannelConfig EpollSocketChannelConfig (EpollSocketChannel), EpollServerChannelConfig setMessageSizeEstimator (MessageSizeEstimator), EpollSocketChannelConfig setTcpNotSentLowAt (long), EpollSocketChannelConfig setAllocator (ByteBufAllocator), EpollServerSocketChannel EpollServerSocketChannel (int), EpollServerChannelConfig setTcpFastopen (int), EpollEventLoopGroup EpollEventLoopGroup (int, SelectStrategyFactory), EpollEventLoopGroup EpollEventLoopGroup (int, Executor, EventExecutorChooserFactory, SelectStrategyFactory, RejectedExecutionHandler, EventLoopTaskQueueFactory), EpollServerChannelConfig isReuseAddress (), EpollSocketChannelConfig isIpTransparent (), EpollServerChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), EpollSocketChannelConfig setTcpKeepIdle (int), Native eventFdRead (int), Native recvmmsg (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket[], int, int), EpollSocketChannelConfig setTcpNoDelay (boolean), Native epollWait (FileDescriptor, EpollEventArray, FileDescriptor, int, int), EpollEventLoopGroup EpollEventLoopGroup (), Native recvmsg0 (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket), EpollServerSocketChannel isCompatible (EventLoop), EpollSocketChannelConfig setAllowHalfClosure (boolean), Native epollWait (FileDescriptor, EpollEventArray, boolean), Native splice0 (int, long, int, long, long), Native eventFdWrite (int, long), EpollSocketChannelConfig isKeepAlive (), Epoll ensureAvailability (), EpollSocketChannelConfig setKeepAlive (boolean), Native epollTimerWasUsed (long), Native isSupportingUdpSegment (), EpollServerSocketChannel setTcpMd5Sig (Map<InetAddress,byte[]>), EpollSocketChannelConfig getOptions (), EpollSocketChannelConfig setConnectTimeoutMillis (int), EpollSocketChannelConfig getReceiveBufferSize (), EpollSocketChannelConfig isTcpCork (), EpollServerChannelConfig getReceiveBufferSize (), EpollSocketChannelConfig getTcpUserTimeout (), EpollServerChannelConfig setWriteBufferLowWaterMark (int), Native Native (), EpollSocketChannelConfig setPerformancePreferences (int, int, int), EpollSocketChannelConfig setMessageSizeEstimator (MessageSizeEstimator), EpollServerChannelConfig setPerformancePreferences (int, int, int), EpollSocketChannelConfig setWriteSpinCount (int), Native newEpollCreate (), EpollEventLoopGroup newChild (Executor, Object), Native epollCtlMod0 (int, int, int), EpollServerChannelConfig setWriteSpinCount (int), Native recvmmsg0 (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket[], int, int), EpollServerChannelConfig getBacklog (), Native epollCtlDel (int, int), EpollServerSocketChannel tcpMd5SigAddresses (), EpollServerChannelConfig setOption (ChannelOption<T>, T), EpollSocketChannelConfig getSoBusyPoll (), EpollEventLoopGroup EpollEventLoopGroup (int, Executor, SelectStrategyFactory), EpollServerSocketChannel newChildChannel (int, byte[], int, int), EpollEventLoopGroup EpollEventLoopGroup (int, ThreadFactory), Native epollCtlAdd0 (int, int, int), EpollServerChannelConfig setAutoRead (boolean), EpollSocketChannelConfig setTcpQuickAck (boolean), Native newTimerFd (), EpollEventLoopGroup EpollEventLoopGroup (int, ThreadFactory, int, SelectStrategyFactory), EpollSocketChannelConfig getTcpKeepIntvl (), EpollSocketChannelConfig setReceiveBufferSize (int), Native sendmmsg (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket[], int, int), EpollServerChannelConfig EpollServerChannelConfig (AbstractEpollChannel), Native epollCtlMod (int, int, int), Native epollBusyWait (FileDescriptor, EpollEventArray), Epoll isTcpFastOpenClientSideAvailable (), EpollEventLoopGroup EpollEventLoopGroup (int, Executor, EventExecutorChooserFactory, SelectStrategyFactory, RejectedExecutionHandler), EpollServerChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), Native epollCreate (), EpollEventLoopGroup EpollEventLoopGroup (int, ThreadFactory, SelectStrategyFactory), EpollServerChannelConfig getOption (ChannelOption<T>), EpollSocketChannelConfig setTcpKeepIntvl (int), EpollEventLoopGroup EpollEventLoopGroup (int, Executor), EpollEventLoopGroup setIoRatio (int), EpollSocketChannelConfig calculateMaxBytesPerGatheringWrite (), EpollSocketChannelConfig setTcpCork (boolean), EpollServerChannelConfig setReuseAddress (boolean), EpollServerSocketChannel doBind (SocketAddress), EpollSocketChannelConfig setMaxMessagesPerRead (int), EpollSocketChannelConfig setTcpKeepCnt (int), EpollSocketChannelConfig getTcpNotSentLowAt (), EpollSocketChannelConfig isReuseAddress (), EpollServerSocketChannel EpollServerSocketChannel (LinuxSocket), EpollServerChannelConfig getOptions (), EpollSocketChannelConfig setTcpFastOpenConnect (boolean), EpollServerChannelConfig setEpollMode (EpollMode), EpollSocketChannelConfig setOption (ChannelOption<T>, T), EpollSocketChannelConfig setTcpUserTimeout (int), Native epollBusyWait0 (int, long, int), Native epollWait (FileDescriptor, EpollEventArray, int), EpollSocketChannelConfig setTrafficClass (int), Native run (), EpollEventLoopGroup EpollEventLoopGroup (int, Executor, EventExecutorChooserFactory, SelectStrategyFactory), Native loadNativeLibrary (), EpollSocketChannelConfig getTcpKeepIdle (), Native epollCtlDel0 (int, int), EpollSocketChannelConfig setEpollMode (EpollMode), EpollSocketChannelConfig setSoBusyPoll (int), EpollSocketChannelConfig isTcpQuickAck (), EpollSocketChannelConfig setIpTransparent (boolean), Native epollReady (long), Native sendmmsg (int, NativeDatagramPacketArray.NativeDatagramPacket[], int, int), EpollSocketChannelConfig setReuseAddress (boolean), Native timerFd (), Epoll isAvailable (), Native epollWait (FileDescriptor, EpollEventArray, FileDescriptor, int, int, long)]","942"
"4","netty/transport-classes-epoll","fb4477557e164153cc61f0b22c9648dbc233fde3","20e311ea62bbd84d16b5197ba2fd8f119061fd38","SWITCH_STRING_EQUAL","15","1","1","[Native loadNativeLibrary ()]","6"
"5","netty/transport-classes-epoll","20e311ea62bbd84d16b5197ba2fd8f119061fd38","dfe9e28c681278a90cfcacd09c9e1e1c54766caf","INFIX_EXPRESSION_DIVIDING","8","1","3","[Native epollTimerWasUsed (long), Native loadNativeLibrary (), Native epollWait (FileDescriptor, EpollEventArray, FileDescriptor, int, int, long)]","18"
"7","netty/transport-classes-epoll","dfe9e28c681278a90cfcacd09c9e1e1c54766caf","80005a2cdb0e45062945ce048fdfee058c866e33","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[Native epollWait (FileDescriptor, EpollEventArray, FileDescriptor, int, int, long)]","6"
"9","netty/transport-classes-epoll","80005a2cdb0e45062945ce048fdfee058c866e33","9f25c3c2fa19733d985947cbc8d0f48c575abc6c","SWITCH_EQUAL_SIDES","14","1","1","[Native epollWait (FileDescriptor, EpollEventArray, FileDescriptor, int, int, long)]","6"
"10","netty/transport-classes-epoll","9f25c3c2fa19733d985947cbc8d0f48c575abc6c","5f031858919ead96b309815879e2003e5f796d1e","LOCAL_VAR_RENAMING","0","1","2","[Native sendmmsg (int, NativeDatagramPacketArray.NativeDatagramPacket[], int, int), Native epollWait (FileDescriptor, EpollEventArray, FileDescriptor, int, int, long)]","12"
"11","netty/transport-classes-epoll","5f031858919ead96b309815879e2003e5f796d1e","09abdbff64c57ac2514aa0b3420c256e27d5b47f","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[Native loadNativeLibrary (), Native epollWait (FileDescriptor, EpollEventArray, FileDescriptor, int, int, long)]","12"
"12","netty/transport-classes-epoll","09abdbff64c57ac2514aa0b3420c256e27d5b47f","fbb415c5ec83c776d6d62d9906c6b42c3c2e7b26","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[Native loadNativeLibrary ()]","6"
"14","netty/transport-classes-epoll","fbb415c5ec83c776d6d62d9906c6b42c3c2e7b26","c5f44fe464010e053d0ceae54506a3fee7c0aa55","REVERSE_IF_ELSE","3","1","6","[Native recvmmsg (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket[], int, int), Native epollCtlDel (int, int), Native splice (int, long, int, long, long), Native recvmsg (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket), Native sendmmsg (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket[], int, int), Native loadNativeLibrary ()]","36"
"16","netty/transport-classes-epoll","c5f44fe464010e053d0ceae54506a3fee7c0aa55","78e3b869a307d60ebf9730fa81de3567980bb52e","SWITCH_STRING_EQUAL","15","1","1","[Native loadNativeLibrary ()]","6"
"17","netty/transport-classes-epoll","78e3b869a307d60ebf9730fa81de3567980bb52e","9da2f645ec140a7440907507f83fe40513335aa7","LOCAL_VAR_RENAMING","0","1","2","[Native epollTimerWasUsed (long), Native sendmmsg (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket[], int, int)]","12"
"18","netty/transport-classes-epoll","9da2f645ec140a7440907507f83fe40513335aa7","e6e3d8c5f4d63e8eff79019d160955b53aebbf30","VAR_DECLARATION_MERGING","12","1","1","[Native loadNativeLibrary ()]","6"
"19","netty/transport-classes-epoll","e6e3d8c5f4d63e8eff79019d160955b53aebbf30","909468d866d6636ad6c7704d3441bec04772c001","SWITCH_EQUAL_SIDES","14","1","1","[Native epollWait (FileDescriptor, EpollEventArray, FileDescriptor, int, int, long)]","6"
"22","netty/transport-classes-epoll","909468d866d6636ad6c7704d3441bec04772c001","a542abc7a1f34d45c581cf5e1aa62a39bbaaea67","REVERSE_IF_ELSE","3","1","11","[Native epollBusyWait (FileDescriptor, EpollEventArray), Native recvmmsg (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket[], int, int), Native epollCtlDel (int, int), Native splice (int, long, int, long, long), Native epollWait (FileDescriptor, EpollEventArray, int), Native recvmsg (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket), Native epollCtlAdd (int, int, int), Native sendmmsg (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket[], int, int), Native loadNativeLibrary (), Native epollCtlMod (int, int, int), Native epollWait (FileDescriptor, EpollEventArray, FileDescriptor, int, int, long)]","66"
"23","netty/transport-classes-epoll","a542abc7a1f34d45c581cf5e1aa62a39bbaaea67","8a3489495ad47160af3a2421d7471c68e068d44f","LOCAL_VAR_RENAMING","0","1","2","[Native epollBusyWait0 (int, long, int), Native epollWait0 (int, long, int, int, int, int, long)]","12"
"25","netty/transport-classes-epoll","8a3489495ad47160af3a2421d7471c68e068d44f","b74cd98c2abb88d5b52847acf6672e29f3153cb7","SWITCH_STRING_EQUAL","15","1","1","[Native loadNativeLibrary ()]","6"
"27","netty/transport-classes-epoll","b74cd98c2abb88d5b52847acf6672e29f3153cb7","3e0eb580909fc8b884828df213d11f85adf55626","VAR_DECLARATION_DIVIDING","13","1","1","[Native loadNativeLibrary ()]","6"
"29","netty/transport-classes-epoll","3e0eb580909fc8b884828df213d11f85adf55626","5ee9cca0a9f3516d50a35ada89b571df3f1fd4b0","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[Native epollWait (FileDescriptor, EpollEventArray, FileDescriptor, int, int, long)]","6"
"0","netty/transport-classes-kqueue","5ee9cca0a9f3516d50a35ada89b571df3f1fd4b0","ce1bc1607e4da28f9cf6af4fda2825986771faa7","FOR_TO_WHILE","1","1","154","[AbstractKQueueUnsafe flush0 (), KQueueEventLoop cleanArray (), AbstractKQueueChannel newDirectBuffer (Object, ByteBuf), KQueueDomainDatagramChannelConfig getSendBufferSize (), KQueueDomainUnsafe readReadyFd (), AbstractKQueueUnsafe fulfillConnectPromise (ChannelPromise, Throwable), AbstractKQueueChannel doDisconnect (), KQueueDomainSocketChannel KQueueDomainSocketChannel (), AbstractKQueueUnsafe doFinishConnect (), KQueueDomainSocketChannel config (), KQueueServerChannelConfig setWriteBufferLowWaterMark (int), KQueueDomainDatagramChannelConfig setSendBufferSize (int), KQueueDomainDatagramChannelConfig setAutoClose (boolean), AbstractKQueueChannel isAllowHalfClosure (ChannelConfig), KQueueDomainDatagramChannelConfig setMessageSizeEstimator (MessageSizeEstimator), KQueueDomainDatagramChannelConfig setMaxMessagesPerWrite (int), KQueueServerChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), KQueueServerChannelConfig setMaxMessagesPerRead (int), KQueueServerChannelConfig isTcpFastOpen (), AbstractKQueueChannel doBeginRead (), KQueueServerChannelConfig getBacklog (), KQueueServerSocketChannel KQueueServerSocketChannel (BsdSocket, boolean), AbstractKQueueUnsafe readReadyBefore (), AbstractKQueueUnsafe connect (SocketAddress, SocketAddress, ChannelPromise), KQueueDomainDatagramChannelConfig setActiveOnOpen (boolean), AbstractKQueueUnsafe failConnectPromise (Throwable), AbstractKQueueChannel isSoErrorZero (BsdSocket), AbstractKQueueChannel AbstractKQueueChannel (Channel, BsdSocket, SocketAddress), AbstractKQueueChannel doWriteBytes (ChannelOutboundBuffer, ByteBuf), AbstractKQueueChannel fd (), KQueueServerSocketChannel remoteAddress (), KQueueEventLoop cleanup (), AbstractKQueueChannel doClose (), KQueueDomainSocketChannel KQueueDomainSocketChannel (int), AbstractKQueueChannel newDirectBuffer0 (Object, ByteBuf, ByteBufAllocator, int), KQueueDomainDatagramChannelConfig setConnectTimeoutMillis (int), AbstractKQueueUnsafe shutdownInput (boolean), AbstractKQueueUnsafe clearReadFilter0 (), KQueueDomainSocketChannel doBind (SocketAddress), KQueueEventLoop handleLoopException (Throwable), KQueueServerChannelConfig isReuseAddress (), AbstractKQueueUnsafe readEOF (), AbstractKQueueUnsafe readReady (long), KQueueEventLoop run (), KQueueDomainSocketChannel filterOutboundMessage (Object), AbstractKQueueChannel newUnsafe (), KQueueServerSocketChannel KQueueServerSocketChannel (BsdSocket), KQueueEventLoop newTaskQueue0 (int), KQueueServerSocketChannel isCompatible (EventLoop), AbstractKQueueChannel shouldBreakReadReady (ChannelConfig), AbstractKQueueChannel isActive (), AbstractKQueueUnsafe executeReadReadyRunnable (ChannelConfig), KQueueDomainDatagramChannelConfig KQueueDomainDatagramChannelConfig (KQueueDomainDatagramChannel), KQueueServerSocketChannel config (), AbstractKQueueChannel run (), AbstractKQueueUnsafe doConnect0 (SocketAddress, SocketAddress), KQueueDomainDatagramChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), AbstractKQueueChannel doDeregister (), KQueueDomainDatagramChannelConfig setAllocator (ByteBufAllocator), KQueueDomainDatagramChannelConfig getOptions (), AbstractKQueueChannel evSet0 (short, short), AbstractKQueueChannel unregisterFilters (), AbstractKQueueChannel doReadBytes (ByteBuf), AbstractKQueueUnsafe localAddress0 (), AbstractKQueueUnsafe readReady (KQueueRecvByteAllocatorHandle), KQueueDomainDatagramChannelConfig getOption (ChannelOption<T>), KQueueEventLoop evSet (AbstractKQueueChannel, short, short, int), KQueueDomainSocketChannel doWriteSingle (ChannelOutboundBuffer), KQueueServerChannelConfig getReceiveBufferSize (), KQueueServerSocketChannel newChildChannel (int, byte[], int, int), AbstractKQueueDatagramChannel doWriteMessage (Object), AbstractKQueueUnsafe recvBufAllocHandle (), AbstractKQueueUnsafe fireEventAndClose (Object), KQueueServerChannelConfig setConnectTimeoutMillis (int), KQueueEventLoop add (AbstractKQueueChannel), KQueueServerChannelConfig setRcvAllocTransportProvidesGuess (boolean), KQueueServerChannelConfig setWriteSpinCount (int), AbstractKQueueDatagramChannel AbstractKQueueDatagramChannel (Channel, BsdSocket, boolean), KQueueServerChannelConfig setPerformancePreferences (int, int, int), KQueueDomainSocketChannel doConnect (SocketAddress, SocketAddress), KQueueServerChannelConfig setOption (ChannelOption<T>, T), KQueueDomainDatagramChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), AbstractKQueueChannel isCompatible (EventLoop), KQueueServerChannelConfig getOption (ChannelOption<T>), KQueueEventLoop setIoRatio (int), KQueueServerChannelConfig setMessageSizeEstimator (MessageSizeEstimator), KQueueEventLoop registeredChannels (), AbstractKQueueDatagramChannel doWrite (ChannelOutboundBuffer), KQueueEventLoop wakeup (boolean), KQueueServerSocketChannel doBind (SocketAddress), AbstractKQueueUnsafe fulfillConnectPromise (ChannelPromise, boolean), AbstractKQueueChannel clearRdHup0 (), KQueueServerChannelConfig setReuseAddress (boolean), KQueueDomainDatagramChannelConfig getActiveOnOpen (), AbstractKQueueChannel writeFilter (boolean), KQueueEventLoop registeredChannelsIterator (), AbstractKQueueUnsafe doConnect (SocketAddress, SocketAddress), KQueueDomainSocketChannel newUnsafe (), KQueueEventLoop processReady (int), AbstractKQueueUnsafe operationComplete (ChannelFuture), KQueueEventLoop getIoRatio (), KQueueEventLoop kqueueWait (boolean), AbstractKQueueChannel resetCachedAddresses (), KQueueServerSocketChannel localAddress (), AbstractKQueueChannel evSet (short, short), AbstractKQueueChannel newDirectBuffer (ByteBuf), AbstractKQueueChannel config (), KQueueServerChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), KQueueEventLoop KQueueEventLoop (EventLoopGroup, Executor, int, SelectStrategy, RejectedExecutionHandler, EventLoopTaskQueueFactory, EventLoopTaskQueueFactory), KQueueDomainDatagramChannelConfig setWriteSpinCount (int), KQueueEventLoop wakeup (), AbstractKQueueChannel AbstractKQueueChannel (Channel, BsdSocket, boolean), KQueueDomainSocketChannel KQueueDomainSocketChannel (Channel, BsdSocket), KQueueDomainDatagramChannelConfig setMaxMessagesPerRead (int), AbstractKQueueChannel evSet0 (short, short, int), KQueueDomainSocketChannel localAddress (), AbstractKQueueDatagramChannel metadata (), AbstractKQueueUnsafe writeReady (), KQueueServerChannelConfig setAutoRead (boolean), KQueueServerChannelConfig setAllocator (ByteBufAllocator), AbstractKQueueChannel clearReadFilter (), AbstractKQueueUnsafe remoteAddress0 (), KQueueEventLoop kqueueWaitNow (), KQueueDomainSocketChannel remoteAddress (), KQueueEventLoop remove (AbstractKQueueChannel), KQueueEventLoop closeAll (), AbstractKQueueChannel isOpen (), KQueueDomainDatagramChannelConfig setRcvAllocTransportProvidesGuess (boolean), AbstractKQueueChannel doRegister (), AbstractKQueueChannel metadata (), KQueueDomainDatagramChannelConfig setOption (ChannelOption<T>, T), KQueueEventLoop newTaskQueue (EventLoopTaskQueueFactory), KQueueEventLoop newTaskQueue (int), KQueueServerChannelConfig setWriteBufferHighWaterMark (int), AbstractKQueueUnsafe doBind (SocketAddress), KQueueEventLoop get (), KQueueDomainUnsafe readReady (KQueueRecvByteAllocatorHandle), KQueueServerChannelConfig setBacklog (int), KQueueDomainSocketChannel peerCredentials (), AbstractKQueueChannel checkResolvable (InetSocketAddress), AbstractKQueueUnsafe run (), KQueueDomainSocketChannel localAddress0 (), KQueueServerChannelConfig setReceiveBufferSize (int), AbstractKQueueChannel readFilter (boolean), KQueueDomainDatagramChannelConfig setAutoRead (boolean), KQueueDomainSocketChannel remoteAddress0 (), AbstractKQueueUnsafe finishConnect (), AbstractKQueueUnsafe readReadyFinally (ChannelConfig), KQueueEventLoop kqueueWait (int, int), KQueueServerChannelConfig getOptions (), KQueueServerSocketChannel KQueueServerSocketChannel (), KQueueServerSocketChannel KQueueServerSocketChannel (int), KQueueServerChannelConfig setTcpFastOpen (boolean), KQueueServerChannelConfig KQueueServerChannelConfig (AbstractKQueueChannel)]","1078"
"1","netty/transport-classes-kqueue","ce1bc1607e4da28f9cf6af4fda2825986771faa7","0f7af5805d3acaef178c3ad83e3502215dff65a7","STATEMENTS_ORDER_REARRANGEMENT","10","1","3","[KQueueEventLoop KQueueEventLoop (EventLoopGroup, Executor, int, SelectStrategy, RejectedExecutionHandler, EventLoopTaskQueueFactory, EventLoopTaskQueueFactory), KQueueEventLoop closeAll (), KQueueEventLoop run ()]","21"
"5","netty/transport-classes-kqueue","0f7af5805d3acaef178c3ad83e3502215dff65a7","6f04a4554849c74759b36ee5d8143a79c09d5956","REVERSE_IF_ELSE","3","1","4","[KQueueEventLoop setIoRatio (int), KQueueEventLoop wakeup (boolean), KQueueEventLoop kqueueWait (boolean), KQueueEventLoop run ()]","28"
"12","netty/transport-classes-kqueue","6f04a4554849c74759b36ee5d8143a79c09d5956","755e77f50e235c79ee080338193ba6d88187db17","LOCAL_VAR_RENAMING","0","1","2","[KQueueEventLoop evSet (AbstractKQueueChannel, short, short, int), KQueueEventLoop add (AbstractKQueueChannel)]","14"
"13","netty/transport-classes-kqueue","755e77f50e235c79ee080338193ba6d88187db17","3fc4c8132ecdf70786d45b219a62088bb557931b","INFIX_EXPRESSION_DIVIDING","8","1","1","[KQueueEventLoop setIoRatio (int)]","7"
"16","netty/transport-classes-kqueue","3fc4c8132ecdf70786d45b219a62088bb557931b","9b9893eed04cf923d7157979956666784bbd45e8","INFIX_EXPRESSION_DIVIDING","8","1","2","[KQueueEventLoop setIoRatio (int), KQueueEventLoop run ()]","14"
"17","netty/transport-classes-kqueue","9b9893eed04cf923d7157979956666784bbd45e8","e882f1b19b929fd933f0dfb017bce811108e38a9","WHILE_TO_FOR","2","1","1","[KQueueEventLoop run ()]","7"
"19","netty/transport-classes-kqueue","e882f1b19b929fd933f0dfb017bce811108e38a9","ded224b241a1ac26e01a19ff340b84c49d6f7cb7","FOR_TO_WHILE","1","1","1","[KQueueEventLoop run ()]","7"
"21","netty/transport-classes-kqueue","ded224b241a1ac26e01a19ff340b84c49d6f7cb7","5bff472f55804f7ab616b68d0ad4e7bba9fa062c","LOCAL_VAR_RENAMING","0","1","3","[KQueueEventLoop wakeup (boolean), KQueueEventLoop handleLoopException (Throwable), KQueueEventLoop run ()]","21"
"24","netty/transport-classes-kqueue","5bff472f55804f7ab616b68d0ad4e7bba9fa062c","b2575983dcf33328186d32562824a7e4a133afaa","INFIX_EXPRESSION_DIVIDING","8","1","1","[KQueueEventLoop run ()]","7"
"29","netty/transport-classes-kqueue","b2575983dcf33328186d32562824a7e4a133afaa","4a97ea24c1e8befb3970dc995b9c3c8ffd2852d5","REVERSE_IF_ELSE","3","1","1","[KQueueServerSocketChannel doBind (SocketAddress)]","7"
"0","netty/transport-native-unix-common-tests","4a97ea24c1e8befb3970dc995b9c3c8ffd2852d5","421b01d3800027b31845ca97e323515fc618365d","STATEMENTS_ORDER_REARRANGEMENT","10","1","37","[DetectPeerCloseWithoutReadTest channelActive (ChannelHandlerContext), NoMemoryAddressByteBuf memoryAddress (), SocketTest testSendBufferSize (), DetectPeerCloseWithoutReadTest initChannel (Channel), SocketTest setup (), DetectPeerCloseWithoutReadTest clientCloseWithoutServerReadIsDetectedExtraReadRequested (), SocketTest testSoLinger (), NoMemoryAddressByteBuf NoMemoryAddressByteBuf (int), DetectPeerCloseWithoutReadTest clientCloseWithoutServerReadIsDetectedNoExtraReadRequested (), DetectPeerCloseWithoutReadTest serverCloseWithoutClientReadIsDetectedNoExtraReadRequested (), SocketTest testIntOpt (), DetectPeerCloseWithoutReadTest clientChannel (), SocketTest level (), SocketTest newSocket (), TestHandler channelInactive (ChannelHandlerContext), NoMemoryAddressByteBuf hasMemoryAddress (), UnixTestUtils newInetLoopbackSocketAddress (), DetectPeerCloseWithoutReadTest newGroup (), UnixTestUtils newSocketAddress (), SocketTest tearDown (), SocketTest testRawOpt (), UnixTestUtils UnixTestUtils (), SocketTest testDoubleCloseDoesNotThrow (), SocketTest testTcpNoDelay (), DetectPeerCloseWithoutReadTest serverCloseWithoutClientReadIsDetected0 (boolean), DetectPeerCloseWithoutReadTest serverChannel (), SocketTest testKeepAlive (), TestHandler channelRead0 (ChannelHandlerContext, ByteBuf), DetectPeerCloseWithoutReadTest serverCloseWithoutClientReadIsDetectedExtraReadRequested (), SocketTest testTrafficClass (), IovArrayTest testNotFailsWihtoutMemoryAddress (), TestHandler TestHandler (AtomicInteger, boolean, CountDownLatch), UnixTestUtils getLoopbackAddress (), SocketTest testReceivedBufferSize (), DetectPeerCloseWithoutReadTest clientCloseWithoutServerReadIsDetected0 (boolean), UnixTestUtils newDomainSocketAddress (), SocketTest optname ()]","148"
"5","netty/transport-native-unix-common-tests","421b01d3800027b31845ca97e323515fc618365d","61f295a9b0016b4d271d054b168ea6666326e36e","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[IovArrayTest testNotFailsWihtoutMemoryAddress ()]","4"
"22","netty/transport-native-unix-common-tests","61f295a9b0016b4d271d054b168ea6666326e36e","457df9ffcc658c6b0e7c06915304356b8b13be37","LOCAL_VAR_RENAMING","0","1","2","[IovArrayTest testNotFailsWihtoutMemoryAddress (), NoMemoryAddressByteBuf NoMemoryAddressByteBuf (int)]","8"
"27","netty/transport-native-unix-common-tests","457df9ffcc658c6b0e7c06915304356b8b13be37","88e8dfec513a196135d7e853911aa1fd501a22aa","LOCAL_VAR_RENAMING","0","1","1","[IovArrayTest testNotFailsWihtoutMemoryAddress ()]","4"
"0","netty/transport-native-unix-common","88e8dfec513a196135d7e853911aa1fd501a22aa","501d6867c44465d8d32aa1d22bbf431370520f9b","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","29","[IovArray IovArray (), IovArray add (ByteBuf, int, int), DomainSocketAddress hashCode (), IovArray maxBytes (long), DomainSocketAddress DomainSocketAddress (File), DomainSocketAddress toString (), DomainSocketAddress DomainSocketAddress (String), IovArray idx (int), DatagramSocketAddress localAddress (), DatagramSocketAddress newAddress (byte[], int), IovArray memoryAddress (int), IovArray size (), IovArray maxBytes (), IovArray IovArray (ByteBuf), IovArray release (), Limits Limits (), DatagramSocketAddress receivedAmount (), DomainSocketAddress equals (Object), IovArray processMessage (Object), UnixChannelUtil UnixChannelUtil (), UnixChannelUtil computeRemoteAddr (InetSocketAddress, InetSocketAddress), IovArray add (ByteBuf), DomainSocketAddress path (), IovArray add (long, long, int), IovArray clear (), UnixChannelUtil isBufferCopyNeededForWrite (ByteBuf), UnixChannelUtil isBufferCopyNeededForWrite (ByteBuf, int), IovArray count (), DatagramSocketAddress DatagramSocketAddress (byte[], int, int, int, DatagramSocketAddress)]","145"
"2","netty/transport-native-unix-common","501d6867c44465d8d32aa1d22bbf431370520f9b","b8d56325e120bb2f93583be1dd656a55ada5ecce","REVERSE_IF_ELSE","3","1","1","[UnixChannelUtil computeRemoteAddr (InetSocketAddress, InetSocketAddress)]","5"
"12","netty/transport-native-unix-common","b8d56325e120bb2f93583be1dd656a55ada5ecce","e4fd8cd40d3e5ae98e8e56b53d1288bacc2b409e","REVERSE_IF_ELSE","3","1","1","[UnixChannelUtil computeRemoteAddr (InetSocketAddress, InetSocketAddress)]","5"
"14","netty/transport-native-unix-common","e4fd8cd40d3e5ae98e8e56b53d1288bacc2b409e","9dcdcdbec4a5aed1cbb93de0ac3cf4f8574d744b","LOCAL_VAR_RENAMING","0","1","1","[UnixChannelUtil isBufferCopyNeededForWrite (ByteBuf, int)]","5"
"28","netty/transport-native-unix-common","9dcdcdbec4a5aed1cbb93de0ac3cf4f8574d744b","92cd79f660a40511d526e94263601dcfc2aad529","REVERSE_IF_ELSE","3","1","1","[UnixChannelUtil computeRemoteAddr (InetSocketAddress, InetSocketAddress)]","5"
"0","netty/transport-rxtx","92cd79f660a40511d526e94263601dcfc2aad529","a9ff5aa2cf237ba62b9fd5b68ac7674677fc3e34","VAR_DECLARATION_DIVIDING","13","1","68","[RxtxChannelConfig isRts (), RxtxChannelConfig Databits (int), RxtxChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), RxtxChannelConfig setConnectTimeoutMillis (int), DefaultRxtxChannelConfig setWaitTimeMillis (int), RxtxDeviceAddress RxtxDeviceAddress (String), DefaultRxtxChannelConfig setAutoClose (boolean), DefaultRxtxChannelConfig isRts (), RxtxChannelConfig setStopbits (Stopbits), DefaultRxtxChannelConfig getParitybit (), DefaultRxtxChannelConfig setMaxMessagesPerRead (int), DefaultRxtxChannelConfig setOption (ChannelOption<T>, T), RxtxChannelConfig value (), DefaultRxtxChannelConfig setRts (boolean), RxtxChannelConfig getDatabits (), RxtxChannelConfig setMaxMessagesPerRead (int), DefaultRxtxChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), DefaultRxtxChannelConfig setConnectTimeoutMillis (int), RxtxChannelConfig getStopbits (), DefaultRxtxChannelConfig setAllocator (ByteBufAllocator), RxtxChannelConfig getReadTimeout (), RxtxChannelConfig getBaudrate (), DefaultRxtxChannelConfig setParitybit (Paritybit), RxtxChannelConfig Paritybit (int), RxtxChannelConfig setReadTimeout (int), DefaultRxtxChannelConfig setBaudrate (int), DefaultRxtxChannelConfig getBaudrate (), RxtxDeviceAddress value (), RxtxChannelConfig setMessageSizeEstimator (MessageSizeEstimator), DefaultRxtxChannelConfig setReadTimeout (int), DefaultRxtxChannelConfig getStopbits (), RxtxChannelConfig setWriteBufferHighWaterMark (int), RxtxChannelConfig setWaitTimeMillis (int), DefaultRxtxChannelConfig getOption (ChannelOption<T>), DefaultRxtxChannelConfig isDtr (), DefaultRxtxChannelConfig setMessageSizeEstimator (MessageSizeEstimator), RxtxChannelConfig setWriteSpinCount (int), DefaultRxtxChannelConfig setStopbits (Stopbits), DefaultRxtxChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), DefaultRxtxChannelConfig getOptions (), DefaultRxtxChannelConfig setWriteSpinCount (int), RxtxChannelConfig DATABITS_5 (), RxtxChannelConfig Stopbits (int), RxtxChannelConfig getWaitTimeMillis (), RxtxChannelConfig setAllocator (ByteBufAllocator), RxtxChannelConfig setAutoClose (boolean), RxtxChannelConfig setRts (boolean), DefaultRxtxChannelConfig getDatabits (), RxtxChannelConfig setAutoRead (boolean), RxtxChannelConfig setParitybit (Paritybit), RxtxChannelConfig NONE (), DefaultRxtxChannelConfig setWriteBufferLowWaterMark (int), RxtxChannelConfig setBaudrate (int), RxtxChannelConfig setDatabits (Databits), RxtxChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), DefaultRxtxChannelConfig DefaultRxtxChannelConfig (RxtxChannel), DefaultRxtxChannelConfig setAutoRead (boolean), RxtxChannelConfig valueOf (int), DefaultRxtxChannelConfig getWaitTimeMillis (), DefaultRxtxChannelConfig setWriteBufferHighWaterMark (int), DefaultRxtxChannelConfig setDatabits (Databits), RxtxChannelConfig setWriteBufferLowWaterMark (int), RxtxChannelConfig isDtr (), RxtxChannelOption RxtxChannelOption (), DefaultRxtxChannelConfig setDtr (boolean), DefaultRxtxChannelConfig getReadTimeout (), RxtxChannelConfig setDtr (boolean), RxtxChannelConfig getParitybit ()]","272"
"25","netty/transport-rxtx","a9ff5aa2cf237ba62b9fd5b68ac7674677fc3e34","17955b187a282ee2f4665ae5cee0cfdb5535e726","LOCAL_VAR_RENAMING","0","1","0","[]","0"
"0","netty/transport-sctp","17955b187a282ee2f4665ae5cee0cfdb5535e726","788c0be361c9585a731ae0c0e1a78fa79106f1c4","SWITCH_EQUAL_SIDES","14","1","113","[NioSctpServerChannel NioSctpServerChannel (), SctpServerChannelConfig setConnectTimeoutMillis (int), SctpChannel open (), SctpServerChannelConfig setAllocator (ByteBufAllocator), SctpMessageToMessageDecoder acceptInboundMessage (Object), SctpChannel SctpChannel (SelectorProvider), NioSctpServerChannel doFinishConnect (), OioSctpServerChannel doWrite (ChannelOutboundBuffer), NioSctpServerChannel remoteAddress0 (), DefaultSctpServerChannelConfig getOptions (), OioSctpServerChannel unbindAddress (InetAddress), NioSctpServerChannel allLocalAddresses (), OioSctpServerChannel doDisconnect (), SctpServerChannelConfig setBacklog (int), SctpChannel send (ByteBuffer, MessageInfo), SctpChannel supportedOptions (), OioSctpServerChannel OioSctpServerChannel (SctpServerChannel), OioSctpServerChannel bindAddress (InetAddress, ChannelPromise), DefaultSctpServerChannelConfig setAllocator (ByteBufAllocator), NioSctpServerChannel unbindAddress (InetAddress), NioSctpServerChannel remoteAddress (), NioSctpServerChannel run (), OioSctpServerChannel bindAddress (InetAddress), NioSctpServerChannelConfig NioSctpServerChannelConfig (NioSctpServerChannel, SctpServerChannel), SctpOutboundByteStreamHandler SctpOutboundByteStreamHandler (int, int, boolean), DefaultSctpServerChannelConfig setWriteBufferLowWaterMark (int), NioSctpServerChannel doClose (), DefaultSctpServerChannelConfig setOption (ChannelOption<T>, T), SctpServerChannelConfig setMaxMessagesPerRead (int), NioSctpServerChannel filterOutboundMessage (Object), DefaultSctpServerChannelConfig setMessageSizeEstimator (MessageSizeEstimator), NioSctpServerChannel doDisconnect (), NioSctpServerChannel localAddress0 (), OioSctpServerChannel doBind (SocketAddress), NioSctpServerChannel doWriteMessage (Object, ChannelOutboundBuffer), OioSctpServerChannel newServerSocket (), SctpServerChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), NioSctpServerChannel doReadMessages (List<Object>), DefaultSctpServerChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), SctpChannel bind (SocketAddress), SctpServerChannelConfig setMessageSizeEstimator (MessageSizeEstimator), DefaultSctpServerChannelConfig getBacklog (), OioSctpServerChannelConfig OioSctpServerChannelConfig (OioSctpServerChannel, SctpServerChannel), DefaultSctpServerChannelConfig setWriteBufferHighWaterMark (int), DefaultSctpServerChannelConfig setBacklog (int), DefaultSctpServerChannelConfig setSendBufferSize (int), OioSctpServerChannel remoteAddress0 (), DefaultSctpServerChannelConfig getInitMaxStreams (), NioSctpServerChannel config (), OioSctpServerChannel isOpen (), OioSctpServerChannel unbindAddress (InetAddress, ChannelPromise), OioSctpServerChannel doReadMessages (List<Object>), OioSctpServerChannel localAddress (), DefaultSctpServerChannelConfig setAutoRead (boolean), NioSctpServerChannel metadata (), OioSctpServerChannel filterOutboundMessage (Object), SctpServerChannelConfig setAutoRead (boolean), OioSctpServerChannel metadata (), SctpServerChannelConfig getReceiveBufferSize (), SctpChannel getRemoteAddresses (), SctpServerChannelConfig setWriteBufferHighWaterMark (int), OioSctpServerChannel doClose (), NioSctpServerChannel newSocket (), OioSctpServerChannel run (), SctpChannel unbindAddress (InetAddress), SctpChannel getAllLocalAddresses (), SctpServerChannelConfig setAutoClose (boolean), SctpServerChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), DefaultSctpServerChannelConfig getOption (ChannelOption<T>), SctpChannel bindAddress (InetAddress), OioSctpServerChannel isActive (), SctpServerChannelConfig setInitMaxStreams (InitMaxStreams), SctpServerChannelConfig setWriteSpinCount (int), SctpChannel association (), OioSctpServerChannel allLocalAddresses (), NioSctpServerChannel doConnect (SocketAddress, SocketAddress), NioSctpServerChannel unbindAddress (InetAddress, ChannelPromise), SctpServerChannelConfig getSendBufferSize (), NioSctpServerChannel bindAddress (InetAddress, ChannelPromise), DefaultSctpServerChannelConfig setConnectTimeoutMillis (int), SctpServerChannelConfig setReceiveBufferSize (int), OioSctpServerChannelConfig autoReadCleared (), SctpOutboundByteStreamHandler SctpOutboundByteStreamHandler (int, int), OioSctpServerChannel doConnect (SocketAddress, SocketAddress), OioSctpServerChannel OioSctpServerChannel (), NioSctpServerChannel doBind (SocketAddress), SctpServerChannelConfig getInitMaxStreams (), OioSctpServerChannel localAddress0 (), NioSctpServerChannel localAddress (), DefaultSctpServerChannelConfig DefaultSctpServerChannelConfig (io.netty.channel.sctp.SctpServerChannel, SctpServerChannel), DefaultSctpServerChannelConfig setReceiveBufferSize (int), NioSctpServerChannel bindAddress (InetAddress), SctpChannel connect (SocketAddress), OioSctpServerChannel config (), NioSctpServerChannelConfig autoReadCleared (), SctpChannel receive (ByteBuffer, T, NotificationHandler<T>), SctpChannel finishConnect (), SctpOutboundByteStreamHandler encode (ChannelHandlerContext, ByteBuf, List<Object>), SctpChannel setOption (SctpSocketOption<T>, T), DefaultSctpServerChannelConfig getReceiveBufferSize (), SctpChannel getOption (SctpSocketOption<T>), OioSctpServerChannel remoteAddress (), DefaultSctpServerChannelConfig setInitMaxStreams (SctpStandardSocketOptions.InitMaxStreams), DefaultSctpServerChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), NioSctpServerChannel isActive (), DefaultSctpServerChannelConfig setMaxMessagesPerRead (int), NioSctpServerChannel javaChannel (), DefaultSctpServerChannelConfig getSendBufferSize (), DefaultSctpServerChannelConfig setWriteSpinCount (int), SctpServerChannelConfig getBacklog (), DefaultSctpServerChannelConfig setAutoClose (boolean), SctpServerChannelConfig setSendBufferSize (int), SctpServerChannelConfig setWriteBufferLowWaterMark (int)]","791"
"6","netty/transport-sctp","788c0be361c9585a731ae0c0e1a78fa79106f1c4","aec04b23f34616301458265e5e2201460e31dfdc","REVERSE_IF_ELSE","3","1","1","[SctpMessageToMessageDecoder acceptInboundMessage (Object)]","7"
"17","netty/transport-sctp","aec04b23f34616301458265e5e2201460e31dfdc","66fbdce11cf5fbe3740e9f9780dc92722ed1cc8d","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SctpMessageToMessageDecoder acceptInboundMessage (Object)]","7"
"23","netty/transport-sctp","66fbdce11cf5fbe3740e9f9780dc92722ed1cc8d","ec89627f265c16d23e4a300aeeadd29767b87716","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[OioSctpServerChannel doReadMessages (List<Object>)]","7"
"0","netty/transport-udt","ec89627f265c16d23e4a300aeeadd29767b87716","ea3c2d5fd36a790d6e2c1adac1883729ad1e31f2","IF_DIVIDING","9","1","73","[NioUdtMessageConnectorChannel doDisconnect (), NioUdtMessageConnectorChannel javaChannel (), NioUdtMessageConnectorChannel doBind (SocketAddress), DefaultUdtChannelConfig setSystemSendBufferSize (int), NioUdtMessageConnectorChannel localAddress0 (), DefaultUdtChannelConfig setProtocolReceiveBufferSize (int), NioUdtMessageConnectorChannel NioUdtMessageConnectorChannel (Channel, SocketChannelUDT), NioUdtProvider NioUdtProvider (TypeUDT, KindUDT), NioUdtMessageConnectorChannel doReadMessages (List<Object>), UdtMessage retain (), NioUdtProvider newConnectorChannelUDT (TypeUDT), DefaultUdtChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), DefaultUdtChannelConfig setReuseAddress (boolean), NioUdtProvider channelUDT (Channel), NioUdtMessageConnectorChannel run (), UdtMessage retain (int), DefaultUdtChannelConfig setSoLinger (int), NioUdtMessageConnectorChannel remoteAddress0 (), NioUdtMessageConnectorChannel config (), DefaultUdtChannelConfig getProtocolSendBufferSize (), NioUdtMessageConnectorChannel localAddress (), NioUdtMessageConnectorChannel doConnect (SocketAddress, SocketAddress), DefaultUdtChannelConfig setWriteBufferLowWaterMark (int), DefaultUdtChannelConfig setProtocolSendBufferSize (int), UdtMessage retainedDuplicate (), NioUdtMessageConnectorChannel privilegedBind (SocketChannelUDT, SocketAddress), DefaultUdtChannelConfig setReceiveBufferSize (int), DefaultUdtChannelConfig getOptions (), NioUdtProvider type (), UdtMessage copy (), UdtMessage touch (), DefaultUdtChannelConfig getOption (ChannelOption<T>), DefaultUdtChannelConfig getSendBufferSize (), DefaultUdtChannelConfig setConnectTimeoutMillis (int), NioUdtMessageConnectorChannel doClose (), UdtMessage UdtMessage (ByteBuf), NioUdtMessageConnectorChannel NioUdtMessageConnectorChannel (SocketChannelUDT), DefaultUdtChannelConfig DefaultUdtChannelConfig (UdtChannel, ChannelUDT, boolean), DefaultUdtChannelConfig getSystemSendBufferSize (), NioUdtMessageConnectorChannel NioUdtMessageConnectorChannel (), NioUdtProvider socketUDT (Channel), DefaultUdtChannelConfig setAutoClose (boolean), DefaultUdtChannelConfig apply (ChannelUDT), NioUdtProvider newRendezvousChannelUDT (TypeUDT), DefaultUdtChannelConfig setMessageSizeEstimator (MessageSizeEstimator), NioUdtMessageAcceptorChannel NioUdtMessageAcceptorChannel (), UdtMessage touch (Object), NioUdtMessageConnectorChannel metadata (), DefaultUdtChannelConfig getSoLinger (), NioUdtProvider kind (), NioUdtMessageConnectorChannel NioUdtMessageConnectorChannel (TypeUDT), DefaultUdtChannelConfig setSendBufferSize (int), UdtMessage replace (ByteBuf), NioUdtMessageConnectorChannel isActive (), DefaultUdtChannelConfig getSystemReceiveBufferSize (), NioUdtProvider newChannel (), UdtMessage duplicate (), DefaultUdtChannelConfig getProtocolReceiveBufferSize (), DefaultUdtChannelConfig setWriteSpinCount (int), DefaultUdtChannelConfig setAllocator (ByteBufAllocator), DefaultUdtChannelConfig setOption (ChannelOption<T>, T), NioUdtMessageConnectorChannel doWriteMessage (Object, ChannelOutboundBuffer), DefaultUdtChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), NioUdtMessageAcceptorChannel newConnectorChannel (SocketChannelUDT), NioUdtMessageConnectorChannel remoteAddress (), DefaultUdtChannelConfig isReuseAddress (), NioUdtProvider newAcceptorChannelUDT (TypeUDT), DefaultUdtChannelConfig setMaxMessagesPerRead (int), NioUdtMessageConnectorChannel doFinishConnect (), DefaultUdtChannelConfig setAutoRead (boolean), DefaultUdtChannelConfig getReceiveBufferSize (), DefaultUdtChannelConfig setSystemReceiveBufferSize (int), DefaultUdtChannelConfig setWriteBufferHighWaterMark (int)]","365"
"1","netty/transport-udt","ea3c2d5fd36a790d6e2c1adac1883729ad1e31f2","68b0d37c52b9324a3e2cd269e35a39a79ca79015","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[NioUdtMessageConnectorChannel NioUdtMessageConnectorChannel (Channel, SocketChannelUDT)]","5"
"2","netty/transport-udt","68b0d37c52b9324a3e2cd269e35a39a79ca79015","208d8ffdc649dfaa2e871ab1c0f64bf712051134","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[NioUdtMessageConnectorChannel NioUdtMessageConnectorChannel (Channel, SocketChannelUDT)]","5"
"8","netty/transport-udt","208d8ffdc649dfaa2e871ab1c0f64bf712051134","2f982789ce3061d3f98dd61dd90e5e25ae61e039","SWITCH_EQUAL_SIDES","14","1","2","[NioUdtMessageConnectorChannel doWriteMessage (Object, ChannelOutboundBuffer), NioUdtMessageConnectorChannel NioUdtMessageConnectorChannel (Channel, SocketChannelUDT)]","10"
"12","netty/transport-udt","2f982789ce3061d3f98dd61dd90e5e25ae61e039","ffe122fc5e89efa3ed3534f35c4dccd5edd72b5e","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[NioUdtMessageConnectorChannel doWriteMessage (Object, ChannelOutboundBuffer), NioUdtMessageConnectorChannel doConnect (SocketAddress, SocketAddress)]","10"
"13","netty/transport-udt","ffe122fc5e89efa3ed3534f35c4dccd5edd72b5e","1543cce850085bbb740c6b5401da513a73da8b33","REVERSE_IF_ELSE","3","1","3","[NioUdtMessageConnectorChannel doWriteMessage (Object, ChannelOutboundBuffer), NioUdtMessageConnectorChannel doReadMessages (List<Object>), NioUdtMessageConnectorChannel doFinishConnect ()]","15"
"17","netty/transport-udt","1543cce850085bbb740c6b5401da513a73da8b33","f43e9141cd9fdf35436070166c4d8ed41c297833","REVERSE_IF_ELSE","3","1","4","[NioUdtMessageConnectorChannel doWriteMessage (Object, ChannelOutboundBuffer), NioUdtMessageConnectorChannel doReadMessages (List<Object>), NioUdtMessageConnectorChannel doConnect (SocketAddress, SocketAddress), NioUdtMessageConnectorChannel doFinishConnect ()]","20"
"19","netty/transport-udt","f43e9141cd9fdf35436070166c4d8ed41c297833","7d7bfa26069d5b62ca52411e70c3c71b93d6ae89","LOCAL_VAR_RENAMING","0","1","1","[NioUdtMessageConnectorChannel doReadMessages (List<Object>)]","5"
"22","netty/transport-udt","7d7bfa26069d5b62ca52411e70c3c71b93d6ae89","b1c7e082aa80c7808d42924a7ec3e37ee5dd8d0b","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[NioUdtMessageConnectorChannel doWriteMessage (Object, ChannelOutboundBuffer), NioUdtMessageConnectorChannel doConnect (SocketAddress, SocketAddress)]","10"
"27","netty/transport-udt","b1c7e082aa80c7808d42924a7ec3e37ee5dd8d0b","37857ebdaef3626b02d712743731839cce0dabff","VAR_DECLARATION_MERGING","12","1","1","[NioUdtMessageConnectorChannel doWriteMessage (Object, ChannelOutboundBuffer)]","5"
"0","netty/transport","37857ebdaef3626b02d712743731839cce0dabff","15ae1b9563b25deff234e685d4ea12316f7b2e3e","IF_DIVIDING","9","1","102","[DefaultChannelProgressivePromise addListeners (GenericFutureListener<? extends Future<? super Void>>), DefaultChannelProgressivePromise await (), DefaultChannelProgressivePromise setSuccess (Void), DefaultChannelProgressivePromise flushCheckpoint (), HandleImpl guess (), HandleImpl attemptedBytesRead (int), SelectorTuple SelectorTuple (Selector, Selector), DefaultChannelProgressivePromise awaitUninterruptibly (), DefaultChannelProgressivePromise sync (), SelectorTuple wakeup (boolean), DefaultChannelProgressivePromise flushCheckpoint (long), SelectorTuple afterScheduledTaskSubmitted (long), SelectorTuple SelectorTuple (Selector), DefaultChannelProgressivePromise promise (), NioEventLoopGroup NioEventLoopGroup (int, Executor, EventExecutorChooserFactory, SelectorProvider, SelectStrategyFactory), HandleImpl lastBytesRead (int), SelectorTuple register (SelectableChannel, int, NioTask<?>), SelectorTuple closeAll (), HandleImpl maxBytesPerRead (int), SelectorTuple cleanup (), SelectorTuple select (long), DefaultChannelProgressivePromise trySuccess (), NioEventLoopGroup NioEventLoopGroup (int, Executor, SelectorProvider, SelectStrategyFactory), DefaultChannelProgressivePromise syncUninterruptibly (), SelectorTuple selectNow (), EmbeddedSocketAddress toString (), SelectorTuple setIoRatio (int), HandleImpl incMessagesRead (int), HandleImpl checkMaxBytesPerReadPair (int, int), DefaultChannelProgressivePromise unvoid (), DefaultChannelProgressivePromise channel (), NioEventLoop get (), NioEventLoopGroup NioEventLoopGroup (int, Executor, EventExecutorChooserFactory, SelectorProvider, SelectStrategyFactory, RejectedExecutionHandler), NioEventLoopGroup NioEventLoopGroup (int, Executor, EventExecutorChooserFactory, SelectorProvider, SelectStrategyFactory, RejectedExecutionHandler, EventLoopTaskQueueFactory), SelectorTuple processSelectedKey (SelectionKey, NioTask<SelectableChannel>), SelectorTuple registeredChannels (), DefaultChannelProgressivePromise setProgress (long, long), DefaultChannelProgressivePromise DefaultChannelProgressivePromise (Channel), NioEventLoop NioEventLoop (NioEventLoopGroup, Executor, SelectorProvider, SelectStrategy, RejectedExecutionHandler, EventLoopTaskQueueFactory, EventLoopTaskQueueFactory), SelectorTuple newTaskQueue0 (int), SelectorTuple rebuildSelector (), DefaultChannelProgressivePromise executor (), ChannelHandler handlerRemoved (ChannelHandlerContext), HandleImpl DefaultMaxBytesRecvByteBufAllocator (), SelectorTuple processSelectedKey (SelectionKey, AbstractNioChannel), SelectorTuple processSelectedKeys (), NioEventLoopGroup NioEventLoopGroup (), HandleImpl readComplete (), HandleImpl DefaultMaxBytesRecvByteBufAllocator (int, int), NioEventLoopGroup setIoRatio (int), SelectorTuple beforeScheduledTaskSubmitted (long), HandleImpl maxBytesPerRead (), DefaultChannelProgressivePromise addListener (GenericFutureListener<? extends Future<? super Void>>), SelectorTuple unwrappedSelector (), SelectorTuple rebuildSelector0 (), HandleImpl allocate (ByteBufAllocator), SelectorTuple selectAgain (), SelectorTuple invokeChannelUnregistered (NioTask<SelectableChannel>, SelectionKey, Throwable), HandleImpl lastBytesRead (), DefaultChannelProgressivePromise removeListeners (GenericFutureListener<? extends Future<? super Void>>), HandleImpl reset (ChannelConfig), DefaultChannelProgressivePromise isVoid (), SelectorTuple processSelectedKeysOptimized (), HandleImpl continueReading (UncheckedBooleanSupplier), NioEventLoopGroup NioEventLoopGroup (int), SelectorTuple run (), SelectorTuple unexpectedSelectorWakeup (int), HandleImpl newHandle (), SelectorTuple getIoRatio (), HandleImpl maxBytesPerReadPair (int, int), HandleImpl get (), SelectorTuple openSelector (), DefaultChannelProgressivePromise checkDeadLock (), SelectorTuple newTaskQueue (int), ChannelHandler handlerAdded (ChannelHandlerContext), DefaultChannelProgressivePromise DefaultChannelProgressivePromise (Channel, EventExecutor), HandleImpl maxBytesPerIndividualRead (int), HandleImpl maxBytesPerReadPair (), HandleImpl continueReading (), SelectorTuple registeredChannelsIterator (), SelectorTuple selectorProvider (), SelectorTuple cancel (SelectionKey), ChannelHandler exceptionCaught (ChannelHandlerContext, Throwable), NioEventLoopGroup NioEventLoopGroup (int, ThreadFactory), NioEventLoop newTaskQueue (EventLoopTaskQueueFactory), NioEventLoopGroup NioEventLoopGroup (int, ThreadFactory, SelectorProvider, SelectStrategyFactory), DefaultChannelProgressivePromise setFailure (Throwable), NioEventLoopGroup NioEventLoopGroup (int, Executor, SelectorProvider), NioEventLoop run (), NioEventLoopGroup NioEventLoopGroup (int, ThreadFactory, SelectorProvider), DefaultChannelProgressivePromise setSuccess (), NioEventLoopGroup NioEventLoopGroup (int, Executor, EventExecutorChooserFactory, SelectorProvider, SelectStrategyFactory, RejectedExecutionHandler, EventLoopTaskQueueFactory, EventLoopTaskQueueFactory), NioEventLoopGroup NioEventLoopGroup (int, Executor), SelectorTuple processSelectedKeysPlain (Set<SelectionKey>), SelectorTuple register0 (SelectableChannel, int, NioTask<?>), NioEventLoopGroup rebuildSelectors (), NioEventLoopGroup newChild (Executor, Object), DefaultChannelProgressivePromise removeListener (GenericFutureListener<? extends Future<? super Void>>), SelectorTuple handleLoopException (Throwable), HandleImpl attemptedBytesRead (), HandleImpl maxBytesPerIndividualRead (), NioEventLoopGroup NioEventLoopGroup (ThreadFactory)]","612"
"4","netty/transport","15ae1b9563b25deff234e685d4ea12316f7b2e3e","626166e50e6f5d346b0851a3f85aa32c51282e15","LOCAL_VAR_RENAMING","0","1","2","[SelectorTuple processSelectedKeysOptimized (), SelectorTuple processSelectedKeysPlain (Set<SelectionKey>)]","12"
"5","netty/transport","626166e50e6f5d346b0851a3f85aa32c51282e15","52d1c1a4b9e19d4df2dfba75cd0217ccf0ef630f","PP_TO_ADD_ASSIGNMENT","6","1","1","[SelectorTuple cancel (SelectionKey)]","6"
"8","netty/transport","52d1c1a4b9e19d4df2dfba75cd0217ccf0ef630f","7ad80b91670415f537fa1a6d024a8302cd373fe2","LOCAL_VAR_RENAMING","0","1","2","[SelectorTuple processSelectedKeysOptimized (), SelectorTuple run ()]","12"
"9","netty/transport","7ad80b91670415f537fa1a6d024a8302cd373fe2","2f1973341ac664ff38fdde443b2dbf1f5bd9ac09","FOR_TO_WHILE","1","1","3","[SelectorTuple processSelectedKeysOptimized (), SelectorTuple processSelectedKeysPlain (Set<SelectionKey>), SelectorTuple run ()]","18"
"11","netty/transport","2f1973341ac664ff38fdde443b2dbf1f5bd9ac09","0fa1cb1b4c025d4d9d5a709f0675eeb6f51be35b","INFIX_EXPRESSION_DIVIDING","8","1","5","[SelectorTuple unexpectedSelectorWakeup (int), SelectorTuple register (SelectableChannel, int, NioTask<?>), SelectorTuple processSelectedKey (SelectionKey, AbstractNioChannel), SelectorTuple setIoRatio (int), SelectorTuple run ()]","30"
"12","netty/transport","0fa1cb1b4c025d4d9d5a709f0675eeb6f51be35b","cd0600441be83966b397993d8ebe4c01cb073d28","VAR_DECLARATION_DIVIDING","13","1","1","[SelectorTuple processSelectedKey (SelectionKey, AbstractNioChannel)]","6"
"13","netty/transport","cd0600441be83966b397993d8ebe4c01cb073d28","af0dc53d116d6d1345f0b4cd726c74bbacc497b9","SWITCH_EQUAL_SIDES","14","1","4","[SelectorTuple processSelectedKey (SelectionKey, NioTask<SelectableChannel>), SelectorTuple processSelectedKey (SelectionKey, AbstractNioChannel), SelectorTuple run (), SelectorTuple select (long)]","24"
"15","netty/transport","af0dc53d116d6d1345f0b4cd726c74bbacc497b9","48ade9fbe9b9345e5eb35e1e212a029ad4283e3b","STATEMENTS_ORDER_REARRANGEMENT","10","1","10","[SelectorTuple rebuildSelector0 (), SelectorTuple openSelector (), SelectorTuple SelectorTuple (Selector, Selector), SelectorTuple unexpectedSelectorWakeup (int), SelectorTuple selectAgain (), NioEventLoop NioEventLoop (NioEventLoopGroup, Executor, SelectorProvider, SelectStrategy, RejectedExecutionHandler, EventLoopTaskQueueFactory, EventLoopTaskQueueFactory), SelectorTuple processSelectedKeysOptimized (), SelectorTuple processSelectedKeysPlain (Set<SelectionKey>), SelectorTuple processSelectedKey (SelectionKey, AbstractNioChannel), SelectorTuple run ()]","60"
"16","netty/transport","48ade9fbe9b9345e5eb35e1e212a029ad4283e3b","d27229ccbedcd08c6f791cc6617892b49e23d18a","PP_TO_ADD_ASSIGNMENT","6","1","1","[SelectorTuple run ()]","6"
"17","netty/transport","d27229ccbedcd08c6f791cc6617892b49e23d18a","c06ae6f4f98f55a6095f269d5f8fec572a6c1dfa","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","2","[SelectorTuple run (), SelectorTuple cancel (SelectionKey)]","12"
"21","netty/transport","c06ae6f4f98f55a6095f269d5f8fec572a6c1dfa","cea09ab98f18eb7ca0cf65055ea8ebffe89893cf","STATEMENTS_ORDER_REARRANGEMENT","10","1","10","[SelectorTuple rebuildSelector0 (), SelectorTuple openSelector (), SelectorTuple unexpectedSelectorWakeup (int), SelectorTuple selectAgain (), NioEventLoop NioEventLoop (NioEventLoopGroup, Executor, SelectorProvider, SelectStrategy, RejectedExecutionHandler, EventLoopTaskQueueFactory, EventLoopTaskQueueFactory), SelectorTuple processSelectedKeysOptimized (), SelectorTuple processSelectedKeysPlain (Set<SelectionKey>), SelectorTuple processSelectedKey (SelectionKey, AbstractNioChannel), SelectorTuple run (), SelectorTuple cancel (SelectionKey)]","60"
"24","netty/transport","cea09ab98f18eb7ca0cf65055ea8ebffe89893cf","cd6113e103e738138ce2a735b54f9b29805721f6","VAR_DECLARATION_DIVIDING","13","1","1","[SelectorTuple processSelectedKey (SelectionKey, AbstractNioChannel)]","6"
"25","netty/transport","cd6113e103e738138ce2a735b54f9b29805721f6","5273173a761dacee61c745c0552f226f1b4491d3","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[SelectorTuple run ()]","6"
"26","netty/transport","5273173a761dacee61c745c0552f226f1b4491d3","3740f35b5d36ba0bdb6f92ad4ea1934eeb908dd4","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[SelectorTuple run ()]","6"
"27","netty/transport","3740f35b5d36ba0bdb6f92ad4ea1934eeb908dd4","006f8f70b1b52ae555147140fa3920bc86e8b521","VAR_DECLARATION_MERGING","12","1","1","[SelectorTuple unexpectedSelectorWakeup (int)]","6"
"29","netty/transport","006f8f70b1b52ae555147140fa3920bc86e8b521","22fa5f1c80dfde3faffc160fa7afcb673d50fa17","INFIX_EXPRESSION_DIVIDING","8","1","1","[SelectorTuple openSelector ()]","6"
"0","scribejava","bfbe536886fc3c614b785110f8eba663644862d7","1aa4e0e73d4fe171b536e3f96f404e86732403bb","FOR_TO_WHILE","1","1","7","[StreamUtils getStreamContents (InputStream), OAuthParametersMissingException OAuthParametersMissingException (OAuthRequest), RequestTokenExtractor extract (String), Api createService (String, String, String), BaseStringExtractorImpl extract (OAuthRequest), BaseStringExtractorImpl getSortedAndEncodedParams (OAuthRequest), BaseStringExtractorImpl checkPreconditions (OAuthRequest)]","35"
"2","scribejava","1aa4e0e73d4fe171b536e3f96f404e86732403bb","95357ccc04605eb45f1bae01b2cb06afd682bdce","LOCAL_VAR_RENAMING","0","1","1","[StreamUtils getStreamContents (InputStream)]","5"
"9","scribejava","95357ccc04605eb45f1bae01b2cb06afd682bdce","bb679b60b62a2e0e7510ff9177268f757454972b","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[StreamUtils getStreamContents (InputStream)]","5"
"11","scribejava","bb679b60b62a2e0e7510ff9177268f757454972b","dd2be69658ffb50c69ba705999e2233dea6cfd3d","LOCAL_VAR_RENAMING","0","1","1","[OAuthParametersMissingException OAuthParametersMissingException (OAuthRequest)]","5"
"20","scribejava","dd2be69658ffb50c69ba705999e2233dea6cfd3d","28fd672fd288bb3bf02982af83340d106b91a0ac","LOCAL_VAR_RENAMING","0","1","1","[StreamUtils getStreamContents (InputStream)]","5"
"45","scribejava","28fd672fd288bb3bf02982af83340d106b91a0ac","ec7e6caac4c3714990b47a0e32300bce91424cf9","LOCAL_VAR_RENAMING","0","1","1","[OAuthParametersMissingException OAuthParametersMissingException (OAuthRequest)]","5"
"51","scribejava","ec7e6caac4c3714990b47a0e32300bce91424cf9","e084d1651b8927cb51b3f927b7ac237d9b778519","REVERSE_IF_ELSE","3","1","1","[StreamUtils getStreamContents (InputStream)]","5"
"0","symja-parser","689f67a32faac83d3edda801cda9b51aaa08e741","d0cd7311aec94f9653454fa97ffe3a40bd0e3eb1","IF_DIVIDING","9","1","31","[PatternNode equals (Object), PatternNode PatternNode (SymbolNode, ASTNode), Operator Operator (String, String, int), MinFunction evaluateNodeLogical (ASTNode), PatternNode getConstraint (), Operator equals (Object), MinFunction evaluateFunction (FunctionNode), PreMinusOperator PreMinusOperator (String, String, int), MinFunction getVariables (String, Set<String>, boolean), MinFunction optimizeFunction (FunctionNode), PreMinusOperator createFunction (IParserFactory, ASTNode), PatternNode isDefault (), TimesFunction getVariables (String, Set<String>, boolean), MinFunction getDerivativeResult (ASTNode, FunctionNode), PatternNode toString (), PatternNode PatternNode (SymbolNode, ASTNode, boolean), MinFunction parse (String), Operator getPrecedence (), MinFunction getVariables (ASTNode, Set<String>), Operator toString (), MinFunction evaluateFunctionLogical (FunctionNode), MinFunction isSymbol (SymbolNode, SymbolNode), Operator getOperatorString (), MinFunction isSymbol (SymbolNode, String), Operator hashCode (), PatternNode hashCode (), MinFunction getVariable (String), MinFunction derivative (ASTNode, SymbolNode), PatternNode getSymbol (), Operator getFunctionName (), MinFunction evaluateNode (ASTNode)]","155"
"1","symja-parser","d0cd7311aec94f9653454fa97ffe3a40bd0e3eb1","dc626978eeda08d4ed504fc8b8b8cd3c4483d279","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[PatternNode PatternNode (SymbolNode, ASTNode, boolean)]","5"
"6","symja-parser","dc626978eeda08d4ed504fc8b8b8cd3c4483d279","a9000023a167d3edfc3acf6a60cb055cb1273bf3","SWITCH_EQUAL_SIDES","14","1","1","[PatternNode equals (Object)]","5"
"10","symja-parser","a9000023a167d3edfc3acf6a60cb055cb1273bf3","2cb044ab9067e46a6b4fd46a3650af2cc55ec06e","SWITCH_EQUAL_SIDES","14","1","1","[PatternNode equals (Object)]","5"
"26","symja-parser","2cb044ab9067e46a6b4fd46a3650af2cc55ec06e","233f9db9bdd13574b9ec1d2e2a152c11228fdcd3","LOCAL_VAR_RENAMING","0","1","5","[PatternNode equals (Object), PatternNode PatternNode (SymbolNode, ASTNode), PatternNode getConstraint (), PatternNode toString (), PatternNode PatternNode (SymbolNode, ASTNode, boolean)]","25"
"30","symja-parser","233f9db9bdd13574b9ec1d2e2a152c11228fdcd3","29ea1d3039a11dac913bdbbda2d94668e22b88b0","REVERSE_IF_ELSE","3","1","3","[PatternNode equals (Object), PatternNode hashCode (), PatternNode toString ()]","15"
"37","symja-parser","29ea1d3039a11dac913bdbbda2d94668e22b88b0","834e8afa39d5a13488ea7f15d9fb2caec5d22af2","REVERSE_IF_ELSE","3","1","3","[PatternNode equals (Object), PatternNode hashCode (), PatternNode toString ()]","15"
"38","symja-parser","834e8afa39d5a13488ea7f15d9fb2caec5d22af2","029f26e05f26adb8f8782481e2f32bc352de4d6b","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[PatternNode PatternNode (SymbolNode, ASTNode, boolean)]","5"
"47","symja-parser","029f26e05f26adb8f8782481e2f32bc352de4d6b","2492fad9b538c17a488b196d339edfa3e4c454fe","SWITCH_EQUAL_SIDES","14","1","1","[PatternNode equals (Object)]","5"
"55","symja-parser","2492fad9b538c17a488b196d339edfa3e4c454fe","fc0aea868279b1327dc83f3c18022301f866a81d","LOCAL_VAR_RENAMING","0","1","2","[PatternNode PatternNode (SymbolNode, ASTNode), PatternNode PatternNode (SymbolNode, ASTNode, boolean)]","10"
"0","spring-hateoas","2ba26707fbd2c9e047962d3139a3157e9667bf9c","136b0e8588973434b6b83eb547e011511ce11b1a","VAR_DECLARATION_MERGING","12","1","40","[DelegatingEntityLinks linkFor (Class<?>, Object), HalFormsProperty withOptions (HalFormsOptions), LinkBuilderFactory linkTo (Class<?>, Object), HalFormsProperty withPrompt (String), HypermediaMappingInformationComparator compare (HypermediaMappingInformation, HypermediaMappingInformation), HateoasConfiguration loadResourceBundleResources (String, boolean), HalFormsProperty isReadOnly (), LinkBuilderFactory linkTo (Class<?>), HalFormsProperty withMinLength (Long), HalFormsProperty withName (String), DelegatingEntityLinks linkToItemResource (Class<?>, Object), HateoasConfiguration hypermediaWebMvcConverters (ObjectProvider<ObjectMapper>, List<HypermediaMappingInformation>, Optional<HypermediaMappingInformationComparator>), LinkParser consumeQuotedString (String, StringBuilder, int[]), HalFormsProperty HalFormsProperty (), HalFormsProperty withMin (Number), HalFormsProperty withRegex (String), MessageSourceResolver resolve (MessageSourceResolvable), HalFormsProperty toString (), HateoasConfiguration lookupMessageSource (), DelegatingEntityLinks DelegatingEntityLinks (PluginRegistry<EntityLinks,Class<?>>), CollectionModel deriveElementType (Collection<?>, ResolvableType), HalFormsProperty withPlaceholder (String), DelegatingEntityLinks getPluginFor (Class<?>), CollectionModel equals (Object), HalFormsProperty withMulti (boolean), HalFormsProperty withReadOnly (boolean), MessageSourceResolver MessageSourceResolver (MessageSource), LinkBuilderFactory linkTo (Class<?>, Map<String,?>), HalFormsProperty withType (String), HalFormsProperty withMaxLength (Long), HalFormsProperty HalFormsProperty (String, boolean, Object, String, String, boolean, boolean, boolean, String, Number, Number, Long, Long, String, HalFormsOptions), HalFormsProperty hashCode (), HalFormsProperty withTemplated (boolean), HalFormsProperty withRequired (boolean), HalFormsProperty withMax (Number), LinkParser parseLink (String, int[]), HalFormsProperty withValue (Object), DelegatingEntityLinks linkForItemResource (Class<?>, Object), HateoasConfiguration relProviderPluginRegistry (ApplicationContext), HalFormsProperty equals (Object)]","320"
"14","spring-hateoas","136b0e8588973434b6b83eb547e011511ce11b1a","b8a1d135ffe4578876d1fab82f0939f1f226075f","LOCAL_VAR_RENAMING","0","1","2","[MessageSourceResolver MessageSourceResolver (MessageSource), MessageSourceResolver resolve (MessageSourceResolvable)]","16"
"29","spring-hateoas","b8a1d135ffe4578876d1fab82f0939f1f226075f","b22dcb30122357ebb910d911f9ba45e347271737","LOCAL_VAR_RENAMING","0","1","2","[MessageSourceResolver MessageSourceResolver (MessageSource), MessageSourceResolver resolve (MessageSourceResolvable)]","16"
"54","spring-hateoas","b22dcb30122357ebb910d911f9ba45e347271737","2c5ab4d7b70d2f0d36bc3c7fca863646aa8ad41f","LOCAL_VAR_RENAMING","0","1","2","[MessageSourceResolver MessageSourceResolver (MessageSource), MessageSourceResolver resolve (MessageSourceResolvable)]","16"
"55","spring-hateoas","2c5ab4d7b70d2f0d36bc3c7fca863646aa8ad41f","82dd405492ae3586c3137be7c252deb5e2b6fe93","LOCAL_VAR_RENAMING","0","1","1","[MessageSourceResolver resolve (MessageSourceResolvable)]","8"
"64","spring-hateoas","82dd405492ae3586c3137be7c252deb5e2b6fe93","7917ff9a571354cd7a2f69d8712301bc463d7627","LOCAL_VAR_RENAMING","0","1","2","[MessageSourceResolver MessageSourceResolver (MessageSource), MessageSourceResolver resolve (MessageSourceResolvable)]","16"
"1","spring-data-neo4j/spring-data-neo4j-aspects","66a3ed9183e5e2451caa215b24c7b0a15f318d6d","6b80f45d775fb45a49fd8da3379c7b35d88a8430","LOCAL_VAR_RENAMING","0","1","1","[GraphBacked setPersistentState (STATE)]","3"
"0","spring-data-neo4j/spring-data-neo4j-cross-store","6b80f45d775fb45a49fd8da3379c7b35d88a8430","e23c87d6d5a52186bf867c4f4b25050ad0786ed4","LOCAL_VAR_RENAMING","0","1","2","[CrossStoreNodeDelegatingFieldAccessorFactory CrossStoreNodeDelegatingFieldAccessorFactory (Neo4jTemplate), CrossStoreNodeDelegatingFieldAccessorFactory newConvertingNodePropertyFieldAccessorFactory ()]","8"
"7","spring-data-neo4j/spring-data-neo4j-cross-store","e23c87d6d5a52186bf867c4f4b25050ad0786ed4","310c8ab056d7516aa1d16fd2936257cf1f83e69c","LOCAL_VAR_RENAMING","0","1","3","[CrossStoreNodeDelegatingFieldAccessorFactory createAccessorFactories (), CrossStoreNodeDelegatingFieldAccessorFactory newPropertyFieldAccessorFactory (), CrossStoreNodeDelegatingFieldAccessorFactory accept (Neo4jPersistentProperty)]","12"
"8","spring-data-neo4j/spring-data-neo4j-cross-store","310c8ab056d7516aa1d16fd2936257cf1f83e69c","3cf38e8f55ac014ba5e05cb0e90de575ae0c080a","LOCAL_VAR_RENAMING","0","1","2","[CrossStoreNodeDelegatingFieldAccessorFactory createAccessorFactories (), Factory create (Neo4jTemplate)]","8"
"13","spring-data-neo4j/spring-data-neo4j-cross-store","3cf38e8f55ac014ba5e05cb0e90de575ae0c080a","f0d0a3765248083ad3922cbc2ed3808d2e0b3283","LOCAL_VAR_RENAMING","0","1","2","[CrossStoreNodeDelegatingFieldAccessorFactory createAccessorFactories (), Factory create (Neo4jTemplate)]","8"
"0","spring-data-neo4j/cineasts-aspects","f0d0a3765248083ad3922cbc2ed3808d2e0b3283","f3e626022de564f99a7ba6664291650d7570badd","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[Role Role (Movie, Person, String)]","9"
"1","spring-data-neo4j/cineasts-aspects","f3e626022de564f99a7ba6664291650d7570badd","793e885ed63ab2895b6c58046d339e1889731438","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[Role Role (Movie, Person, String)]","9"
"4","spring-data-neo4j/cineasts-aspects","793e885ed63ab2895b6c58046d339e1889731438","5f42cc06a4684ce21cef37ef30b34d8269d49913","LOCAL_VAR_RENAMING","0","1","1","[Role Role (Movie, Person, String)]","9"
"7","spring-data-neo4j/cineasts-aspects","5f42cc06a4684ce21cef37ef30b34d8269d49913","ec2c5f6fcb11c052926ea8ad50766036777096bf","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[Role Role (Movie, Person, String)]","9"
"6","spring-data-neo4j/cineasts-rest","ec2c5f6fcb11c052926ea8ad50766036777096bf","547e61b5aac51b2cac2cc7884523923db714c4f8","REVERSE_IF_ELSE","3","1","1","[MovieRating obtainRating (Movie)]","8"
"8","spring-data-neo4j/cineasts-rest","547e61b5aac51b2cac2cc7884523923db714c4f8","7d1f6fc1daa0a9832887059428d5342154cc8e2c","SWITCH_EQUAL_SIDES","14","1","1","[MovieRating average ()]","8"
"22","spring-data-neo4j/cineasts-rest","7d1f6fc1daa0a9832887059428d5342154cc8e2c","dd98c145a3d5104c6e9b43e7975bd8618f6c1dce","SWITCH_EQUAL_SIDES","14","1","1","[MovieRating average ()]","8"
"24","spring-data-neo4j/cineasts-rest","dd98c145a3d5104c6e9b43e7975bd8618f6c1dce","3fe4a9f6d946f7d7bf9a85b020daefa2e4f78fe3","SWITCH_EQUAL_SIDES","14","1","1","[MovieRating average ()]","8"
"28","spring-data-neo4j/cineasts-rest","3fe4a9f6d946f7d7bf9a85b020daefa2e4f78fe3","137e036e261be6bb7499c1367d14c80602c38f7c","LOCAL_VAR_RENAMING","0","1","3","[MovieRating aggregateRatings (User, int), MovieRating average (), MovieRating update (Rating, int)]","24"
"2","spring-data-neo4j/cineasts","137e036e261be6bb7499c1367d14c80602c38f7c","9184afcff5035dc4511316aac5d31092a05194b7","SWITCH_EQUAL_SIDES","14","1","2","[MovieController singleMovieView (Model, String), MovieController updateMovie (Model, String, Integer, String)]","16"
"3","spring-data-neo4j/cineasts","9184afcff5035dc4511316aac5d31092a05194b7","adff9bd01237e6ba4865bec3bb866c4110316f9d","LOCAL_VAR_RENAMING","0","1","2","[MovieController getMovie (String), MovieController singleMovieView (Model, String)]","16"
"4","spring-data-neo4j/cineasts","adff9bd01237e6ba4865bec3bb866c4110316f9d","70c2952fce905cb59b33e7b6bc77b8dcd9329c00","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[MovieController singleMovieView (Model, String), MovieController updateMovie (Model, String, Integer, String)]","16"
"8","spring-data-neo4j/cineasts","70c2952fce905cb59b33e7b6bc77b8dcd9329c00","33a3a61d16eeb3ce5dd2f341fe33f905abae887d","REVERSE_IF_ELSE","3","1","3","[MovieController findMovies (Model, String), MovieController singleMovieView (Model, String), MovieController updateMovie (Model, String, Integer, String)]","24"
"9","spring-data-neo4j/cineasts","33a3a61d16eeb3ce5dd2f341fe33f905abae887d","f4d106d8a5fc1c4c33b08a3cde4ae22f2baccd19","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[MovieController updateMovie (Model, String, Integer, String)]","8"
"25","spring-data-neo4j/cineasts","f4d106d8a5fc1c4c33b08a3cde4ae22f2baccd19","baa70a63ab78c139a5c0e73d302e63d0df6e45d3","LOCAL_VAR_RENAMING","0","1","2","[MovieController findMovies (Model, String), MovieController updateMovie (Model, String, Integer, String)]","16"
"28","spring-data-neo4j/cineasts","baa70a63ab78c139a5c0e73d302e63d0df6e45d3","14a9fc705762a2e3bddd99ac174a6342b5b647aa","LOCAL_VAR_RENAMING","0","1","2","[MovieController findMovies (Model, String), MovieController updateMovie (Model, String, Integer, String)]","16"
"2","spring-data-neo4j/hello-worlds","14a9fc705762a2e3bddd99ac174a6342b5b647aa","c4bfb71d2eaea282ee9828cc00368a7e6915e962","LOCAL_VAR_RENAMING","0","1","2","[GalaxyService findWorldById (Long), GalaxyService findAllByNumberOfMoons (int)]","4"
"9","spring-data-neo4j/myrestaurants-original","c4bfb71d2eaea282ee9828cc00368a7e6915e962","e78040ca68e8f761bb50032f0c325f39a1d17661","REVERSE_IF_ELSE","3","1","1","[UserAccount toString ()]","4"
"23","spring-data-neo4j/myrestaurants-original","e78040ca68e8f761bb50032f0c325f39a1d17661","8fa998720b1217cb7f3833baf49420feade44ee5","SWITCH_EQUAL_SIDES","14","1","1","[UserAccount toString ()]","4"
"14","spring-data-neo4j/myrestaurants-social","8fa998720b1217cb7f3833baf49420feade44ee5","f3a703f78d614426d98be81b9a670648e60e1a5b","LOCAL_VAR_RENAMING","0","1","1","[BaseApplicationController getCurrentUserAccount ()]","4"
"27","spring-data-neo4j/myrestaurants-social","f3a703f78d614426d98be81b9a670648e60e1a5b","f4eeb18fca36243bc21a840eccf87d7fdf70279c","REVERSE_IF_ELSE","3","1","2","[BaseApplicationController populateModelWithCurrentUserAccountIdAsLong (), BaseApplicationController getCurrentUserAccount ()]","8"
"0","spring-data-neo4j/todos","f4eeb18fca36243bc21a840eccf87d7fdf70279c","4b47d100469a7cf5e684cc5c4ac2160dc9c1c627","REVERSE_IF_ELSE","3","1","4","[TodoController updateFromJson (String), TodoController deleteFromJson (Long), TodoController showJson (Long), TodoController encodeUrlPathSegment (String, HttpServletRequest)]","12"
"3","spring-data-neo4j/todos","4b47d100469a7cf5e684cc5c4ac2160dc9c1c627","bc246f0c21dce82de974f7846876338ff47bfadc","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[TodoController encodeUrlPathSegment (String, HttpServletRequest)]","3"
"7","spring-data-neo4j/todos","bc246f0c21dce82de974f7846876338ff47bfadc","94b68889d68f77f7d068cc21955f0498512b6535","REVERSE_IF_ELSE","3","1","3","[TodoController updateFromJson (String), TodoController deleteFromJson (Long), TodoController showJson (Long)]","9"
"15","spring-data-neo4j/todos","94b68889d68f77f7d068cc21955f0498512b6535","b368b1f603dff5999bb8d575f7877afdb58e33a1","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[TodoController encodeUrlPathSegment (String, HttpServletRequest)]","3"
"17","spring-data-neo4j/todos","b368b1f603dff5999bb8d575f7877afdb58e33a1","540939545f00a2ce374a3534ef5312359b8a7cdb","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[TodoController createFromJson (String), TodoController showJson (Long)]","6"
"20","spring-data-neo4j/todos","540939545f00a2ce374a3534ef5312359b8a7cdb","f56c0198776b0990dd7c28b6ec90c9e425ac8b11","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[TodoController deleteFromJson (Long), TodoController showJson (Long)]","6"
"27","spring-data-neo4j/todos","f56c0198776b0990dd7c28b6ec90c9e425ac8b11","626f7215df8e2ef53072ce263d638f08e3c3c26a","LOCAL_VAR_RENAMING","0","1","5","[TodoController updateFromJson (String), TodoController listJson (), TodoController deleteFromJson (Long), TodoController createFromJson (String), TodoController showJson (Long)]","15"
"15","spring-data-neo4j/spring-data-neo4j-rest","626f7215df8e2ef53072ce263d638f08e3c3c26a","126f79b1cfe4900962d1678cbfe51e8ad6d08fb6","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SpringRestGraphDatabase getOrCreateNode (String, String, Object, Map<String,Object>)]","4"
"17","spring-data-neo4j/spring-data-neo4j-rest","126f79b1cfe4900962d1678cbfe51e8ad6d08fb6","87b40d457fdcf7f1b02d453066a355890cae118e","VAR_DECLARATION_DIVIDING","13","1","1","[SpringRestGraphDatabase getOrCreateNode (String, String, Object, Map<String,Object>)]","4"
"29","spring-data-neo4j/spring-data-neo4j-rest","87b40d457fdcf7f1b02d453066a355890cae118e","d248bdeed92ea815ab58281e50ecd7403102f8cd","LOCAL_VAR_RENAMING","0","1","2","[SpringRestGraphDatabase queryEngineFor (QueryType, ResultConverter), SpringRestGraphDatabase getOrCreateRelationship (String, String, Object, Node, Node, String, Map<String,Object>)]","8"
"0","spring-data-neo4j/spring-data-neo4j","d248bdeed92ea815ab58281e50ecd7403102f8cd","57fe65b6d65429c66d46e2ecb7af0a8267a61400","SWITCH_EQUAL_SIDES","14","1","1","[StringToEnum convert (String)]","11"
"1","spring-data-neo4j/spring-data-neo4j","57fe65b6d65429c66d46e2ecb7af0a8267a61400","bdb68c6bf844b85673d0e8cfe5ab42b651cd05b0","LOCAL_VAR_RENAMING","0","1","2","[StringToEnum convert (String), StringToDateConverter convert (String)]","22"
"3","spring-data-neo4j/spring-data-neo4j","bdb68c6bf844b85673d0e8cfe5ab42b651cd05b0","233f16c2969273fd13113864a5fb708c5d6e099c","LOCAL_VAR_RENAMING","0","1","2","[DateToLongConverter convert (Date), StringToEnum StringToEnum (Class<T>)]","22"
"4","spring-data-neo4j/spring-data-neo4j","233f16c2969273fd13113864a5fb708c5d6e099c","cefd60d9f1ddf7f40cef52598acb79291dc8d823","LOCAL_VAR_RENAMING","0","1","1","[StringToDateConverter convert (String)]","11"
"12","spring-data-neo4j/spring-data-neo4j","cefd60d9f1ddf7f40cef52598acb79291dc8d823","6353fe924b1af393d89f472c328f3ac9ed7d7ef4","LOCAL_VAR_RENAMING","0","1","1","[EnumToStringConverter convert (Enum)]","11"
"26","spring-data-neo4j/spring-data-neo4j","6353fe924b1af393d89f472c328f3ac9ed7d7ef4","0a5cb04af8f950e25f28b4139f3d6fef53cbf4d7","SWITCH_EQUAL_SIDES","14","1","1","[StringToEnum convert (String)]","11"
"0","helios/helios-client","0b2855955dc6f3268e772252d84861082a516b6e","c689ef9daecfe835c660441500beefb597e84b48","INFIX_EXPRESSION_DIVIDING","8","1","114","[Builder os (String), DefaultHttpConnector setExtraHttpsHandler (HttpsHandler), HealthCheck newHttpHealthCheck (), Builder equals (Object), HealthCheck newExecHealthCheck (), HealthCheck toString (), PortMapping of (int, String), Deployment newBuilder (), Builder setDeployerMaster (String), Descriptor parse (byte[], Class<T>), ExecHealthCheck equals (Object), PomVersion isSnapshot (), PortMapping of (int, Integer), Deployment toBuilder (), ExecHealthCheck of (String), Descriptor toJsonString (), Builder getCommand (), PortMapping getIp (), Builder toString (), PomVersion equals (Object), PomVersion hashCode (), Deployment getDeployerMaster (), ExecHealthCheck newBuilder (), PomVersion getMajor (), DefaultHttpConnector handleHttps (HttpURLConnection, String, HostnameVerifierProvider, HttpsHandler), PomVersion getPatch (), Builder externalPort (Integer), Endpoints Endpoints (), PortMapping getProtocol (), Deployment toString (), ExecHealthCheck hashCode (), ExecHealthCheck ExecHealthCheck (List<String>), ExecHealthCheck toString (), Builder build (), PortMapping PortMapping (String, int, Integer, String), Builder Builder (), DefaultHttpConnector DefaultHttpConnector (EndpointIterator, int, boolean), DefaultEndpoint getIp (), Endpoints of (List<URI>, DnsResolver), Deployment equals (Object), DefaultHttpConnector connect (URI, String, byte[], Map<String,List<String>>), HealthCheck newTcpHealthCheck (), Endpoints of (Supplier<List<URI>>), Endpoints get (), Builder arch (String), Builder internalPort (int), Deployment getDeploymentGroupName (), DockerVersion getKernelVersion (), PortMapping getExternalPort (), Builder setGoal (Goal), Builder setJobId (JobId), HttpConnector connect (URI, String, byte[], Map<String,List<String>>), Descriptor toJsonBytes (), PomVersion parse (String), Builder apiVersion (String), DefaultEndpoint toString (), Deployment Deployment (JobId, Goal, String, String, String), Builder goVersion (String), DockerVersion getApiVersion (), DockerVersion hashCode (), ExecHealthCheck getCommand (), DockerVersion DockerVersion (String, String, String, String, String, String, String), DockerVersion equals (Object), PomVersion toString (), DockerVersion getVersion (), PortMapping hasExternalPort (), DockerVersion DockerVersion (Builder), ExecHealthCheck ExecHealthCheck (ExecHealthCheck.Builder), DefaultHttpConnector close (), PortMapping PortMapping (int, Integer), DockerVersion builder (), Deployment hashCode (), PortMapping getInternalPort (), PortMapping of (int, Integer, String), Deployment of (JobId, Goal, String), ExecHealthCheck of (List<String>), DefaultHttpConnector setRequestMethod (HttpURLConnection, String, boolean), PortMapping PortMapping (int), DefaultEndpoint getUri (), HealthCheck getType (), PortMapping builder (), Builder gitCommit (String), DockerVersion getOs (), Endpoints of (List<URI>), PomVersion getMinor (), Builder setCommand (List<String>), DockerVersion getArch (), Builder kernelVersion (String), Builder setDeployerUser (String), PomVersion compareTo (PomVersion), Deployment getGoal (), Deployment of (JobId, Goal), Descriptor parse (String, Class<T>), DefaultEndpoint hashCode (), DockerVersion getGoVersion (), DockerVersion toString (), DefaultHttpConnector connect0 (URI, String, byte[], Map<String,List<String>>, String), Deployment getDeployerUser (), Endpoints of (Supplier<List<URI>>, DnsResolver), PortMapping withExternalPort (Integer), DockerVersion getGitCommit (), PortMapping of (int), Deployment getJobId (), PortMapping PortMapping (Builder), Builder version (String), Builder hashCode (), DefaultEndpoint equals (Object), Builder ip (String), Deployment of (JobId, Goal, String, String, String), HealthCheck HealthCheck (String), Builder protocol (String), PomVersion PomVersion (boolean, int, int, int), Builder setDeploymentGroupName (String), DefaultEndpoint DefaultEndpoint (URI, InetAddress)]","1140"
"2","helios/helios-client","c689ef9daecfe835c660441500beefb597e84b48","9b4b0bb9aecea31b416d1d7aa099051944ce7777","VAR_DECLARATION_MERGING","12","1","1","[DefaultEndpoint DefaultEndpoint (URI, InetAddress)]","10"
"4","helios/helios-client","9b4b0bb9aecea31b416d1d7aa099051944ce7777","b6fc1182ba2756d2d3466aa79343f776695f3368","LOCAL_VAR_RENAMING","0","1","1","[Endpoints of (List<URI>, DnsResolver)]","10"
"5","helios/helios-client","b6fc1182ba2756d2d3466aa79343f776695f3368","148a3b70bbe5b14a58597ccbf8d7c45b55bd9e37","LOCAL_VAR_RENAMING","0","1","2","[Endpoints of (List<URI>, DnsResolver), DefaultEndpoint DefaultEndpoint (URI, InetAddress)]","20"
"9","helios/helios-client","148a3b70bbe5b14a58597ccbf8d7c45b55bd9e37","2f6f5bd1d54b9d069b29788dd155d8178d0bb9b6","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DefaultEndpoint DefaultEndpoint (URI, InetAddress)]","10"
"10","helios/helios-client","2f6f5bd1d54b9d069b29788dd155d8178d0bb9b6","f5010a015e3199b30280cedf5a5e07af4de4dc09","LOCAL_VAR_RENAMING","0","1","2","[Endpoints of (List<URI>, DnsResolver), DefaultEndpoint equals (Object)]","20"
"11","helios/helios-client","f5010a015e3199b30280cedf5a5e07af4de4dc09","24dc3602c83006ae8a0d75d1a7b48a8b2b5ce496","INFIX_EXPRESSION_DIVIDING","8","1","1","[DefaultEndpoint hashCode ()]","10"
"15","helios/helios-client","24dc3602c83006ae8a0d75d1a7b48a8b2b5ce496","835f8b8dd678cbdf877eddc3fd58ebcadbf30701","LOCAL_VAR_RENAMING","0","1","2","[DefaultEndpoint DefaultEndpoint (URI, InetAddress), DefaultEndpoint hashCode ()]","20"
"19","helios/helios-client","835f8b8dd678cbdf877eddc3fd58ebcadbf30701","7c49b9129a52b37f877446640f186b6fc1ad8225","INFIX_EXPRESSION_DIVIDING","8","1","1","[DefaultEndpoint equals (Object)]","10"
"20","helios/helios-client","7c49b9129a52b37f877446640f186b6fc1ad8225","fc5bed78ec4ec551edffc5a78bdf985c177dc314","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DefaultEndpoint DefaultEndpoint (URI, InetAddress)]","10"
"24","helios/helios-client","fc5bed78ec4ec551edffc5a78bdf985c177dc314","bed84122848599e810b94a00d4ebbbe067f719f6","LOCAL_VAR_RENAMING","0","1","2","[Endpoints of (List<URI>), DefaultEndpoint DefaultEndpoint (URI, InetAddress)]","20"
"27","helios/helios-client","bed84122848599e810b94a00d4ebbbe067f719f6","68c0e2e82d843daebc4f2f63a4dd17ceb1535d91","VAR_DECLARATION_DIVIDING","13","1","1","[DefaultEndpoint DefaultEndpoint (URI, InetAddress)]","10"
"28","helios/helios-client","68c0e2e82d843daebc4f2f63a4dd17ceb1535d91","038ace3cb5c7a8f405fc55d4ed031f59997faa52","SWITCH_EQUAL_SIDES","14","1","2","[DefaultEndpoint equals (Object), DefaultEndpoint DefaultEndpoint (URI, InetAddress)]","20"
"0","helios/helios-service-registration","038ace3cb5c7a8f405fc55d4ed031f59997faa52","daa4c3f25d1e6a53d86d747664412921e7445068","WHILE_TO_FOR","2","1","41","[Builder build (), Endpoint getHost (), EndpointHealthCheck toString (), EndpointHealthCheck hashCode (), EndpointHealthCheck newHttpCheck (String), ServiceRegistrarLoader load (), Builder endpoint (String, String, int), ServiceRegistration equals (Object), FilteringClassLoader FilteringClassLoader (List<Package>, ClassLoader, ClassLoader), Builder endpoint (String, String, int, String, String, List<String>), Endpoint Endpoint (String, String, int, String, String, List<String>, EndpointHealthCheck), Endpoint equals (Object), ServiceRegistration getEndpoints (), ServiceRegistration toString (), EndpointHealthCheck EndpointHealthCheck (String, String), Builder endpoint (String, String, int, String, String), ServiceRegistrarLoadingException ServiceRegistrarLoadingException (String, ServiceConfigurationError), ServiceRegistrarLoader extensionClassLoader (ClassLoader), Builder endpoint (String, String, int, String, String, List<String>, EndpointHealthCheck), Endpoint getProtocol (), EndpointHealthCheck equals (Object), Endpoint getPort (), Endpoint toString (), ServiceRegistrarLoader load (String, ClassLoader), Endpoint getDomain (), ServiceRegistrarLoader load (Path), EndpointHealthCheck getPath (), Endpoint getHealthCheck (), EndpointHealthCheck getType (), FilteringClassLoader findClass (String), ServiceRegistration ServiceRegistration (List<Endpoint>), EndpointHealthCheck newTcpCheck (), Endpoint hashCode (), NopServiceRegistrarFactory create (String), ServiceRegistrarLoader load (Path, ClassLoader, ClassLoader), Endpoint getTags (), Endpoint getName (), NopServiceRegistrarFactory createForDomain (String), ServiceRegistrarLoader pluginClassLoader (Path, ClassLoader, ClassLoader), ServiceRegistration hashCode (), ServiceRegistration newBuilder ()]","164"
"29","helios/helios-service-registration","daa4c3f25d1e6a53d86d747664412921e7445068","8a438f5e15f0082999051008d5fca4b56084794f","LOCAL_VAR_RENAMING","0","1","2","[NopServiceRegistrarFactory create (String), NopServiceRegistrarFactory createForDomain (String)]","8"
"0","helios/helios-services","8a438f5e15f0082999051008d5fca4b56084794f","ad3df9e7e327033e860623d62804f85c6838c19f","WHILE_TO_FOR","2","1","165","[ZooKeeperMasterModel removeDeploymentGroup (String), ZooKeeperMasterModel rollingUpdateMarkUndeployed (ZooKeeperClient, RollingUpdateOpFactory, DeploymentGroup, String), DefaultReactor signalRunnable (), RollingUndeployPlanner of (DeploymentGroup), ZooKeeperMasterModel getDeployOperations (ZooKeeperClient, String, Deployment, String), TaskConfig ports (), ZooKeeperMasterModel updateOnHostChange (DeploymentGroup, DeploymentGroupStatus), HostInfoReporter exec (String), ZooKeeperMasterModel getDeploymentGroup (ZooKeeperClient, String), Builder namespace (String), ZooKeeperMasterModel getHostLabels (String), NoopMasterMetrics badRequest (String), ZooKeeperMasterModel forceRollingUpdateUndeploy (ZooKeeperClient, RollingUpdateOpFactory, DeploymentGroup, String), ZooKeeperMasterModel stopDeploymentGroup (String), CommonConfiguration getKafkaBrokers (), ZooKeeperMasterModel isMigration (Deployment, DeploymentGroup), NoopMasterMetrics failure (String), ZooKeeperMasterModel compare (TaskStatusEvent, TaskStatusEvent), MeterRates getOneMinuteRate (), ZooKeeperMasterModel apply (TaskStatusEvent), ZooKeeperMasterModel tryGetEntity (ZooKeeperClient, String, TypeReference<T>, String), TaskConfig portBindings (), ZooKeeperMasterModel getEnvironment (ZooKeeperClient, String), ZooKeeperCallable call (), ZooKeeperMasterModel rollingUpdate (DeploymentGroup, JobId, RolloutOptions), VersionResource version (), ZooKeeperMasterModel deployJobRetry (ZooKeeperClient, String, Deployment, int, String), ZooKeeperMasterModel getLabels (ZooKeeperClient, String), VersionResource versionCheck (String), ZooKeeperMasterModel checkForPortConflicts (ZooKeeperClient, String, int, JobId), Builder toString (), ZooKeeperMasterModel getPreviousJobStates (JobId, String, int), ZooKeeperMasterModel listHosts (), DefaultReactor DefaultReactor (String, Callback, long), Builder ports (Map<String,Integer>), ZooKeeperMasterModel getTaskStatuses (ZooKeeperClient, String), ZooKeeperMasterModel getDeploymentGroupTasks (ZooKeeperClient), ZooKeeperMasterModel rollingUpdateStep (), ZooKeeperMasterModel getAgentInfo (String), ZooKeeperMasterModel checkHostUp (ZooKeeperClient, String), DefaultReactor signal (), ZooKeeperMasterModel deregisterHost (String), ZooKeeperMasterModel assertJobExists (ZooKeeperClient, JobId), HostInfoReporter HostInfoReporter (OperatingSystemMXBean, NodeUpdaterFactory, String, DockerClient, DockerHost, int, TimeUnit, CountDownLatch), ZooKeeperMasterModel isRolloutTimedOut (ZooKeeperClient, DeploymentGroup), MeterRates MeterRates (Meter), ZooKeeperMasterModel getHostStatus (String), NoopMasterMetrics jobsInJobList (int), CommonConfiguration getPubsubPrefixes (), ZooKeeperMasterModel getJobCreation (ZooKeeperClient, JobId), Builder build (), ZooKeeperMasterModel listJobHosts (ZooKeeperClient, JobId), ZooKeeperMasterModel getJob (JobId), ZooKeeperMasterModel deployJob (String, Deployment, String), ZooKeeperMasterModel undeployJob (String, JobId), RollingUndeployPlanner RollingUndeployPlanner (DeploymentGroup), Builder Builder (), TaskConfig hostConfig (Optional<String>), NoOpContainerDecorator decorateHostConfig (Job, Optional<String>, HostConfig.Builder), TaskConfig binds (), TaskConfig containerExposedPorts (), BindVolumeContainerDecorator decorateHostConfig (Job, Optional<String>, HostConfig.Builder), ZooKeeperMasterModel undeployJob (String, JobId, String), ZooKeeperMasterModel rollingUpdateAwaitUndeployed (ZooKeeperClient, RollingUpdateOpFactory, DeploymentGroup, String), Check toString (), Check equals (Object), RollingUndeployPlanner plan (List<String>), ZooKeeperMasterModel updateDeployment (String, Deployment), ZooKeeperMasterModel isHostUp (String), ZooKeeperModelReporter time (String, String, ZooKeeperCallable<T>), CommonConfiguration setKafkaBrokers (List<String>), ZooKeeperMasterModel getInitRollingUpdateOps (DeploymentGroup, List<String>, List<String>, ZooKeeperClient), ZooKeeperMasterModel getJobStatus (JobId), ZooKeeperMasterModel registerHost (String, String), ZooKeeperMasterModel verifyToken (String, Job), HostInfoReporter dockerVersion (), ZooKeeperMasterModel getJobs (), TaskConfig builder (), Builder containerDecorators (List<ContainerDecorator>), ZooKeeperMasterModel processRollingUpdateTask (ZooKeeperClient, RollingUpdateOpFactory, RolloutTask, DeploymentGroup), NoopMasterMetrics clientVersion (String), SignalAwaitingService beforeIteration (), TaskConfig registration (), TaskConfig containerEnvStrings (), ZooKeeperMasterModel listHosts (String), ZooKeeperMasterModel rolloutOptionsWithFallback (RolloutOptions, Job), NoopMasterMetrics success (String), ZooKeeperMasterModel updateDeploymentGroupHosts (String, List<String>), TaskConfig fullyQualifiedRegistrationDomain (), ZooKeeperMasterModel getDeploymentGroups (), ZooKeeperMasterModel assertHostExists (ZooKeeperClient, String), ZooKeeperMasterModel removeJob (JobId), ZooKeeperMasterModel listHostJobs (ZooKeeperClient, String), HostInfoReporter runOneIteration (), Builder envVars (Map<String,String>), ZooKeeperModelReporter ZooKeeperModelReporter (ZooKeeperMetrics), ZooKeeperMasterModel getDeploymentGroupHosts (String), ZooKeeperMasterModel getRunningMasters (), ZooKeeperMasterModel getJob (ZooKeeperClient, JobId), TaskConfig containerEnv (), ZooKeeperMasterModel getTasks (ZooKeeperClient, String), Builder job (Job), DefaultReactor run (), TaskConfig containerPort (int, String), MeterRates getFiveMinuteRate (), ZooKeeperMasterModel getUndeployOperations (ZooKeeperClient, String, JobId, String), ZooKeeperMasterModel removedHosts (List<String>, List<String>, List<String>), Builder dns (List<String>), ZooKeeperModelReporter connectionStateChanged (ConnectionState), ZooKeeperMasterModel getJobHistory (JobId, String), ZooKeeperMasterModel getDeploymentGroupStatus (String), TaskConfig healthCheck (), ZooKeeperMasterModel addJob (Job), ZooKeeperMasterModel rollingUpdateDeploy (ZooKeeperClient, RollingUpdateOpFactory, DeploymentGroup, String), BindVolumeContainerDecorator BindVolumeContainerDecorator (List<String>), ZooKeeperMasterModel assertTaskExists (ZooKeeperClient, String, JobId), TaskConfig TaskConfig (Builder), TaskConfig containerConfig (ImageInfo, Optional<String>), ZooKeeperMasterModel getJobHistory (JobId), MeterRates MeterRates (double, double, double), ZooKeeperMasterModel getAgentInfo (ZooKeeperClient, String), ZooKeeperMasterModel rollingUpdateTimedoutError (RollingUpdateOpFactory, String, JobId, TaskStatus), SignalAwaitingService SignalAwaitingService (CountDownLatch), ZooKeeperMasterModel getHosts (ZooKeeperClient, String), ZooKeeperMasterModel ZooKeeperMasterModel (ZooKeeperClientProvider, String, List<EventSender>, String), ZooKeeperMasterModel redundantUndeployment (Deployment, DeploymentGroup), ZooKeeperMasterModel rollingUpdateAwaitRunning (ZooKeeperClient, RollingUpdateOpFactory, DeploymentGroup, String), Builder host (String), HostInfoReporter dockerHost (), Check hashCode (), ZooKeeperMasterModel removeJob (JobId, String), Builder defaultRegistrationDomain (String), NoopMasterMetrics jobsHistoryEventSize (int), RollingUndeployPlanner rolloutTasks (List<String>), ZooKeeperMasterModel updateDeployment (String, Deployment, String), ZooKeeperMasterModel getDeployment (String, JobId), TaskConfig containerImage (), BindVolumeContainerDecorator isValidBind (String), CommonConfiguration setPubsubPrefixes (List<String>), ZooKeeperMasterModel addDeploymentGroup (DeploymentGroup), ZooKeeperMasterModel allowHostChange (DeploymentGroupStatus), ZooKeeperMasterModel staticPorts (Job), TaskConfig volumes (), MeterRates getFifteenMinuteRate (), NoOpContainerDecorator decorateContainerConfig (Job, ImageInfo, Optional<String>, ContainerConfig.Builder), ZooKeeperMasterModel getInitRollingUpdateOps (DeploymentGroup, ZooKeeperClient), DefaultReactor DefaultReactor (String, Callback), BindVolumeContainerDecorator decorateContainerConfig (Job, ImageInfo, Optional<String>, ContainerConfig.Builder), ZooKeeperMasterModel deployJob (String, Deployment), HostInfoReporter dockerVersion (com.spotify.docker.client.messages.Version), HostInfoReporter schedule (Runnable, ScheduledExecutorService), Check Check (String), TaskConfig containerName (), TaskConfig name (), ZooKeeperMasterModel getDeploymentGroup (String), TaskConfig endpointHealthCheck (String), ZooKeeperMasterModel emitEvents (String, List<Map<String,Object>>), ZooKeeperMasterModel ownedByDeploymentGroup (Deployment, DeploymentGroup), ZooKeeperMasterModel getHostInfo (ZooKeeperClient, String), ZooKeeperModelReporter checkException (Exception, String), ZooKeeperModelReporter noop (), ZooKeeperMasterModel getTaskStatus (ZooKeeperClient, String, JobId), Check register (CuratorTransaction), ZooKeeperMasterModel rollingUpdateUndeploy (ZooKeeperClient, RollingUpdateOpFactory, DeploymentGroup, String), ZooKeeperMasterModel rollingUpdateUndeploy (ZooKeeperClient, RollingUpdateOpFactory, DeploymentGroup, String, boolean)]","2310"
"0","helios/helios-system-tests","ad3df9e7e327033e860623d62804f85c6838c19f","3e18c052c0239d8c7b115fe9eff8068a53aedbb8","SWITCH_EQUAL_SIDES","14","1","130","[SystemTestBase awaitHostStatus (String, HostStatus.Status, int, TimeUnit), VolumeTest recvUtf8 (int, int), CliJobCreationTest initialize (), SystemTestBase createJob (String, String, String, List<String>, Map<String,String>, Map<String,PortMapping>, Map<ServiceEndpoint,ServicePorts>), CliJobCreationTest testSuccessJsonOutput (), SystemTestBase removeContainer (DockerClient, String), SystemTestBase undeployJob (JobId, String), SystemTestBase createJob (String, String, String, List<String>, Map<String,String>, Map<String,PortMapping>), SystemTestBase flatten (Iterable<?>), SystemTestBase zk (), DeploymentGroupTest testRollingUpdateMigrateNothingToUndeploy (), DeploymentGroupTest initialize (), SystemTestBase stopJob (JobId, String), CliJobCreationTest testTemplateAmbiguousJobJsonOutput (), SystemTestBase startAgent (String), SystemTestBase awaitTaskGone (HeliosClient, String, JobId, long, TimeUnit), SystemTestBase assertJobEquals (Job, Job), SystemTestBase startDefaultMaster (String), AgentStateDirConflictTest setup (), SystemTestBase startDefaultMaster (int, String), SystemTestBase startDefaultMasters (int, String), DeploymentGroupTest awaitUpWithLabels (String, String), AgentStateDirConflictTest stopQuietly (Service), SystemTestBase masterName (), VolumeTest call (), CliJobCreationTest testMergeFileAndCliArgs (), SystemTestBase assertJobsEqual (Map<JobId,Job>, Map<JobId,Job>), DeploymentGroupTest testStopDeploymentGroupGroupNotFound (), NamespaceTest test (), SystemTestBase client (String, String), DeploymentGroupTest testStopDeploymentGroup (), VolumeTest testCli (), DeploymentGroupTest testRollingUpdatePerformance (), SystemTestBase masterEndpoint (), SystemTestBase main (String), SystemTestBase startDefaultMasterDontWaitForZk (CuratorClientFactory, String), SystemTestBase cliJson (Class<T>, String, String), DeploymentGroupTest testRollingUpdateWithOverlap (), CliJobCreationTest testMergeFileAndCliArgsEnvPrecedence (), DeploymentGroupTest testStatusNoRollingUpdate (), DeploymentGroupTest testStoppedJob (), AgentStateDirConflictTest makeAgent (String), LabelTest testCliHosts (), SystemTestBase awaitHostStatus (HeliosClient, String, HostStatus.Status, int, TimeUnit), SystemTestBase awaitHostStatusWithHostInfo (HeliosClient, String, HostStatus.Status, int, TimeUnit), CliJobCreationTest testInvalidJobJsonOutput (), SystemTestBase cliJson (Class<T>, String, List<String>), SystemTestBase baseTeardown (), SystemTestBase awaitJobState (HeliosClient, String, JobId, TaskStatus.State, int, TimeUnit), SystemTestBase startMaster (CuratorClientFactory, String), SystemTestBase deployJob (JobId, String), SystemTestBase createJobRawOutput (Job), SystemTestBase randomHexString (), SystemTestBase cli (String, String), SystemTestBase deployJob (JobId, String, String), SystemTestBase getOrNull (ListenableFuture<T>), DeploymentGroupTest testIdenticalRollouts (), DeploymentGroupTest testRemoveDeploymentGroupInactive (), SystemTestBase awaitDeploymentGroupStatus (HeliosClient, String, DeploymentGroupStatus.State), SystemTestBase isCircleCi (), DeploymentGroupTest call (), SystemTestBase awaitHostRegistered (HeliosClient, String, int, TimeUnit), CliJobCreationTest testTemplateUnknownJobJsonOutput (), JobWatchExactTest write (int), VolumeTest assertVolumes (JobId), SystemTestBase waitForMasterToBeFullyUp (), SystemTestBase flatten (Object), SystemTestBase masterAdminEndpoint (), SystemTestBase deregisterHost (String), LabelTest hostLabels (Set<String>), SystemTestBase createJob (Job), SystemTestBase startDefaultAgent (String, String), DeploymentGroupTest testRollingUpdateGroupNotFound (), SystemTestBase cli (String, Object), DeploymentGroupTest awaitUndeployed (String, JobId), SystemTestBase awaitHostRegistered (String, long, TimeUnit), AgentZooKeeperDownTolerationTest call (), DeploymentGroupTest testRollingUpdate (), SystemTestBase awaitTaskState (JobId, String, TaskStatus.State), JobWatchExactTest test (), AgentStateDirConflictTest test (), SystemTestBase dockerPortRange (), MultipleJobsTest jobStatusBulk (), SystemTestBase setupDefaultMaster (String), SystemTestBase main (Collection<String>), SystemTestBase cli (String, List<String>), SystemTestBase createJob (String, String, String, List<String>, Date), SystemTestBase createJob (String, String, String, List<String>, ImmutableMap<String,String>), VolumeTest testClient (), AgentZooKeeperDownTolerationTest test (), DeploymentGroupTest testRollingUpdateMigrateWithToken (), AgentStateDirConflictTest teardown (), SystemTestBase startMaster (String), DeploymentGroupTest testAgentAddedAfterRollingUpdateIsDeployed (), DeploymentGroupTest testRollingUpdateWithToken (), AgentStateDirConflictTest uncaughtException (Thread, Throwable), SystemTestBase createJob (String, String, String, List<String>), DeploymentGroupTest testRollingUpdateWithOverlapAndParallelism (), SystemTestBase defaultClient (), SystemTestBase listContainers (DockerClient, String), SystemTestBase awaitJobThrottle (HeliosClient, String, JobId, ThrottleState, int, TimeUnit), SystemTestBase resetAgentStateDir (), SystemTestBase createJob (String, String, String, String, List<String>, Map<String,String>, Map<String,PortMapping>, Map<ServiceEndpoint,ServicePorts>, Integer, Map<String,String>, Date), SystemTestBase startJob (JobId, String), SystemTestBase zooKeeperTestManager (), DeploymentGroupTest testListDeploymentGroups (), SystemTestBase baseSetup (), SystemTestBase dockerSetup (), VolumeTest setup (), SystemTestBase testHost (), SystemTestBase staticSetup (), SystemTestBase awaitHostStatusWithLabels (HeliosClient, String, HostStatus.Status, Map<String,String>), SystemTestBase listThreads (), LabelTest testHostLabels (), SystemTestBase getNewDockerClient (), SystemTestBase stopAgent (AgentMain), CliJobCreationTest call (), SystemTestBase temporaryPorts (), SystemTestBase masterPort (), SystemTestBase setupDefaultMaster (int, String), SystemTestBase assertDockerReachable (int), SystemTestBase masterAdminPort (), DeploymentGroupTest testRemovingAgentTagUndeploysJob (), DeploymentGroupTest testRollingUpdateMigrate (), DeploymentGroupTest testRemoveDeploymentGroupActive (), SystemTestBase createJob (String, String, String, List<String>, Map<String,String>, Map<String,PortMapping>, Map<ServiceEndpoint,ServicePorts>, Integer, Map<String,String>), PortCollisionJobTest test (), VolumeTest recv (int, int), SystemTestBase call (), DeploymentGroupTest testRollingUpdateCoordination ()]","1430"
"24","helios/helios-system-tests","3e18c052c0239d8c7b115fe9eff8068a53aedbb8","9c4f6de1953feda726ed588ff92d2226bfab221a","LOCAL_VAR_RENAMING","0","1","1","[PortCollisionJobTest test ()]","11"
"28","helios/helios-system-tests","9c4f6de1953feda726ed588ff92d2226bfab221a","abdbc4a1fae937636f100d9b2435a30717adfd8b","LOCAL_VAR_RENAMING","0","1","1","[PortCollisionJobTest test ()]","11"
"0","helios/helios-testing-common","abdbc4a1fae937636f100d9b2435a30717adfd8b","9d48486468996e30a22a27be7cb49a1e05935da6","CASE_TO_IF_ELSE","17","1","65","[TemporaryPorts run (), ZooKeeperTestingClusterManager awaitUp (long, TimeUnit), Polling awaitUnchecked (long, TimeUnit, Callable<T>), TemporaryPorts TemporaryPorts (Builder), Builder end (), ZooKeeperTestingClusterManager stop (), TemporaryPorts available (int), ZooKeeperTestingClusterManager resetPeer (int), ZooKeeperTestingClusterManager startPeer (int), ZooKeeperTestingServerManager connectString (), AllocatedPort release (), ZooKeeperTestingServerManager start (), AllocationFailedException builder (), ZooKeeperTestingClusterManager ensure (String), ZooKeeperTestingClusterManager peerCurator (int), TemporaryPorts create (), ZooKeeperTestingClusterManager apply (InetSocketAddress), ZooKeeperTestingServerManager close (), ZooKeeperTestingClusterManager awaitDown (int, TimeUnit), ZooKeeperTestingClusterManager createPeers (int), ZooKeeperTestingServerManager restore (Path), Builder lockDirectory (), ZooKeeperTestingClusterManager stopPeer (int), ZooKeeperTestingClusterManager call (), TemporaryPorts localPort (String), TemporaryPorts localPortRange (String, int), ZooKeeperTestingServerManager awaitDown (int, TimeUnit), ZooKeeperTestingClusterManager apply (InstanceSpec), Builder retries (), ZooKeeperTestingClusterManager createCurator (String), ZooKeeperTestingClusterManager ZooKeeperTestingClusterManager (), Builder retries (int), Builder start (int), Builder build (), Builder release (), ZooKeeperTestingClusterManager endpoints (Iterable<InetSocketAddress>), ZooKeeperTestingClusterManager start0 (), ZooKeeperTestingClusterManager close (), ZooKeeperTestingClusterManager allocateAddresses (List<InstanceSpec>), ZooKeeperTestingClusterManager curatorWithSuperAuth (), ZooKeeperTestingServerManager ZooKeeperTestingServerManager (), ZooKeeperTestingClusterManager connectString (), AllocatedPort port (), ZooKeeperTestingServerManager stop (), Builder end (int), TemporaryPorts tryAcquire (String, int), TemporaryPorts after (), ZooKeeperTestingClusterManager start (), TemporaryPorts lock (int, String), ZooKeeperTestingClusterManager createCurators (List<InetSocketAddress>), ZooKeeperTestingServerManager awaitUp (long, TimeUnit), Builder release (boolean), ZooKeeperTestingClusterManager connectString (Iterable<InetSocketAddress>), ZooKeeperTestingClusterManager peerDir (int), ZooKeeperTestingServerManager reset (), ZooKeeperTestingServerManager backup (Path), TemporaryPorts randomPort (), ZooKeeperTestingServerManager ensure (String), AllocatedPort AllocatedPort (int, Path, FileChannel, FileLock), Polling await (long, TimeUnit, Callable<T>), ZooKeeperTestingServerManager curatorWithSuperAuth (), Builder start (), ZooKeeperTestingClusterManager connectString (InetSocketAddress), Builder lockDirectory (Path), TemporaryPorts releasePorts ()]","260"
"2","helios/helios-testing-common","9d48486468996e30a22a27be7cb49a1e05935da6","d4c6b7b8e8e75e97bbf076d2e3e6fbb7129da2a6","FOR_TO_WHILE","1","1","1","[TemporaryPorts localPortRange (String, int)]","4"
"5","helios/helios-testing-common","d4c6b7b8e8e75e97bbf076d2e3e6fbb7129da2a6","a574592bca744e0d18c3e74f6120bf62a9f30236","WHILE_TO_FOR","2","1","2","[TemporaryPorts available (int), TemporaryPorts localPortRange (String, int)]","8"
"9","helios/helios-testing-common","a574592bca744e0d18c3e74f6120bf62a9f30236","8c9e296cfedb95e73746b46e8c5727e5852b147e","LOCAL_VAR_RENAMING","0","1","8","[ZooKeeperTestManager close (), ZooKeeperTestManager stop (), ZooKeeperTestManager curatorWithSuperAuth (), ZooKeeperTestManager start (), ZooKeeperTestManager awaitUp (long, TimeUnit), ZooKeeperTestManager ensure (String), ZooKeeperTestManager awaitDown (int, TimeUnit), ZooKeeperTestManager connectString ()]","40"
"18","helios/helios-testing-common","8c9e296cfedb95e73746b46e8c5727e5852b147e","46db2e905a90d2d21b76547717f848c4a0dcc65b","LOCAL_VAR_RENAMING","0","1","2","[ZooKeeperTestManager ensure (String), ZooKeeperTestManager awaitDown (int, TimeUnit)]","10"
"0","helios/helios-testing","46db2e905a90d2d21b76547717f848c4a0dcc65b","e3ceae6b55af213438fb9c306d20dd9cca82fc85","REVERSE_IF_ELSE","3","1","112","[HeliosDeploymentException HeliosDeploymentException (String, Throwable), Builder testReportDirectory (String), TemporaryJobs create (String), DefaultDeployer readyToDeploy (), JobPrefixFile prefix (), Builder Builder (String, Config, Map<String,String>, HeliosClient.Builder), TemporaryJobs job (), HeliosSoloLogService scheduler (), InMemoryLogStreamFollower create (), JobPrefixFile create (Path), DefaultDeployer deploy (Job, List<String>, Set<String>, Prober, TemporaryJobReports.ReportWriter), Builder hostPickingStrategy (HostPickingStrategy), TemporaryJobs initialValue (), HeliosDeploymentException HeliosDeploymentException (Throwable), Builder processHostPickingStrategy (), TemporaryJobs call (), TemporaryJob TemporaryJob (HeliosClient, Prober, TemporaryJobReports.ReportWriter, Job, List<String>, Set<String>, String, long), HeliosDeploymentResource client (), TemporaryJob port (String, String), Builder endpoints (List<URI>), Builder hostFilter (String), TemporaryJobs after (Optional<TemporaryJobReports.ReportWriter>), JobPrefixFile JobPrefixFile (Path, FileChannel, FileLock), Builder domain (String), TemporaryJobs perform (Statement, TemporaryJobReports.ReportWriter), TemporaryJob undeploy (List<AssertionError>), HeliosSoloLogService runOneIteration (), Builder build (), HeliosSoloLogService HeliosSoloLogService (HeliosClient, DockerClient, LogStreamFollower), TemporaryJobs getListByKey (String, Config), Builder client (HeliosClient), JobPrefixFile close (AutoCloseable), TemporaryJobs prefix (), Builder user (String), JobPrefixFile tryFromExistingFile (Path), TemporaryJobs apply (Statement, Description), InMemoryLogStreamFollower getStdout (JobId), TemporaryJobs builder (Map<String,String>), InMemoryLogStreamFollower InMemoryLogStreamFollower (ConcurrentMap<JobId,StreamHolder>), Builder jobPrefix (String), TemporaryJob hosts (), Builder deployer (Deployer), DefaultDeployer DefaultDeployer (HeliosClient, List<TemporaryJob>, HostPickingStrategy, String, long), HeliosSoloLogService shutDown (), LogFollowJob LogFollowJob (String, JobId), TemporaryJob deploy (), TemporaryJobs builder (String, Map<String,String>, HeliosClient.Builder), Builder endpointStrings (List<String>), Builder endpoints (URI), JobPrefixFile JobPrefixFile (String, Path), HeliosDeploymentResource after (), TemporaryJobs builder (), StreamHolder StreamHolder (ByteArrayOutputStream, ByteArrayOutputStream), TemporaryJob job (), DefaultDeployer deploy (Job, String, Set<String>, Prober, TemporaryJobReports.ReportWriter), Builder prefixDirectory (String), TemporaryJobs builder (String, Map<String,String>), TemporaryJobs builder (String), TemporaryJobs jobWithConfig (String), TemporaryJobs evaluate (), HeliosDeploymentException HeliosDeploymentException (String), TemporaryJob addresses (String), TemporaryJobs client (), Builder jobDeployedMessageFormat (String), Builder deployTimeoutMillis (long), Builder configureWithEnv (), Builder reports (TemporaryJobReports), TemporaryJob call (), JobPrefixFile create (String, Path), Builder heliosClientHttpTimeoutSeconds (int), HeliosConfig loadConfig (), TemporaryJobs verifyJobsHealthy (), JobPrefixFile release (), TemporaryJob statuses (), HeliosDeploymentResource before (), TemporaryJob address (String), TemporaryJob outputDeployedMessage (String, String), InMemoryLogStreamFollower writeAndFlush (ByteBuffer, OutputStream), Builder prober (Prober), HeliosConfig getProfile (String, String, Config), LogFollowJob call (), Builder verifyHasStrategyKey (String), HeliosConfig getDefaultProfile (String, String, Config), TemporaryJobs create (), HeliosDeploymentResource call (), TemporaryJobs after (), TemporaryJob undeploy (), TemporaryJob awaitUp (String), TemporaryJob awaitPort (String, String), InMemoryLogStreamFollower followLog (JobId, String, Iterator<LogMessage>), TemporaryJobs createFromProfile (String), TemporaryJobs apply (TemporaryJobReports.ReportWriter), TemporaryJobs TemporaryJobs (Builder, Config), TemporaryJobs create (HeliosClient), TemporaryJobs jobPrefixFile (), InMemoryLogStreamFollower getStderr (JobId), HeliosDeploymentResource HeliosDeploymentResource (HeliosDeployment), TemporaryJobs before (), TemporaryJobs job (Job.Builder), TemporaryJob endpointFromHost (String), Builder endpoints (String), TemporaryJob verifyHealthy (String, TaskStatus), Polling await (long, TimeUnit, String, Callable<T>), JobPrefixFile deleteIfExists (Path), DefaultDeployer pickHost (List<String>), HeliosSoloLogService executor (), HeliosSoloLogService get (Future<T>), TemporaryJob verifyHealthy (), JobPrefixFile close (), TemporaryJobs removeOldJobs (), JobPrefixFile delete (), Polling awaitUnchecked (long, TimeUnit, String, Callable<T>)]","1120"
"3","helios/helios-testing","e3ceae6b55af213438fb9c306d20dd9cca82fc85","779a5d031bddd2a6aff77a77176e7d8ba9e1f7a3","LOCAL_VAR_RENAMING","0","1","2","[HeliosConfig loadConfig (), HeliosConfig getDefaultProfile (String, String, Config)]","20"
"6","helios/helios-testing","779a5d031bddd2a6aff77a77176e7d8ba9e1f7a3","dc06ec4b1319f63ac6511498ee4bcbb96110eeb8","LOCAL_VAR_RENAMING","0","1","2","[HeliosConfig getProfile (String, String, Config), HeliosConfig getDefaultProfile (String, String, Config)]","20"
"18","helios/helios-testing","dc06ec4b1319f63ac6511498ee4bcbb96110eeb8","64ab52b3e59468fffb30dcb5cf60710f1b0fc371","LOCAL_VAR_RENAMING","0","1","3","[HeliosConfig getProfile (String, String, Config), HeliosConfig loadConfig (), HeliosConfig getDefaultProfile (String, String, Config)]","30"
"21","helios/helios-testing","64ab52b3e59468fffb30dcb5cf60710f1b0fc371","9e7c0f528201cc986f0b2abd0b0be0b155949196","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[HeliosConfig getProfile (String, String, Config)]","10"
"25","helios/helios-testing","9e7c0f528201cc986f0b2abd0b0be0b155949196","34487a732eeb339559bcd5a23968d95df36f7afa","REVERSE_IF_ELSE","3","1","1","[HeliosConfig getProfile (String, String, Config)]","10"
"29","helios/helios-testing","34487a732eeb339559bcd5a23968d95df36f7afa","68fe61c71508e4263d5aa9e3aeed640ae63b2aca","LOCAL_VAR_RENAMING","0","1","1","[HeliosConfig getProfile (String, String, Config)]","10"
"0","helios/helios-tools","68fe61c71508e4263d5aa9e3aeed640ae63b2aca","23f054df8c1db90f4ae561b80b04507e752b9f9e","VAR_DECLARATION_DIVIDING","13","1","79","[HostStatusDisplayer displayTask (boolean, JobStatusTable, JobId, JobStatus, Map<String,TaskStatus>, Iterable<String>), ScoredHost compare (ScoredHost, ScoredHost), CliConfig getMasterEndpoints (), ExplicitTarget getEndpointSupplier (), JobWatchCommand JobWatchCommand (Subparser), SrvTarget SrvTarget (String, String), JobListCommand escape (List<String>), ScoredHost sortScoredHosts (List<ScoredHost>), JobStatusCommand JobStatusCommand (Subparser), CliConfig fromFile (File, Map<String,String>), ScoredHost getSortedMatches (String), ExplicitTarget toString (), HostStatusDisplayer showJsonStatuses (PrintStream, String, Set<JobId>, Map<JobId,JobStatus>), JobCreateCommand parseListOfPairs (List<String>, String, String), JobStartCommand JobStartCommand (Subparser), SrvTarget getEndpointSupplier (), ExplicitTarget ExplicitTarget (URI), CliConfig CliConfig (List<String>, String, List<URI>), CliConfig getUsername (), JobWatchCommand hostMatches (List<String>, String), CliConfig getSrvName (), CliConfig fromEnvVar (Config, Map<String,String>), ScoredHost resolveName (String), JobCreateCommand JobCreateCommand (Subparser), ScoredHost findPrefixMatches (String), JobCreateCommand parseListOfPairs (List<String>, String), JobWatchCommand showReport (PrintStream, boolean, List<String>, Set<JobId>, DateTimeFormatter, HeliosClient), JobCreateCommand JobCreateCommand (Subparser, Supplier<Map<String,String>>), SrvTarget getDomain (), HostStatusDisplayer showStatusesForHosts (String, Set<JobId>, Map<JobId,JobStatus>, HostStatusDisplayer), JobWatchCommand chop (String, int), JobStatusTable task (JobId, String, TaskStatus, Deployment), CliConfig getConfigDirName (), CliConfig getConfigFileName (), DeploymentGroupStatusCommand printTable (PrintStream, JobId, List<DeploymentGroupStatusResponse.HostStatus>, boolean), CliConfig getDomainsString (), JobCreateCommand defaultMetadata (), ExplicitTarget from (String, Iterable<String>), ScoredHost scoreMatches (List<String>), SrvTarget toString (), JobListCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader), ScoredHost ScoredHost (String, int), JobCreateCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader), HostRegisterCommand HostRegisterCommand (Subparser), SrvTarget hashCode (), JobStatusTable print (), CliConfig fromUserConfig (Map<String,String>), ExplicitTarget hashCode (), Target getEndpointSupplier (), ExplicitTarget from (URI), CliConfig fromConfig (Config), JobCreateCommand nullOrInteger (String), HostResolver HostResolver (Set<String>, Name[]), JobCreateCommand get (), HostStatusDisplayer filterJobStatus (JobStatus, Iterable<String>), DeploymentGroupStatusCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader), SrvTarget getSrv (), ScoredHost findMatchesWithLowestScore (List<ScoredHost>), JobStatusTable JobStatusTable (PrintStream, boolean), ExplicitTarget equals (Object), DeploymentGroupStatusCommand DeploymentGroupStatusCommand (Subparser), JobListCommand getJobStatuses (HeliosClient, Map<JobId,Job>, boolean), Target getName (), JobStartCommand runWithJob (Namespace, HeliosClient, PrintStream, boolean, Job, BufferedReader), HostStatusDisplayer matchedStatus (JobStatus, Iterable<String>, Map<String,TaskStatus>), HostStatusDisplayer run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader), Target Target (String), JobWatchCommand run (Namespace, List<TargetAndClient>, PrintStream, boolean, BufferedReader), JobWatchCommand watchJobsOnHosts (PrintStream, boolean, List<String>, Set<JobId>, int, List<TargetAndClient>), SrvTarget equals (Object), HostRegisterCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader), CliConfig getDomains (), ExplicitTarget getEndpoint (), JobListCommand JobListCommand (Subparser), HostResolver create (HeliosClient), JobWatchCommand watchJobsOnHosts (PrintStream, boolean, List<String>, List<JobId>, Integer, HeliosClient), JobListCommand escape (String), JobWatchCommand getStatuses (HeliosClient, Set<JobId>), DeploymentGroupStatusCommand run0 (HeliosClient, PrintStream, boolean, String, boolean)]","869"
"1","helios/helios-tools","23f054df8c1db90f4ae561b80b04507e752b9f9e","cccd8243d69774fad54caac2763502584d8b6281","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[JobCreateCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader)]","11"
"3","helios/helios-tools","cccd8243d69774fad54caac2763502584d8b6281","cf09b3efa4089ef3d0e3d436165572aa63abf883","INFIX_EXPRESSION_DIVIDING","8","1","1","[JobCreateCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader)]","11"
"8","helios/helios-tools","cf09b3efa4089ef3d0e3d436165572aa63abf883","b7d8f141423ded8b1a8bb2072a69c632ae8c435c","LOCAL_VAR_RENAMING","0","1","2","[JobCreateCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader), JobCreateCommand JobCreateCommand (Subparser, Supplier<Map<String,String>>)]","22"
"9","helios/helios-tools","b7d8f141423ded8b1a8bb2072a69c632ae8c435c","404563fda83ec34c78ebeb837c53251bf222228a","VAR_DECLARATION_MERGING","12","1","2","[JobCreateCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader), JobCreateCommand defaultMetadata ()]","22"
"11","helios/helios-tools","404563fda83ec34c78ebeb837c53251bf222228a","987d8c46376bfc17ca96ac7a8d7534e3d2fedf5f","CASE_TO_IF_ELSE","17","1","1","[JobCreateCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader)]","11"
"15","helios/helios-tools","987d8c46376bfc17ca96ac7a8d7534e3d2fedf5f","fc699deebadeeeb6ac638e277d35f958f4723bd8","REVERSE_IF_ELSE","3","1","2","[JobCreateCommand parseListOfPairs (List<String>, String, String), JobCreateCommand defaultMetadata ()]","22"
"16","helios/helios-tools","fc699deebadeeeb6ac638e277d35f958f4723bd8","8d0ef4b3131188a7945ef22888f61a5bc5b6bdcd","PP_TO_ADD_ASSIGNMENT","6","1","1","[JobCreateCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader)]","11"
"17","helios/helios-tools","8d0ef4b3131188a7945ef22888f61a5bc5b6bdcd","4c517d0ff2f291119febd12104af1afefdd44d58","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[JobCreateCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader)]","11"
"18","helios/helios-tools","4c517d0ff2f291119febd12104af1afefdd44d58","dd2c6dd4ab64a0febcccbb51e4f1d66301b6cc51","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[JobCreateCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader)]","11"
"20","helios/helios-tools","dd2c6dd4ab64a0febcccbb51e4f1d66301b6cc51","7ee568f11eadd380f9ad160717665c4c07f8e8bc","LOCAL_VAR_RENAMING","0","1","2","[JobCreateCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader), JobCreateCommand defaultMetadata ()]","22"
"22","helios/helios-tools","7ee568f11eadd380f9ad160717665c4c07f8e8bc","3f4003c823d76355a1de7cb450244fc18a953b5e","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JobCreateCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader)]","11"
"23","helios/helios-tools","3f4003c823d76355a1de7cb450244fc18a953b5e","cabfeee6c6d6a9215cef8905f820fc54a217ad6c","VAR_DECLARATION_MERGING","12","1","1","[JobCreateCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader)]","11"
"24","helios/helios-tools","cabfeee6c6d6a9215cef8905f820fc54a217ad6c","4ee04367a9a00d8b103cd705f0f0d088b3a9d61b","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[JobCreateCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader)]","11"
"0","mybatis-3","1e19afd0609c6614bbe29d67e1d3168e0e8201fc","a3102c9ea3e9f88145379c66b3613a9cfa9e9730","SWITCH_STRING_EQUAL","15","1","125","[MapperBuilderAssistant parseCompositeColumnName (String), PooledConnection getAge (), PropertyParser PropertyParser (), BaseExecutor applyTransactionTimeout (Statement), BaseExecutor getTransaction (), BaseExecutor setExecutorWrapper (Executor), BoundSql BoundSql (Configuration, String, List<ParameterMapping>, Object), PooledConnection getProxyConnection (), PooledConnection invoke (Object, Method, Object[]), Reflector addSetMethod (String, Method), Reflector getGetterType (String), PropertyParser parse (String, Properties), MapperBuilderAssistant setCurrentNamespace (String), BaseExecutor handleLocallyCachedOutputParameters (MappedStatement, CacheKey, Object, BoundSql), PropertyNamer methodToProperty (String), PooledConnection getCreatedTimestamp (), PooledConnection setConnectionTypeCode (int), BaseExecutor deferLoad (MappedStatement, MetaObject, String, CacheKey, Class<?>), BaseExecutor close (boolean), BaseExecutor query (MappedStatement, Object, RowBounds, ResultHandler, CacheKey, BoundSql), BoundSql getAdditionalParameter (String), PooledConnection getCheckoutTimestamp (), MapperBuilderAssistant addParameterMap (String, Class<?>, List<ParameterMapping>), StaticTextSqlNode apply (DynamicContext), PooledConnection getConnectionTypeCode (), BaseExecutor closeStatement (Statement), DeferredLoad DeferredLoad (MetaObject, String, CacheKey, PerpetualCache, Configuration, Class<?>), Reflector hasSetter (String), MapperBuilderAssistant useCacheRef (String), ProviderSqlSource createSqlSource (Object), BaseExecutor commit (boolean), BaseExecutor createCacheKey (MappedStatement, Object, RowBounds, BoundSql), MapperBuilderAssistant buildDiscriminator (Class<?>, String, Class<?>, JdbcType, Class<? extends TypeHandler<?>>, Map<String,String>), MapperBuilderAssistant addMappedStatement (String, SqlSource, StatementType, SqlCommandType, Integer, Integer, String, Class<?>, String, Class<?>, ResultSetType, boolean, boolean, boolean, KeyGenerator, String, String, String, LanguageDriver, String), ScriptingException ScriptingException (Throwable), MapperBuilderAssistant buildParameterMapping (Class<?>, String, Class<?>, JdbcType, String, ParameterMode, Class<? extends TypeHandler<?>>, Integer), BaseExecutor getConnection (Log), BaseExecutor isClosed (), PooledConnection invalidate (), PooledConnection setCheckoutTimestamp (long), BaseExecutor doQuery (MappedStatement, Object, RowBounds, ResultHandler, BoundSql), Reflector addMethodConflict (Map<String,List<Method>>, String, Method), MapperBuilderAssistant addMappedStatement (String, SqlSource, StatementType, SqlCommandType, Integer, Integer, String, Class<?>, String, Class<?>, ResultSetType, boolean, boolean, boolean, KeyGenerator, String, String, String, LanguageDriver), ScriptingException ScriptingException (), ProviderSqlSource getBoundSql (Object), MapperBuilderAssistant applyCurrentNamespace (String, boolean), PooledConnection setCreatedTimestamp (long), Reflector hasGetter (String), Reflector getGetInvoker (String), BaseExecutor flushStatements (boolean), Reflector getType (), Reflector addFields (Class<?>), MapperBuilderAssistant buildResultMapping (Class<?>, String, String, Class<?>, JdbcType, String, String, String, String, Class<? extends TypeHandler<?>>, List<ResultFlag>), Reflector getSignature (Method), Reflector findPropertyName (String), VariableTokenHandler VariableTokenHandler (Properties), ProviderSqlSource extractProviderMethodArguments (Map<String,Object>, String[]), Reflector Reflector (Class<?>), BaseExecutor doQueryCursor (MappedStatement, Object, RowBounds, BoundSql), MapperBuilderAssistant useNewCache (Class<? extends Cache>, Class<? extends Cache>, Long, Integer, boolean, boolean, Properties), MapperBuilderAssistant valueOrDefault (T, T), BoundSql getParameterObject (), PooledConnection PooledConnection (Connection, PooledDataSource), BoundSql getParameterMappings (), BoundSql hasAdditionalParameter (String), MapperBuilderAssistant MapperBuilderAssistant (Configuration, String), Reflector getClassMethods (Class<?>), PropertyNamer isProperty (String), BaseExecutor rollback (boolean), Reflector typeToClass (Type), ProviderSqlSource extractProviderMethodArgumentNames (Method), Reflector getSetInvoker (String), ScriptingException ScriptingException (String), BaseExecutor queryCursor (MappedStatement, Object, RowBounds), PropertyNamer PropertyNamer (), Reflector addUniqueMethods (Map<String,Method>, Method[]), PooledConnection getRealConnection (), Reflector resolveSetterConflicts (Map<String,List<Method>>), PooledConnection getRealHashCode (), Reflector getSetablePropertyNames (), ProviderSqlSource findParamAnnotation (Method, int), BaseExecutor doFlushStatements (boolean), Reflector addGetField (Field), PropertyNamer isGetter (String), BaseExecutor update (MappedStatement, Object), MapperBuilderAssistant addResultMap (String, Class<?>, String, Discriminator, List<ResultMapping>, Boolean), BaseExecutor isCached (MappedStatement, CacheKey), BaseExecutor query (MappedStatement, Object, RowBounds, ResultHandler), MapperBuilderAssistant getStatementParameterMap (String, Class<?>, String), MapperBuilderAssistant getStatementResultMaps (String, Class<?>, String), DeferredLoad load (), Reflector addDefaultConstructor (Class<?>), MapperBuilderAssistant parseMultipleColumnNames (String), VariableTokenHandler handleToken (String), BaseExecutor BaseExecutor (Configuration, Transaction), PooledConnection getCheckoutTime (), ProviderSqlSource ProviderSqlSource (Configuration, Object), Reflector resolveGetterConflicts (Map<String,List<Method>>), PooledConnection isValid (), Reflector isValidPropertyName (String), MapperBuilderAssistant buildResultMapping (Class<?>, String, String, Class<?>, JdbcType, String, String, String, String, Class<? extends TypeHandler<?>>, List<ResultFlag>, String, String, boolean), MapperBuilderAssistant resolveResultJavaType (Class<?>, String, Class<?>), ScriptingException ScriptingException (String, Throwable), DeferredLoad canLoad (), BoundSql getSql (), Reflector addSetField (Field), Reflector getGetablePropertyNames (), PooledConnection getLastUsedTimestamp (), Reflector hasDefaultConstructor (), StaticTextSqlNode StaticTextSqlNode (String), BaseExecutor clearLocalCache (), Reflector getSetterType (String), PooledConnection checkConnection (), Reflector getDefaultConstructor (), PooledConnection hashCode (), MapperBuilderAssistant resolveParameterJavaType (Class<?>, String, Class<?>, JdbcType), BoundSql setAdditionalParameter (String, Object), PooledConnection getTimeElapsedSinceLastUse (), PropertyNamer isSetter (String), BaseExecutor doUpdate (MappedStatement, Object), PooledConnection equals (Object), BaseExecutor queryFromDatabase (MappedStatement, Object, RowBounds, ResultHandler, CacheKey, BoundSql), PooledConnection setLastUsedTimestamp (long), MapperBuilderAssistant getCurrentNamespace (), BaseExecutor flushStatements ()]","1250"
"2","mybatis-3","a3102c9ea3e9f88145379c66b3613a9cfa9e9730","65fd8fa2f232834e03074585633efbaf3196f299","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","11","[LruCache getSize (), LruCache removeEldestEntry (Map.Entry<Object,Object>), LruCache setSize (int), LruCache LruCache (Cache), LruCache clear (), LruCache getObject (Object), LruCache removeObject (Object), LruCache getId (), LruCache putObject (Object, Object), LruCache getReadWriteLock (), LruCache cycleKeyList (Object)]","121"
"5","mybatis-3","65fd8fa2f232834e03074585633efbaf3196f299","0f97d21d830c96f41ddf4423ffb9c4043f38240a","SWITCH_EQUAL_SIDES","14","1","12","[ErrorContext ErrorContext (), ErrorContext instance (), ErrorContext recall (), ErrorContext reset (), ErrorContext toString (), ErrorContext message (String), ErrorContext activity (String), ErrorContext cause (Throwable), ErrorContext resource (String), ErrorContext object (String), ErrorContext sql (String), ErrorContext store ()]","144"
"9","mybatis-3","0f97d21d830c96f41ddf4423ffb9c4043f38240a","2a86a854143a93f7e77e7c8a13fad83904d8312c","SWITCH_EQUAL_SIDES","14","1","1","[ErrorContext instance ()]","12"
"10","mybatis-3","2a86a854143a93f7e77e7c8a13fad83904d8312c","20d4e4b0d23c67a48d5baf24dfe40d76a3b050fd","SWITCH_EQUAL_SIDES","14","1","1","[ErrorContext instance ()]","12"
"13","mybatis-3","20d4e4b0d23c67a48d5baf24dfe40d76a3b050fd","5e1473aa6aed5b6b486a4fdd3089348f94d88ec7","SWITCH_EQUAL_SIDES","14","1","1","[ErrorContext instance ()]","12"
"14","mybatis-3","5e1473aa6aed5b6b486a4fdd3089348f94d88ec7","e0a2d4e960c18f74f7ca7fb9acc343fbad66b6f2","SWITCH_EQUAL_SIDES","14","1","1","[ErrorContext instance ()]","12"
"15","mybatis-3","e0a2d4e960c18f74f7ca7fb9acc343fbad66b6f2","ab92f1f43d313b88ebc688c6c5b40a9f998e8c03","LOCAL_VAR_RENAMING","0","1","3","[ErrorContext reset (), ErrorContext toString (), ErrorContext activity (String)]","36"
"18","mybatis-3","ab92f1f43d313b88ebc688c6c5b40a9f998e8c03","14282e3078b7052047427ded15f897520ea20ca7","LOCAL_VAR_RENAMING","0","1","2","[ErrorContext toString (), ErrorContext message (String)]","24"
"20","mybatis-3","14282e3078b7052047427ded15f897520ea20ca7","cafb55c2807d5d68f69ae5fcca99d2e0c82609ec","LOCAL_VAR_RENAMING","0","1","5","[ErrorContext instance (), ErrorContext recall (), ErrorContext reset (), ErrorContext sql (String), ErrorContext store ()]","60"
"26","mybatis-3","cafb55c2807d5d68f69ae5fcca99d2e0c82609ec","6307ff4297c059263efaadbb3329f3cb0204370c","REVERSE_IF_ELSE","3","1","1","[ErrorContext toString ()]","12"
"28","mybatis-3","6307ff4297c059263efaadbb3329f3cb0204370c","ffd7d4fa33d13ac1ed54d672aca1dcb03dc6c31e","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ErrorContext reset ()]","12"
"29","mybatis-3","ffd7d4fa33d13ac1ed54d672aca1dcb03dc6c31e","991377733f2afb575a53aca713004b6f0849652b","SWITCH_EQUAL_SIDES","14","1","1","[ErrorContext instance ()]","12"
"34","mybatis-3","991377733f2afb575a53aca713004b6f0849652b","d9f8dd1c96043ed1228b820b025728e524dc1426","LOCAL_VAR_RENAMING","0","1","3","[ErrorContext reset (), ErrorContext toString (), ErrorContext cause (Throwable)]","36"
"36","mybatis-3","d9f8dd1c96043ed1228b820b025728e524dc1426","807e53bb95dc5c2e4a604f0a5732b90058d28cd1","SWITCH_EQUAL_SIDES","14","1","1","[ErrorContext instance ()]","12"
"42","mybatis-3","807e53bb95dc5c2e4a604f0a5732b90058d28cd1","3bcfdae752647a96d1d1c6db29f6769ef8ed5e04","LOCAL_VAR_RENAMING","0","1","3","[ErrorContext reset (), ErrorContext toString (), ErrorContext sql (String)]","36"
"45","mybatis-3","3bcfdae752647a96d1d1c6db29f6769ef8ed5e04","118f56370e99d1865239104e4aa06a040ac7a869","LOCAL_VAR_RENAMING","0","1","3","[ErrorContext reset (), ErrorContext toString (), ErrorContext sql (String)]","36"
"47","mybatis-3","118f56370e99d1865239104e4aa06a040ac7a869","c9cb51c40234e9b0168e998dc798736d78a39bc6","REVERSE_IF_ELSE","3","1","2","[ErrorContext recall (), ErrorContext toString ()]","24"
"48","mybatis-3","c9cb51c40234e9b0168e998dc798736d78a39bc6","8b58c0d0019a608c10e16f9d0820f5edf9eab8de","REVERSE_IF_ELSE","3","1","2","[ErrorContext recall (), ErrorContext toString ()]","24"
"54","mybatis-3","8b58c0d0019a608c10e16f9d0820f5edf9eab8de","8966cee295288221e4ddd821dd2f4f2c096cb354","LOCAL_VAR_RENAMING","0","1","4","[ErrorContext reset (), ErrorContext toString (), ErrorContext activity (String), ErrorContext cause (Throwable)]","48"
"55","mybatis-3","8966cee295288221e4ddd821dd2f4f2c096cb354","f0f142aaf57d56db77217ccc38a8d02413c05eae","REVERSE_IF_ELSE","3","1","1","[ErrorContext toString ()]","12"
"57","mybatis-3","f0f142aaf57d56db77217ccc38a8d02413c05eae","7c2e95e65a2783db308ae6ed47adebb61ba999f6","SWITCH_EQUAL_SIDES","14","1","1","[ErrorContext instance ()]","12"
"58","mybatis-3","7c2e95e65a2783db308ae6ed47adebb61ba999f6","86d7a3b12c1fdc3c3a70b4d3b43d72a06dfc1ea9","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ErrorContext reset ()]","12"
"0","WebGoat/webgoat-container","61720b29ea31f49f9ce826fd7561b1e63c07a0f1","014275ff1b9522263d4260da95b0ead146615026","FOR_TO_WHILE","1","1","13","[WebGoatVersionMacro WebGoatVersionMacro (String, Map<String,Object>), CourseConfiguration createAssignment (Lesson), CourseConfiguration CourseConfiguration (List<Lesson>, List<AssignmentEndpoint>), LabelDebugger enable (), LabelDebugger setEnabled (boolean), CourseConfiguration getHints (Class<? extends AssignmentEndpoint>), CourseConfiguration getMapping (Method), CourseConfiguration getPath (Class<? extends AssignmentEndpoint>), CourseConfiguration methodReturnTypeIsOfTypeAttackResult (Method), WebGoatVersionMacro process (AbstractBlock, String, Map<String,Object>), LabelDebugger isEnabled (), CourseConfiguration course (), LabelDebugger disable ()]","39"
"16","WebGoat/webgoat-container","014275ff1b9522263d4260da95b0ead146615026","12a0220a9a9c4273351dd015a99740ac9d7a182a","LOCAL_VAR_RENAMING","0","1","2","[WebGoatVersionMacro WebGoatVersionMacro (String, Map<String,Object>), WebGoatVersionMacro process (AbstractBlock, String, Map<String,Object>)]","6"
"28","WebGoat/webgoat-container","12a0220a9a9c4273351dd015a99740ac9d7a182a","312c9e3f9785cbd30840a0ef61ee16412486f4c4","LOCAL_VAR_RENAMING","0","1","2","[WebGoatVersionMacro WebGoatVersionMacro (String, Map<String,Object>), WebGoatVersionMacro process (AbstractBlock, String, Map<String,Object>)]","6"
"0","WebGoat/auth-bypass","312c9e3f9785cbd30840a0ef61ee16412486f4c4","5fee26feb730e551839437692c3c285175a0d221","SWITCH_EQUAL_SIDES","14","1","4","[VerifyAccount parseSecQuestions (HttpServletRequest), AccountVerificationHelper didUserLikelylCheat (HashMap<String,String>), AccountVerificationHelper verifyAccount (Integer, HashMap<String,String>), VerifyAccount completed (String, String, HttpServletRequest)]","8"
"15","WebGoat/auth-bypass","5fee26feb730e551839437692c3c285175a0d221","f0ea4967b922ab2918963c44aed952af798973f2","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[VerifyAccount completed (String, String, HttpServletRequest)]","2"
"22","WebGoat/auth-bypass","f0ea4967b922ab2918963c44aed952af798973f2","efe275a52b6da728c07fd7ee3623128e0f4fafbb","LOCAL_VAR_RENAMING","0","1","2","[VerifyAccount parseSecQuestions (HttpServletRequest), VerifyAccount completed (String, String, HttpServletRequest)]","4"
"29","WebGoat/auth-bypass","efe275a52b6da728c07fd7ee3623128e0f4fafbb","b322c75ff2cb8f535f857533f4c2cd3a5816f790","LOCAL_VAR_RENAMING","0","1","2","[VerifyAccount parseSecQuestions (HttpServletRequest), VerifyAccount completed (String, String, HttpServletRequest)]","4"
"0","WebGoat/bypass-restrictions","b322c75ff2cb8f535f857533f4c2cd3a5816f790","dcbd9ac9ffd67fa7b4ee84287d629d6c25a691b9","LOCAL_VAR_RENAMING","0","1","2","[BypassRestrictionsFrontendValidation completed (String, String, String, String, String, String, String, Integer), BypassRestrictionsFieldRestrictions completed (String, String, String, String)]","4"
"7","WebGoat/bypass-restrictions","dcbd9ac9ffd67fa7b4ee84287d629d6c25a691b9","128299b7ded7aec6d802d17a3245cb53b70dabb4","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[BypassRestrictionsFrontendValidation completed (String, String, String, String, String, String, String, Integer)]","2"
"21","WebGoat/bypass-restrictions","128299b7ded7aec6d802d17a3245cb53b70dabb4","75b4985487dea4a006a0b3aa7d9da1664b0216b6","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[BypassRestrictionsFrontendValidation completed (String, String, String, String, String, String, String, Integer)]","2"
"23","WebGoat/bypass-restrictions","75b4985487dea4a006a0b3aa7d9da1664b0216b6","5c151740578bf32fe1b6365f054ece39dbb134ee","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[BypassRestrictionsFrontendValidation completed (String, String, String, String, String, String, String, Integer)]","2"
"24","WebGoat/bypass-restrictions","5c151740578bf32fe1b6365f054ece39dbb134ee","fd9b11840bf2c8fefedaef562d1519d258090aa7","LOCAL_VAR_RENAMING","0","1","1","[BypassRestrictionsFrontendValidation completed (String, String, String, String, String, String, String, Integer)]","2"
"28","WebGoat/bypass-restrictions","fd9b11840bf2c8fefedaef562d1519d258090aa7","35adbff794797f71230ca2de4cf26874d17aca72","VAR_DECLARATION_MERGING","12","1","1","[BypassRestrictionsFrontendValidation completed (String, String, String, String, String, String, String, Integer)]","2"
"0","WebGoat/challenge","35adbff794797f71230ca2de4cf26874d17aca72","22146bd0901bc8054c21c755b9a28911128ce74b","LOCAL_VAR_RENAMING","0","1","40","[Assignment8 vote (int, HttpServletRequest), MD5 getHashString (String, String), MD5State copy (MD5State), MD5 update (byte, int), MD5 getHash (String), MD5 getHashString (byte[]), Assignment8 getVotes (), MD5 toString (), MD5 update (byte), MD5 getHash (byte[]), MD5State FF (int, int, int, int, int, int, int), MD5State MD5State (), MD5 reset (), MD5State encode (int, int), MD5 main (String[]), MD5State transform (MD5State, int[]), MD5State HH (int, int, int, int, int, int, int), MD5 update (String), MD5State reset (), MD5 update (MD5State, byte, int, int), MD5 MD5 (), MD5 getHash (File), MD5State II (int, int, int, int, int, int, int), MD5 getHashString (InputStream), MD5State encode (long), MD5State toHex (byte), MD5 update (byte, int, int), MD5 getHashString (), MD5State decode (byte, int, int), Assignment8 average (), MD5 getHash (String, String), Assignment8 notUsed (), MD5 getHashString (String), Assignment5 login (String, String), MD5 getHashString (File), MD5 update (String, String), MD5 getHash (InputStream), MD5State GG (int, int, int, int, int, int, int), Assignment5 Assignment5 (DataSource), MD5 getHash ()]","120"
"10","WebGoat/challenge","22146bd0901bc8054c21c755b9a28911128ce74b","0e770f589f8fa8a15b785b8e544e1cec5521effe","REVERSE_IF_ELSE","3","1","1","[Assignment5 login (String, String)]","3"
"20","WebGoat/challenge","0e770f589f8fa8a15b785b8e544e1cec5521effe","ee75422cc9cb112457eca7558a5374be507850aa","SWITCH_STRING_EQUAL","15","1","1","[Assignment5 login (String, String)]","3"
"24","WebGoat/challenge","ee75422cc9cb112457eca7558a5374be507850aa","5a033c459eecfd597e78a9549f762cfbda3b234f","REVERSE_IF_ELSE","3","1","1","[Assignment5 login (String, String)]","3"
"25","WebGoat/challenge","5a033c459eecfd597e78a9549f762cfbda3b234f","c2cb541b670524f5e2180b0ad37ec510d3766364","INFIX_EXPRESSION_DIVIDING","8","1","1","[Assignment5 login (String, String)]","3"
"26","WebGoat/challenge","c2cb541b670524f5e2180b0ad37ec510d3766364","577a20cdb01fd54bc6baa134efe4b4068d1f3c90","REVERSE_IF_ELSE","3","1","1","[Assignment5 login (String, String)]","3"
"0","WebGoat/chrome-dev-tools","577a20cdb01fd54bc6baa134efe4b4068d1f3c90","5a33a907b61e44864dfc1110b9aa0fe36098e4ba","INFIX_EXPRESSION_DIVIDING","8","1","3","[NetworkDummy completed (String), NetworkLesson ok (String), NetworkLesson completed (String, String)]","6"
"6","WebGoat/chrome-dev-tools","5a33a907b61e44864dfc1110b9aa0fe36098e4ba","012b369d74c8f7dcd5739adfbda357c326848ba4","LOCAL_VAR_RENAMING","0","1","2","[NetworkLesson ok (String), NetworkLesson completed (String, String)]","4"
"9","WebGoat/chrome-dev-tools","012b369d74c8f7dcd5739adfbda357c326848ba4","cd45422bddcf3ff6e767941cea394ed7f220ac30","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[NetworkDummy completed (String)]","2"
"13","WebGoat/chrome-dev-tools","cd45422bddcf3ff6e767941cea394ed7f220ac30","4a37daf9dc716b1809d1055807a7c3f706729015","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[NetworkDummy completed (String)]","2"
"14","WebGoat/chrome-dev-tools","4a37daf9dc716b1809d1055807a7c3f706729015","eef5caf1bab52be301248fe06d4767b1d8b5d053","REVERSE_IF_ELSE","3","1","1","[NetworkLesson completed (String, String)]","2"
"17","WebGoat/chrome-dev-tools","eef5caf1bab52be301248fe06d4767b1d8b5d053","8050a98ab3c185a32ef2e9571bf59b4ffb90bb43","REVERSE_IF_ELSE","3","1","1","[NetworkDummy completed (String)]","2"
"18","WebGoat/chrome-dev-tools","8050a98ab3c185a32ef2e9571bf59b4ffb90bb43","7fa301ef963de13ce7592671bd7907810bb456ba","REVERSE_IF_ELSE","3","1","1","[NetworkLesson completed (String, String)]","2"
"26","WebGoat/chrome-dev-tools","7fa301ef963de13ce7592671bd7907810bb456ba","2c30ddde99f249561aa0874dce92dbf6461bdc68","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[NetworkDummy completed (String)]","2"
"0","WebGoat/cia","2c30ddde99f249561aa0874dce92dbf6461bdc68","739ad4fea2de1e01f88be79963e58f45bf7c03d3","FOR_TO_WHILE","1","1","2","[CIAQuiz getResults (), CIAQuiz completed (String[], String[], String[], String[])]","2"
"1","WebGoat/cia","739ad4fea2de1e01f88be79963e58f45bf7c03d3","a06ec4a5ca876b3e86d127b67225b766d102252d","SWITCH_EQUAL_SIDES","14","1","1","[CIAQuiz completed (String[], String[], String[], String[])]","1"
"5","WebGoat/cia","a06ec4a5ca876b3e86d127b67225b766d102252d","89df6f127dba91e35a45b36224bb5a469e51129e","LOCAL_VAR_RENAMING","0","1","2","[CIAQuiz getResults (), CIAQuiz completed (String[], String[], String[], String[])]","2"
"6","WebGoat/cia","89df6f127dba91e35a45b36224bb5a469e51129e","dbc062a0d6490429baccd67480905a68839f98bb","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[CIAQuiz completed (String[], String[], String[], String[])]","1"
"7","WebGoat/cia","dbc062a0d6490429baccd67480905a68839f98bb","fd465245807461c0942ffa8e47f4b2134948e36a","REVERSE_IF_ELSE","3","1","1","[CIAQuiz completed (String[], String[], String[], String[])]","1"
"8","WebGoat/cia","fd465245807461c0942ffa8e47f4b2134948e36a","f1abb34e4e81959b600647a0acb692f84ec107c9","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[CIAQuiz completed (String[], String[], String[], String[])]","1"
"9","WebGoat/cia","f1abb34e4e81959b600647a0acb692f84ec107c9","41deecee0dc6dbdcfe524816db1f46f4b6e0de7f","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[CIAQuiz completed (String[], String[], String[], String[])]","1"
"11","WebGoat/cia","41deecee0dc6dbdcfe524816db1f46f4b6e0de7f","5a401365793d4cda7d1c3fd0ac8a54826fb3823d","SWITCH_EQUAL_SIDES","14","1","1","[CIAQuiz completed (String[], String[], String[], String[])]","1"
"12","WebGoat/cia","5a401365793d4cda7d1c3fd0ac8a54826fb3823d","e5aec5fc1a2401244e8b5735dc35b9a5509d63f5","WHILE_TO_FOR","2","1","1","[CIAQuiz completed (String[], String[], String[], String[])]","1"
"13","WebGoat/cia","e5aec5fc1a2401244e8b5735dc35b9a5509d63f5","ff1db648a2e65c5a8d470322ef950effd298ac8d","REVERSE_IF_ELSE","3","1","1","[CIAQuiz completed (String[], String[], String[], String[])]","1"
"17","WebGoat/cia","ff1db648a2e65c5a8d470322ef950effd298ac8d","5edf897ad25c2c060963105888a15471d0abd821","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[CIAQuiz completed (String[], String[], String[], String[])]","1"
"18","WebGoat/cia","5edf897ad25c2c060963105888a15471d0abd821","39261047788e7e55451ab126add86a7fb5de4f9b","REVERSE_IF_ELSE","3","1","1","[CIAQuiz completed (String[], String[], String[], String[])]","1"
"20","WebGoat/cia","39261047788e7e55451ab126add86a7fb5de4f9b","46e954c5c7ca444b5982c467ee27598a97e74612","SWITCH_EQUAL_SIDES","14","1","1","[CIAQuiz completed (String[], String[], String[], String[])]","1"
"23","WebGoat/cia","46e954c5c7ca444b5982c467ee27598a97e74612","d7622cc2b69b7d563e239bc57b7e34fe25dd0edf","VAR_DECLARATION_MERGING","12","1","1","[CIAQuiz completed (String[], String[], String[], String[])]","1"
"24","WebGoat/cia","d7622cc2b69b7d563e239bc57b7e34fe25dd0edf","bd984dd47ce2e16d286f7d506d70f838f4b134a4","VAR_DECLARATION_DIVIDING","13","1","1","[CIAQuiz completed (String[], String[], String[], String[])]","1"
"25","WebGoat/cia","bd984dd47ce2e16d286f7d506d70f838f4b134a4","97cc8434560f5223cc3d9c6e6cb85b3ad4208514","VAR_DECLARATION_MERGING","12","1","1","[CIAQuiz completed (String[], String[], String[], String[])]","1"
"26","WebGoat/cia","97cc8434560f5223cc3d9c6e6cb85b3ad4208514","4d054c2b9a316ee090d8ee5eaeaf4adbf116032d","REVERSE_IF_ELSE","3","1","1","[CIAQuiz completed (String[], String[], String[], String[])]","1"
"27","WebGoat/cia","4d054c2b9a316ee090d8ee5eaeaf4adbf116032d","bdba6bb94dffd0d928574dd0ca0742e0272b9893","VAR_DECLARATION_DIVIDING","13","1","1","[CIAQuiz completed (String[], String[], String[], String[])]","1"
"28","WebGoat/cia","bdba6bb94dffd0d928574dd0ca0742e0272b9893","b826d88697571dd3731ed2da0842b5242c369a8b","REVERSE_IF_ELSE","3","1","1","[CIAQuiz completed (String[], String[], String[], String[])]","1"
"0","WebGoat/client-side-filtering","b826d88697571dd3731ed2da0842b5242c369a8b","d3f82bfa88367dee2b7733d952d6822570e8364f","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","3","[ClientSideFilteringAssignment completed (String), Salaries copyFiles (), Salaries invoke ()]","6"
"5","WebGoat/client-side-filtering","d3f82bfa88367dee2b7733d952d6822570e8364f","114bca1aba15606aa7fc2b686e3b80b0afbe518d","INFIX_EXPRESSION_DIVIDING","8","1","1","[ClientSideFilteringAssignment completed (String)]","2"
"9","WebGoat/client-side-filtering","114bca1aba15606aa7fc2b686e3b80b0afbe518d","756d284b8b1cfd8e534f492e35880ddd11ac3e6f","LOCAL_VAR_RENAMING","0","1","1","[ClientSideFilteringAssignment completed (String)]","2"
"13","WebGoat/client-side-filtering","756d284b8b1cfd8e534f492e35880ddd11ac3e6f","5272c32c75c8388075c9c4742c235571bd76d8a0","LOCAL_VAR_RENAMING","0","1","1","[ClientSideFilteringAssignment completed (String)]","2"
"14","WebGoat/client-side-filtering","5272c32c75c8388075c9c4742c235571bd76d8a0","b38bd1a08fa6fc87d47bc332fd9cff3f9bbd2044","SWITCH_STRING_EQUAL","15","1","1","[ClientSideFilteringAssignment completed (String)]","2"
"17","WebGoat/client-side-filtering","b38bd1a08fa6fc87d47bc332fd9cff3f9bbd2044","e18ca03994a1f5af2ad3f5d569852f5b92589001","INFIX_EXPRESSION_DIVIDING","8","1","1","[ClientSideFilteringAssignment completed (String)]","2"
"19","WebGoat/client-side-filtering","e18ca03994a1f5af2ad3f5d569852f5b92589001","11ddfcd264ade7e0fe84a95daa3266b2cd3c7783","LOCAL_VAR_RENAMING","0","1","1","[ClientSideFilteringAssignment completed (String)]","2"
"23","WebGoat/client-side-filtering","11ddfcd264ade7e0fe84a95daa3266b2cd3c7783","fc6330b8bb36f88393ed1f66e71f7b8ddae197b9","LOCAL_VAR_RENAMING","0","1","1","[ClientSideFilteringAssignment completed (String)]","2"
"26","WebGoat/client-side-filtering","fc6330b8bb36f88393ed1f66e71f7b8ddae197b9","af4407cf32a33fb0d990e91de549a845c850868f","VAR_DECLARATION_MERGING","12","1","1","[ClientSideFilteringAssignment completed (String)]","2"
"28","WebGoat/client-side-filtering","af4407cf32a33fb0d990e91de549a845c850868f","580cc3edd7929bc992cde291c1e2cace303ed32d","SWITCH_STRING_EQUAL","15","1","1","[ClientSideFilteringAssignment completed (String)]","2"
"0","WebGoat/command-injection","580cc3edd7929bc992cde291c1e2cace303ed32d","020b1a2b2365d109aae7f7dbaa3e29b238b7bb79","SWITCH_EQUAL_SIDES","14","1","1","[HttpBasicsInterceptRequest completed (HttpServletRequest)]","1"
"7","WebGoat/command-injection","020b1a2b2365d109aae7f7dbaa3e29b238b7bb79","1dfae07eb70c7f4dc8273ba03815a65d5e546fb9","LOCAL_VAR_RENAMING","0","1","1","[HttpBasicsInterceptRequest completed (HttpServletRequest)]","1"
"10","WebGoat/command-injection","1dfae07eb70c7f4dc8273ba03815a65d5e546fb9","5b961ca4dba8b899a8016e7581f7787c1b97974d","LOCAL_VAR_RENAMING","0","1","1","[HttpBasicsInterceptRequest completed (HttpServletRequest)]","1"
"26","WebGoat/command-injection","5b961ca4dba8b899a8016e7581f7787c1b97974d","b6da4ee55d9ae1a5a5e6f5575d29af6e6c3155c8","LOCAL_VAR_RENAMING","0","1","1","[HttpBasicsInterceptRequest completed (HttpServletRequest)]","1"
"0","WebGoat/cross-site-scripting","b6da4ee55d9ae1a5a5e6f5575d29af6e6c3155c8","ddd30b37f05d018f0c2eb97ed69fad7157626d4d","INFIX_EXPRESSION_DIVIDING","8","1","2","[DOMCrossSiteScriptingVerifier completed (String), CrossSiteScriptingLesson3 completed (String)]","4"
"2","WebGoat/cross-site-scripting","ddd30b37f05d018f0c2eb97ed69fad7157626d4d","9d2addd0c8ae7422cc6245acedfd20fc015558ec","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[CrossSiteScriptingLesson3 completed (String)]","2"
"4","WebGoat/cross-site-scripting","9d2addd0c8ae7422cc6245acedfd20fc015558ec","47b4f31205e1a71f018ded7edd2a2652b9075954","LOCAL_VAR_RENAMING","0","1","1","[CrossSiteScriptingLesson3 completed (String)]","2"
"5","WebGoat/cross-site-scripting","47b4f31205e1a71f018ded7edd2a2652b9075954","7f53d8f6340c0c31630c22cdd2d59577e0b26ffd","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[CrossSiteScriptingLesson3 completed (String)]","2"
"12","WebGoat/cross-site-scripting","7f53d8f6340c0c31630c22cdd2d59577e0b26ffd","4d8c4988e3987e01169cab5174f4ba3b9d800e66","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[CrossSiteScriptingLesson3 completed (String)]","2"
"16","WebGoat/cross-site-scripting","4d8c4988e3987e01169cab5174f4ba3b9d800e66","f5c82aa26d479a77b46408d273b96eed867b65a2","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[CrossSiteScriptingLesson3 completed (String)]","2"
"17","WebGoat/cross-site-scripting","f5c82aa26d479a77b46408d273b96eed867b65a2","0511624d672151e7f38216046ac39055b7d3c4c1","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[CrossSiteScriptingLesson3 completed (String)]","2"
"19","WebGoat/cross-site-scripting","0511624d672151e7f38216046ac39055b7d3c4c1","ecf03c70f31c875ef22c216d45c32849b41789f2","SWITCH_STRING_EQUAL","15","1","1","[CrossSiteScriptingLesson3 completed (String)]","2"
"20","WebGoat/cross-site-scripting","ecf03c70f31c875ef22c216d45c32849b41789f2","5f25a06706299b36ff2d008b10e40f3d3bfda4f3","SWITCH_STRING_EQUAL","15","1","1","[CrossSiteScriptingLesson3 completed (String)]","2"
"21","WebGoat/cross-site-scripting","5f25a06706299b36ff2d008b10e40f3d3bfda4f3","f7cc8d5062e5d0b56d1d329216675b7403079aa1","REVERSE_IF_ELSE","3","1","1","[CrossSiteScriptingLesson3 completed (String)]","2"
"24","WebGoat/cross-site-scripting","f7cc8d5062e5d0b56d1d329216675b7403079aa1","6b3bfbeffc2f7f98a64ea32f415bdd6a181daaac","SWITCH_STRING_EQUAL","15","1","1","[CrossSiteScriptingLesson3 completed (String)]","2"
"25","WebGoat/cross-site-scripting","6b3bfbeffc2f7f98a64ea32f415bdd6a181daaac","816ee764a2a1aac3fc408f7a771de8d52a03c0c4","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[CrossSiteScriptingLesson3 completed (String)]","2"
"26","WebGoat/cross-site-scripting","816ee764a2a1aac3fc408f7a771de8d52a03c0c4","51cb90f4e287dc25ae97b41ceb39c4331c6b2533","VAR_DECLARATION_MERGING","12","1","1","[CrossSiteScriptingLesson3 completed (String)]","2"
"29","WebGoat/cross-site-scripting","51cb90f4e287dc25ae97b41ceb39c4331c6b2533","c5a7e119457610feba3839973fc38a6c4fed89aa","REVERSE_IF_ELSE","3","1","1","[CrossSiteScriptingLesson3 completed (String)]","2"
"0","WebGoat/crypto","c5a7e119457610feba3839973fc38a6c4fed89aa","bd9bc7eab0eae4954099c9591f56c6348b3ee5a3","IF_DIVIDING","9","1","5","[HashingAssignment getHash (String, String), HashingAssignment getMd5 (HttpServletRequest), HashingAssignment getSha256 (HttpServletRequest), XOREncodingAssignment completed (String), HashingAssignment completed (HttpServletRequest, String, String)]","10"
"3","WebGoat/crypto","bd9bc7eab0eae4954099c9591f56c6348b3ee5a3","213058c124aad55c02f4e07e15a55e63bf6b8d2f","INFIX_EXPRESSION_DIVIDING","8","1","1","[XOREncodingAssignment completed (String)]","2"
"4","WebGoat/crypto","213058c124aad55c02f4e07e15a55e63bf6b8d2f","783a58ac6bfdde461123953abab9950c93f65886","LOCAL_VAR_RENAMING","0","1","1","[XOREncodingAssignment completed (String)]","2"
"5","WebGoat/crypto","783a58ac6bfdde461123953abab9950c93f65886","d91e5c2d5e02171c6e8361d73fe0f74dd782133f","VAR_DECLARATION_MERGING","12","1","1","[XOREncodingAssignment completed (String)]","2"
"15","WebGoat/crypto","d91e5c2d5e02171c6e8361d73fe0f74dd782133f","9b2daa3ef0ff0c5af5f62be7723c6647d627636c","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[XOREncodingAssignment completed (String)]","2"
"17","WebGoat/crypto","9b2daa3ef0ff0c5af5f62be7723c6647d627636c","d8c06bd196692dd38f0be0651b53841a146438b2","LOCAL_VAR_RENAMING","0","1","1","[XOREncodingAssignment completed (String)]","2"
"24","WebGoat/crypto","d8c06bd196692dd38f0be0651b53841a146438b2","15b4d9cc90d87c9238e0533c81539e304ad3f06d","LOCAL_VAR_RENAMING","0","1","1","[XOREncodingAssignment completed (String)]","2"
"28","WebGoat/crypto","15b4d9cc90d87c9238e0533c81539e304ad3f06d","e342544a79e9dd53ba06c4151c07fdf13ceefe78","REVERSE_IF_ELSE","3","1","1","[XOREncodingAssignment completed (String)]","2"
"0","WebGoat/csrf","e342544a79e9dd53ba06c4151c07fdf13ceefe78","4173439404a261ff10d3aef821582c42eb593202","INFIX_EXPRESSION_DIVIDING","8","1","4","[CSRFConfirmFlag1 completed (String), ForgedReviews createNewReview (String, Integer, String, HttpServletRequest), ForgedReviews retrieveReviews (), CSRFGetFlag invoke (HttpServletRequest)]","12"
"1","WebGoat/csrf","4173439404a261ff10d3aef821582c42eb593202","3a86a7cff284f327fd6881ab271f7b235a92b945","SWITCH_STRING_EQUAL","15","1","1","[CSRFConfirmFlag1 completed (String)]","3"
"9","WebGoat/csrf","3a86a7cff284f327fd6881ab271f7b235a92b945","df0b2cefa771105e2e46411399c6508ec0d0c870","SWITCH_STRING_EQUAL","15","1","1","[CSRFConfirmFlag1 completed (String)]","3"
"11","WebGoat/csrf","df0b2cefa771105e2e46411399c6508ec0d0c870","be0e1758c28be34094cb8f4d7c6462834df2ae90","REVERSE_IF_ELSE","3","1","1","[CSRFConfirmFlag1 completed (String)]","3"
"13","WebGoat/csrf","be0e1758c28be34094cb8f4d7c6462834df2ae90","26cd65c9ab31890409dd8ec71a824117a91e0703","REVERSE_IF_ELSE","3","1","1","[CSRFConfirmFlag1 completed (String)]","3"
"16","WebGoat/csrf","26cd65c9ab31890409dd8ec71a824117a91e0703","4c6dfc909c2dffb52abf5aaab9f715d7481e1283","LOCAL_VAR_RENAMING","0","1","1","[CSRFConfirmFlag1 completed (String)]","3"
"19","WebGoat/csrf","4c6dfc909c2dffb52abf5aaab9f715d7481e1283","696aca70111e238640ec9f333eff812da33b29fa","INFIX_EXPRESSION_DIVIDING","8","1","1","[CSRFConfirmFlag1 completed (String)]","3"
"29","WebGoat/csrf","696aca70111e238640ec9f333eff812da33b29fa","5feff6fd1df4a17178714ecc0c4f781c9255269f","REVERSE_IF_ELSE","3","1","1","[CSRFConfirmFlag1 completed (String)]","3"
"0","WebGoat/html-tampering","5feff6fd1df4a17178714ecc0c4f781c9255269f","465fca89677a18430fe086403181dede5c13e322","FOR_TO_WHILE","1","1","1","[HtmlTamperingTask completed (String, String)]","1"
"6","WebGoat/html-tampering","465fca89677a18430fe086403181dede5c13e322","02f7e5af6cd7453f33147ea9b5dc0040dad02b56","LOCAL_VAR_RENAMING","0","1","1","[HtmlTamperingTask completed (String, String)]","1"
"13","WebGoat/html-tampering","02f7e5af6cd7453f33147ea9b5dc0040dad02b56","3e38d63fa83141e88f74c8db2ecf4687a828b9bb","REVERSE_IF_ELSE","3","1","1","[HtmlTamperingTask completed (String, String)]","1"
"19","WebGoat/html-tampering","3e38d63fa83141e88f74c8db2ecf4687a828b9bb","bd1e26564775ce40d395d28d512d55a4641d95cc","LOCAL_VAR_RENAMING","0","1","1","[HtmlTamperingTask completed (String, String)]","1"
"20","WebGoat/html-tampering","bd1e26564775ce40d395d28d512d55a4641d95cc","389674d34ae9e26860525a266fade2734feabf84","LOCAL_VAR_RENAMING","0","1","1","[HtmlTamperingTask completed (String, String)]","1"
"29","WebGoat/html-tampering","389674d34ae9e26860525a266fade2734feabf84","9cfd37fdeb7b048b11873b7a47483220a57333ba","LOCAL_VAR_RENAMING","0","1","1","[HtmlTamperingTask completed (String, String)]","1"
"0","WebGoat/http-basics","9cfd37fdeb7b048b11873b7a47483220a57333ba","0631e3513a9b7c9c989bff9d59e486e98ea9f7d4","PRE_POST_FIX_EXPRESSION_DIVIDING","16","1","2","[HttpBasicsQuiz completed (String, String, String), HttpBasicsLesson completed (String)]","4"
"2","WebGoat/http-basics","0631e3513a9b7c9c989bff9d59e486e98ea9f7d4","0dcbe74f39848d447b89c7dce05dedc848c293ad","REVERSE_IF_ELSE","3","1","1","[HttpBasicsLesson completed (String)]","2"
"4","WebGoat/http-basics","0dcbe74f39848d447b89c7dce05dedc848c293ad","46592b4d7c80fa770f5fae66a8bae039568b0815","SWITCH_STRING_EQUAL","15","1","1","[HttpBasicsLesson completed (String)]","2"
"10","WebGoat/http-basics","46592b4d7c80fa770f5fae66a8bae039568b0815","e96b59567241b70a6034008c0dcc5a5cd213c1dd","SWITCH_STRING_EQUAL","15","1","1","[HttpBasicsLesson completed (String)]","2"
"13","WebGoat/http-basics","e96b59567241b70a6034008c0dcc5a5cd213c1dd","239bdcdb074e78dfaa5e7b65238b66693f51280a","INFIX_EXPRESSION_DIVIDING","8","1","1","[HttpBasicsLesson completed (String)]","2"
"16","WebGoat/http-basics","239bdcdb074e78dfaa5e7b65238b66693f51280a","d01431abd93d4c7c5eb978da4d79fb32dd0732e1","LOCAL_VAR_RENAMING","0","1","1","[HttpBasicsLesson completed (String)]","2"
"19","WebGoat/http-basics","d01431abd93d4c7c5eb978da4d79fb32dd0732e1","95eadeab8c2113237e07f137513fe83609b930c8","SWITCH_STRING_EQUAL","15","1","1","[HttpBasicsLesson completed (String)]","2"
"22","WebGoat/http-basics","95eadeab8c2113237e07f137513fe83609b930c8","938ab4c3eb024f2633e05bb26d7a45e9e8ec9c7e","SWITCH_STRING_EQUAL","15","1","1","[HttpBasicsLesson completed (String)]","2"
"23","WebGoat/http-basics","938ab4c3eb024f2633e05bb26d7a45e9e8ec9c7e","e471e23c7ec9e5ea26f475a9d892ed5a99d8a5d7","LOCAL_VAR_RENAMING","0","1","1","[HttpBasicsLesson completed (String)]","2"
"27","WebGoat/http-basics","e471e23c7ec9e5ea26f475a9d892ed5a99d8a5d7","c8429ba7d3ceab7dd8c340bef9d591bee03afabb","INFIX_EXPRESSION_DIVIDING","8","1","1","[HttpBasicsLesson completed (String)]","2"
"28","WebGoat/http-basics","c8429ba7d3ceab7dd8c340bef9d591bee03afabb","110185e659aca4fc25c8d0bccd5231b4b3c06573","VAR_DECLARATION_MERGING","12","1","1","[HttpBasicsLesson completed (String)]","2"
"0","WebGoat/http-proxies","110185e659aca4fc25c8d0bccd5231b4b3c06573","47cf716f92c11f0b1d60f1248d0ce04c1b68d383","CASE_TO_IF_ELSE","17","1","1","[HttpBasicsInterceptRequest completed (Boolean, String, HttpServletRequest)]","1"
"4","WebGoat/http-proxies","47cf716f92c11f0b1d60f1248d0ce04c1b68d383","e2b8eab8af3f1601baa94e2b18ca113fc160c628","VAR_DECLARATION_MERGING","12","1","1","[HttpBasicsInterceptRequest completed (Boolean, String, HttpServletRequest)]","1"
"9","WebGoat/http-proxies","e2b8eab8af3f1601baa94e2b18ca113fc160c628","57579ba046617a0a6720206d554b37e96cbe8baf","REVERSE_IF_ELSE","3","1","1","[HttpBasicsInterceptRequest completed (Boolean, String, HttpServletRequest)]","1"
"10","WebGoat/http-proxies","57579ba046617a0a6720206d554b37e96cbe8baf","70c1fb7195e402602555155e5acab4b08237f118","VAR_DECLARATION_DIVIDING","13","1","1","[HttpBasicsInterceptRequest completed (Boolean, String, HttpServletRequest)]","1"
"19","WebGoat/http-proxies","70c1fb7195e402602555155e5acab4b08237f118","d11230040b35d4ca2514e517dabc5d2950257b5c","LOCAL_VAR_RENAMING","0","1","1","[HttpBasicsInterceptRequest completed (Boolean, String, HttpServletRequest)]","1"
"20","WebGoat/http-proxies","d11230040b35d4ca2514e517dabc5d2950257b5c","3f8f7a727dc436e0395fc0ced2b2e8e81a32e4ce","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[HttpBasicsInterceptRequest completed (Boolean, String, HttpServletRequest)]","1"
"23","WebGoat/http-proxies","3f8f7a727dc436e0395fc0ced2b2e8e81a32e4ce","7044adc15e7896e9a503c3c67454fa147233504e","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[HttpBasicsInterceptRequest completed (Boolean, String, HttpServletRequest)]","1"
"26","WebGoat/http-proxies","7044adc15e7896e9a503c3c67454fa147233504e","85bcbc6a82e5f20db0e08eb0bd368f46df162678","REVERSE_IF_ELSE","3","1","1","[HttpBasicsInterceptRequest completed (Boolean, String, HttpServletRequest)]","1"
"0","WebGoat/idor","85bcbc6a82e5f20db0e08eb0bd368f46df162678","9be5c07a68f492e5075daaf54a1c8756c001c834","SWITCH_EQUAL_SIDES","14","1","3","[IDORLogin initIDORInfo (), IDORViewOwnProfile invoke (), IDORLogin completed (String, String)]","6"
"1","WebGoat/idor","9be5c07a68f492e5075daaf54a1c8756c001c834","9c0c182e0a7bd10fb1ccfd31b28c4fcbc78763d3","VAR_DECLARATION_DIVIDING","13","1","1","[IDORLogin completed (String, String)]","2"
"8","WebGoat/idor","9c0c182e0a7bd10fb1ccfd31b28c4fcbc78763d3","c3458ac4947f1658d69fdec2b707ddc1ab4ec939","VAR_DECLARATION_MERGING","12","1","1","[IDORLogin completed (String, String)]","2"
"11","WebGoat/idor","c3458ac4947f1658d69fdec2b707ddc1ab4ec939","e2bdc3c45a630f1290ae716f38bcf17a1feff578","SWITCH_STRING_EQUAL","15","1","1","[IDORLogin completed (String, String)]","2"
"12","WebGoat/idor","e2bdc3c45a630f1290ae716f38bcf17a1feff578","e0afd3753d369d0e7b04d0fe85be8c65b20327be","VAR_DECLARATION_DIVIDING","13","1","1","[IDORLogin completed (String, String)]","2"
"13","WebGoat/idor","e0afd3753d369d0e7b04d0fe85be8c65b20327be","eccfcc3965204fc352115b7348ee2cad10507ff0","INFIX_EXPRESSION_DIVIDING","8","1","1","[IDORLogin completed (String, String)]","2"
"15","WebGoat/idor","eccfcc3965204fc352115b7348ee2cad10507ff0","ae2da392c603accceedd76e70ff29610451867db","LOCAL_VAR_RENAMING","0","1","1","[IDORLogin completed (String, String)]","2"
"20","WebGoat/idor","ae2da392c603accceedd76e70ff29610451867db","3eafc9da83f7b0620413bc03535df969635983bb","INFIX_EXPRESSION_DIVIDING","8","1","1","[IDORLogin completed (String, String)]","2"
"21","WebGoat/idor","3eafc9da83f7b0620413bc03535df969635983bb","39111668a33443870e72a6a48883e08b487c9f9e","VAR_DECLARATION_MERGING","12","1","1","[IDORLogin completed (String, String)]","2"
"23","WebGoat/idor","39111668a33443870e72a6a48883e08b487c9f9e","0a8fc961d1a9c22c6036e642643813adfe8ae2bb","VAR_DECLARATION_DIVIDING","13","1","1","[IDORLogin completed (String, String)]","2"
"24","WebGoat/idor","0a8fc961d1a9c22c6036e642643813adfe8ae2bb","a94054f56b317f49d8721a9437f951067543b718","VAR_DECLARATION_MERGING","12","1","1","[IDORLogin completed (String, String)]","2"
"28","WebGoat/idor","a94054f56b317f49d8721a9437f951067543b718","3700af60512fe4367921dfb71bcc3f0082bb7c0f","LOCAL_VAR_RENAMING","0","1","1","[IDORLogin completed (String, String)]","2"
"0","WebGoat/insecure-deserialization","3700af60512fe4367921dfb71bcc3f0082bb7c0f","3785b1cf3e6e0cc519aea5adcb1a9b07303f07b4","CASE_TO_IF_ELSE","17","1","7","[InsecureDeserializationTask completed (String), VulnerableTaskHolder VulnerableTaskHolder (String, String), SerializationHelper toString (Serializable), SerializationHelper bytesToHex (byte[]), VulnerableTaskHolder readObject (ObjectInputStream), SerializationHelper fromString (String), SerializationHelper show ()]","21"
"12","WebGoat/insecure-deserialization","3785b1cf3e6e0cc519aea5adcb1a9b07303f07b4","4e76fbaeb15dc11054eb86e4bc487f9bed82be72","REVERSE_IF_ELSE","3","1","1","[InsecureDeserializationTask completed (String)]","3"
"13","WebGoat/insecure-deserialization","4e76fbaeb15dc11054eb86e4bc487f9bed82be72","6308704b95a2ce0656a78ab5c2ab08b3250479af","LOCAL_VAR_RENAMING","0","1","1","[InsecureDeserializationTask completed (String)]","3"
"20","WebGoat/insecure-deserialization","6308704b95a2ce0656a78ab5c2ab08b3250479af","083b0d8c739b93bab38d2e559c8fb9d667f9e6f6","LOCAL_VAR_RENAMING","0","1","1","[InsecureDeserializationTask completed (String)]","3"
"25","WebGoat/insecure-deserialization","083b0d8c739b93bab38d2e559c8fb9d667f9e6f6","f2d6189d1081a6c8bec92048113f11585cfdb88f","REVERSE_IF_ELSE","3","1","1","[InsecureDeserializationTask completed (String)]","3"
"0","WebGoat/insecure-login","f2d6189d1081a6c8bec92048113f11585cfdb88f","d18044fc9094d78ec4286377260b32656c61525d","WHILE_TO_FOR","2","1","1","[InsecureLoginTask completed (String, String)]","1"
"4","WebGoat/insecure-login","d18044fc9094d78ec4286377260b32656c61525d","5e034ee65af6652eb03789165dfbeceae60fd873","LOCAL_VAR_RENAMING","0","1","1","[InsecureLoginTask completed (String, String)]","1"
"10","WebGoat/insecure-login","5e034ee65af6652eb03789165dfbeceae60fd873","65c5c943bdf4503c213160403ceb8fd7242ec05d","LOCAL_VAR_RENAMING","0","1","1","[InsecureLoginTask completed (String, String)]","1"
"12","WebGoat/insecure-login","65c5c943bdf4503c213160403ceb8fd7242ec05d","cca2831d7b8e15686c8288eedc8519c7a3fc7ccc","LOCAL_VAR_RENAMING","0","1","1","[InsecureLoginTask completed (String, String)]","1"
"18","WebGoat/insecure-login","cca2831d7b8e15686c8288eedc8519c7a3fc7ccc","2594b10700aa8e3e90fa19b2060c059a5ce0a15b","INFIX_EXPRESSION_DIVIDING","8","1","1","[InsecureLoginTask completed (String, String)]","1"
"23","WebGoat/insecure-login","2594b10700aa8e3e90fa19b2060c059a5ce0a15b","8ece843ef1b29b5eba460b5fcd76abaf9508dcf5","INFIX_EXPRESSION_DIVIDING","8","1","1","[InsecureLoginTask completed (String, String)]","1"
"24","WebGoat/insecure-login","8ece843ef1b29b5eba460b5fcd76abaf9508dcf5","f08a05d911ff61c69ee249e51c69c21e58a5ea32","LOCAL_VAR_RENAMING","0","1","1","[InsecureLoginTask completed (String, String)]","1"
"25","WebGoat/insecure-login","f08a05d911ff61c69ee249e51c69c21e58a5ea32","bc13af055c6af726c774b91863e131040eaf3417","SWITCH_STRING_EQUAL","15","1","1","[InsecureLoginTask completed (String, String)]","1"
"0","WebGoat/jwt","bc13af055c6af726c774b91863e131040eaf3417","e23bad6f3d35648d71cb45f31a06d4e86c2d6beb","VAR_DECLARATION_MERGING","12","1","11","[JWTFinalEndpoint encode (String, String, String), JWTRefreshEndpoint checkout (String), JWTFinalEndpoint decode (String), JWTFinalEndpoint follow (String), JWTFinalEndpoint resolveSigningKeyBytes (JwsHeader, Claims), JWTRefreshEndpoint follow (Map<String,Object>), JWTFinalEndpoint resetVotes (String), JWTFinalEndpoint getJWTSignature (String, String, String, String), JWTRefreshEndpoint createNewTokens (String), JWTRefreshEndpoint newToken (String, Map<String,Object>), JWTFinalEndpoint JWTFinalEndpoint (DataSource)]","22"
"1","WebGoat/jwt","e23bad6f3d35648d71cb45f31a06d4e86c2d6beb","2e5fd07708d0d6e07a1b9d0ed20bed8b9ad01bc0","VAR_DECLARATION_DIVIDING","13","1","1","[JWTRefreshEndpoint follow (Map<String,Object>)]","2"
"2","WebGoat/jwt","2e5fd07708d0d6e07a1b9d0ed20bed8b9ad01bc0","0bf56a13b1634259bf2c48bd6c8c16335f135514","SWITCH_STRING_EQUAL","15","1","2","[JWTRefreshEndpoint checkout (String), JWTRefreshEndpoint follow (Map<String,Object>)]","4"
"5","WebGoat/jwt","0bf56a13b1634259bf2c48bd6c8c16335f135514","2425b535b0d38379d49fd8eaa1e0445d663d7427","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JWTRefreshEndpoint newToken (String, Map<String,Object>)]","2"
"7","WebGoat/jwt","2425b535b0d38379d49fd8eaa1e0445d663d7427","522815213d0f7062756b838e26a3bddb3b92e335","SWITCH_STRING_EQUAL","15","1","2","[JWTRefreshEndpoint checkout (String), JWTRefreshEndpoint follow (Map<String,Object>)]","4"
"9","WebGoat/jwt","522815213d0f7062756b838e26a3bddb3b92e335","7a88e46085f1f670160353ecc8af174944bed6bd","VAR_DECLARATION_MERGING","12","1","1","[JWTRefreshEndpoint follow (Map<String,Object>)]","2"
"10","WebGoat/jwt","7a88e46085f1f670160353ecc8af174944bed6bd","67ff1e7d088dd6f7e30bdc2d92034553a540e977","SWITCH_STRING_EQUAL","15","1","1","[JWTRefreshEndpoint checkout (String)]","2"
"12","WebGoat/jwt","67ff1e7d088dd6f7e30bdc2d92034553a540e977","11945a916b24fbbd9e32a40d1909188db255ba95","SWITCH_EQUAL_SIDES","14","1","1","[JWTRefreshEndpoint newToken (String, Map<String,Object>)]","2"
"13","WebGoat/jwt","11945a916b24fbbd9e32a40d1909188db255ba95","ad0670913c6ee281bd9450b0de64bf29d492b45b","REVERSE_IF_ELSE","3","1","2","[JWTRefreshEndpoint checkout (String), JWTRefreshEndpoint newToken (String, Map<String,Object>)]","4"
"16","WebGoat/jwt","ad0670913c6ee281bd9450b0de64bf29d492b45b","226970f502f55f1e80dbba4fb40a58d3fec6b1ef","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JWTRefreshEndpoint newToken (String, Map<String,Object>)]","2"
"17","WebGoat/jwt","226970f502f55f1e80dbba4fb40a58d3fec6b1ef","4f3d38fcc4e0af3fc2a2f1a7017933b5d4ef8788","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JWTRefreshEndpoint newToken (String, Map<String,Object>)]","2"
"19","WebGoat/jwt","4f3d38fcc4e0af3fc2a2f1a7017933b5d4ef8788","35585a042f6946e176df1057c396b58c8d021547","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JWTRefreshEndpoint newToken (String, Map<String,Object>)]","2"
"22","WebGoat/jwt","35585a042f6946e176df1057c396b58c8d021547","433a8afd59cc28a44b6a571a1b4a95b8de6ee4bf","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JWTRefreshEndpoint newToken (String, Map<String,Object>)]","2"
"24","WebGoat/jwt","433a8afd59cc28a44b6a571a1b4a95b8de6ee4bf","d205b3542844f782872a602478151537cfaeb523","VAR_DECLARATION_DIVIDING","13","1","1","[JWTRefreshEndpoint follow (Map<String,Object>)]","2"
"29","WebGoat/jwt","d205b3542844f782872a602478151537cfaeb523","530f1cbe769a3ef2551a5b5cf3007f973eaf2442","LOCAL_VAR_RENAMING","0","1","2","[JWTRefreshEndpoint follow (Map<String,Object>), JWTRefreshEndpoint newToken (String, Map<String,Object>)]","4"
"0","WebGoat/missing-function-ac","530f1cbe769a3ef2551a5b5cf3007f973eaf2442","fae0ca971217e09b0278b7a0be6d4e8f6c29dd9f","REVERSE_IF_ELSE","3","1","7","[Users getUsers (), DisplayUser isAdmin (), DisplayUser DisplayUser (WebGoatUser), DisplayUser getUsername (), Users Users (UserSessionData, DataSource), DisplayUser genUserHash (String, String), DisplayUser getUserHash ()]","14"
"1","WebGoat/missing-function-ac","fae0ca971217e09b0278b7a0be6d4e8f6c29dd9f","52037929894a1b344ee7e32bd7f4d1a3b20ab7ae","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DisplayUser DisplayUser (WebGoatUser)]","2"
"16","WebGoat/missing-function-ac","52037929894a1b344ee7e32bd7f4d1a3b20ab7ae","874ad122237220aeb635561d4cba975fd05a7d6c","LOCAL_VAR_RENAMING","0","1","2","[DisplayUser DisplayUser (WebGoatUser), DisplayUser getUserHash ()]","4"
"22","WebGoat/missing-function-ac","874ad122237220aeb635561d4cba975fd05a7d6c","a06317b8aa52959c7fb50b211934aff6ea097813","LOCAL_VAR_RENAMING","0","1","3","[DisplayUser DisplayUser (WebGoatUser), DisplayUser getUsername (), DisplayUser genUserHash (String, String)]","6"
"24","WebGoat/missing-function-ac","a06317b8aa52959c7fb50b211934aff6ea097813","649b0f6af1cb287f90d2958dd010c5cb57dfde37","LOCAL_VAR_RENAMING","0","1","2","[DisplayUser DisplayUser (WebGoatUser), DisplayUser genUserHash (String, String)]","4"
"0","WebGoat/password-reset","649b0f6af1cb287f90d2958dd010c5cb57dfde37","365471278edb090bd8961d5c5566af958bb62d17","IF_DIVIDING","9","1","11","[ResetLinkAssignment illegalCall (), QuestionsAssignment passwordReset (Map<String,Object>), ResetLinkAssignmentForgotPassword sendPasswordResetLink (String, HttpServletRequest), SecurityQuestionAssignment completed (String), ResetLinkAssignment checkIfLinkIsFromTom (String), ResetLinkAssignment resetPassword (String, Model), ResetLinkAssignment login (String, String), ResetLinkAssignment changePassword (PasswordChangeForm, BindingResult), ResetLinkAssignmentForgotPassword ResetLinkAssignmentForgotPassword (RestTemplate, String), ResetLinkAssignmentForgotPassword sendMailToUser (String, String, String), ResetLinkAssignmentForgotPassword fakeClickingLinkEmail (String, String)]","44"
"9","WebGoat/password-reset","365471278edb090bd8961d5c5566af958bb62d17","a54c4cfae2bbb35a134bb50e08a34a154acd2a5f","SWITCH_STRING_EQUAL","15","1","2","[ResetLinkAssignment checkIfLinkIsFromTom (String), ResetLinkAssignment login (String, String)]","8"
"10","WebGoat/password-reset","a54c4cfae2bbb35a134bb50e08a34a154acd2a5f","8f68653a33691df7d68870496d2147f50754387d","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ResetLinkAssignment login (String, String)]","4"
"12","WebGoat/password-reset","8f68653a33691df7d68870496d2147f50754387d","e20d545c7b54aba861eff6343a5f8c8b4762aa72","REVERSE_IF_ELSE","3","1","2","[ResetLinkAssignment resetPassword (String, Model), ResetLinkAssignment changePassword (PasswordChangeForm, BindingResult)]","8"
"14","WebGoat/password-reset","e20d545c7b54aba861eff6343a5f8c8b4762aa72","8bfc72d55c6192eee85fd91835d25be16dbf030c","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[ResetLinkAssignment checkIfLinkIsFromTom (String), ResetLinkAssignment changePassword (PasswordChangeForm, BindingResult)]","8"
"16","WebGoat/password-reset","8bfc72d55c6192eee85fd91835d25be16dbf030c","6b2f8226ec5e34500f1349d5a8d2d0f21c547fb1","REVERSE_IF_ELSE","3","1","3","[ResetLinkAssignment resetPassword (String, Model), ResetLinkAssignment login (String, String), ResetLinkAssignment changePassword (PasswordChangeForm, BindingResult)]","12"
"17","WebGoat/password-reset","6b2f8226ec5e34500f1349d5a8d2d0f21c547fb1","29adc76aad80cc8cf1ab1ee6493fcdf0192b4d66","INFIX_EXPRESSION_DIVIDING","8","1","1","[ResetLinkAssignment checkIfLinkIsFromTom (String)]","4"
"19","WebGoat/password-reset","29adc76aad80cc8cf1ab1ee6493fcdf0192b4d66","855f9a69201cff4a7dd96d3bce3065aac10dc779","INFIX_EXPRESSION_DIVIDING","8","1","2","[ResetLinkAssignment checkIfLinkIsFromTom (String), ResetLinkAssignment login (String, String)]","8"
"23","WebGoat/password-reset","855f9a69201cff4a7dd96d3bce3065aac10dc779","67669ba85b6fbe33ce3c6b323930dee4eb67b76f","REVERSE_IF_ELSE","3","1","1","[ResetLinkAssignment changePassword (PasswordChangeForm, BindingResult)]","4"
"25","WebGoat/password-reset","67669ba85b6fbe33ce3c6b323930dee4eb67b76f","6a4ac0f978921ddb417899a78b84b57b03da663b","INFIX_EXPRESSION_DIVIDING","8","1","1","[ResetLinkAssignment login (String, String)]","4"
"26","WebGoat/password-reset","6a4ac0f978921ddb417899a78b84b57b03da663b","7e3b21460ce7b39c2d43d101eaad1d8502bc34b3","LOCAL_VAR_RENAMING","0","1","2","[ResetLinkAssignment login (String, String), ResetLinkAssignment changePassword (PasswordChangeForm, BindingResult)]","8"
"29","WebGoat/password-reset","7e3b21460ce7b39c2d43d101eaad1d8502bc34b3","2e9c4ff09f9c8ef36b0774fa7bdad9f1df909f27","SWITCH_STRING_EQUAL","15","1","2","[ResetLinkAssignment checkIfLinkIsFromTom (String), ResetLinkAssignment login (String, String)]","8"
"0","WebGoat/path-traversal","2e9c4ff09f9c8ef36b0774fa7bdad9f1df909f27","28e05416d3a8d608d4aeec26d6e322efc714ba3e","SWITCH_STRING_EQUAL","15","1","12","[ProfileUploadRetrieval ProfileUploadRetrieval (String), ProfileUploadRetrieval getProfilePicture (HttpServletRequest), ProfileUploadBase solvedIt (File), ProfileUploadBase attemptWasMade (File, File), ProfileUpload getProfilePicture (), ProfileUploadBase execute (MultipartFile, String), ProfileUpload ProfileUpload (String, WebSession), ProfileUpload uploadFileHandler (MultipartFile, String), ProfileUploadRetrieval initAssignment (), ProfileUploadBase getProfilePicture (), ProfileUploadRetrieval execute (String), ProfileUploadBase defaultImage ()]","36"
"6","WebGoat/path-traversal","28e05416d3a8d608d4aeec26d6e322efc714ba3e","f9e58516744d28ee923efc920ec664ca85b45335","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ProfileUploadRetrieval getProfilePicture (HttpServletRequest)]","3"
"7","WebGoat/path-traversal","f9e58516744d28ee923efc920ec664ca85b45335","10b5bab502d9e7814e592157456509b24e9826a2","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[ProfileUploadRetrieval getProfilePicture (HttpServletRequest)]","3"
"11","WebGoat/path-traversal","10b5bab502d9e7814e592157456509b24e9826a2","26089634eaa5418075252f3e4f86ed3fd4c0d1b5","PP_TO_ADD_ASSIGNMENT","6","1","1","[ProfileUploadRetrieval initAssignment ()]","3"
"14","WebGoat/path-traversal","26089634eaa5418075252f3e4f86ed3fd4c0d1b5","3b091c2f041a1301eddbfe091e78cdaff67edbc6","WHILE_TO_FOR","2","1","1","[ProfileUploadRetrieval initAssignment ()]","3"
"15","WebGoat/path-traversal","3b091c2f041a1301eddbfe091e78cdaff67edbc6","80578e06b4c955404ead4055d0f9dc099bb3bdea","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ProfileUploadRetrieval getProfilePicture (HttpServletRequest)]","3"
"27","WebGoat/path-traversal","80578e06b4c955404ead4055d0f9dc099bb3bdea","8099e929864bd80885abcf0fe161be86da610a15","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ProfileUploadRetrieval getProfilePicture (HttpServletRequest)]","3"
"0","WebGoat/secure-passwords","8099e929864bd80885abcf0fe161be86da610a15","47bd008997fccf9ceae08059d5638c0ef1bb82d3","WHILE_TO_FOR","2","1","2","[SecurePasswordsAssignment calculateTime (long), SecurePasswordsAssignment completed (String)]","2"
"14","WebGoat/secure-passwords","47bd008997fccf9ceae08059d5638c0ef1bb82d3","5840c4f074bed1e5695e1a13b9fca15edcf506dc","LOCAL_VAR_RENAMING","0","1","2","[SecurePasswordsAssignment calculateTime (long), SecurePasswordsAssignment completed (String)]","2"
"16","WebGoat/secure-passwords","5840c4f074bed1e5695e1a13b9fca15edcf506dc","e18c0c5064badef553e6f3bd0ff906e8f7334b07","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[SecurePasswordsAssignment calculateTime (long), SecurePasswordsAssignment completed (String)]","2"
"17","WebGoat/secure-passwords","e18c0c5064badef553e6f3bd0ff906e8f7334b07","00c3bc8080b5f07fb62b9459d22309ed0a5fbe6d","REVERSE_IF_ELSE","3","1","1","[SecurePasswordsAssignment completed (String)]","1"
"21","WebGoat/secure-passwords","00c3bc8080b5f07fb62b9459d22309ed0a5fbe6d","62a0fcadeeb6db0ce6049dbc005dd2b98a4618ee","REVERSE_IF_ELSE","3","1","1","[SecurePasswordsAssignment completed (String)]","1"
"0","WebGoat/sql-injection","62a0fcadeeb6db0ce6049dbc005dd2b98a4618ee","e0cf431595276f0e24c265472a7dcbb42ed2e430","PRE_POST_FIX_EXPRESSION_DIVIDING","16","1","14","[SqlInjectionLesson9 checkSalaryRanking (Connection, StringBuffer), SqlInjectionLesson9 injectableQueryIntegrity (String, String), SqlInjectionLesson10 SqlInjectionLesson10 (DataSource), SqlInjectionLesson10b completed (String), JavaObjectFromString getCharContent (boolean), SqlInjectionLesson10b compileFromString (String), SqlInjectionLesson9 SqlInjectionLesson9 (DataSource), SqlInjectionLesson10 completed (String), SqlInjectionLesson9 completed (String, String), SqlInjectionLesson10 tableExists (Connection), JavaObjectFromString check_text (String, String), SqlInjectionLesson10 injectableQueryAvailability (String), JavaObjectFromString JavaObjectFromString (String, String), SqlInjectionLesson10b getJavaFileContentsAsString (String)]","42"
"2","WebGoat/sql-injection","e0cf431595276f0e24c265472a7dcbb42ed2e430","4dc49a1786b089deb86da71eac87932846a75c20","LOCAL_VAR_RENAMING","0","1","2","[SqlInjectionLesson10 tableExists (Connection), SqlInjectionLesson10 completed (String)]","6"
"21","WebGoat/sql-injection","4dc49a1786b089deb86da71eac87932846a75c20","6d622ddb6764d8e869692f4d182e42f47da56e92","LOCAL_VAR_RENAMING","0","1","1","[SqlInjectionLesson10 tableExists (Connection)]","3"
"27","WebGoat/sql-injection","6d622ddb6764d8e869692f4d182e42f47da56e92","07d40973a54a38302cad9bbf18727dd31e489f61","VAR_DECLARATION_DIVIDING","13","1","1","[SqlInjectionLesson10b completed (String)]","3"
"0","WebGoat/ssrf","07d40973a54a38302cad9bbf18727dd31e489f61","56ee853f62b03d5eeec3628db44b41c53d803598","IF_DIVIDING","9","1","2","[SSRFTask1 completed (String), SSRFTask1 stealTheCheese (String)]","2"
"15","WebGoat/ssrf","56ee853f62b03d5eeec3628db44b41c53d803598","3d5fe4648599bf6aefb4f1e2022e41002b4aec93","REVERSE_IF_ELSE","3","1","1","[SSRFTask1 stealTheCheese (String)]","1"
"23","WebGoat/ssrf","3d5fe4648599bf6aefb4f1e2022e41002b4aec93","3e96ea8513ab26d11e07207af7ed2f6e0d391723","REVERSE_IF_ELSE","3","1","1","[SSRFTask1 stealTheCheese (String)]","1"
"25","WebGoat/ssrf","3e96ea8513ab26d11e07207af7ed2f6e0d391723","ea391884a54d69b51fe89ecba6debca7985044c2","REVERSE_IF_ELSE","3","1","1","[SSRFTask1 stealTheCheese (String)]","1"
"0","WebGoat/vulnerable-components","ea391884a54d69b51fe89ecba6debca7985044c2","bf38d475df46d9d45bff3ab8ea10659675597a91","SWITCH_STRING_EQUAL","15","1","1","[VulnerableComponentsLesson completed (String)]","1"
"16","WebGoat/vulnerable-components","bf38d475df46d9d45bff3ab8ea10659675597a91","82fa2657f6c2e4344c6382729f58436b475b9839","REVERSE_IF_ELSE","3","1","1","[VulnerableComponentsLesson completed (String)]","1"
"17","WebGoat/vulnerable-components","82fa2657f6c2e4344c6382729f58436b475b9839","eaee7b8d86584bf4c6a79f9d6846120aa426e098","REVERSE_IF_ELSE","3","1","1","[VulnerableComponentsLesson completed (String)]","1"
"18","WebGoat/vulnerable-components","eaee7b8d86584bf4c6a79f9d6846120aa426e098","cc774c6df4b626d87a1154cd6ef32cbb97a07f39","REVERSE_IF_ELSE","3","1","1","[VulnerableComponentsLesson completed (String)]","1"
"20","WebGoat/vulnerable-components","cc774c6df4b626d87a1154cd6ef32cbb97a07f39","bb378d4ee67470719db4b3996e67c3d29962fcff","REVERSE_IF_ELSE","3","1","1","[VulnerableComponentsLesson completed (String)]","1"
"25","WebGoat/vulnerable-components","bb378d4ee67470719db4b3996e67c3d29962fcff","b5d2b144164ca2bb298322dbc89b96a2cd4d517f","LOCAL_VAR_RENAMING","0","1","1","[VulnerableComponentsLesson completed (String)]","1"
"0","WebGoat/webgoat-lesson-template","b5d2b144164ca2bb298322dbc89b96a2cd4d517f","8f7db8df326810d20d302192dd7ab3bc2fb226fb","CASE_TO_IF_ELSE","17","1","2","[SampleAttack getItemsInBasket (String), SampleAttack completed (String, String)]","2"
"6","WebGoat/webgoat-lesson-template","8f7db8df326810d20d302192dd7ab3bc2fb226fb","f7e91453519d48cc53b873e8d33a21a07c97697e","REVERSE_IF_ELSE","3","1","1","[SampleAttack completed (String, String)]","1"
"9","WebGoat/webgoat-lesson-template","f7e91453519d48cc53b873e8d33a21a07c97697e","d9ff6d8f6f09769c561d59dc658f764457454924","REVERSE_IF_ELSE","3","1","1","[SampleAttack completed (String, String)]","1"
"12","WebGoat/webgoat-lesson-template","d9ff6d8f6f09769c561d59dc658f764457454924","f7331e0ff299db3293df02364f856533820f7c43","REVERSE_IF_ELSE","3","1","1","[SampleAttack completed (String, String)]","1"
"16","WebGoat/webgoat-lesson-template","f7331e0ff299db3293df02364f856533820f7c43","5fcb1edddc10dc151511ffc1c08725f0fa880514","VAR_DECLARATION_DIVIDING","13","1","1","[SampleAttack completed (String, String)]","1"
"27","WebGoat/webgoat-lesson-template","5fcb1edddc10dc151511ffc1c08725f0fa880514","e16851f33c69e5197de4fa7a3832fc87a4781cde","REVERSE_IF_ELSE","3","1","1","[SampleAttack completed (String, String)]","1"
"29","WebGoat/webgoat-lesson-template","e16851f33c69e5197de4fa7a3832fc87a4781cde","02a9e29bd8b750069d5cdef5edbdbdc96e656859","REVERSE_IF_ELSE","3","1","1","[SampleAttack completed (String, String)]","1"
"0","WebGoat/webwolf-introduction","02a9e29bd8b750069d5cdef5edbdbdc96e656859","d86c5f46ca02d56e42d6314a5d01ac14c756f69d","WHILE_TO_FOR","2","1","3","[MailAssignment completed (String), MailAssignment MailAssignment (RestTemplate, String), MailAssignment sendEmail (String)]","6"
"10","WebGoat/webwolf-introduction","d86c5f46ca02d56e42d6314a5d01ac14c756f69d","39822c2f7c7fa50890242e22d42cca3b9ea73a61","LOCAL_VAR_RENAMING","0","1","0","[]","0"
"0","WebGoat/xxe","39822c2f7c7fa50890242e22d42cca3b9ea73a61","05b1435ce2a108fa6f8fa47da7f1de3cf6fe03e9","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","3","[ContentTypeAssignment createNewUser (String, String), CommentsEndpoint retrieveComments (), ContentTypeAssignment checkSolution (Comment)]","6"
"10","WebGoat/xxe","05b1435ce2a108fa6f8fa47da7f1de3cf6fe03e9","b594eb2af3aaee71844b6bd6b69808d878cbc119","LOCAL_VAR_RENAMING","0","1","1","[ContentTypeAssignment createNewUser (String, String)]","2"
"11","WebGoat/xxe","b594eb2af3aaee71844b6bd6b69808d878cbc119","ea4ec6c13c109475c95801853df8ef10e14e5321","INFIX_EXPRESSION_DIVIDING","8","1","1","[ContentTypeAssignment createNewUser (String, String)]","2"
"17","WebGoat/xxe","ea4ec6c13c109475c95801853df8ef10e14e5321","8a04ec57a2e3e0fe7d337ea297e64d0419e1c2da","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ContentTypeAssignment checkSolution (Comment)]","2"
"22","WebGoat/xxe","8a04ec57a2e3e0fe7d337ea297e64d0419e1c2da","a653098b29763bef0f46afd386cc4de91367fce8","REVERSE_IF_ELSE","3","1","2","[ContentTypeAssignment createNewUser (String, String), ContentTypeAssignment checkSolution (Comment)]","4"
"25","WebGoat/xxe","a653098b29763bef0f46afd386cc4de91367fce8","4a4963a2cfb4dd0d1de6f43c238ff64bd1790ac4","LOCAL_VAR_RENAMING","0","1","1","[ContentTypeAssignment createNewUser (String, String)]","2"
"0","WebGoat/webgoat-server","4a4963a2cfb4dd0d1de6f43c238ff64bd1790ac4","4131e3b9ee0deeab1e22c1791f9b95455fe7b3b7","PP_TO_ADD_ASSIGNMENT","6","1","3","[HSQLDBDatabaseConfig hsqlStandalone (String, boolean, boolean, String), HSQLDBDatabaseConfig dataSource (String, String), HSQLDBDatabaseConfig shutdown ()]","3"
"13","WebGoat/webgoat-server","4131e3b9ee0deeab1e22c1791f9b95455fe7b3b7","7e85bf32482bdcd4945d9cea2b5e7802bbdfdf83","LOCAL_VAR_RENAMING","0","1","2","[HSQLDBDatabaseConfig hsqlStandalone (String, boolean, boolean, String), HSQLDBDatabaseConfig dataSource (String, String)]","2"
"23","WebGoat/webgoat-server","7e85bf32482bdcd4945d9cea2b5e7802bbdfdf83","9238463ff36aaba3b5cb5f867846d47322ea5023","LOCAL_VAR_RENAMING","0","1","2","[HSQLDBDatabaseConfig hsqlStandalone (String, boolean, boolean, String), HSQLDBDatabaseConfig dataSource (String, String)]","2"
"24","WebGoat/webgoat-server","9238463ff36aaba3b5cb5f867846d47322ea5023","a3fb36d948940deff11d78c3798667df43cb3410","LOCAL_VAR_RENAMING","0","1","2","[HSQLDBDatabaseConfig hsqlStandalone (String, boolean, boolean, String), HSQLDBDatabaseConfig dataSource (String, String)]","2"
"0","WebGoat/webwolf","a3fb36d948940deff11d78c3798667df43cb3410","27afc5f7412ce1835ced7f4f1fff014392168e6c","LOOP_IF_CONTINUE_TO_ELSE","11","1","10","[Tracert toJsonString (HttpTrace), WebWolfTraceRepository add (HttpTrace), Tracert path (HttpTrace), WebWolfTraceRepository isInExclusionList (String), Tracert allowedTrace (HttpTrace, UserDetails), WebWolfTraceRepository findAll (), WebWolfTraceRepository findAllTraces (), RegistrationController showForm (UserForm), RegistrationController registration (UserForm, BindingResult, HttpServletRequest), Tracert get ()]","30"
"8","WebGoat/webwolf","27afc5f7412ce1835ced7f4f1fff014392168e6c","47703a42eba601d9d2f49ec2575fb136ac22d29f","REVERSE_IF_ELSE","3","1","1","[RegistrationController registration (UserForm, BindingResult, HttpServletRequest)]","3"
"15","WebGoat/webwolf","47703a42eba601d9d2f49ec2575fb136ac22d29f","c49e65119653d2ac0cff90d59f7ef80e92f558cf","REVERSE_IF_ELSE","3","1","1","[RegistrationController registration (UserForm, BindingResult, HttpServletRequest)]","3"
"20","WebGoat/webwolf","c49e65119653d2ac0cff90d59f7ef80e92f558cf","58b72fc616b5753cbbd28d8454dcf406df6b2ce6","REVERSE_IF_ELSE","3","1","1","[RegistrationController registration (UserForm, BindingResult, HttpServletRequest)]","3"
"0","RuoYi/ruoyi-admin","b20193da0541ae09ab07b6a31a21b810a7e57389","9bfc9c31c74c977fb8b0515077363033748759e3","LOCAL_VAR_RENAMING","0","1","2","[AreaModel AreaModel (int, int, String, String, String, String, Integer), UserTableColumn UserTableColumn (String, String)]","22"
"4","RuoYi/ruoyi-admin","9bfc9c31c74c977fb8b0515077363033748759e3","b9a2d8b8985a6a7d7abab2d3fe6167942bc65242","INFIX_EXPRESSION_DIVIDING","8","1","2","[DemoTableController listChild (AreaModel), DemoTableController treeList (AreaModel)]","22"
"9","RuoYi/ruoyi-admin","b9a2d8b8985a6a7d7abab2d3fe6167942bc65242","e324808bc13666daaf243d3f180472bf05bb1e3d","VAR_DECLARATION_MERGING","12","1","1","[DemoTableController treeList (AreaModel)]","11"
"13","RuoYi/ruoyi-admin","e324808bc13666daaf243d3f180472bf05bb1e3d","bab868038423ab739fded7181e13fb64e82011c2","REVERSE_IF_ELSE","3","1","2","[DemoTableController listChild (AreaModel), DemoTableController treeList (AreaModel)]","22"
"16","RuoYi/ruoyi-admin","bab868038423ab739fded7181e13fb64e82011c2","19155bd682e0e07d0fe7a2979da11e9add785b93","VAR_DECLARATION_MERGING","12","1","1","[DemoTableController list (UserTableModel)]","11"
"18","RuoYi/ruoyi-admin","19155bd682e0e07d0fe7a2979da11e9add785b93","1b087dab6a39e12753f575604a8fdf51b334e4bf","VAR_DECLARATION_DIVIDING","13","1","2","[DemoTableController list (UserTableModel), DemoTableController treeList (AreaModel)]","22"
"20","RuoYi/ruoyi-admin","1b087dab6a39e12753f575604a8fdf51b334e4bf","aba1f9cf57ff82cc4bd5795fa45e7070171828dd","STATEMENTS_ORDER_REARRANGEMENT","10","1","4","[AreaModel AreaModel (int, int, String, String, String, String, Integer), DemoTableController list (UserTableModel), UserTableColumn UserTableColumn (String, String), UserTableModel UserTableModel (int, String, String, String, String, String, double, String)]","44"
"22","RuoYi/ruoyi-admin","aba1f9cf57ff82cc4bd5795fa45e7070171828dd","bd8e9a00fbb8f4c0070adf662720704acb371a48","STATEMENTS_ORDER_REARRANGEMENT","10","1","4","[AreaModel AreaModel (int, int, String, String, String, String, Integer), DemoTableController list (UserTableModel), UserTableModel UserTableModel (int, String, String, String, String, String, double, String), DemoTableController treeList (AreaModel)]","44"
"24","RuoYi/ruoyi-admin","bd8e9a00fbb8f4c0070adf662720704acb371a48","3c0c242600ef4be628930e0bb287af08cf98423d","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[UserTableModel UserTableModel (int, String, String, String, String, String, double, String)]","11"
"26","RuoYi/ruoyi-admin","3c0c242600ef4be628930e0bb287af08cf98423d","766cd116ebae9208b3e470d03916f42f94d26e3b","INFIX_EXPRESSION_DIVIDING","8","1","2","[DemoTableController listChild (AreaModel), DemoTableController treeList (AreaModel)]","22"
"27","RuoYi/ruoyi-admin","766cd116ebae9208b3e470d03916f42f94d26e3b","e9c0d88e305192923bafe2c3aeff387ea6cc1052","VAR_DECLARATION_MERGING","12","1","3","[DemoTableController listChild (AreaModel), DemoTableController list (UserTableModel), DemoTableController treeList (AreaModel)]","33"
"28","RuoYi/ruoyi-admin","e9c0d88e305192923bafe2c3aeff387ea6cc1052","8163863ecaf8a243b3517d7d625bd4c72bafe6c1","STATEMENTS_ORDER_REARRANGEMENT","10","1","5","[AreaModel AreaModel (int, int, String, String, String, String, Integer), DemoTableController list (UserTableModel), UserTableColumn UserTableColumn (String, String), UserTableModel UserTableModel (int, String, String, String, String, String, double, String), DemoTableController treeList (AreaModel)]","55"
"29","RuoYi/ruoyi-admin","8163863ecaf8a243b3517d7d625bd4c72bafe6c1","43ffa09ee83ee4094f9aafc6496b58f6256c070a","SWITCH_STRING_EQUAL","15","1","2","[DemoTableController listChild (AreaModel), DemoTableController treeList (AreaModel)]","22"
"5","RuoYi/ruoyi-common","43ffa09ee83ee4094f9aafc6496b58f6256c070a","3840a47c8af1e25f1e67945364e33ff0b3f74b38","LOCAL_VAR_RENAMING","0","1","0","[]","0"
"9","RuoYi/ruoyi-common","3840a47c8af1e25f1e67945364e33ff0b3f74b38","84e23084f398c88ad7cddfdf0db4eab6190422f7","LOCAL_VAR_RENAMING","0","1","0","[]","0"
"23","RuoYi/ruoyi-common","84e23084f398c88ad7cddfdf0db4eab6190422f7","ea20f729bf42f88a86abe657bb1c9b7bafc2ff07","LOCAL_VAR_RENAMING","0","1","0","[]","0"
"3","RuoYi/ruoyi-framework","ea20f729bf42f88a86abe657bb1c9b7bafc2ff07","9d189bc3269ce38126496cdb8414e9cb853127f3","LOCAL_VAR_RENAMING","0","1","2","[DruidConfig removeDruidFilterRegistrationBean (DruidStatProperties), DruidConfig masterDataSource (DruidProperties)]","14"
"4","RuoYi/ruoyi-framework","9d189bc3269ce38126496cdb8414e9cb853127f3","8b3f35618a747e6031f5831cbbf75d16ab875137","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[DruidConfig removeDruidFilterRegistrationBean (DruidStatProperties)]","7"
"5","RuoYi/ruoyi-framework","8b3f35618a747e6031f5831cbbf75d16ab875137","b207c83e9b182b8e0d93fbd76994188387e2d467","REVERSE_IF_ELSE","3","1","1","[DruidConfig removeDruidFilterRegistrationBean (DruidStatProperties)]","7"
"13","RuoYi/ruoyi-framework","b207c83e9b182b8e0d93fbd76994188387e2d467","73e1c8df18f9546d7a06c818f406df26b722e9a3","VAR_DECLARATION_DIVIDING","13","1","1","[DruidConfig removeDruidFilterRegistrationBean (DruidStatProperties)]","7"
"14","RuoYi/ruoyi-framework","73e1c8df18f9546d7a06c818f406df26b722e9a3","e687d9ae47ce043ae474deb82805edeacf0c6067","VAR_DECLARATION_MERGING","12","1","1","[DruidConfig removeDruidFilterRegistrationBean (DruidStatProperties)]","7"
"15","RuoYi/ruoyi-framework","e687d9ae47ce043ae474deb82805edeacf0c6067","2a5e8f8f4b2a586b00f98a9ff6eb2438b2e38f2f","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DruidConfig removeDruidFilterRegistrationBean (DruidStatProperties)]","7"
"19","RuoYi/ruoyi-framework","2a5e8f8f4b2a586b00f98a9ff6eb2438b2e38f2f","44c6614ae5f5d33ce5e73e1822ef66dedacd2f48","LOCAL_VAR_RENAMING","0","1","2","[DruidConfig removeDruidFilterRegistrationBean (DruidStatProperties), DruidConfig setDataSource (Map<Object,Object>, String, String)]","14"
"29","RuoYi/ruoyi-framework","44c6614ae5f5d33ce5e73e1822ef66dedacd2f48","824a7dbe2352fb2879443e12b51e685623cb2ff1","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[DruidConfig removeDruidFilterRegistrationBean (DruidStatProperties)]","7"
"2","RuoYi/ruoyi-generator","824a7dbe2352fb2879443e12b51e685623cb2ff1","fe7ed3151ea2c7508c119362b1cea5c4d5b702e9","INFIX_EXPRESSION_DIVIDING","8","1","1","[GenUtils initColumnField (GenTableColumn, GenTable)]","5"
"3","RuoYi/ruoyi-generator","fe7ed3151ea2c7508c119362b1cea5c4d5b702e9","496679ee1eb4a6601cc57a85b6ebf7c822046feb","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[GenUtils initColumnField (GenTableColumn, GenTable)]","5"
"7","RuoYi/ruoyi-generator","496679ee1eb4a6601cc57a85b6ebf7c822046feb","506a142917f05bf2da19326cf0c60e004afcce7a","VAR_DECLARATION_DIVIDING","13","1","1","[GenUtils initColumnField (GenTableColumn, GenTable)]","5"
"8","RuoYi/ruoyi-generator","506a142917f05bf2da19326cf0c60e004afcce7a","9af718ef6a8e1618be7356d5591cdafe279b1db4","SWITCH_EQUAL_SIDES","14","1","1","[GenUtils initColumnField (GenTableColumn, GenTable)]","5"
"11","RuoYi/ruoyi-generator","9af718ef6a8e1618be7356d5591cdafe279b1db4","5ee72cc51290d2c01aa15c3f1f74bf53fdcfef4e","REVERSE_IF_ELSE","3","1","5","[GenUtils getDbType (String), GenUtils convertClassName (String), GenUtils getColumnLength (String), GenUtils replaceFirst (String, String[]), GenUtils initColumnField (GenTableColumn, GenTable)]","25"
"12","RuoYi/ruoyi-generator","5ee72cc51290d2c01aa15c3f1f74bf53fdcfef4e","61ac910928b14a4ae2a373ffbb82d27a3961ff02","SWITCH_EQUAL_SIDES","14","1","1","[GenUtils initColumnField (GenTableColumn, GenTable)]","5"
"13","RuoYi/ruoyi-generator","61ac910928b14a4ae2a373ffbb82d27a3961ff02","6eb9806c3fddeba258e5460417c067414d017d14","INFIX_EXPRESSION_DIVIDING","8","1","1","[GenUtils initColumnField (GenTableColumn, GenTable)]","5"
"20","RuoYi/ruoyi-generator","6eb9806c3fddeba258e5460417c067414d017d14","25297ce2d82ee49dea211f1c038aeecbfe17f6cf","LOCAL_VAR_RENAMING","0","1","2","[GenUtils initTable (GenTable, String), GenUtils initColumnField (GenTableColumn, GenTable)]","10"
"18","RuoYi/ruoyi-quartz","25297ce2d82ee49dea211f1c038aeecbfe17f6cf","00f15d78976bb7f3e17afd0f3435f88c18152440","LOCAL_VAR_RENAMING","0","1","2","[ISysJobLogService selectJobLogList (SysJobLog), ISysJobLogService deleteJobLogByIds (String)]","12"
"28","RuoYi/ruoyi-quartz","00f15d78976bb7f3e17afd0f3435f88c18152440","073dd7eda8662517be4aa5025d77cdbed7f93218","LOCAL_VAR_RENAMING","0","1","2","[ISysJobLogService selectJobLogList (SysJobLog), ISysJobLogService addJobLog (SysJobLog)]","12"
"9","RuoYi/ruoyi-system","073dd7eda8662517be4aa5025d77cdbed7f93218","0f6c361c9cc0f4cb8d7ef870a301d5b621ee41ca","REVERSE_IF_ELSE","3","1","2","[SysConfigServiceImpl checkConfigKeyUnique (SysConfig), SysConfigServiceImpl deleteConfigByIds (String)]","12"
"13","RuoYi/ruoyi-system","0f6c361c9cc0f4cb8d7ef870a301d5b621ee41ca","7857725817b9d7c624700728b48532e7325e917a","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SysConfigServiceImpl selectConfigByKey (String)]","6"
"25","RuoYi/ruoyi-system","7857725817b9d7c624700728b48532e7325e917a","098a8c94fcde243972dd61a6215ead3b54e64336","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SysConfigServiceImpl selectConfigByKey (String)]","6"
"0","mybatis-3","1e19afd0609c6614bbe29d67e1d3168e0e8201fc","51dee7b0083de7fb7fcf84d8fd8741125f08dd98","SWITCH_EQUAL_SIDES","14","1","148","[MapperBuilderAssistant parseCompositeColumnName (String), PooledConnection getAge (), PropertyParser PropertyParser (), BaseExecutor applyTransactionTimeout (Statement), BaseExecutor getTransaction (), BaseExecutor setExecutorWrapper (Executor), LruCache getReadWriteLock (), BoundSql BoundSql (Configuration, String, List<ParameterMapping>, Object), PooledConnection getProxyConnection (), PooledConnection invoke (Object, Method, Object[]), Reflector addSetMethod (String, Method), Reflector getGetterType (String), PropertyParser parse (String, Properties), MapperBuilderAssistant setCurrentNamespace (String), BaseExecutor handleLocallyCachedOutputParameters (MappedStatement, CacheKey, Object, BoundSql), PropertyNamer methodToProperty (String), PooledConnection getCreatedTimestamp (), PooledConnection setConnectionTypeCode (int), LruCache getSize (), ErrorContext toString (), BaseExecutor deferLoad (MappedStatement, MetaObject, String, CacheKey, Class<?>), BaseExecutor close (boolean), BaseExecutor query (MappedStatement, Object, RowBounds, ResultHandler, CacheKey, BoundSql), ErrorContext activity (String), BoundSql getAdditionalParameter (String), PooledConnection getCheckoutTimestamp (), MapperBuilderAssistant addParameterMap (String, Class<?>, List<ParameterMapping>), LruCache removeObject (Object), StaticTextSqlNode apply (DynamicContext), PooledConnection getConnectionTypeCode (), BaseExecutor closeStatement (Statement), DeferredLoad DeferredLoad (MetaObject, String, CacheKey, PerpetualCache, Configuration, Class<?>), ErrorContext message (String), Reflector hasSetter (String), MapperBuilderAssistant useCacheRef (String), ProviderSqlSource createSqlSource (Object), BaseExecutor commit (boolean), BaseExecutor createCacheKey (MappedStatement, Object, RowBounds, BoundSql), MapperBuilderAssistant buildDiscriminator (Class<?>, String, Class<?>, JdbcType, Class<? extends TypeHandler<?>>, Map<String,String>), MapperBuilderAssistant addMappedStatement (String, SqlSource, StatementType, SqlCommandType, Integer, Integer, String, Class<?>, String, Class<?>, ResultSetType, boolean, boolean, boolean, KeyGenerator, String, String, String, LanguageDriver, String), ErrorContext instance (), ScriptingException ScriptingException (Throwable), MapperBuilderAssistant buildParameterMapping (Class<?>, String, Class<?>, JdbcType, String, ParameterMode, Class<? extends TypeHandler<?>>, Integer), LruCache setSize (int), BaseExecutor getConnection (Log), BaseExecutor isClosed (), PooledConnection invalidate (), PooledConnection setCheckoutTimestamp (long), BaseExecutor doQuery (MappedStatement, Object, RowBounds, ResultHandler, BoundSql), Reflector addMethodConflict (Map<String,List<Method>>, String, Method), MapperBuilderAssistant addMappedStatement (String, SqlSource, StatementType, SqlCommandType, Integer, Integer, String, Class<?>, String, Class<?>, ResultSetType, boolean, boolean, boolean, KeyGenerator, String, String, String, LanguageDriver), ErrorContext sql (String), ErrorContext ErrorContext (), ScriptingException ScriptingException (), ProviderSqlSource getBoundSql (Object), MapperBuilderAssistant applyCurrentNamespace (String, boolean), PooledConnection setCreatedTimestamp (long), Reflector hasGetter (String), Reflector getGetInvoker (String), ErrorContext recall (), BaseExecutor flushStatements (boolean), Reflector getType (), Reflector addFields (Class<?>), MapperBuilderAssistant buildResultMapping (Class<?>, String, String, Class<?>, JdbcType, String, String, String, String, Class<? extends TypeHandler<?>>, List<ResultFlag>), Reflector getSignature (Method), Reflector findPropertyName (String), VariableTokenHandler VariableTokenHandler (Properties), ProviderSqlSource extractProviderMethodArguments (Map<String,Object>, String[]), Reflector Reflector (Class<?>), BaseExecutor doQueryCursor (MappedStatement, Object, RowBounds, BoundSql), MapperBuilderAssistant useNewCache (Class<? extends Cache>, Class<? extends Cache>, Long, Integer, boolean, boolean, Properties), MapperBuilderAssistant valueOrDefault (T, T), ErrorContext store (), BoundSql getParameterObject (), PooledConnection PooledConnection (Connection, PooledDataSource), BoundSql getParameterMappings (), BoundSql hasAdditionalParameter (String), ErrorContext reset (), MapperBuilderAssistant MapperBuilderAssistant (Configuration, String), Reflector getClassMethods (Class<?>), PropertyNamer isProperty (String), BaseExecutor rollback (boolean), Reflector typeToClass (Type), ProviderSqlSource extractProviderMethodArgumentNames (Method), Reflector getSetInvoker (String), ScriptingException ScriptingException (String), LruCache clear (), BaseExecutor queryCursor (MappedStatement, Object, RowBounds), PropertyNamer PropertyNamer (), Reflector addUniqueMethods (Map<String,Method>, Method[]), PooledConnection getRealConnection (), Reflector resolveSetterConflicts (Map<String,List<Method>>), PooledConnection getRealHashCode (), ErrorContext resource (String), Reflector getSetablePropertyNames (), ProviderSqlSource findParamAnnotation (Method, int), BaseExecutor doFlushStatements (boolean), Reflector addGetField (Field), ErrorContext object (String), LruCache getId (), PropertyNamer isGetter (String), BaseExecutor update (MappedStatement, Object), MapperBuilderAssistant addResultMap (String, Class<?>, String, Discriminator, List<ResultMapping>, Boolean), BaseExecutor isCached (MappedStatement, CacheKey), BaseExecutor query (MappedStatement, Object, RowBounds, ResultHandler), LruCache getObject (Object), MapperBuilderAssistant getStatementParameterMap (String, Class<?>, String), MapperBuilderAssistant getStatementResultMaps (String, Class<?>, String), DeferredLoad load (), Reflector addDefaultConstructor (Class<?>), MapperBuilderAssistant parseMultipleColumnNames (String), VariableTokenHandler handleToken (String), BaseExecutor BaseExecutor (Configuration, Transaction), PooledConnection getCheckoutTime (), ProviderSqlSource ProviderSqlSource (Configuration, Object), Reflector resolveGetterConflicts (Map<String,List<Method>>), PooledConnection isValid (), Reflector isValidPropertyName (String), MapperBuilderAssistant buildResultMapping (Class<?>, String, String, Class<?>, JdbcType, String, String, String, String, Class<? extends TypeHandler<?>>, List<ResultFlag>, String, String, boolean), MapperBuilderAssistant resolveResultJavaType (Class<?>, String, Class<?>), ScriptingException ScriptingException (String, Throwable), ErrorContext cause (Throwable), DeferredLoad canLoad (), BoundSql getSql (), Reflector addSetField (Field), Reflector getGetablePropertyNames (), PooledConnection getLastUsedTimestamp (), Reflector hasDefaultConstructor (), StaticTextSqlNode StaticTextSqlNode (String), BaseExecutor clearLocalCache (), Reflector getSetterType (String), PooledConnection checkConnection (), Reflector getDefaultConstructor (), PooledConnection hashCode (), LruCache cycleKeyList (Object), MapperBuilderAssistant resolveParameterJavaType (Class<?>, String, Class<?>, JdbcType), LruCache removeEldestEntry (Map.Entry<Object,Object>), BoundSql setAdditionalParameter (String, Object), PooledConnection getTimeElapsedSinceLastUse (), PropertyNamer isSetter (String), LruCache LruCache (Cache), BaseExecutor doUpdate (MappedStatement, Object), PooledConnection equals (Object), BaseExecutor queryFromDatabase (MappedStatement, Object, RowBounds, ResultHandler, CacheKey, BoundSql), PooledConnection setLastUsedTimestamp (long), LruCache putObject (Object, Object), MapperBuilderAssistant getCurrentNamespace (), BaseExecutor flushStatements ()]","1776"
"1","mybatis-3","51dee7b0083de7fb7fcf84d8fd8741125f08dd98","9fa54015469734a422242805c07a6052f30b6c42","SWITCH_EQUAL_SIDES","14","1","1","[ErrorContext instance ()]","12"
"2","mybatis-3","9fa54015469734a422242805c07a6052f30b6c42","fc5bb25ce82fa62dca5a95a8d133f377bf214acb","SWITCH_EQUAL_SIDES","14","1","1","[ErrorContext instance ()]","12"
"22","mybatis-3","fc5bb25ce82fa62dca5a95a8d133f377bf214acb","4740ab1bfa5e2fdc3ff9c4956bfa981297b56912","REVERSE_IF_ELSE","3","1","1","[ErrorContext toString ()]","12"
"33","mybatis-3","4740ab1bfa5e2fdc3ff9c4956bfa981297b56912","547c42834c77fb3547a1cd2799d93a258227468d","LOCAL_VAR_RENAMING","0","1","5","[ErrorContext instance (), ErrorContext recall (), ErrorContext reset (), ErrorContext cause (Throwable), ErrorContext store ()]","60"
"36","mybatis-3","547c42834c77fb3547a1cd2799d93a258227468d","77b577267a41d708cb1271c52e4aa0b7ca63b92d","REVERSE_IF_ELSE","3","1","1","[ErrorContext toString ()]","12"
"44","mybatis-3","77b577267a41d708cb1271c52e4aa0b7ca63b92d","4eec95c80a5ba966eb6416a67eda8717c04daee1","SWITCH_EQUAL_SIDES","14","1","1","[ErrorContext instance ()]","12"
"47","mybatis-3","4eec95c80a5ba966eb6416a67eda8717c04daee1","355981b7219764825c6c9a138284efa6723f73b9","SWITCH_EQUAL_SIDES","14","1","1","[ErrorContext instance ()]","12"
"52","mybatis-3","355981b7219764825c6c9a138284efa6723f73b9","8ef68133fbb44f5442ecd99abe018a30a8a53b1d","SWITCH_EQUAL_SIDES","14","1","1","[ErrorContext instance ()]","12"
"56","mybatis-3","8ef68133fbb44f5442ecd99abe018a30a8a53b1d","9526e1ef2a3d336be0d69c3568339036e92e7d54","REVERSE_IF_ELSE","3","1","3","[ErrorContext instance (), ErrorContext recall (), ErrorContext toString ()]","36"
"57","mybatis-3","9526e1ef2a3d336be0d69c3568339036e92e7d54","2b6e924ae50f1e9dd4ca8dc98495aed9e0f531a8","SWITCH_EQUAL_SIDES","14","1","1","[ErrorContext instance ()]","12"
"0","spring-data-jpa/spring-data-envers","3483e16657c8eb786e1a7320698ccc316d49b846","dd06d7084502c8776a4026f80fd92addd59d26b4","PRE_POST_FIX_EXPRESSION_DIVIDING","16","1","11","[EnversRevisionRepositoryImpl createBaseQuery (ID), ReflectionRevisionEntityInformation getRevisionNumberType (), ReflectionRevisionEntityInformation getRevisionEntityClass (), EnversRevisionRepositoryImpl findRevision (ID, N), QueryResult createRevisionMetadata (), DefaultRevisionMetadata equals (Object), QueryResult QueryResult (Object[]), EnversRevisionRepositoryImpl findRevisions (ID, Pageable), QueryResult convertRevisionType (RevisionType), ReflectionRevisionEntityInformation ReflectionRevisionEntityInformation (Class<?>), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","33"
"1","spring-data-jpa/spring-data-envers","dd06d7084502c8776a4026f80fd92addd59d26b4","c321a10c56b65e451368bd4f81ff27421fab1bee","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ReflectionRevisionEntityInformation ReflectionRevisionEntityInformation (Class<?>)]","3"
"15","spring-data-jpa/spring-data-envers","c321a10c56b65e451368bd4f81ff27421fab1bee","22beb9de17e3a44c50c1b4319df8c1e6cb0cd645","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ReflectionRevisionEntityInformation ReflectionRevisionEntityInformation (Class<?>)]","3"
"18","spring-data-jpa/spring-data-envers","22beb9de17e3a44c50c1b4319df8c1e6cb0cd645","8c8bc07ac2b244fc4c41ec48990ed07874770ad9","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ReflectionRevisionEntityInformation ReflectionRevisionEntityInformation (Class<?>)]","3"
"19","spring-data-jpa/spring-data-envers","8c8bc07ac2b244fc4c41ec48990ed07874770ad9","90229b98fbf7051682eaa057c7d3cb536c60e30a","LOCAL_VAR_RENAMING","0","1","2","[ReflectionRevisionEntityInformation getRevisionNumberType (), ReflectionRevisionEntityInformation ReflectionRevisionEntityInformation (Class<?>)]","6"
"28","spring-data-jpa/spring-data-envers","90229b98fbf7051682eaa057c7d3cb536c60e30a","b69d9ecb2c12c9e9dce8f0544635a1cdab081a8d","LOCAL_VAR_RENAMING","0","1","3","[ReflectionRevisionEntityInformation getRevisionNumberType (), ReflectionRevisionEntityInformation getRevisionEntityClass (), ReflectionRevisionEntityInformation ReflectionRevisionEntityInformation (Class<?>)]","9"
"0","spring-data-jpa/spring-data-jpa-performance","b69d9ecb2c12c9e9dce8f0544635a1cdab081a8d","dbca56f0fd14eb320b103eb9ca5f143331e38c8a","PRE_POST_FIX_EXPRESSION_DIVIDING","16","1","13","[PersonRepository findAllWithAnnotatedQueryByFirstname (String), Profile Profile (), Person getLastname (), Profile Profile (String), Person Person (), Person setEmailAddress (String), PersonRepository countByFirstname (String), PersonRepository countWithAnnotatedQueryByFirstname (String), Profile setId (Integer), Person setLastname (String), Person getEmailAddress (), Profile getId (), Person Person (String, String, String)]","39"
"22","spring-data-jpa/spring-data-jpa-performance","dbca56f0fd14eb320b103eb9ca5f143331e38c8a","15e315020a73a970aade2231903b1477df5edebe","LOCAL_VAR_RENAMING","0","1","2","[PersonRepository findAllByFirstname (String), PersonRepository findAllWithAnnotatedQueryByFirstname (String, Sort)]","6"
"24","spring-data-jpa/spring-data-jpa-performance","15e315020a73a970aade2231903b1477df5edebe","2508407e58e0c1f080ef390a096d50961baf273a","LOCAL_VAR_RENAMING","0","1","2","[PersonRepository findAllWithAnnotatedQueryByFirstname (String, Sort), PersonRepository countByFirstname (String)]","6"
"27","spring-data-jpa/spring-data-jpa-performance","2508407e58e0c1f080ef390a096d50961baf273a","ce227cbe4393ae742cabc225872e136147adcaea","LOCAL_VAR_RENAMING","0","1","2","[PersonRepository findAllWithNativeQueryByFirstname (String), PersonRepository findAllAndProjectToInterfaceByFirstname (String)]","6"
"0","spring-data-jpa/spring-data-jpa","ce227cbe4393ae742cabc225872e136147adcaea","72491c416c196bdfd09a8892f4b4f981798cc35c","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","45","[JpaRepositoryConfigExtension getConfigurationInspectionClassLoader (ResourceLoader), AbstractPersistable equals (Object), ParameterBindings getBindings (BindingIdentifier), QueryUtils getAnnotationProperty (Attribute<?,?>, String, T), ParameterBindings register (BindingIdentifier, ParameterOrigin, Function<BindingIdentifier,ParameterBinding>), ParameterBindings register (ParameterBinding), DeclaredQuery of (String, boolean), JpaRepositoryConfigExtension postProcess (BeanDefinitionBuilder, AnnotationRepositoryConfigurationSource), StringQuery tryFindGreatestParameterIndexIn (String), ProxyIdAccessor getIdentifierFrom (Object), QueryUtils requiresOuterJoin (From<?,?>, PropertyPath, boolean, boolean), QueryHints forEach (BiConsumer<String,Object>), ParameterBindings isBound (BindingIdentifier), JpaRepositoryConfigExtension postProcess (BeanDefinitionBuilder, RepositoryConfigurationSource), QueryHints from (QueryHints), LazyJvmAgent LazyJvmAgent (), DeclaredQuery deriveCountQuery (String), JpaRepositoryConfigExtension getEntityManagerBeanDefinitionFor (RepositoryConfigurationSource, Object), QueryUtils createCountQueryFor (String, String, boolean), ParsedQueryIntrospector visit (ParseTree), QueryUtils findClose (Integer, List<Integer>, List<Boolean>), JpaRepositoryConfigExtension getIdentifyingTypes (), JpaRepositoryConfigExtension registerSharedEntityMangerIfNotAlreadyRegistered (BeanDefinitionRegistry, RepositoryConfigurationSource), StringQuery getParameterIndex (String), JpaRepositoryConfigExtension getEscapeCharacter (RepositoryConfigurationSource), StringQuery getKeyword (), ParameterBindings existsBoundParameter (String), StringQuery ParameterBindingType (String), StringQuery parseParameterBindingsOfQueryIntoBindingsAndReturnCleanedQuery (String, List<ParameterBinding>, Metadata), StringQuery checkAndRegister (ParameterBinding, List<ParameterBinding>), EntityManagerBeanDefinitionRegistrarPostProcessor postProcessBeanFactory (ConfigurableListableBeanFactory), ProxyIdAccessor shouldUseAccessorFor (Object), HqlQueryIntrospector captureSelectItems (List<HqlParser.SelectionContext>, HqlQueryRenderer), QueryHints withFetchGraphs (EntityManager), StringQuery createSpelExtractor (String, boolean, int), QueryUtils toJpaOrder (Order, From<?,?>, CriteriaBuilder), JpaRepositoryConfigExtension registerBeansForRoot (BeanDefinitionRegistry, RepositoryConfigurationSource), AbstractPersistable hashCode (), QueryHints forCounts (), ParameterBindings ParameterBindings (List<ParameterBinding>, Consumer<ParameterBinding>, int), HqlQueryIntrospector visitFromRoot (HqlParser.FromRootContext), QueryUtils removeSubqueries (String), StringQuery StringQuery (String, boolean), StringQuery of (String), JpaRepositoryConfigExtension postProcess (BeanDefinitionBuilder, XmlRepositoryConfigurationSource)]","450"
"13","spring-data-jpa/spring-data-jpa","72491c416c196bdfd09a8892f4b4f981798cc35c","322c05214a35151ebc56f141b66c0ec237fc9857","LOCAL_VAR_RENAMING","0","1","1","[DeclaredQuery of (String, boolean)]","10"
"29","spring-data-jpa/spring-data-jpa","322c05214a35151ebc56f141b66c0ec237fc9857","2c3db99e2f6ea3ffb95283401844ca9c13233d00","LOCAL_VAR_RENAMING","0","1","1","[DeclaredQuery of (String, boolean)]","10"
