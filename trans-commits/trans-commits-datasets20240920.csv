"id","projectName","startCommit","endCommit","transformType","transformTypeId","transformSum","RelatedMethodsNum","RelatedMethodSet","RelatedCasesNum"
"0","symja-parser","722696513dc180d513b058441205e9e782f8e4ec","baf0073589b066ae618640221a1e38c3e2d1ee3c","VAR_DECLARATION_MERGING","12","1","33","[PatternNode equals (Object), PatternNode PatternNode (SymbolNode, ASTNode), Operator Operator (String, String, int), MinFunction evaluateNodeLogical (ASTNode), PatternNode getConstraint (), MinFunction evaluateFunction (FunctionNode), Operator equals (Object), PreMinusOperator PreMinusOperator (String, String, int), MinFunction getVariables (String, Set<String>, boolean), MinFunction optimizeFunction (FunctionNode), PreMinusOperator createFunction (IParserFactory, ASTNode), PatternNode isDefault (), TimesFunction getVariables (String, Set<String>, boolean), MinFunction getDerivativeResult (ASTNode, FunctionNode), PatternNode toString (), Console interpreter (String), PatternNode PatternNode (SymbolNode, ASTNode, boolean), MinFunction parse (String), Operator getPrecedence (), MinFunction getVariables (ASTNode, Set<String>), MinFunction evaluateFunctionLogical (FunctionNode), Operator toString (), MinFunction isSymbol (SymbolNode, SymbolNode), IDoubleValue setValue (double), MinFunction isSymbol (SymbolNode, String), Operator getOperatorString (), Operator hashCode (), PatternNode hashCode (), MinFunction getVariable (String), MinFunction derivative (ASTNode, SymbolNode), PatternNode getSymbol (), Operator getFunctionName (), MinFunction evaluateNode (ASTNode)]","231"
"1","symja-parser","baf0073589b066ae618640221a1e38c3e2d1ee3c","75b1881c9fa3cddb50983316b39378711578d82e","REVERSE_IF_ELSE","3","1","1","[SetFunction evaluate (IEvaluator<T>, FunctionNode)]","8"
"3","symja-parser","75b1881c9fa3cddb50983316b39378711578d82e","498dfde958da65957915f8f89cb38fc3b001e22a","SWITCH_EQUAL_SIDES","14","1","1","[ASTNode equals (Object)]","9"
"5","symja-parser","498dfde958da65957915f8f89cb38fc3b001e22a","6fd7e06ec75d27215544899b0c9868c947eb868e","REVERSE_IF_ELSE","3","1","1","[ASTNode equals (Object)]","9"
"8","symja-parser","6fd7e06ec75d27215544899b0c9868c947eb868e","f3186edd7db797012fd8b17aae87db062bcd6eb6","LOCAL_VAR_RENAMING","0","1","1","[SetFunction evaluate (IEvaluator<T>, FunctionNode)]","9"
"10","symja-parser","f3186edd7db797012fd8b17aae87db062bcd6eb6","aa7547534d3af10738699f03fd95ce913cf59da9","REVERSE_IF_ELSE","3","1","1","[SetFunction evaluate (IEvaluator<T>, FunctionNode)]","9"
"13","symja-parser","aa7547534d3af10738699f03fd95ce913cf59da9","5527ead4c351493381e3c5e4f74783bfef9de6ed","LOCAL_VAR_RENAMING","0","1","2","[ASTNode ASTNode (String), ASTNode isFree (ASTNode)]","18"
"18","symja-parser","5527ead4c351493381e3c5e4f74783bfef9de6ed","f30979563f9d59380ef6ea968b0cbbeb37d142a0","SWITCH_EQUAL_SIDES","14","1","1","[ASTNode equals (Object)]","9"
"21","symja-parser","f30979563f9d59380ef6ea968b0cbbeb37d142a0","1679b751d04094e8005d103f02bb7a6231aaf144","REVERSE_IF_ELSE","3","1","1","[SetFunction evaluate (IEvaluator<T>, FunctionNode)]","9"
"23","symja-parser","1679b751d04094e8005d103f02bb7a6231aaf144","da23c1dc0be65e1b2c2bbe754d3a193c1113a5f6","SWITCH_EQUAL_SIDES","14","1","1","[SetFunction evaluate (IEvaluator<T>, FunctionNode)]","9"
"37","symja-parser","da23c1dc0be65e1b2c2bbe754d3a193c1113a5f6","6827169423b138289385a2c2be66cc8b5adad07e","REVERSE_IF_ELSE","3","1","1","[SetFunction evaluate (IEvaluator<T>, FunctionNode)]","9"
"43","symja-parser","6827169423b138289385a2c2be66cc8b5adad07e","a80bf2fc85c53a742ccf30e755e5ac8400344c05","SWITCH_EQUAL_SIDES","14","1","1","[SetFunction evaluate (IEvaluator<T>, FunctionNode)]","9"
"47","symja-parser","a80bf2fc85c53a742ccf30e755e5ac8400344c05","f8211566c79825fcfa029e6212af5087ad81ac3c","SWITCH_EQUAL_SIDES","14","1","1","[ASTNode equals (Object)]","9"
"52","symja-parser","f8211566c79825fcfa029e6212af5087ad81ac3c","9cc42cb9841b21f43f93525ee48852bf3e3749d0","LOCAL_VAR_RENAMING","0","1","1","[SetFunction evaluate (IEvaluator<T>, FunctionNode)]","9"
"53","symja-parser","9cc42cb9841b21f43f93525ee48852bf3e3749d0","d5373b1966134902fe464631fe57e882e8fbba11","SWITCH_STRING_EQUAL","15","1","1","[ASTNode equals (Object)]","9"
"55","symja-parser","d5373b1966134902fe464631fe57e882e8fbba11","d7b6e8a205c276c2884bc8183077f963679f5d7b","SWITCH_EQUAL_SIDES","14","1","1","[ASTNode equals (Object)]","9"
"64","symja-parser","d7b6e8a205c276c2884bc8183077f963679f5d7b","1bfaf8c4cc811b8bce08b39133dbda7b62d94c7c","LOCAL_VAR_RENAMING","0","1","2","[ASTNode isFree (ASTNode), ASTNode equals (Object)]","18"
"65","symja-parser","1bfaf8c4cc811b8bce08b39133dbda7b62d94c7c","45f1421ef05c8fda5cf6d79ad809cdc99032fae8","SWITCH_STRING_EQUAL","15","1","1","[ASTNode equals (Object)]","9"
"0","scribejava/scribejava-apis","8970e8eeb0aff840d0b223890e9c392ee19218f7","8b5cf3cc840f0154a60824f371cda62b9f3ea9fb","CASE_TO_IF_ELSE","17","1","20","[TutByApi TutByApi (), InstanceHolder generateError (Response), FacebookAccessTokenErrorResponse getCodeInt (), InstagramAccessTokenJsonExtractor InstagramAccessTokenJsonExtractor (), InstanceHolder createToken (String, String, Integer, String, String, JsonNode, String), OpenIdJsonTokenExtractor OpenIdJsonTokenExtractor (), FacebookAccessTokenErrorResponse equals (Object), InstanceHolder instance (), FacebookAccessTokenErrorResponse toString (), InstanceHolder getAuthorizationBaseUrl (), FacebookAccessTokenErrorResponse getErrorMessage (), FacebookAccessTokenErrorResponse getType (), FacebookAccessTokenErrorResponse FacebookAccessTokenErrorResponse (String, String, int, String, Response), FacebookAccessTokenErrorResponse getFbtraceId (), FacebookAccessTokenErrorResponse hashCode (), AutomaticAPI AutomaticAPI (), InstanceHolder getAccessTokenEndpoint (), InstanceHolder getClientAuthentication (), InstanceHolder getRefreshTokenEndpoint (), InstanceHolder getBearerSignature ()]","100"
"6","scribejava/scribejava-apis","8b5cf3cc840f0154a60824f371cda62b9f3ea9fb","49e02fdd46dc68fe2b7ac4f22b0bfb9b78fd0a08","LOCAL_VAR_RENAMING","0","1","6","[InstanceHolder getAccessTokenExtractor (), InstanceHolder instance (), InstanceHolder getAccessTokenEndpoint (), InstanceHolder getBearerSignature (), InstanceHolder getAuthorizationBaseUrl (), StackExchangeApi StackExchangeApi ()]","36"
"36","scribejava/scribejava-apis","49e02fdd46dc68fe2b7ac4f22b0bfb9b78fd0a08","6fccacbacbc02809e25b10d0d236fa37d13a209e","LOCAL_VAR_RENAMING","0","1","1","[InstanceHolder instance ()]","6"
"41","scribejava/scribejava-apis","6fccacbacbc02809e25b10d0d236fa37d13a209e","b6e880cf50d6c1f450026a71465ca5eb13ad5cf8","LOCAL_VAR_RENAMING","0","1","2","[InstanceHolder createToken (String, String, Integer, String, String, JsonNode, String), InstanceHolder instance ()]","12"
"57","scribejava/scribejava-apis","b6e880cf50d6c1f450026a71465ca5eb13ad5cf8","7b65118d248d5c8c3258093dff9de034783e9fba","LOCAL_VAR_RENAMING","0","1","1","[InstanceHolder instance ()]","6"
"58","scribejava/scribejava-apis","7b65118d248d5c8c3258093dff9de034783e9fba","c0df60e8de69cdf05c4e8e13fb7261cd75c5cba0","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","3","[ImgurOAuthService signRequest (String, OAuthRequest), ImgurOAuthService ImgurOAuthService (ImgurApi, String, String, String, String, String, OutputStream, String, HttpClientConfig, HttpClient), ImgurOAuthService createAccessTokenRequest (AccessTokenRequestParams)]","21"
"60","scribejava/scribejava-apis","c0df60e8de69cdf05c4e8e13fb7261cd75c5cba0","cab055c5f163decc67edff4e62c2680efec89bc2","SWITCH_EQUAL_SIDES","14","1","1","[InstanceHolder createToken (String, String, Integer, String, String, JsonNode, String)]","7"
"61","scribejava/scribejava-apis","cab055c5f163decc67edff4e62c2680efec89bc2","07feffff6a44f49be3a43ce5a568adb8efa61e5f","LOCAL_VAR_RENAMING","0","1","1","[InstanceHolder createToken (String, String, Integer, String, String, JsonNode, String)]","7"
"0","scribejava/scribejava-core","07feffff6a44f49be3a43ce5a568adb8efa61e5f","ffd49363c6fde9c935a3016d98d0d52949e56cee","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","123","[OAuth20Service createAccessTokenDeviceAuthorizationGrantRequest (DeviceAuthorization), ScopeBuilder withScopes (String), JDKHttpClient addHeaders (HttpURLConnection, Map<String,String>, String), OAuth20Service getDeviceAuthorizationCodesAsync (), MultipartPayload parseOrGenerateBoundary (Map<String,String>), Response close (), OAuth20Service createAccessTokenRequest (AccessTokenRequestParams), OAuth20Service getAccessTokenClientCredentialsGrant (String, OAuthAsyncRequestCallback<OAuth2AccessToken>), OAuth20Service getAccessTokenClientCredentialsGrantAsync (String), OAuth20Service getVersion (), MultipartPayload addBodyPart (BodyPartPayload), OAuth20Service createAccessTokenPasswordGrantRequest (String, String, String), OAuth20Service logRequestWithParams (String, OAuthRequest), OAuth20Service revokeToken (String, TokenTypeHint), OAuth20Service OAuth20Service (DefaultApi20, String, String, String, String, String, OutputStream, String, HttpClientConfig, HttpClient), OAuth20Service getAccessTokenPasswordGrantAsync (String, String), OAuth20Service getDefaultScope (), OAuth20Service getAccessTokenPasswordGrant (String, String), JDKHttpClient executeAsync (String, Map<String,String>, Verb, String, File, OAuthAsyncRequestCallback<T>, OAuthRequest.ResponseConverter<T>), OAuth20Service getApi (), OAuth20Service refreshAccessTokenAsync (String), OAuth20Service refreshAccessTokenAsync (String, String), OAuth20Service getAccessTokenPasswordGrantAsync (String, String, String), OAuth20Service refreshAccessToken (String), OAuth20Service getAccessTokenDeviceAuthorizationGrant (DeviceAuthorization, OAuthAsyncRequestCallback<OAuth2AccessToken>), OAuth20Service getDeviceAuthorizationCodes (OAuthAsyncRequestCallback<DeviceAuthorization>), OAuth20Service revokeTokenAsync (String, TokenTypeHint), Response Response (int, String, Map<String,String>, InputStream, Closeable), OAuth20Service getAccessTokenPasswordGrantAsync (String, String, String, OAuthAsyncRequestCallback<OAuth2AccessToken>), OAuth20Service revokeTokenAsync (String), JDKHttpClient executeAsync (String, Map<String,String>, Verb, String, MultipartPayload, OAuthAsyncRequestCallback<T>, OAuthRequest.ResponseConverter<T>), MultipartPayload composeHeaders (String, String, Map<String,String>), OAuth20Service getAuthorizationUrl (Map<String,String>), Response parseBodyContents (), MultipartPayload MultipartPayload (String), StreamUtils getStreamContents (InputStream), JDKHttpClient doExecuteAsync (String, Map<String,String>, Verb, String, BodyType, Object, OAuthAsyncRequestCallback<T>, OAuthRequest.ResponseConverter<T>), OAuth20Service getAccessTokenAsync (AccessTokenRequestParams), Response getBody (), MultipartPayload getPreamble (), ScopeBuilder ScopeBuilder (), OAuth20Service extractAuthorization (String), Response toString (), StreamUtils getGzipStreamContents (InputStream), OAuth20Service getAccessTokenClientCredentialsGrantAsync (), ScopeBuilder withScopes (Collection<String>), OAuth20Service getAccessToken (AccessTokenRequestParams), OAuth20Service getAccessTokenAsync (String), OAuth20Service refreshAccessToken (String, String), OAuth20Service createDeviceAuthorizationCodesRequest (String), MultipartPayload getBoundary (), OAuth20Service checkForErrorRevokeToken (Response), MultipartPayload MultipartPayload (String, Map<String,String>), OAuth20Service getAccessTokenDeviceAuthorizationGrantAsync (DeviceAuthorization), MultipartPayload MultipartPayload (String, String, Map<String,String>), MultipartPayload MultipartPayload (String, String), ScopeBuilder ScopeBuilder (String), ScopeBuilder build (), JDKHttpClient addBody (HttpURLConnection, MultipartPayload, boolean), ScopeBuilder withScope (String), JDKHttpClient parseHeaders (HttpURLConnection), OAuth20Service getAuthorizationUrl (PKCE), Response Response (int, String, Map<String,String>, String), OAuth20Service sendAccessTokenRequestAsync (OAuthRequest, OAuthAsyncRequestCallback<OAuth2AccessToken>), OAuth20Service getAccessToken (AccessTokenRequestParams, OAuthAsyncRequestCallback<OAuth2AccessToken>), MultipartPayload MultipartPayload (), OAuth20Service convert (Response), OAuth20Service createAccessTokenClientCredentialsGrantRequest (String), OAuth20Service getAccessToken (String, OAuthAsyncRequestCallback<OAuth2AccessToken>), JDKHttpClient execute (String, Map<String,String>, Verb, String, byte[]), JDKHttpClient execute (String, Map<String,String>, Verb, String, File), OAuth20Service getAccessToken (String), JDKHttpClient executeAsync (String, Map<String,String>, Verb, String, byte[], OAuthAsyncRequestCallback<T>, OAuthRequest.ResponseConverter<T>), OAuth20Service getDeviceAuthorizationCodesAsync (String), MultipartPayload setPreamble (String), OAuth20Service getAccessTokenDeviceAuthorizationGrant (DeviceAuthorization), JDKHttpClient executeAsync (String, Map<String,String>, Verb, String, String, OAuthAsyncRequestCallback<T>, OAuthRequest.ResponseConverter<T>), OAuth20Service getAuthorizationUrl (), OAuth20Service sendAccessTokenRequestSync (OAuthRequest), MultipartPayload getBodyParts (), OAuth20Service createRefreshTokenRequest (String, String), OAuth20Service revokeToken (String, OAuthAsyncRequestCallback<Void>), JDKHttpClient setBody (HttpURLConnection, Object, boolean), OAuth20Service refreshAccessToken (String, OAuthAsyncRequestCallback<OAuth2AccessToken>), JDKHttpClient JDKHttpClient (JDKHttpClientConfig), OAuth20Service createAuthorizationUrlBuilder (), JDKHttpClient close (), Response getHeader (String), OAuth20Service getAccessTokenPasswordGrant (String, String, String), OAuth20Service getAccessTokenClientCredentialsGrant (OAuthAsyncRequestCallback<OAuth2AccessToken>), OAuth20Service sendAccessTokenRequestAsync (OAuthRequest), OAuth20Service revokeToken (String, OAuthAsyncRequestCallback<Void>, TokenTypeHint), OAuth20Service getAccessTokenPasswordGrantAsync (String, String, OAuthAsyncRequestCallback<OAuth2AccessToken>), JDKHttpClient JDKHttpClient (), Response getMessage (), MultipartPayload setEpilogue (String), OAuth20Service revokeToken (String), OAuth20Service getDeviceAuthorizationCodes (), OAuth20Service getResponseType (), ScopeBuilder ScopeBuilder (Collection<String>), Response Response (int, String, Map<String,String>), OAuth20Service getAccessTokenClientCredentialsGrant (), Response getStream (), JDKHttpClient execute (String, Map<String,String>, Verb, String, String), Response getCode (), OAuth20Service getDeviceAuthorizationCodes (String), Response isSuccessful (), JDKHttpClient addBody (HttpURLConnection, byte[], boolean), JDKHttpClient prepareConnectionForBodyAndGetOutputStream (HttpURLConnection, int), OAuth20Service pollAccessTokenDeviceAuthorizationGrant (DeviceAuthorization), OAuth20Service getDeviceAuthorizationCodes (String, OAuthAsyncRequestCallback<DeviceAuthorization>), OAuth20Service createRevokeTokenRequest (String, TokenTypeHint), OAuth20Service getAuthorizationUrl (String), MultipartPayload addBodyPart (MultipartPayload), OAuth20Service signRequest (String, OAuthRequest), OAuth20Service getAccessTokenClientCredentialsGrant (String), MultipartPayload MultipartPayload (Map<String,String>), MultipartPayload getEpilogue (), Response getHeaders (), OAuth20Service signRequest (OAuth2AccessToken, OAuthRequest), JDKHttpClient doExecute (String, Map<String,String>, Verb, String, BodyType, Object), OAuth20Service refreshAccessToken (String, String, OAuthAsyncRequestCallback<OAuth2AccessToken>), JDKHttpClient execute (String, Map<String,String>, Verb, String, MultipartPayload)]","738"
"2","scribejava/scribejava-core","ffd49363c6fde9c935a3016d98d0d52949e56cee","01018e7fd07a2b0f4ca74f13faf3c97cc75d545f","INFIX_EXPRESSION_DIVIDING","8","1","1","[OAuth20Service createRefreshTokenRequest (String, String)]","6"
"3","scribejava/scribejava-core","01018e7fd07a2b0f4ca74f13faf3c97cc75d545f","fa030bc6f3ecd739b379a650f282820839eb91d7","CASE_TO_IF_ELSE","17","1","1","[OAuth20Service extractAuthorization (String)]","6"
"8","scribejava/scribejava-core","fa030bc6f3ecd739b379a650f282820839eb91d7","7506149ec00e7c77d227cf5f16737fa3f7c89f09","SWITCH_EQUAL_SIDES","14","1","3","[OAuth20Service pollAccessTokenDeviceAuthorizationGrant (DeviceAuthorization), OAuth20Service createRefreshTokenRequest (String, String), OAuth20Service extractAuthorization (String)]","18"
"11","scribejava/scribejava-core","7506149ec00e7c77d227cf5f16737fa3f7c89f09","f7af06c539d5d66ba2ec5417f9dd8fe5e9780a1b","WHILE_TO_FOR","2","1","1","[OAuth20Service pollAccessTokenDeviceAuthorizationGrant (DeviceAuthorization)]","6"
"20","scribejava/scribejava-core","f7af06c539d5d66ba2ec5417f9dd8fe5e9780a1b","e6caf24fb4bee805e195e17d44fabfe29a59cbfd","REVERSE_IF_ELSE","3","1","10","[OAuth20Service checkForErrorRevokeToken (Response), OAuth20Service pollAccessTokenDeviceAuthorizationGrant (DeviceAuthorization), OAuth20Service createAccessTokenRequest (AccessTokenRequestParams), OAuth20Service getAccessTokenDeviceAuthorizationGrant (DeviceAuthorization), OAuth20Service createAccessTokenPasswordGrantRequest (String, String, String), OAuth20Service getDeviceAuthorizationCodes (String), OAuth20Service createRevokeTokenRequest (String, TokenTypeHint), OAuth20Service createDeviceAuthorizationCodesRequest (String), OAuth20Service createAccessTokenClientCredentialsGrantRequest (String), OAuth20Service createRefreshTokenRequest (String, String)]","60"
"22","scribejava/scribejava-core","e6caf24fb4bee805e195e17d44fabfe29a59cbfd","77eec9480d53ff5373f9c65f2603269c4c881658","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[OAuth20Service extractAuthorization (String)]","6"
"25","scribejava/scribejava-core","77eec9480d53ff5373f9c65f2603269c4c881658","370cba98ff758db65ac27b1b8a3b45deef7bc75a","REVERSE_IF_ELSE","3","1","6","[OAuth20Service checkForErrorRevokeToken (Response), OAuth20Service pollAccessTokenDeviceAuthorizationGrant (DeviceAuthorization), OAuth20Service getAccessTokenDeviceAuthorizationGrant (DeviceAuthorization), OAuth20Service getDeviceAuthorizationCodes (String), OAuth20Service createRevokeTokenRequest (String, TokenTypeHint), OAuth20Service createDeviceAuthorizationCodesRequest (String)]","36"
"26","scribejava/scribejava-core","370cba98ff758db65ac27b1b8a3b45deef7bc75a","ae00bf8e562b7ad081961213c6a555183e2ccc8a","SWITCH_EQUAL_SIDES","14","1","4","[OAuth20Service pollAccessTokenDeviceAuthorizationGrant (DeviceAuthorization), OAuth20Service signRequest (OAuth2AccessToken, OAuthRequest), OAuth20Service createRefreshTokenRequest (String, String), OAuth20Service extractAuthorization (String)]","24"
"27","scribejava/scribejava-core","ae00bf8e562b7ad081961213c6a555183e2ccc8a","a0b0ee1c09f430ce4ad72f23c88dcbc7a0b757e7","INFIX_EXPRESSION_DIVIDING","8","1","1","[OAuth20Service createAccessTokenRequest (AccessTokenRequestParams)]","6"
"28","scribejava/scribejava-core","a0b0ee1c09f430ce4ad72f23c88dcbc7a0b757e7","a5e296d62748d1af6207a47cb2ffc8b19a1ccb8b","SWITCH_EQUAL_SIDES","14","1","1","[OAuth20Service pollAccessTokenDeviceAuthorizationGrant (DeviceAuthorization)]","6"
"30","scribejava/scribejava-core","a5e296d62748d1af6207a47cb2ffc8b19a1ccb8b","11f3dbc98f4c257097aef7ea87063600f9c9adbb","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[OAuth20Service OAuth20Service (DefaultApi20, String, String, String, String, String, OutputStream, String, HttpClientConfig, HttpClient), OAuth20Service createRefreshTokenRequest (String, String)]","12"
"48","scribejava/scribejava-core","11f3dbc98f4c257097aef7ea87063600f9c9adbb","bfe2a23192e5e9c727583c508b643778a87d08ed","REVERSE_IF_ELSE","3","1","4","[OAuth20Service pollAccessTokenDeviceAuthorizationGrant (DeviceAuthorization), OAuth20Service getAccessTokenDeviceAuthorizationGrant (DeviceAuthorization), OAuth20Service getDeviceAuthorizationCodes (String), OAuth20Service createDeviceAuthorizationCodesRequest (String)]","24"
"52","scribejava/scribejava-core","bfe2a23192e5e9c727583c508b643778a87d08ed","681b4f3c09677df551e8b86f82a869c2c0c54ee6","REVERSE_IF_ELSE","3","1","4","[OAuth20Service pollAccessTokenDeviceAuthorizationGrant (DeviceAuthorization), OAuth20Service getAccessTokenDeviceAuthorizationGrant (DeviceAuthorization), OAuth20Service getDeviceAuthorizationCodes (String), OAuth20Service createDeviceAuthorizationCodesRequest (String)]","24"
"58","scribejava/scribejava-core","681b4f3c09677df551e8b86f82a869c2c0c54ee6","d1d72d826bb07be925d7217d93d46ad59a65f6c9","LOCAL_VAR_RENAMING","0","1","2","[OAuth20Service refreshAccessToken (String, String), OAuth20Service getAccessTokenPasswordGrantAsync (String, String, String)]","12"
"59","scribejava/scribejava-core","d1d72d826bb07be925d7217d93d46ad59a65f6c9","2552eada49919cccb33455e4e27935ae26d3a05f","STATEMENTS_ORDER_REARRANGEMENT","10","1","3","[OAuth20Service OAuth20Service (DefaultApi20, String, String, String, String, String, OutputStream, String, HttpClientConfig, HttpClient), OAuth20Service createRefreshTokenRequest (String, String), OAuth20Service extractAuthorization (String)]","18"
"63","scribejava/scribejava-core","2552eada49919cccb33455e4e27935ae26d3a05f","67d83ef35fbc6f1aa896022b058057ea4c8e1be0","FOR_TO_WHILE","1","1","1","[OAuth20Service pollAccessTokenDeviceAuthorizationGrant (DeviceAuthorization)]","6"
"0","scribejava/scribejava-httpclient-ahc","67d83ef35fbc6f1aa896022b058057ea4c8e1be0","bab67d386a6d566727ac3486325fd80b7cc7aad1","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","14","[AhcHttpClient AhcHttpClient (), AhcHttpClient executeAsync (String, Map<String,String>, Verb, String, File, OAuthAsyncRequestCallback<T>, OAuthRequest.ResponseConverter<T>), AhcHttpClient AhcHttpClient (AsyncHttpClient), AhcProvider createClient (HttpClientConfig), AhcHttpClient executeAsync (String, Map<String,String>, Verb, String, String, OAuthAsyncRequestCallback<T>, OAuthRequest.ResponseConverter<T>), AhcHttpClient close (), AhcHttpClient executeAsync (String, Map<String,String>, Verb, String, byte[], OAuthAsyncRequestCallback<T>, OAuthRequest.ResponseConverter<T>), AhcHttpClient setBody (BoundRequestBuilder, Object), OAuthAsyncCompletionHandler onThrowable (Throwable), AhcHttpClient executeAsync (String, Map<String,String>, Verb, String, MultipartPayload, OAuthAsyncRequestCallback<T>, OAuthRequest.ResponseConverter<T>), AhcHttpClient doExecuteAsync (String, Map<String,String>, Verb, String, BodySetter, Object, OAuthAsyncRequestCallback<T>, OAuthRequest.ResponseConverter<T>), OAuthAsyncCompletionHandler onCompleted (org.asynchttpclient.Response), AhcHttpClient AhcHttpClient (AhcHttpClientConfig), OAuthAsyncCompletionHandler OAuthAsyncCompletionHandler (OAuthAsyncRequestCallback<T>, OAuthRequest.ResponseConverter<T>)]","42"
"3","scribejava/scribejava-httpclient-ahc","bab67d386a6d566727ac3486325fd80b7cc7aad1","f7a581bb4383fb38d68d751d9c200ec118d4be87","SWITCH_EQUAL_SIDES","14","1","1","[AhcHttpClient AhcHttpClient (AhcHttpClientConfig)]","3"
"10","scribejava/scribejava-httpclient-ahc","f7a581bb4383fb38d68d751d9c200ec118d4be87","70280ef31564c0030151a3cc0dbf83fe591a1279","REVERSE_IF_ELSE","3","1","1","[AhcHttpClient doExecuteAsync (String, Map<String,String>, Verb, String, BodySetter, Object, OAuthAsyncRequestCallback<T>, OAuthRequest.ResponseConverter<T>)]","3"
"13","scribejava/scribejava-httpclient-ahc","70280ef31564c0030151a3cc0dbf83fe591a1279","bc82d4feee45e125392cc883d1418e2b8b526e53","REVERSE_IF_ELSE","3","1","1","[AhcHttpClient doExecuteAsync (String, Map<String,String>, Verb, String, BodySetter, Object, OAuthAsyncRequestCallback<T>, OAuthRequest.ResponseConverter<T>)]","3"
"14","scribejava/scribejava-httpclient-ahc","bc82d4feee45e125392cc883d1418e2b8b526e53","b3d5ccb7e9dca74cfe22cd43514bf064bd6a6429","SWITCH_EQUAL_SIDES","14","1","1","[AhcHttpClient AhcHttpClient (AhcHttpClientConfig)]","3"
"15","scribejava/scribejava-httpclient-ahc","b3d5ccb7e9dca74cfe22cd43514bf064bd6a6429","5e0732c45bf4d9d5debbb29b6c1d8f808bc90d68","SWITCH_EQUAL_SIDES","14","1","1","[AhcHttpClient AhcHttpClient (AhcHttpClientConfig)]","3"
"23","scribejava/scribejava-httpclient-ahc","5e0732c45bf4d9d5debbb29b6c1d8f808bc90d68","38154c472689f2192928dae1b78b4fe0e0d0f877","SWITCH_EQUAL_SIDES","14","1","1","[AhcHttpClient AhcHttpClient (AhcHttpClientConfig)]","3"
"24","scribejava/scribejava-httpclient-ahc","38154c472689f2192928dae1b78b4fe0e0d0f877","a2375aa865ab879d761f5e3ddcc3b29bfa6574ad","LOCAL_VAR_RENAMING","0","1","1","[AhcHttpClient executeAsync (String, Map<String,String>, Verb, String, File, OAuthAsyncRequestCallback<T>, OAuthRequest.ResponseConverter<T>)]","3"
"31","scribejava/scribejava-httpclient-ahc","a2375aa865ab879d761f5e3ddcc3b29bfa6574ad","711bebd584b5fdea36a7136b6f114911bd150206","SWITCH_EQUAL_SIDES","14","1","1","[AhcHttpClient AhcHttpClient (AhcHttpClientConfig)]","3"
"36","scribejava/scribejava-httpclient-ahc","711bebd584b5fdea36a7136b6f114911bd150206","3d42e19091b567e96c6b9b950ccfe7a6c1efab91","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[AhcHttpClient AhcHttpClient (AhcHttpClientConfig)]","3"
"40","scribejava/scribejava-httpclient-ahc","3d42e19091b567e96c6b9b950ccfe7a6c1efab91","d310f7ce05d038679bf2fef4f09349f876de7669","SWITCH_EQUAL_SIDES","14","1","1","[AhcHttpClient AhcHttpClient (AhcHttpClientConfig)]","3"
"41","scribejava/scribejava-httpclient-ahc","d310f7ce05d038679bf2fef4f09349f876de7669","913b97b9b9aea7220cf94751ba75e9551ab06d37","SWITCH_EQUAL_SIDES","14","1","1","[AhcHttpClient AhcHttpClient (AhcHttpClientConfig)]","3"
"46","scribejava/scribejava-httpclient-ahc","913b97b9b9aea7220cf94751ba75e9551ab06d37","39060ac364cc5cfa869e87075d955d4e3669a4f7","SWITCH_EQUAL_SIDES","14","1","1","[AhcHttpClient AhcHttpClient (AhcHttpClientConfig)]","3"
"50","scribejava/scribejava-httpclient-ahc","39060ac364cc5cfa869e87075d955d4e3669a4f7","96e974fa3a6d92b5a181a14dd12a51c2deea8cbd","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[AhcHttpClient AhcHttpClient (AhcHttpClientConfig)]","3"
"55","scribejava/scribejava-httpclient-ahc","96e974fa3a6d92b5a181a14dd12a51c2deea8cbd","c97cea9d34193e5a68706cc31540153726eaacae","LOCAL_VAR_RENAMING","0","1","2","[AhcHttpClient executeAsync (String, Map<String,String>, Verb, String, String, OAuthAsyncRequestCallback<T>, OAuthRequest.ResponseConverter<T>), AhcHttpClient executeAsync (String, Map<String,String>, Verb, String, byte[], OAuthAsyncRequestCallback<T>, OAuthRequest.ResponseConverter<T>)]","6"
"60","scribejava/scribejava-httpclient-ahc","c97cea9d34193e5a68706cc31540153726eaacae","f40419230a349be5ee3b1174ad8be8e2a37fd3f9","SWITCH_EQUAL_SIDES","14","1","1","[AhcHttpClient AhcHttpClient (AhcHttpClientConfig)]","3"
"61","scribejava/scribejava-httpclient-ahc","f40419230a349be5ee3b1174ad8be8e2a37fd3f9","ec5b39293b1c141a28b997b9bcb13de49f275430","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[AhcHttpClient AhcHttpClient (AhcHttpClientConfig)]","3"
"65","scribejava/scribejava-httpclient-ahc","ec5b39293b1c141a28b997b9bcb13de49f275430","2730b123e96dac9f9429c82e469ccaeeef89c8cd","LOCAL_VAR_RENAMING","0","1","2","[AhcHttpClient executeAsync (String, Map<String,String>, Verb, String, String, OAuthAsyncRequestCallback<T>, OAuthRequest.ResponseConverter<T>), AhcHttpClient executeAsync (String, Map<String,String>, Verb, String, MultipartPayload, OAuthAsyncRequestCallback<T>, OAuthRequest.ResponseConverter<T>)]","6"
"0","scribejava/scribejava-httpclient-apache","2730b123e96dac9f9429c82e469ccaeeef89c8cd","31cfdb4eb57ebe4b69a0fff4674bb40542e153ad","LOCAL_VAR_RENAMING","0","1","17","[OAuthAsyncCompletionHandler cancelled (), ApacheHttpClient ApacheHttpClient (HttpAsyncClientBuilder), ApacheHttpClient executeAsync (String, Map<String,String>, Verb, String, byte[], OAuthAsyncRequestCallback<T>, OAuthRequest.ResponseConverter<T>), OAuthAsyncCompletionHandler failed (Exception), ApacheHttpClient close (), ApacheHttpClient executeAsync (String, Map<String,String>, Verb, String, String, OAuthAsyncRequestCallback<T>, OAuthRequest.ResponseConverter<T>), OAuthAsyncCompletionHandler completed (HttpResponse), OAuthAsyncCompletionHandler OAuthAsyncCompletionHandler (OAuthAsyncRequestCallback<T>, ResponseConverter<T>), ApacheHttpClient getRequestBuilder (Verb), ApacheHttpClient ApacheHttpClient (CloseableHttpAsyncClient), OAuthAsyncCompletionHandler getResult (long, TimeUnit), ApacheHttpClient ApacheHttpClient (ApacheHttpClientConfig), ApacheHttpClient doExecuteAsync (String, Map<String,String>, Verb, String, HttpEntity, OAuthAsyncRequestCallback<T>, OAuthRequest.ResponseConverter<T>), ApacheHttpClient executeAsync (String, Map<String,String>, Verb, String, File, OAuthAsyncRequestCallback<T>, OAuthRequest.ResponseConverter<T>), OAuthAsyncCompletionHandler getResult (), ApacheHttpClient executeAsync (String, Map<String,String>, Verb, String, MultipartPayload, OAuthAsyncRequestCallback<T>, OAuthRequest.ResponseConverter<T>), ApacheHttpClient ApacheHttpClient ()]","34"
"1","scribejava/scribejava-httpclient-apache","31cfdb4eb57ebe4b69a0fff4674bb40542e153ad","b449942eba4b122284def213b31db8c737a93a85","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[OAuthAsyncCompletionHandler completed (HttpResponse)]","2"
"4","scribejava/scribejava-httpclient-apache","b449942eba4b122284def213b31db8c737a93a85","1799e64509189c898f5670a69b26ba7496f9782e","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[OAuthAsyncCompletionHandler completed (HttpResponse)]","2"
"7","scribejava/scribejava-httpclient-apache","1799e64509189c898f5670a69b26ba7496f9782e","78a77a2d32eb7f69eaa07c0d6f244d7789c09d8e","REVERSE_IF_ELSE","3","1","4","[OAuthAsyncCompletionHandler cancelled (), OAuthAsyncCompletionHandler getResult (long, TimeUnit), OAuthAsyncCompletionHandler failed (Exception), OAuthAsyncCompletionHandler getResult ()]","8"
"8","scribejava/scribejava-httpclient-apache","78a77a2d32eb7f69eaa07c0d6f244d7789c09d8e","c1195da45b2812f1dcb15833620ea4141f2ee71c","SWITCH_EQUAL_SIDES","14","1","1","[OAuthAsyncCompletionHandler completed (HttpResponse)]","2"
"9","scribejava/scribejava-httpclient-apache","c1195da45b2812f1dcb15833620ea4141f2ee71c","ed5471806f201165e14302c1c9865215a1dc3527","REVERSE_IF_ELSE","3","1","1","[OAuthAsyncCompletionHandler getResult (long, TimeUnit)]","2"
"10","scribejava/scribejava-httpclient-apache","ed5471806f201165e14302c1c9865215a1dc3527","6ca77b483a0272305630539cfcaae78a3117950f","SWITCH_EQUAL_SIDES","14","1","1","[OAuthAsyncCompletionHandler completed (HttpResponse)]","2"
"15","scribejava/scribejava-httpclient-apache","6ca77b483a0272305630539cfcaae78a3117950f","c71766f6d2d07168f3733c990347961dfb4e2693","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[OAuthAsyncCompletionHandler completed (HttpResponse), OAuthAsyncCompletionHandler OAuthAsyncCompletionHandler (OAuthAsyncRequestCallback<T>, ResponseConverter<T>)]","4"
"22","scribejava/scribejava-httpclient-apache","c71766f6d2d07168f3733c990347961dfb4e2693","ac4276ed2cc19447fc316b5d70fd65d07588def9","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[OAuthAsyncCompletionHandler completed (HttpResponse)]","2"
"41","scribejava/scribejava-httpclient-apache","ac4276ed2cc19447fc316b5d70fd65d07588def9","70a6aef2d9d1ceb2a96fbe7eaa93f8a4a2859a78","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[OAuthAsyncCompletionHandler completed (HttpResponse)]","2"
"42","scribejava/scribejava-httpclient-apache","70a6aef2d9d1ceb2a96fbe7eaa93f8a4a2859a78","6dc56b3bb1319d62103eaed39cd28d4f2a1d8e4c","LOCAL_VAR_RENAMING","0","1","1","[OAuthAsyncCompletionHandler completed (HttpResponse)]","2"
"43","scribejava/scribejava-httpclient-apache","6dc56b3bb1319d62103eaed39cd28d4f2a1d8e4c","315d374656f4b3665a82110831fa4d505d1ce234","LOCAL_VAR_RENAMING","0","1","0","[]","0"
"50","scribejava/scribejava-httpclient-apache","315d374656f4b3665a82110831fa4d505d1ce234","bc471a048a23a4924d599eca83179d1783b3581d","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[OAuthAsyncCompletionHandler completed (HttpResponse), OAuthAsyncCompletionHandler OAuthAsyncCompletionHandler (OAuthAsyncRequestCallback<T>, ResponseConverter<T>)]","4"
"51","scribejava/scribejava-httpclient-apache","bc471a048a23a4924d599eca83179d1783b3581d","74b02d84bec9657f4a8f30a416475e9a28907581","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[OAuthAsyncCompletionHandler completed (HttpResponse), OAuthAsyncCompletionHandler OAuthAsyncCompletionHandler (OAuthAsyncRequestCallback<T>, ResponseConverter<T>)]","4"
"52","scribejava/scribejava-httpclient-apache","74b02d84bec9657f4a8f30a416475e9a28907581","1163a953ab496e8704d2f6a9e56723d59a757d33","SWITCH_EQUAL_SIDES","14","1","1","[OAuthAsyncCompletionHandler completed (HttpResponse)]","2"
"58","scribejava/scribejava-httpclient-apache","1163a953ab496e8704d2f6a9e56723d59a757d33","4d09d5d38308fc51bccb80edf324f5c1d8481d39","SWITCH_EQUAL_SIDES","14","1","1","[OAuthAsyncCompletionHandler completed (HttpResponse)]","2"
"59","scribejava/scribejava-httpclient-apache","4d09d5d38308fc51bccb80edf324f5c1d8481d39","523970d6af56b61b5fb2a29568e02ca243bc6fb7","SWITCH_EQUAL_SIDES","14","1","1","[OAuthAsyncCompletionHandler completed (HttpResponse)]","2"
"62","scribejava/scribejava-httpclient-apache","523970d6af56b61b5fb2a29568e02ca243bc6fb7","d2d46487481294f311e8f073cb0e6416c30b66d3","REVERSE_IF_ELSE","3","1","3","[OAuthAsyncCompletionHandler cancelled (), OAuthAsyncCompletionHandler getResult (long, TimeUnit), OAuthAsyncCompletionHandler getResult ()]","6"
"63","scribejava/scribejava-httpclient-apache","d2d46487481294f311e8f073cb0e6416c30b66d3","7cbb2c98d99a5a1a688b1cda4204a223e3fc5a0e","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[OAuthAsyncCompletionHandler completed (HttpResponse)]","2"
"0","scribejava/scribejava-httpclient-armeria","7cbb2c98d99a5a1a688b1cda4204a223e3fc5a0e","0bf39ffc946408dceb4815be0a2677ac0ae79318","FOR_TO_WHILE","1","1","3","[ArmeriaWebClientBuilder ArmeriaWebClientBuilder (ClientOptions, ClientFactory, SessionProtocol, Function<? super HttpClient,RetryingClient>, Function<? super HttpClient,LoggingClient>), ArmeriaWebClientBuilder protocol (String), ArmeriaWebClientBuilder newWebClient (String, String)]","3"
"3","scribejava/scribejava-httpclient-armeria","0bf39ffc946408dceb4815be0a2677ac0ae79318","51c40ffc73b10c0f0bda7c4833a9a163e935da94","SWITCH_EQUAL_SIDES","14","1","1","[ArmeriaWebClientBuilder protocol (String)]","1"
"6","scribejava/scribejava-httpclient-armeria","51c40ffc73b10c0f0bda7c4833a9a163e935da94","dc07575a50ed84db4fa3e2ccd7f540b3d70a6e4e","LOCAL_VAR_RENAMING","0","1","1","[ArmeriaProvider createClient (HttpClientConfig)]","2"
"59","scribejava/scribejava-httpclient-armeria","dc07575a50ed84db4fa3e2ccd7f540b3d70a6e4e","14af84e99cfdeaa0532ce5899141e97cffeb1d2a","REVERSE_IF_ELSE","3","1","1","[ArmeriaProvider createClient (HttpClientConfig)]","2"
"63","scribejava/scribejava-httpclient-armeria","14af84e99cfdeaa0532ce5899141e97cffeb1d2a","a00c96c55bc7ba57cabbb382190ecd1b4d48c99a","LOCAL_VAR_RENAMING","0","1","1","[ArmeriaProvider createClient (HttpClientConfig)]","2"
"0","scribejava/scribejava-httpclient-ning","a00c96c55bc7ba57cabbb382190ecd1b4d48c99a","d7fe6039b258f55f5dc8c0e8b188cb4147dd92af","FOR_TO_WHILE","1","1","4","[NingProvider createClient (HttpClientConfig), OAuthAsyncCompletionHandler onThrowable (Throwable), OAuthAsyncCompletionHandler onCompleted (com.ning.http.client.Response), OAuthAsyncCompletionHandler OAuthAsyncCompletionHandler (OAuthAsyncRequestCallback<T>, OAuthRequest.ResponseConverter<T>)]","8"
"12","scribejava/scribejava-httpclient-ning","d7fe6039b258f55f5dc8c0e8b188cb4147dd92af","ab503a7bd714062d8e5fc57e2f9cffc932a0ae26","REVERSE_IF_ELSE","3","1","1","[NingProvider createClient (HttpClientConfig)]","2"
"25","scribejava/scribejava-httpclient-ning","ab503a7bd714062d8e5fc57e2f9cffc932a0ae26","d45d887907c2f4b2d726dc901579e0a82765dd12","LOCAL_VAR_RENAMING","0","1","1","[NingProvider createClient (HttpClientConfig)]","2"
"30","scribejava/scribejava-httpclient-ning","d45d887907c2f4b2d726dc901579e0a82765dd12","f564ea6120c8d227b6b46cbec2e959ba387fec3b","REVERSE_IF_ELSE","3","1","1","[NingProvider createClient (HttpClientConfig)]","2"
"35","scribejava/scribejava-httpclient-ning","f564ea6120c8d227b6b46cbec2e959ba387fec3b","4653191825c5a8eb65ae15c88c7cb9dcdcc81146","LOCAL_VAR_RENAMING","0","1","1","[NingProvider createClient (HttpClientConfig)]","2"
"43","scribejava/scribejava-httpclient-ning","4653191825c5a8eb65ae15c88c7cb9dcdcc81146","ebf9ce166574d6f96d877bd7b038701c840a1a68","REVERSE_IF_ELSE","3","1","1","[NingProvider createClient (HttpClientConfig)]","2"
"51","scribejava/scribejava-httpclient-ning","ebf9ce166574d6f96d877bd7b038701c840a1a68","7f3a8cd08c1535c0a2abad632f748c56c8c7a3c7","LOCAL_VAR_RENAMING","0","1","1","[NingProvider createClient (HttpClientConfig)]","2"
"52","scribejava/scribejava-httpclient-ning","7f3a8cd08c1535c0a2abad632f748c56c8c7a3c7","48969bd01ee878dc1c9354a3e6f82f0542f6c267","REVERSE_IF_ELSE","3","1","1","[NingProvider createClient (HttpClientConfig)]","2"
"53","scribejava/scribejava-httpclient-ning","48969bd01ee878dc1c9354a3e6f82f0542f6c267","97cc9d746b29e80179ed0c34b1a0e7803196cc0a","REVERSE_IF_ELSE","3","1","1","[NingProvider createClient (HttpClientConfig)]","2"
"63","scribejava/scribejava-httpclient-ning","97cc9d746b29e80179ed0c34b1a0e7803196cc0a","d1813e2870d647726aba60695222c688811c6bc1","REVERSE_IF_ELSE","3","1","1","[NingProvider createClient (HttpClientConfig)]","2"
"0","scribejava/scribejava-httpclient-okhttp","d1813e2870d647726aba60695222c688811c6bc1","4384fb5f2e4ab4a0678b1cb0b01d876066a6b9b5","FOR_TO_WHILE","1","1","7","[OAuthAsyncCompletionHandler OAuthAsyncCompletionHandler (OAuthAsyncRequestCallback<T>, OAuthRequest.ResponseConverter<T>, OkHttpFuture<T>), OAuthAsyncCompletionHandler onFailure (Call, IOException), OkHttpHttpClientConfig defaultConfig (), OAuthAsyncCompletionHandler onResponse (Call, okhttp3.Response), OkHttpHttpClientConfig createDefaultConfig (), OkHttpHttpClientConfig OkHttpHttpClientConfig (OkHttpClient.Builder), OkHttpHttpClientConfig getClientBuilder ()]","14"
"15","scribejava/scribejava-httpclient-okhttp","4384fb5f2e4ab4a0678b1cb0b01d876066a6b9b5","5dcc2f2d7b984803e2f1c69cc12e931c0b8501d1","LOCAL_VAR_RENAMING","0","1","2","[OkHttpHttpClientConfig OkHttpHttpClientConfig (OkHttpClient.Builder), OkHttpHttpClientConfig getClientBuilder ()]","4"
"18","scribejava/scribejava-httpclient-okhttp","5dcc2f2d7b984803e2f1c69cc12e931c0b8501d1","76e845889bdb117ba535a0385af822acc2a54bac","LOCAL_VAR_RENAMING","0","1","2","[OkHttpHttpClientConfig OkHttpHttpClientConfig (OkHttpClient.Builder), OkHttpHttpClientConfig getClientBuilder ()]","4"
"30","scribejava/scribejava-httpclient-okhttp","76e845889bdb117ba535a0385af822acc2a54bac","d4e01ac8ea66516fafec734cf2713c6bdb1fe21e","LOCAL_VAR_RENAMING","0","1","2","[OkHttpHttpClientConfig OkHttpHttpClientConfig (OkHttpClient.Builder), OkHttpHttpClientConfig getClientBuilder ()]","4"
"40","scribejava/scribejava-httpclient-okhttp","d4e01ac8ea66516fafec734cf2713c6bdb1fe21e","17c1de0c2654f50dd4a048781a49ecfe33279312","LOCAL_VAR_RENAMING","0","1","2","[OkHttpHttpClientConfig OkHttpHttpClientConfig (OkHttpClient.Builder), OkHttpHttpClientConfig getClientBuilder ()]","4"
"48","scribejava/scribejava-httpclient-okhttp","17c1de0c2654f50dd4a048781a49ecfe33279312","89988225ed0552e0a295a210a36f33a66c68e1a7","LOCAL_VAR_RENAMING","0","1","2","[OkHttpHttpClientConfig OkHttpHttpClientConfig (OkHttpClient.Builder), OkHttpHttpClientConfig getClientBuilder ()]","4"
"0","scribejava/scribejava-java8","89988225ed0552e0a295a210a36f33a66c68e1a7","75e8f67a6e09020549e4d065ec2944d47808f143","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","2","[Java8Base64 internalEncodeUrlWithoutPadding (byte[]), Java8Base64 internalEncode (byte[])]","2"
"6","scribejava/scribejava-java8","75e8f67a6e09020549e4d065ec2944d47808f143","c59cde3bd646efb4007b3155723e139e63d12e58","LOCAL_VAR_RENAMING","0","1","2","[Java8Base64 internalEncodeUrlWithoutPadding (byte[]), Java8Base64 internalEncode (byte[])]","2"
"22","scribejava/scribejava-java8","c59cde3bd646efb4007b3155723e139e63d12e58","28e09c478866181b5a7778d9c42068a35693e2fe","LOCAL_VAR_RENAMING","0","1","2","[Java8Base64 internalEncodeUrlWithoutPadding (byte[]), Java8Base64 internalEncode (byte[])]","2"
"30","scribejava/scribejava-java8","28e09c478866181b5a7778d9c42068a35693e2fe","69506baa5334cf3039df0ce980ee2d7c4362cc19","LOCAL_VAR_RENAMING","0","1","1","[Java8Base64 internalEncodeUrlWithoutPadding (byte[])]","1"
"32","scribejava/scribejava-java8","69506baa5334cf3039df0ce980ee2d7c4362cc19","9a9617985107b89a522c70b470c7e006a4fb85cc","LOCAL_VAR_RENAMING","0","1","2","[Java8Base64 internalEncodeUrlWithoutPadding (byte[]), Java8Base64 internalEncode (byte[])]","2"
"33","scribejava/scribejava-java8","9a9617985107b89a522c70b470c7e006a4fb85cc","57fb4e326bbf479841d25473fbc6a4f947ddbe85","LOCAL_VAR_RENAMING","0","1","2","[Java8Base64 internalEncodeUrlWithoutPadding (byte[]), Java8Base64 internalEncode (byte[])]","2"
"35","scribejava/scribejava-java8","57fb4e326bbf479841d25473fbc6a4f947ddbe85","958b62d74ba311cc036d1961e7b2085930da17a6","LOCAL_VAR_RENAMING","0","1","1","[Java8Base64 internalEncode (byte[])]","1"
"39","scribejava/scribejava-java8","958b62d74ba311cc036d1961e7b2085930da17a6","9d881be35ab250fbf72f667af147972711142a50","LOCAL_VAR_RENAMING","0","1","2","[Java8Base64 internalEncodeUrlWithoutPadding (byte[]), Java8Base64 internalEncode (byte[])]","2"
"47","scribejava/scribejava-java8","9d881be35ab250fbf72f667af147972711142a50","a7678937fd534042af383b701e4e3e2f787048c3","LOCAL_VAR_RENAMING","0","1","1","[Java8Base64 internalEncode (byte[])]","1"
"49","scribejava/scribejava-java8","a7678937fd534042af383b701e4e3e2f787048c3","f758361c19dc4674a321cb0a33e07c4e36b0e4b8","LOCAL_VAR_RENAMING","0","1","2","[Java8Base64 internalEncodeUrlWithoutPadding (byte[]), Java8Base64 internalEncode (byte[])]","2"
"53","scribejava/scribejava-java8","f758361c19dc4674a321cb0a33e07c4e36b0e4b8","2ebfb553c58dcae65e38d102c28a067fb9c9f3b4","LOCAL_VAR_RENAMING","0","1","2","[Java8Base64 internalEncodeUrlWithoutPadding (byte[]), Java8Base64 internalEncode (byte[])]","2"
"63","scribejava/scribejava-java8","2ebfb553c58dcae65e38d102c28a067fb9c9f3b4","90ae716c45e6e905d925875f75402b3cbc102b25","LOCAL_VAR_RENAMING","0","1","2","[Java8Base64 internalEncodeUrlWithoutPadding (byte[]), Java8Base64 internalEncode (byte[])]","2"
"0","mybatis-3","42b7fafa1ef3affbe9942042cc038d7c45986f6f","01bed8c60e61569306a3e93733433222a8775496","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","183","[MapperBuilderAssistant parseCompositeColumnName (String), PooledConnection getAge (), PropertyParser PropertyParser (), BaseExecutor applyTransactionTimeout (Statement), DefaultObjectFactory isCollection (Class<T>), BaseExecutor getTransaction (), ResultSetWrapper resolveClass (String), BaseExecutor setExecutorWrapper (Executor), PooledConnection getProxyConnection (), PooledConnection invoke (Object, Method, Object[]), BoundSql BoundSql (Configuration, String, List<ParameterMapping>, Object), Reflector addSetMethod (String, Method), Reflector getGetterType (String), PropertyParser parse (String, Properties), MapperBuilderAssistant setCurrentNamespace (String), BaseExecutor handleLocallyCachedOutputParameters (MappedStatement, CacheKey, Object, BoundSql), ResultSetWrapper getMapKey (ResultMap, String), PropertyNamer methodToProperty (String), PooledConnection getCreatedTimestamp (), DefaultObjectFactory instantiateClass (Class<T>, List<Class<?>>, List<Object>), ProviderContext getMapperMethod (), PooledConnection setConnectionTypeCode (int), LruCache getSize (), DefaultObjectFactory create (Class<T>), ErrorContext toString (), BaseExecutor deferLoad (MappedStatement, MetaObject, String, CacheKey, Class<?>), BaseExecutor close (boolean), BaseExecutor query (MappedStatement, Object, RowBounds, ResultHandler, CacheKey, BoundSql), PooledConnection getCheckoutTimestamp (), BoundSql getAdditionalParameter (String), ErrorContext activity (String), MapperBuilderAssistant addParameterMap (String, Class<?>, List<ParameterMapping>), LruCache removeObject (Object), StaticTextSqlNode apply (DynamicContext), PooledConnection getConnectionTypeCode (), BaseExecutor closeStatement (Statement), Reflector addSetMethods (Method[]), DeferredLoad DeferredLoad (MetaObject, String, CacheKey, PerpetualCache, Configuration, Class<?>), Reflector canControlMemberAccessible (), ErrorContext message (String), Reflector hasSetter (String), MapperBuilderAssistant useCacheRef (String), ProviderSqlSource createSqlSource (Object), BaseExecutor commit (boolean), BaseExecutor createCacheKey (MappedStatement, Object, RowBounds, BoundSql), MapperBuilderAssistant buildDiscriminator (Class<?>, String, Class<?>, JdbcType, Class<? extends TypeHandler<?>>, Map<String,String>), MapperBuilderAssistant addMappedStatement (String, SqlSource, StatementType, SqlCommandType, Integer, Integer, String, Class<?>, String, Class<?>, ResultSetType, boolean, boolean, boolean, KeyGenerator, String, String, String, LanguageDriver, String), ErrorContext instance (), ScriptingException ScriptingException (Throwable), MapperBuilderAssistant buildParameterMapping (Class<?>, String, Class<?>, JdbcType, String, ParameterMode, Class<? extends TypeHandler<?>>, Integer), ResultSetWrapper getColumnNames (), LruCache setSize (int), BaseExecutor getConnection (Log), PooledConnection invalidate (), BaseExecutor isClosed (), PooledConnection setCheckoutTimestamp (long), Reflector addMethodConflict (Map<String,List<Method>>, String, Method), BaseExecutor doQuery (MappedStatement, Object, RowBounds, ResultHandler, BoundSql), MapperBuilderAssistant addMappedStatement (String, SqlSource, StatementType, SqlCommandType, Integer, Integer, String, Class<?>, String, Class<?>, ResultSetType, boolean, boolean, boolean, KeyGenerator, String, String, String, LanguageDriver), ErrorContext sql (String), Reflector pickBetterSetter (Method, Method, String), ErrorContext ErrorContext (), ScriptingException ScriptingException (), ProviderSqlSource getBoundSql (Object), MapperBuilderAssistant applyCurrentNamespace (String, boolean), PooledConnection setCreatedTimestamp (long), Reflector hasGetter (String), MapperBuilderAssistant addMappedStatement (String, SqlSource, StatementType, SqlCommandType, Integer, Integer, String, Class<?>, String, Class<?>, ResultSetType, boolean, boolean, boolean, KeyGenerator, String, String, String, LanguageDriver, String, boolean), ResultSetWrapper getTypeHandler (Class<?>, String), Reflector getGetInvoker (String), Reflector getType (), ErrorContext recall (), BaseExecutor flushStatements (boolean), Reflector addFields (Class<?>), Reflector isRecord (Class<?>), MapperBuilderAssistant buildResultMapping (Class<?>, String, String, Class<?>, JdbcType, String, String, String, String, Class<? extends TypeHandler<?>>, List<ResultFlag>), Reflector getSignature (Method), ResultSetWrapper getMappedColumnNames (ResultMap, String), Reflector findPropertyName (String), VariableTokenHandler VariableTokenHandler (Properties), ProviderSqlSource extractProviderMethodArguments (Map<String,Object>, String[]), Reflector Reflector (Class<?>), BaseExecutor doQueryCursor (MappedStatement, Object, RowBounds, BoundSql), MapperBuilderAssistant useNewCache (Class<? extends Cache>, Class<? extends Cache>, Long, Integer, boolean, boolean, Properties), ResultSetWrapper loadMappedAndUnmappedColumnNames (ResultMap, String), MapperBuilderAssistant valueOrDefault (T, T), ErrorContext store (), BoundSql getParameterObject (), DefaultObjectFactory resolveInterface (Class<?>), PooledConnection PooledConnection (Connection, PooledDataSource), BoundSql getParameterMappings (), BoundSql hasAdditionalParameter (String), Reflector getClassMethods (Class<?>), ErrorContext reset (), MapperBuilderAssistant MapperBuilderAssistant (Configuration, String), PropertyNamer isProperty (String), Reflector typeToClass (Type), BaseExecutor rollback (boolean), Reflector getSetInvoker (String), ProviderContext getDatabaseId (), ScriptingException ScriptingException (String), LruCache clear (), ResultSetWrapper ResultSetWrapper (ResultSet, Configuration), PropertyNamer PropertyNamer (), Reflector addUniqueMethods (Map<String,Method>, Method[]), BaseExecutor queryCursor (MappedStatement, Object, RowBounds), PooledConnection getRealConnection (), Reflector resolveSetterConflicts (Map<String,List<Method>>), MapperBuilderAssistant getLanguageDriver (Class<? extends LanguageDriver>), PooledConnection getRealHashCode (), ErrorContext resource (String), Reflector getSetablePropertyNames (), ResultSetWrapper prependPrefixes (Set<String>, String), Reflector addGetField (Field), BaseExecutor doFlushStatements (boolean), PropertyNamer isGetter (String), LruCache getId (), ErrorContext object (String), ResultSetWrapper getResultSet (), BaseExecutor update (MappedStatement, Object), BoundSql getAdditionalParameters (), EnumOrdinalTypeHandler getNullableResult (CallableStatement, int), MapperBuilderAssistant addResultMap (String, Class<?>, String, Discriminator, List<ResultMapping>, Boolean), BaseExecutor isCached (MappedStatement, CacheKey), BaseExecutor query (MappedStatement, Object, RowBounds, ResultHandler), LruCache getObject (Object), ProviderContext ProviderContext (Class<?>, Method, String), MapperBuilderAssistant getStatementParameterMap (String, Class<?>, String), MapperBuilderAssistant getStatementResultMaps (String, Class<?>, String), EnumOrdinalTypeHandler getNullableResult (ResultSet, int), Reflector addDefaultConstructor (Class<?>), DeferredLoad load (), VariableTokenHandler getPropertyValue (String, String), MapperBuilderAssistant parseMultipleColumnNames (String), VariableTokenHandler handleToken (String), BaseExecutor BaseExecutor (Configuration, Transaction), PooledConnection getCheckoutTime (), ResultSetWrapper getJdbcType (String), Reflector resolveGetterConflicts (Map<String,List<Method>>), ProviderSqlSource ProviderSqlSource (Configuration, Object), PooledConnection isValid (), ResultSetWrapper getJdbcTypes (), EnumOrdinalTypeHandler EnumOrdinalTypeHandler (Class<E>), Reflector isValidPropertyName (String), MapperBuilderAssistant buildResultMapping (Class<?>, String, String, Class<?>, JdbcType, String, String, String, String, Class<? extends TypeHandler<?>>, List<ResultFlag>, String, String, boolean), Reflector addGetMethods (Method[]), MapperBuilderAssistant resolveResultJavaType (Class<?>, String, Class<?>), DefaultObjectFactory create (Class<T>, List<Class<?>>, List<Object>), ScriptingException ScriptingException (String, Throwable), ErrorContext cause (Throwable), DeferredLoad canLoad (), BoundSql getSql (), Reflector addSetField (Field), Reflector addGetMethod (String, Method, boolean), Reflector getIsRecordMethodHandle (), Reflector getGetablePropertyNames (), PooledConnection getLastUsedTimestamp (), EnumOrdinalTypeHandler getNullableResult (ResultSet, String), Reflector hasDefaultConstructor (), Reflector getSetterType (String), StaticTextSqlNode StaticTextSqlNode (String), BaseExecutor clearLocalCache (), PooledConnection checkConnection (), Reflector getDefaultConstructor (), Reflector addRecordGetMethods (Method[]), PooledConnection hashCode (), ProviderContext getMapperType (), LruCache cycleKeyList (Object), MapperBuilderAssistant resolveParameterJavaType (Class<?>, String, Class<?>, JdbcType), LruCache removeEldestEntry (Map.Entry<Object,Object>), ResultSetWrapper getClassNames (), ResultSetWrapper getUnmappedColumnNames (ResultMap, String), PooledConnection getTimeElapsedSinceLastUse (), BoundSql setAdditionalParameter (String, Object), PropertyNamer isSetter (String), LruCache LruCache (Cache), PooledConnection equals (Object), BaseExecutor doUpdate (MappedStatement, Object), BaseExecutor queryFromDatabase (MappedStatement, Object, RowBounds, ResultHandler, CacheKey, BoundSql), PooledConnection setLastUsedTimestamp (long), LruCache putObject (Object, Object), MapperBuilderAssistant getCurrentNamespace (), BaseExecutor flushStatements ()]","2928"
"3","mybatis-3","01bed8c60e61569306a3e93733433222a8775496","7472059fe5abf4d347084fd0bc6069b2432819c6","INFIX_EXPRESSION_DIVIDING","8","1","1","[ResultSetWrapper prependPrefixes (Set<String>, String)]","16"
"6","mybatis-3","7472059fe5abf4d347084fd0bc6069b2432819c6","36e633e775b8540001385ee08edcd5cbfcc16bb8","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","4","[TypeReference TypeReference (), TypeReference getRawType (), TypeReference getSuperclassTypeParameter (Class<?>), TypeReference toString ()]","68"
"14","mybatis-3","36e633e775b8540001385ee08edcd5cbfcc16bb8","0f78676afb2410e438f8de0c3c5be4a9f99abb16","REVERSE_IF_ELSE","3","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"22","mybatis-3","0f78676afb2410e438f8de0c3c5be4a9f99abb16","71168d13571edd5b6c09d7428993da21ef556975","REVERSE_IF_ELSE","3","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"39","mybatis-3","71168d13571edd5b6c09d7428993da21ef556975","c50410c4a2d7d5d30fe530742f15b2cb6374e3fa","LOCAL_VAR_RENAMING","0","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"42","mybatis-3","c50410c4a2d7d5d30fe530742f15b2cb6374e3fa","15a948100cb90a578227cd2384ddaccb8b920393","REVERSE_IF_ELSE","3","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"45","mybatis-3","15a948100cb90a578227cd2384ddaccb8b920393","765bad5b3dd9022a1239a1c6623008d518bc0633","REVERSE_IF_ELSE","3","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"49","mybatis-3","765bad5b3dd9022a1239a1c6623008d518bc0633","8463481bd21a8065c69a551480f27325d6e111ee","LOCAL_VAR_RENAMING","0","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"51","mybatis-3","8463481bd21a8065c69a551480f27325d6e111ee","d7c19e1fa11bdf542eb642cbb0b4e77417306464","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"54","mybatis-3","d7c19e1fa11bdf542eb642cbb0b4e77417306464","6476b8686f4fd4d2e84973d482c6b37e9b11c9c9","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"56","mybatis-3","6476b8686f4fd4d2e84973d482c6b37e9b11c9c9","5217e43d60d1274669e5a34b048b7725225f8841","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"57","mybatis-3","5217e43d60d1274669e5a34b048b7725225f8841","5e35d45370a0e14e8b405c77e18721e90a9af917","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"60","mybatis-3","5e35d45370a0e14e8b405c77e18721e90a9af917","38ea21213bfdc94f67189857348a39bf14f6b9fb","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"61","mybatis-3","38ea21213bfdc94f67189857348a39bf14f6b9fb","d6bf113eea72743564de5897d87a5f0b9dc1a6e7","REVERSE_IF_ELSE","3","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"0","spring-data-jpa/spring-data-envers","87cc57b0b5222040c5fead396412897a7acd2109","f727965c66ad2d1adea8b50c601e3cd92c2330d8","REVERSE_IF_ELSE","3","1","13","[ReflectionRevisionEntityInformation getRevisionNumberType (), RevisionRepositoryFactory RevisionRepositoryFactory (EntityManager, Class<?>), QueryResult createRevisionMetadata (), ReflectionRevisionEntityInformation getRevisionEntityClass (), DefaultRevisionMetadata equals (Object), EnversRevisionRepositoryFactoryBean EnversRevisionRepositoryFactoryBean (Class<? extends T>), RevisionRepositoryFactory getRepositoryFragments (RepositoryMetadata), EnversRevisionRepositoryImpl EnversRevisionRepositoryImpl (JpaEntityInformation<T,?>, RevisionEntityInformation, EntityManager), ReflectionRevisionEntityInformation ReflectionRevisionEntityInformation (Class<?>), QueryResult convertRevisionType (RevisionType), EnversRevisionRepositoryFactoryBean createRepositoryFactory (EntityManager), EnversRevisionRepositoryFactoryBean setRevisionEntityClass (Class<?>), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","52"
"2","spring-data-jpa/spring-data-envers","f727965c66ad2d1adea8b50c601e3cd92c2330d8","5e21d00092d09b69d61852e22f526b2d8e6d5f0f","REVERSE_IF_ELSE","3","1","2","[EnversRevisionRepositoryImpl findRevision (ID, N), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","8"
"3","spring-data-jpa/spring-data-envers","5e21d00092d09b69d61852e22f526b2d8e6d5f0f","3600b9cb57c7696687918411fbd9f8088b1c89eb","LOCAL_VAR_RENAMING","0","1","2","[EnversRevisionRepositoryImpl mapRevisionSort (RevisionSort), EnversRevisionRepositoryImpl findRevisions (ID, Pageable)]","8"
"5","spring-data-jpa/spring-data-envers","3600b9cb57c7696687918411fbd9f8088b1c89eb","b4b42231ecd2a40eaa54db69af03894bd2d347a7","REVERSE_IF_ELSE","3","1","1","[EnversRevisionRepositoryImpl mapPropertySort (Sort)]","4"
"6","spring-data-jpa/spring-data-envers","b4b42231ecd2a40eaa54db69af03894bd2d347a7","ee9c158f3ca33cff2df73dec4717ee59f71ee600","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[EnversRevisionRepositoryImpl findRevisions (ID, Pageable), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","8"
"8","spring-data-jpa/spring-data-envers","ee9c158f3ca33cff2df73dec4717ee59f71ee600","eae3fb5a2908a50960b851d81ba97923fc3d42ed","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","2","[EnversRevisionRepositoryImpl findRevisions (ID, Pageable), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","8"
"14","spring-data-jpa/spring-data-envers","eae3fb5a2908a50960b851d81ba97923fc3d42ed","491e6aebca041eefe8026d6c183c3705018c879e","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","2","[EnversRevisionRepositoryImpl findRevisions (ID, Pageable), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","8"
"18","spring-data-jpa/spring-data-envers","491e6aebca041eefe8026d6c183c3705018c879e","e185e6dba61b3b417886a0e0649560ac8a1a1823","SWITCH_EQUAL_SIDES","14","1","1","[QueryResult QueryResult (Object[])]","4"
"21","spring-data-jpa/spring-data-envers","e185e6dba61b3b417886a0e0649560ac8a1a1823","e875b8191d14e0ac3608beab0b61a27f8edb7be4","LOCAL_VAR_RENAMING","0","1","2","[EnversRevisionRepositoryImpl createBaseQuery (ID), EnversRevisionRepositoryImpl EnversRevisionRepositoryImpl (JpaEntityInformation<T,?>, RevisionEntityInformation, EntityManager)]","8"
"22","spring-data-jpa/spring-data-envers","e875b8191d14e0ac3608beab0b61a27f8edb7be4","8ebfb641c95bf269955c3ad2579204a92a182d5f","LOCAL_VAR_RENAMING","0","1","2","[EnversRevisionRepositoryImpl findRevisions (ID), EnversRevisionRepositoryImpl findRevisions (ID, Pageable)]","8"
"24","spring-data-jpa/spring-data-envers","8ebfb641c95bf269955c3ad2579204a92a182d5f","be3d2873b79b72bd654547846d0e60b282ef8cbb","LOCAL_VAR_RENAMING","0","1","1","[EnversRevisionRepositoryImpl findRevisions (ID, Pageable)]","4"
"28","spring-data-jpa/spring-data-envers","be3d2873b79b72bd654547846d0e60b282ef8cbb","7e3472198db023078e175ad569a297d9d44f3e24","SWITCH_EQUAL_SIDES","14","1","1","[QueryResult QueryResult (Object[])]","4"
"29","spring-data-jpa/spring-data-envers","7e3472198db023078e175ad569a297d9d44f3e24","c419b93fc665b7b0093ffc5738ba8a78248056cb","STATEMENTS_ORDER_REARRANGEMENT","10","1","3","[EnversRevisionRepositoryImpl findRevisions (ID, Pageable), EnversRevisionRepositoryImpl EnversRevisionRepositoryImpl (JpaEntityInformation<T,?>, RevisionEntityInformation, EntityManager), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","12"
"30","spring-data-jpa/spring-data-envers","c419b93fc665b7b0093ffc5738ba8a78248056cb","b302280900410c4538011f5d83fa54b98e449d3b","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[EnversRevisionRepositoryImpl mapPropertySort (Sort)]","4"
"34","spring-data-jpa/spring-data-envers","b302280900410c4538011f5d83fa54b98e449d3b","afe7541fd54565bcc73878720aa581862e8aec53","LOCAL_VAR_RENAMING","0","1","2","[EnversRevisionRepositoryImpl findRevisions (ID, Pageable), EnversRevisionRepositoryImpl EnversRevisionRepositoryImpl (JpaEntityInformation<T,?>, RevisionEntityInformation, EntityManager)]","8"
"37","spring-data-jpa/spring-data-envers","afe7541fd54565bcc73878720aa581862e8aec53","a327196151f5da1905ddb3781118d578a179ef59","LOCAL_VAR_RENAMING","0","1","2","[EnversRevisionRepositoryImpl createBaseQuery (ID), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","8"
"42","spring-data-jpa/spring-data-envers","a327196151f5da1905ddb3781118d578a179ef59","859adf95eaf1e8959547f288d2d0f292ea223713","LOCAL_VAR_RENAMING","0","1","1","[EnversRevisionRepositoryImpl EnversRevisionRepositoryImpl (JpaEntityInformation<T,?>, RevisionEntityInformation, EntityManager)]","4"
"51","spring-data-jpa/spring-data-envers","859adf95eaf1e8959547f288d2d0f292ea223713","789cd3dcdea9835a9d9add9f9bb4eeb15b6de36f","SWITCH_EQUAL_SIDES","14","1","1","[QueryResult QueryResult (Object[])]","4"
"53","spring-data-jpa/spring-data-envers","789cd3dcdea9835a9d9add9f9bb4eeb15b6de36f","c2f37fe4ca2636d927e4e361b4d0816ef31a64b0","SWITCH_EQUAL_SIDES","14","1","1","[QueryResult QueryResult (Object[])]","4"
"65","spring-data-jpa/spring-data-envers","c2f37fe4ca2636d927e4e361b4d0816ef31a64b0","8c8aec789e3038c7fa636c5fccc8fbfacd4b0fc2","STATEMENTS_ORDER_REARRANGEMENT","10","1","3","[EnversRevisionRepositoryImpl findRevisions (ID, Pageable), EnversRevisionRepositoryImpl EnversRevisionRepositoryImpl (JpaEntityInformation<T,?>, RevisionEntityInformation, EntityManager), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","12"
"0","spring-data-jpa/spring-data-jpa-performance","8c8aec789e3038c7fa636c5fccc8fbfacd4b0fc2","0887a66b3a2ed3d2d894137bb0b5720f679a42f4","INFIX_EXPRESSION_DIVIDING","8","1","20","[PersonRepository findAllByFirstname (String), PersonRepository findAllWithAnnotatedQueryByFirstname (String), Profile Profile (), Person getProfiles (), Person setDecased (boolean), Person Person (), Profile Profile (String), PersonRepository findAllWithAnnotatedQueryByFirstname (String, Sort), Person isDecased (), Person setAge (int), Person setProfiles (Set<Profile>), PersonRepository countByFirstname (String), PersonRepository countWithAnnotatedQueryByFirstname (String), Profile setId (Integer), PersonRepository findAllWithNativeQueryByFirstname (String), Person Person (String, String), PersonRepository findAllAndProjectToInterfaceByFirstname (String), Person setFirstname (String), Profile getId (), Person Person (String, String, String)]","60"
"13","spring-data-jpa/spring-data-jpa-performance","0887a66b3a2ed3d2d894137bb0b5720f679a42f4","3a21264a2fc1a59762751413bed8fd3611af576b","LOCAL_VAR_RENAMING","0","1","2","[PersonRepository findAllWithNativeQueryByFirstname (String), PersonRepository findAllWithAnnotatedQueryByFirstname (String, Sort)]","6"
"57","spring-data-jpa/spring-data-jpa-performance","3a21264a2fc1a59762751413bed8fd3611af576b","719050df47c9fb2a076b581c839a1aed5554c726","LOCAL_VAR_RENAMING","0","1","2","[PersonRepository findAllAndProjectToInterfaceByFirstname (String), PersonRepository findAllWithAnnotatedQueryByFirstname (String, Sort)]","6"
"0","spring-data-jpa/spring-data-jpa","719050df47c9fb2a076b581c839a1aed5554c726","8fe12d68317cad027bd0c0dd695c5b6b6bc2caf8","LOCAL_VAR_RENAMING","0","1","62","[AbstractPersistable equals (Object), ParameterBindings getBindings (BindingIdentifier), QueryUtils getAnnotationProperty (Attribute<?,?>, String, T), ParameterBindings register (BindingIdentifier, ParameterOrigin, Function<BindingIdentifier,ParameterBinding>), AbstractStringBasedJpaQuery AbstractStringBasedJpaQuery (JpaQueryMethod, EntityManager, String, String, QueryRewriter, QueryMethodEvaluationContextProvider, SpelExpressionParser), JpaRepositoryConfigExtension postProcess (BeanDefinitionBuilder, AnnotationRepositoryConfigurationSource), ProxyIdAccessor getIdentifierFrom (Object), StringQuery tryFindGreatestParameterIndexIn (String), QueryUtils requiresOuterJoin (From<?,?>, PropertyPath, boolean, boolean), QueryHints forEach (BiConsumer<String,Object>), ParameterBindings isBound (BindingIdentifier), JpaRepositoryConfigExtension postProcess (BeanDefinitionBuilder, RepositoryConfigurationSource), QueryHints from (QueryHints), LazyJvmAgent LazyJvmAgent (), JpaRepositoryConfigExtension getEntityManagerBeanDefinitionFor (RepositoryConfigurationSource, Object), QueryUtils createCountQueryFor (String, String, boolean), QueryUtils findClose (Integer, List<Integer>, List<Boolean>), JpaRepositoryConfigExtension getIdentifyingTypes (), JpaRepositoryConfigExtension registerSharedEntityMangerIfNotAlreadyRegistered (BeanDefinitionRegistry, RepositoryConfigurationSource), JpaKeysetScrollQueryCreator getRequiredSelection (Sort, ReturnedType), JpaRepositoryConfigExtension getEscapeCharacter (RepositoryConfigurationSource), CachingQuerySortRewriter getSorted (DeclaredQuery, Sort), StringQuery getKeyword (), ParameterBindings existsBoundParameter (String), StringQuery parseParameterBindingsOfQueryIntoBindingsAndReturnCleanedQuery (String, List<ParameterBinding>, Metadata), EntityManagerBeanDefinitionRegistrarPostProcessor postProcessBeanFactory (ConfigurableListableBeanFactory), StringQuery checkAndRegister (ParameterBinding, List<ParameterBinding>), JpaKeysetScrollQueryCreator complete (Predicate, Sort, CriteriaQuery<?>, CriteriaBuilder, Root<?>), HqlQueryIntrospector captureSelectItems (List<HqlParser.SelectionContext>, HqlQueryRenderer), QueryUtils toJpaOrder (Order, From<?,?>, CriteriaBuilder), JpaRepositoryConfigExtension registerBeansForRoot (BeanDefinitionRegistry, RepositoryConfigurationSource), AbstractPersistable hashCode (), HqlQueryIntrospector visitFromRoot (HqlParser.FromRootContext), JpaRepositoryConfigExtension postProcess (BeanDefinitionBuilder, XmlRepositoryConfigurationSource), StringQuery StringQuery (String, boolean), StringQuery of (String), CachableQuery equals (Object), JpaRepositoryConfigExtension getConfigurationInspectionClassLoader (ResourceLoader), ParameterBindings register (ParameterBinding), DeclaredQuery of (String, boolean), CachableQuery getAlias (), CachableQuery hashCode (), DeclaredQuery deriveCountQuery (String), ParsedQueryIntrospector visit (ParseTree), AbstractStringBasedJpaQuery doCreateCountQuery (JpaParametersParameterAccessor), CachableQuery getSort (), StringQuery getParameterIndex (String), StringQuery ParameterBindingType (String), AbstractStringBasedJpaQuery createJpaQuery (String, Sort, Pageable, ReturnedType), AbstractStringBasedJpaQuery getCountQuery (), ProxyIdAccessor shouldUseAccessorFor (Object), QueryHints withFetchGraphs (EntityManager), StringQuery createSpelExtractor (String, boolean, int), CachableQuery getDeclaredQuery (), AbstractStringBasedJpaQuery createBinder (DeclaredQuery), AbstractStringBasedJpaQuery potentiallyRewriteQuery (String, Sort, Pageable), QueryHints forCounts (), ParameterBindings ParameterBindings (List<ParameterBinding>, Consumer<ParameterBinding>, int), AbstractStringBasedJpaQuery doCreateQuery (JpaParametersParameterAccessor), CachableQuery CachableQuery (DeclaredQuery, Sort), QuerySortRewriter getSorted (DeclaredQuery, Sort), QueryUtils removeSubqueries (String)]","744"
"4","spring-data-jpa/spring-data-jpa","8fe12d68317cad027bd0c0dd695c5b6b6bc2caf8","c3a42784ee2b028dd9b0264bfe42571371e33edc","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JpaKeysetScrollQueryCreator JpaKeysetScrollQueryCreator (PartTree, ReturnedType, CriteriaBuilder, ParameterMetadataProvider, JpaEntityInformation<?,?>, KeysetScrollPosition)]","12"
"10","spring-data-jpa/spring-data-jpa","c3a42784ee2b028dd9b0264bfe42571371e33edc","bfcf8e59576e8faaa2ffa7d5671cc011aeb52297","REVERSE_IF_ELSE","3","1","1","[JpaKeysetScrollQueryCreator complete (Predicate, Sort, CriteriaQuery<?>, CriteriaBuilder, Root<?>)]","12"
"15","spring-data-jpa/spring-data-jpa","bfcf8e59576e8faaa2ffa7d5671cc011aeb52297","0f29bcaedb3ba0106806e7d69e2da022a0a511f5","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JpaKeysetScrollQueryCreator JpaKeysetScrollQueryCreator (PartTree, ReturnedType, CriteriaBuilder, ParameterMetadataProvider, JpaEntityInformation<?,?>, KeysetScrollPosition)]","12"
"18","spring-data-jpa/spring-data-jpa","0f29bcaedb3ba0106806e7d69e2da022a0a511f5","7619b3c981abbde30f5be3c6a76ddfe294c54455","REVERSE_IF_ELSE","3","1","1","[JpaKeysetScrollQueryCreator complete (Predicate, Sort, CriteriaQuery<?>, CriteriaBuilder, Root<?>)]","12"
"21","spring-data-jpa/spring-data-jpa","7619b3c981abbde30f5be3c6a76ddfe294c54455","1c8559301474f648f08b9e3c7bc2e5f37a3fae06","REVERSE_IF_ELSE","3","1","1","[JpaKeysetScrollQueryCreator complete (Predicate, Sort, CriteriaQuery<?>, CriteriaBuilder, Root<?>)]","12"
"28","spring-data-jpa/spring-data-jpa","1c8559301474f648f08b9e3c7bc2e5f37a3fae06","1a647121753a71d844c779e8c2284d614d4ded92","REVERSE_IF_ELSE","3","1","1","[JpaKeysetScrollQueryCreator complete (Predicate, Sort, CriteriaQuery<?>, CriteriaBuilder, Root<?>)]","12"
"32","spring-data-jpa/spring-data-jpa","1a647121753a71d844c779e8c2284d614d4ded92","25b2571e734d5d34e3f449fa1d3a1706e7c355f9","LOCAL_VAR_RENAMING","0","1","1","[JpaKeysetScrollQueryCreator complete (Predicate, Sort, CriteriaQuery<?>, CriteriaBuilder, Root<?>)]","12"
"35","spring-data-jpa/spring-data-jpa","25b2571e734d5d34e3f449fa1d3a1706e7c355f9","41fc39c4ed9f571f52eae4c3cd8ab3e9e0f90c97","REVERSE_IF_ELSE","3","1","1","[JpaKeysetScrollQueryCreator complete (Predicate, Sort, CriteriaQuery<?>, CriteriaBuilder, Root<?>)]","12"
"37","spring-data-jpa/spring-data-jpa","41fc39c4ed9f571f52eae4c3cd8ab3e9e0f90c97","50b6975c71107d1b94709b87e649d43dca255bd9","LOCAL_VAR_RENAMING","0","1","1","[JpaKeysetScrollQueryCreator getRequiredSelection (Sort, ReturnedType)]","12"
"40","spring-data-jpa/spring-data-jpa","50b6975c71107d1b94709b87e649d43dca255bd9","a596d7f7d6013f0d26ffddad32ca41ee05337e8c","REVERSE_IF_ELSE","3","1","1","[JpaKeysetScrollQueryCreator complete (Predicate, Sort, CriteriaQuery<?>, CriteriaBuilder, Root<?>)]","12"
"49","spring-data-jpa/spring-data-jpa","a596d7f7d6013f0d26ffddad32ca41ee05337e8c","45867feecfd90eadd0e4b604afd4d6e2a122357b","REVERSE_IF_ELSE","3","1","1","[JpaKeysetScrollQueryCreator complete (Predicate, Sort, CriteriaQuery<?>, CriteriaBuilder, Root<?>)]","12"
"51","spring-data-jpa/spring-data-jpa","45867feecfd90eadd0e4b604afd4d6e2a122357b","1581550504e27348fe02c597df51ffcd8b5bb997","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JpaKeysetScrollQueryCreator JpaKeysetScrollQueryCreator (PartTree, ReturnedType, CriteriaBuilder, ParameterMetadataProvider, JpaEntityInformation<?,?>, KeysetScrollPosition)]","12"
"55","spring-data-jpa/spring-data-jpa","1581550504e27348fe02c597df51ffcd8b5bb997","c9afb92343751918b8968ce39f43bad03fefc564","LOCAL_VAR_RENAMING","0","1","3","[JpaKeysetScrollQueryCreator JpaKeysetScrollQueryCreator (PartTree, ReturnedType, CriteriaBuilder, ParameterMetadataProvider, JpaEntityInformation<?,?>, KeysetScrollPosition), JpaKeysetScrollQueryCreator complete (Predicate, Sort, CriteriaQuery<?>, CriteriaBuilder, Root<?>), JpaKeysetScrollQueryCreator getRequiredSelection (Sort, ReturnedType)]","36"
"57","spring-data-jpa/spring-data-jpa","c9afb92343751918b8968ce39f43bad03fefc564","93cdaec7c266b4cb4afb297ae8c54a0482cdf668","LOCAL_VAR_RENAMING","0","1","3","[JpaKeysetScrollQueryCreator JpaKeysetScrollQueryCreator (PartTree, ReturnedType, CriteriaBuilder, ParameterMetadataProvider, JpaEntityInformation<?,?>, KeysetScrollPosition), JpaKeysetScrollQueryCreator complete (Predicate, Sort, CriteriaQuery<?>, CriteriaBuilder, Root<?>), JpaKeysetScrollQueryCreator getRequiredSelection (Sort, ReturnedType)]","36"
"62","spring-data-jpa/spring-data-jpa","93cdaec7c266b4cb4afb297ae8c54a0482cdf668","acac0c744ae1ea41d044ade78497ef406b40b1b9","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JpaKeysetScrollQueryCreator JpaKeysetScrollQueryCreator (PartTree, ReturnedType, CriteriaBuilder, ParameterMetadataProvider, JpaEntityInformation<?,?>, KeysetScrollPosition)]","12"
"63","spring-data-jpa/spring-data-jpa","acac0c744ae1ea41d044ade78497ef406b40b1b9","94bd9d901afb8bc0238cc89deb234ebcecb5fb3a","LOCAL_VAR_RENAMING","0","1","3","[JpaKeysetScrollQueryCreator JpaKeysetScrollQueryCreator (PartTree, ReturnedType, CriteriaBuilder, ParameterMetadataProvider, JpaEntityInformation<?,?>, KeysetScrollPosition), JpaKeysetScrollQueryCreator complete (Predicate, Sort, CriteriaQuery<?>, CriteriaBuilder, Root<?>), JpaKeysetScrollQueryCreator getRequiredSelection (Sort, ReturnedType)]","36"
"0","helios/helios-client","819e59493b502ddbf40cd96a4a7a0ea2a8af3edb","6bf7e15b900e71e5c0f0001185f2dc174abaedc6","WHILE_TO_FOR","2","1","137","[Builder os (String), DefaultHttpConnector setExtraHttpsHandler (HttpsHandler), HealthCheck newHttpHealthCheck (), Builder equals (Object), HealthCheck newExecHealthCheck (), HealthCheck toString (), PortMapping of (int, String), Deployment newBuilder (), Builder setDeployerMaster (String), Parameters Parameters (), Descriptor parse (byte[], Class<T>), ExecHealthCheck equals (Object), PomVersion isSnapshot (), ExecHealthCheck of (String), PortMapping of (int, Integer), Deployment toBuilder (), Descriptor toJsonString (), Builder getCommand (), PortMapping getIp (), PomVersion equals (Object), Builder toString (), PomVersion hashCode (), Deployment getDeployerMaster (), PomVersion getMajor (), ExecHealthCheck newBuilder (), DefaultHttpConnector handleHttps (HttpURLConnection, String, HostnameVerifierProvider, HttpsHandler), PomVersion getPatch (), Builder externalPort (Integer), Endpoints Endpoints (), PortMapping getProtocol (), DeploymentGroup DeploymentGroup (String, List<HostSelector>, JobId, RolloutOptions, RollingUpdateReason), Deployment toString (), ExecHealthCheck hashCode (), ExecHealthCheck ExecHealthCheck (List<String>), ExecHealthCheck toString (), Builder build (), PortMapping PortMapping (String, int, Integer, String), Builder Builder (), DefaultHttpConnector DefaultHttpConnector (EndpointIterator, int, boolean), DefaultEndpoint getIp (), Endpoints of (List<URI>, DnsResolver), Deployment equals (Object), DefaultHttpConnector connect (URI, String, byte[], Map<String,List<String>>), HealthCheck newTcpHealthCheck (), Endpoints of (Supplier<List<URI>>), Parameters getRolloutOptions (), DeploymentGroup toString (), Endpoints get (), Builder arch (String), Builder internalPort (int), Parameters getName (), Deployment getDeploymentGroupName (), DockerVersion getKernelVersion (), PortMapping getExternalPort (), Builder setGoal (Goal), Builder setJobId (JobId), HttpConnector connect (URI, String, byte[], Map<String,List<String>>), Descriptor toJsonBytes (), PomVersion parse (String), DeploymentGroup getRolloutOptions (), DeploymentGroup getHostSelectors (), Builder apiVersion (String), Parameters setRolloutOptions (RolloutOptions), DefaultEndpoint toString (), Deployment Deployment (JobId, Goal, String, String, String), Builder goVersion (String), DockerVersion getApiVersion (), DockerVersion hashCode (), ExecHealthCheck getCommand (), Parameters setName (String), DockerVersion DockerVersion (String, String, String, String, String, String, String), DockerVersion equals (Object), PomVersion toString (), DockerVersion getVersion (), PortMapping hasExternalPort (), Parameters setRollingUpdateReason (RollingUpdateReason), DockerVersion DockerVersion (Builder), ExecHealthCheck ExecHealthCheck (ExecHealthCheck.Builder), Parameters getRollingUpdateReason (), DefaultHttpConnector close (), PortMapping PortMapping (int, Integer), Parameters getJobId (), DockerVersion builder (), Deployment hashCode (), PortMapping getInternalPort (), PortMapping of (int, Integer, String), Parameters build (), Deployment of (JobId, Goal, String), ExecHealthCheck of (List<String>), DefaultHttpConnector setRequestMethod (HttpURLConnection, String, boolean), PortMapping PortMapping (int), DefaultEndpoint getUri (), DeploymentGroup getName (), DeploymentGroup toBuilder (), HealthCheck getType (), DeploymentGroup getRollingUpdateReason (), PortMapping builder (), Builder gitCommit (String), DockerVersion getOs (), Endpoints of (List<URI>), PomVersion getMinor (), Builder setCommand (List<String>), Parameters setJobId (JobId), DockerVersion getArch (), Parameters setHostSelectors (List<HostSelector>), PomVersion compareTo (PomVersion), Builder kernelVersion (String), Builder setDeployerUser (String), Deployment getGoal (), Deployment of (JobId, Goal), Descriptor parse (String, Class<T>), DefaultEndpoint hashCode (), DockerVersion getGoVersion (), DockerVersion toString (), DefaultHttpConnector connect0 (URI, String, byte[], Map<String,List<String>>, String), Deployment getDeployerUser (), Endpoints of (Supplier<List<URI>>, DnsResolver), PortMapping withExternalPort (Integer), DockerVersion getGitCommit (), PortMapping of (int), Deployment getJobId (), DeploymentGroup hashCode (), DeploymentGroup getJobId (), PortMapping PortMapping (Builder), Builder version (String), DeploymentGroup newBuilder (), Builder hashCode (), DefaultEndpoint equals (Object), Parameters getHostSelectors (), Builder ip (String), Deployment of (JobId, Goal, String, String, String), HealthCheck HealthCheck (String), Builder protocol (String), PomVersion PomVersion (boolean, int, int, int), DeploymentGroup equals (Object), Builder setDeploymentGroupName (String), DefaultEndpoint DefaultEndpoint (URI, InetAddress)]","1507"
"1","helios/helios-client","6bf7e15b900e71e5c0f0001185f2dc174abaedc6","bafe4d64a26ea0da66b4e43804a69c6d172b9e1e","SWITCH_STRING_EQUAL","15","1","1","[DeploymentGroup equals (Object)]","11"
"2","helios/helios-client","bafe4d64a26ea0da66b4e43804a69c6d172b9e1e","f269de7d767b78de7adc012dddbfd8845c65128e","LOCAL_VAR_RENAMING","0","1","2","[DeploymentGroup equals (Object), DeploymentGroup hashCode ()]","22"
"10","helios/helios-client","f269de7d767b78de7adc012dddbfd8845c65128e","b6c1f99e6f3efad368b05a966b4355dcebfedccb","INFIX_EXPRESSION_DIVIDING","8","1","1","[DeploymentGroup equals (Object)]","11"
"11","helios/helios-client","b6c1f99e6f3efad368b05a966b4355dcebfedccb","d9f41835b544239cfa313d752cd68a76f4a056e8","VAR_DECLARATION_MERGING","12","1","2","[DeploymentGroup equals (Object), DeploymentGroup hashCode ()]","22"
"13","helios/helios-client","d9f41835b544239cfa313d752cd68a76f4a056e8","43b6142bdcb44b755967f5801400de168b4dd71b","INFIX_EXPRESSION_DIVIDING","8","1","1","[DeploymentGroup equals (Object)]","11"
"14","helios/helios-client","43b6142bdcb44b755967f5801400de168b4dd71b","7ed579ec07fa7916bfd42cb136586c16fd1d2c19","SWITCH_STRING_EQUAL","15","1","1","[DeploymentGroup equals (Object)]","11"
"15","helios/helios-client","7ed579ec07fa7916bfd42cb136586c16fd1d2c19","1d9a3f8a2ab7eaed053bd473c97458a64cddc51f","SWITCH_STRING_EQUAL","15","1","1","[DeploymentGroup equals (Object)]","11"
"16","helios/helios-client","1d9a3f8a2ab7eaed053bd473c97458a64cddc51f","356644270127f33fa2b1e99534e46ef9617e6966","STATEMENTS_ORDER_REARRANGEMENT","10","1","3","[DeploymentGroup equals (Object), Parameters Parameters (), DeploymentGroup DeploymentGroup (String, List<HostSelector>, JobId, RolloutOptions, RollingUpdateReason)]","33"
"17","helios/helios-client","356644270127f33fa2b1e99534e46ef9617e6966","f879bf1cffa86971d81690449755b312d47cabca","VAR_DECLARATION_MERGING","12","1","2","[DeploymentGroup equals (Object), DeploymentGroup hashCode ()]","22"
"18","helios/helios-client","f879bf1cffa86971d81690449755b312d47cabca","fc1a983cf433229c47e50ae120cc16f0864d599c","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[DeploymentGroup equals (Object), DeploymentGroup DeploymentGroup (String, List<HostSelector>, JobId, RolloutOptions, RollingUpdateReason)]","22"
"19","helios/helios-client","fc1a983cf433229c47e50ae120cc16f0864d599c","39d1d71f8d50c21248be7fd9f5eb6d62199a9ee5","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DeploymentGroup equals (Object)]","11"
"24","helios/helios-client","39d1d71f8d50c21248be7fd9f5eb6d62199a9ee5","e50d14c902af2034ce6884640f9e529138abbc3e","SWITCH_EQUAL_SIDES","14","1","1","[DeploymentGroup equals (Object)]","11"
"28","helios/helios-client","e50d14c902af2034ce6884640f9e529138abbc3e","70999680bd0c079541ccf4cc3085b6688a315a31","INFIX_EXPRESSION_DIVIDING","8","1","1","[DeploymentGroup equals (Object)]","11"
"29","helios/helios-client","70999680bd0c079541ccf4cc3085b6688a315a31","899480c4827b336f064916e6870e141cfdb6cbea","VAR_DECLARATION_MERGING","12","1","2","[DeploymentGroup equals (Object), DeploymentGroup hashCode ()]","22"
"30","helios/helios-client","899480c4827b336f064916e6870e141cfdb6cbea","2aa85a56eae71b9f3d8fa68b597f02c107627245","LOCAL_VAR_RENAMING","0","1","1","[DeploymentGroup equals (Object)]","11"
"32","helios/helios-client","2aa85a56eae71b9f3d8fa68b597f02c107627245","9c783d562f3bc06d88d09476a928684e4f3f99d0","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[DeploymentGroup hashCode ()]","11"
"33","helios/helios-client","9c783d562f3bc06d88d09476a928684e4f3f99d0","7e42382fcfcec764060f491869adfb128675221e","SWITCH_EQUAL_SIDES","14","1","1","[DeploymentGroup equals (Object)]","11"
"35","helios/helios-client","7e42382fcfcec764060f491869adfb128675221e","c73ab4523d31bc1475bbe48e49061f736fe2c32b","VAR_DECLARATION_MERGING","12","1","1","[DeploymentGroup equals (Object)]","11"
"40","helios/helios-client","c73ab4523d31bc1475bbe48e49061f736fe2c32b","e43f014660a31a93d5cf1443b8d9bfb20ce9381d","VAR_DECLARATION_DIVIDING","13","1","1","[DeploymentGroup hashCode ()]","11"
"41","helios/helios-client","e43f014660a31a93d5cf1443b8d9bfb20ce9381d","b6ad77883fc176295d15120e3b8f8e999575b079","VAR_DECLARATION_MERGING","12","1","1","[DeploymentGroup hashCode ()]","11"
"43","helios/helios-client","b6ad77883fc176295d15120e3b8f8e999575b079","3df7f005be63ec8c2229be92cfb581f0d1e0f519","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[DeploymentGroup hashCode ()]","11"
"44","helios/helios-client","3df7f005be63ec8c2229be92cfb581f0d1e0f519","781b4cd697de72e157dc47f67810fbbfe31bfb45","VAR_DECLARATION_DIVIDING","13","1","2","[DeploymentGroup equals (Object), DeploymentGroup hashCode ()]","22"
"46","helios/helios-client","781b4cd697de72e157dc47f67810fbbfe31bfb45","b4c553caff889cf0794c6e6725cd452db63c9da6","VAR_DECLARATION_MERGING","12","1","2","[DeploymentGroup equals (Object), DeploymentGroup hashCode ()]","22"
"49","helios/helios-client","b4c553caff889cf0794c6e6725cd452db63c9da6","a478e7e579f4492f3c0e06af2074672fc2625393","SWITCH_STRING_EQUAL","15","1","1","[DeploymentGroup equals (Object)]","11"
"50","helios/helios-client","a478e7e579f4492f3c0e06af2074672fc2625393","f7417d3f823d3508208ba7d1fdb3ab68ba1b7bbc","VAR_DECLARATION_DIVIDING","13","1","1","[DeploymentGroup equals (Object)]","11"
"53","helios/helios-client","f7417d3f823d3508208ba7d1fdb3ab68ba1b7bbc","a31b761eefc93d22b3ac74a643b1311ae1c94aee","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[DeploymentGroup hashCode ()]","11"
"56","helios/helios-client","a31b761eefc93d22b3ac74a643b1311ae1c94aee","196807bd47d59324d82a746914ab1a27aa52a27d","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DeploymentGroup equals (Object)]","11"
"57","helios/helios-client","196807bd47d59324d82a746914ab1a27aa52a27d","307f443aec6aeb18ec9672a777569c46d358d732","SWITCH_EQUAL_SIDES","14","1","1","[DeploymentGroup equals (Object)]","11"
"60","helios/helios-client","307f443aec6aeb18ec9672a777569c46d358d732","30db6e496b5872e9fb9d6065900440e9a1834be8","INFIX_EXPRESSION_DIVIDING","8","1","1","[DeploymentGroup equals (Object)]","11"
"62","helios/helios-client","30db6e496b5872e9fb9d6065900440e9a1834be8","e5e33e18b2d0d4e1ddf5808ec230e3ef7885b2e7","VAR_DECLARATION_DIVIDING","13","1","2","[DeploymentGroup equals (Object), DeploymentGroup hashCode ()]","22"
"63","helios/helios-client","e5e33e18b2d0d4e1ddf5808ec230e3ef7885b2e7","b43d20eb8981557326ecdd106b80c54a20deeab1","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[DeploymentGroup hashCode ()]","11"
"0","helios/helios-service-registration","b43d20eb8981557326ecdd106b80c54a20deeab1","66624268c3cfb31d512e9b8828f7dc77dd3ef233","IF_DIVIDING","9","1","44","[Builder build (), Endpoint getHost (), EndpointHealthCheck toString (), EndpointHealthCheck hashCode (), EndpointHealthCheck newHttpCheck (String), ServiceRegistrarLoader load (), Builder endpoint (String, String, int), ServiceRegistration equals (Object), FilteringClassLoader FilteringClassLoader (List<Package>, ClassLoader, ClassLoader), Builder endpoint (String, String, int, String, String, List<String>), Endpoint Endpoint (String, String, int, String, String, List<String>, EndpointHealthCheck), ServiceRegistrar close (), ServiceRegistrar unregister (ServiceRegistrationHandle), Endpoint equals (Object), ServiceRegistration getEndpoints (), ServiceRegistration toString (), ServiceRegistrar register (ServiceRegistration), EndpointHealthCheck EndpointHealthCheck (String, String), Builder endpoint (String, String, int, String, String), ServiceRegistrarLoadingException ServiceRegistrarLoadingException (String, ServiceConfigurationError), ServiceRegistrarLoader extensionClassLoader (ClassLoader), Builder endpoint (String, String, int, String, String, List<String>, EndpointHealthCheck), Endpoint getProtocol (), EndpointHealthCheck equals (Object), Endpoint getPort (), Endpoint toString (), Endpoint getDomain (), ServiceRegistrarLoader load (String, ClassLoader), EndpointHealthCheck getPath (), ServiceRegistrarLoader load (Path), Endpoint getHealthCheck (), EndpointHealthCheck getType (), FilteringClassLoader findClass (String), ServiceRegistration ServiceRegistration (List<Endpoint>), EndpointHealthCheck newTcpCheck (), Endpoint hashCode (), NopServiceRegistrarFactory create (String), Endpoint getTags (), ServiceRegistrarLoader load (Path, ClassLoader, ClassLoader), Endpoint getName (), NopServiceRegistrarFactory createForDomain (String), ServiceRegistrarLoader pluginClassLoader (Path, ClassLoader, ClassLoader), ServiceRegistration hashCode (), ServiceRegistration newBuilder ()]","220"
"2","helios/helios-service-registration","66624268c3cfb31d512e9b8828f7dc77dd3ef233","d83690079cb8c11ab7c402b8ff8a1e44cd5a082f","REVERSE_IF_ELSE","3","1","2","[EndpointHealthCheck equals (Object), Endpoint equals (Object)]","10"
"8","helios/helios-service-registration","d83690079cb8c11ab7c402b8ff8a1e44cd5a082f","3cf5a4f60bfa669c239cdbfe18e3db90a9426ab9","VAR_DECLARATION_MERGING","12","1","3","[EndpointHealthCheck equals (Object), Endpoint equals (Object), ServiceRegistration equals (Object)]","15"
"11","helios/helios-service-registration","3cf5a4f60bfa669c239cdbfe18e3db90a9426ab9","88e2836e4cf347fa270e559c4b1bfdb63847d75f","SWITCH_EQUAL_SIDES","14","1","1","[EndpointHealthCheck equals (Object)]","5"
"19","helios/helios-service-registration","88e2836e4cf347fa270e559c4b1bfdb63847d75f","08fa4fa9a2d2c78d156b78dca06aca9ab90376ea","STATEMENTS_ORDER_REARRANGEMENT","10","1","4","[Endpoint Endpoint (String, String, int, String, String, List<String>, EndpointHealthCheck), Endpoint equals (Object), EndpointHealthCheck EndpointHealthCheck (String, String), ServiceRegistration equals (Object)]","20"
"23","helios/helios-service-registration","08fa4fa9a2d2c78d156b78dca06aca9ab90376ea","637a42cdc0338c685772fab88d6fc734ffdcbf88","VAR_DECLARATION_DIVIDING","13","1","3","[EndpointHealthCheck equals (Object), Endpoint equals (Object), ServiceRegistration equals (Object)]","15"
"25","helios/helios-service-registration","637a42cdc0338c685772fab88d6fc734ffdcbf88","ba1bf631def309801aaa4166c49bae8ac352aaf0","LOCAL_VAR_RENAMING","0","1","3","[NopServiceRegistrar register (ServiceRegistration), NopServiceRegistrar unregister (ServiceRegistrationHandle), NopServiceRegistrar close ()]","18"
"27","helios/helios-service-registration","ba1bf631def309801aaa4166c49bae8ac352aaf0","b1ab98ef0dc90d0f3542a3e28d351baebe4cdd64","LOCAL_VAR_RENAMING","0","1","2","[NopServiceRegistrar register (ServiceRegistration), NopServiceRegistrar unregister (ServiceRegistrationHandle)]","12"
"50","helios/helios-service-registration","b1ab98ef0dc90d0f3542a3e28d351baebe4cdd64","38a93d4c2d098780f1d2afc353697e1752306ae4","LOCAL_VAR_RENAMING","0","1","2","[NopServiceRegistrar register (ServiceRegistration), NopServiceRegistrar unregister (ServiceRegistrationHandle)]","12"
"55","helios/helios-service-registration","38a93d4c2d098780f1d2afc353697e1752306ae4","597cfcc2197e5b69fced91811dc1eafcc582433b","LOCAL_VAR_RENAMING","0","1","2","[NopServiceRegistrar register (ServiceRegistration), NopServiceRegistrar unregister (ServiceRegistrationHandle)]","12"
"57","helios/helios-service-registration","597cfcc2197e5b69fced91811dc1eafcc582433b","11c8432dc693791140bc0aac7822c9639e54a465","LOCAL_VAR_RENAMING","0","1","2","[NopServiceRegistrar register (ServiceRegistration), NopServiceRegistrar unregister (ServiceRegistrationHandle)]","12"
"58","helios/helios-service-registration","11c8432dc693791140bc0aac7822c9639e54a465","15d5de67ced7ab8de15e8ff8d74006acf6ca5133","LOCAL_VAR_RENAMING","0","1","2","[NopServiceRegistrar register (ServiceRegistration), NopServiceRegistrar unregister (ServiceRegistrationHandle)]","12"
"0","helios/helios-services","15d5de67ced7ab8de15e8ff8d74006acf6ca5133","2d5998e209ad71abfa34d11bfd89f19a845f0c44","CASE_TO_IF_ELSE","17","1","170","[ZooKeeperMasterModel removeDeploymentGroup (String), ZooKeeperMasterModel rollingUpdateMarkUndeployed (ZooKeeperClient, RollingUpdateOpFactory, DeploymentGroup, String), DefaultReactor signalRunnable (), RollingUndeployPlanner of (DeploymentGroup), ZooKeeperMasterModel getDeployOperations (ZooKeeperClient, String, Deployment, String), ZooKeeperMasterModel updateOnHostChange (DeploymentGroup, DeploymentGroupStatus), TaskConfig ports (), HostInfoReporter exec (String), ZooKeeperMasterModel getDeploymentGroup (ZooKeeperClient, String), ZooKeeperMasterModel getHostLabels (String), Builder namespace (String), NoopMasterMetrics badRequest (String), ZooKeeperMasterModel forceRollingUpdateUndeploy (ZooKeeperClient, RollingUpdateOpFactory, DeploymentGroup, String), ZooKeeperMasterModel stopDeploymentGroup (String), ZooKeeperMasterModel isMigration (Deployment, DeploymentGroup), CommonConfiguration getKafkaBrokers (), NoopMasterMetrics failure (String), PollingDockerClient PollingDockerClient (URI, DockerCertificates), ZooKeeperMasterModel compare (TaskStatusEvent, TaskStatusEvent), MeterRates getOneMinuteRate (), ZooKeeperMasterModel apply (TaskStatusEvent), ZooKeeperMasterModel tryGetEntity (ZooKeeperClient, String, TypeReference<T>, String), TaskConfig portBindings (), ZooKeeperMasterModel getEnvironment (ZooKeeperClient, String), ZooKeeperCallable call (), ZooKeeperMasterModel rollingUpdate (DeploymentGroup, JobId, RolloutOptions), VersionResource version (), ZooKeeperMasterModel deployJobRetry (ZooKeeperClient, String, Deployment, int, String), ZooKeeperMasterModel getLabels (ZooKeeperClient, String), ZooKeeperMasterModel checkForPortConflicts (ZooKeeperClient, String, int, JobId), VersionResource versionCheck (String), ZooKeeperMasterModel getPreviousJobStates (JobId, String, int), ZooKeeperMasterModel listHosts (), Builder toString (), DefaultReactor DefaultReactor (String, Callback, long), Builder ports (Map<String,Integer>), ZooKeeperMasterModel getTaskStatuses (ZooKeeperClient, String), ZooKeeperMasterModel getDeploymentGroupTasks (ZooKeeperClient), ZooKeeperMasterModel rollingUpdateStep (), ZooKeeperMasterModel getAgentInfo (String), PollingDockerClient PollingDockerClient (String), ZooKeeperMasterModel checkHostUp (ZooKeeperClient, String), DefaultReactor signal (), ZooKeeperMasterModel deregisterHost (String), ZooKeeperMasterModel assertJobExists (ZooKeeperClient, JobId), HostInfoReporter HostInfoReporter (OperatingSystemMXBean, NodeUpdaterFactory, String, DockerClient, DockerHost, int, TimeUnit, CountDownLatch), ZooKeeperMasterModel isRolloutTimedOut (ZooKeeperClient, DeploymentGroup), MeterRates MeterRates (Meter), ZooKeeperMasterModel getHostStatus (String), NoopMasterMetrics jobsInJobList (int), ZooKeeperMasterModel getJobCreation (ZooKeeperClient, JobId), CommonConfiguration getPubsubPrefixes (), ZooKeeperMasterModel listJobHosts (ZooKeeperClient, JobId), Builder build (), ZooKeeperMasterModel getJob (JobId), ZooKeeperMasterModel deployJob (String, Deployment, String), ZooKeeperMasterModel undeployJob (String, JobId), RollingUndeployPlanner RollingUndeployPlanner (DeploymentGroup), Builder Builder (), TaskConfig hostConfig (Optional<String>), NoOpContainerDecorator decorateHostConfig (Job, Optional<String>, HostConfig.Builder), PollingDockerClient PollingDockerClient (URI), TaskConfig binds (), TaskConfig containerExposedPorts (), BindVolumeContainerDecorator decorateHostConfig (Job, Optional<String>, HostConfig.Builder), ZooKeeperMasterModel undeployJob (String, JobId, String), ZooKeeperMasterModel rollingUpdateAwaitUndeployed (ZooKeeperClient, RollingUpdateOpFactory, DeploymentGroup, String), Check toString (), Check equals (Object), RollingUndeployPlanner plan (List<String>), ZooKeeperMasterModel updateDeployment (String, Deployment), ZooKeeperMasterModel isHostUp (String), ZooKeeperModelReporter time (String, String, ZooKeeperCallable<T>), ZooKeeperMasterModel getInitRollingUpdateOps (DeploymentGroup, List<String>, List<String>, ZooKeeperClient), CommonConfiguration setKafkaBrokers (List<String>), PollingDockerClient waitContainer (String), ZooKeeperMasterModel getJobStatus (JobId), ZooKeeperMasterModel registerHost (String, String), ZooKeeperMasterModel verifyToken (String, Job), HostInfoReporter dockerVersion (), ZooKeeperMasterModel getJobs (), TaskConfig builder (), Builder containerDecorators (List<ContainerDecorator>), ZooKeeperMasterModel processRollingUpdateTask (ZooKeeperClient, RollingUpdateOpFactory, RolloutTask, DeploymentGroup), PollingDockerClient PollingDockerClient (DefaultDockerClient.Builder), NoopMasterMetrics clientVersion (String), SignalAwaitingService beforeIteration (), TaskConfig registration (), TaskConfig containerEnvStrings (), ZooKeeperMasterModel listHosts (String), ZooKeeperMasterModel rolloutOptionsWithFallback (RolloutOptions, Job), NoopMasterMetrics success (String), ZooKeeperMasterModel updateDeploymentGroupHosts (String, List<String>), TaskConfig fullyQualifiedRegistrationDomain (), ZooKeeperMasterModel getDeploymentGroups (), ZooKeeperMasterModel assertHostExists (ZooKeeperClient, String), ZooKeeperMasterModel removeJob (JobId), ZooKeeperMasterModel listHostJobs (ZooKeeperClient, String), HostInfoReporter runOneIteration (), Builder envVars (Map<String,String>), ZooKeeperModelReporter ZooKeeperModelReporter (ZooKeeperMetrics), ZooKeeperMasterModel getDeploymentGroupHosts (String), ZooKeeperMasterModel getRunningMasters (), ZooKeeperMasterModel getJob (ZooKeeperClient, JobId), ZooKeeperMasterModel getTasks (ZooKeeperClient, String), TaskConfig containerEnv (), Builder job (Job), DefaultReactor run (), MeterRates getFiveMinuteRate (), ZooKeeperMasterModel getUndeployOperations (ZooKeeperClient, String, JobId, String), ZooKeeperMasterModel removedHosts (List<String>, List<String>, List<String>), TaskConfig containerPort (int, String), Builder dns (List<String>), ZooKeeperModelReporter connectionStateChanged (ConnectionState), ZooKeeperMasterModel getJobHistory (JobId, String), ZooKeeperMasterModel getDeploymentGroupStatus (String), TaskConfig healthCheck (), ZooKeeperMasterModel addJob (Job), ZooKeeperMasterModel rollingUpdateDeploy (ZooKeeperClient, RollingUpdateOpFactory, DeploymentGroup, String), ZooKeeperMasterModel assertTaskExists (ZooKeeperClient, String, JobId), BindVolumeContainerDecorator BindVolumeContainerDecorator (List<String>), TaskConfig TaskConfig (Builder), TaskConfig containerConfig (ImageInfo, Optional<String>), ZooKeeperMasterModel getJobHistory (JobId), MeterRates MeterRates (double, double, double), ZooKeeperMasterModel getAgentInfo (ZooKeeperClient, String), ZooKeeperMasterModel rollingUpdateTimedoutError (RollingUpdateOpFactory, String, JobId, TaskStatus), SignalAwaitingService SignalAwaitingService (CountDownLatch), ZooKeeperMasterModel getHosts (ZooKeeperClient, String), ZooKeeperMasterModel ZooKeeperMasterModel (ZooKeeperClientProvider, String, List<EventSender>, String), ZooKeeperMasterModel redundantUndeployment (Deployment, DeploymentGroup), ZooKeeperMasterModel rollingUpdateAwaitRunning (ZooKeeperClient, RollingUpdateOpFactory, DeploymentGroup, String), Builder host (String), HostInfoReporter dockerHost (), Check hashCode (), ZooKeeperMasterModel removeJob (JobId, String), NoopMasterMetrics jobsHistoryEventSize (int), Builder defaultRegistrationDomain (String), RollingUndeployPlanner rolloutTasks (List<String>), ZooKeeperMasterModel updateDeployment (String, Deployment, String), ZooKeeperMasterModel getDeployment (String, JobId), TaskConfig containerImage (), BindVolumeContainerDecorator isValidBind (String), CommonConfiguration setPubsubPrefixes (List<String>), ZooKeeperMasterModel addDeploymentGroup (DeploymentGroup), ZooKeeperMasterModel allowHostChange (DeploymentGroupStatus), ZooKeeperMasterModel staticPorts (Job), TaskConfig volumes (), MeterRates getFifteenMinuteRate (), NoOpContainerDecorator decorateContainerConfig (Job, ImageInfo, Optional<String>, ContainerConfig.Builder), ZooKeeperMasterModel getInitRollingUpdateOps (DeploymentGroup, ZooKeeperClient), DefaultReactor DefaultReactor (String, Callback), BindVolumeContainerDecorator decorateContainerConfig (Job, ImageInfo, Optional<String>, ContainerConfig.Builder), ZooKeeperMasterModel deployJob (String, Deployment), HostInfoReporter dockerVersion (com.spotify.docker.client.messages.Version), HostInfoReporter schedule (Runnable, ScheduledExecutorService), Check Check (String), TaskConfig containerName (), TaskConfig name (), ZooKeeperMasterModel getDeploymentGroup (String), TaskConfig endpointHealthCheck (String), ZooKeeperMasterModel emitEvents (String, List<Map<String,Object>>), ZooKeeperMasterModel ownedByDeploymentGroup (Deployment, DeploymentGroup), ZooKeeperMasterModel getHostInfo (ZooKeeperClient, String), ZooKeeperModelReporter checkException (Exception, String), ZooKeeperModelReporter noop (), ZooKeeperMasterModel getTaskStatus (ZooKeeperClient, String, JobId), Check register (CuratorTransaction), ZooKeeperMasterModel rollingUpdateUndeploy (ZooKeeperClient, RollingUpdateOpFactory, DeploymentGroup, String), ZooKeeperMasterModel rollingUpdateUndeploy (ZooKeeperClient, RollingUpdateOpFactory, DeploymentGroup, String, boolean)]","2550"
"7","helios/helios-services","2d5998e209ad71abfa34d11bfd89f19a845f0c44","c064cf0d5d00b8594823e5bf951259075854ab4a","REVERSE_IF_ELSE","3","1","6","[InterruptingScheduledService startUp (), InterruptingScheduledService runOneIteration (), InterruptingScheduledService schedule (Runnable, ScheduledExecutorService), InterruptingScheduledService beforeIteration (), InterruptingScheduledService run (), InterruptingScheduledService shutDown ()]","96"
"22","helios/helios-services","c064cf0d5d00b8594823e5bf951259075854ab4a","f5ca2fed1af3b713111d3c621529405737e06150","LOCAL_VAR_RENAMING","0","1","2","[TotalHealthCheckGauge getValue (), TotalHealthCheckGauge TotalHealthCheckGauge (HealthCheckRegistry)]","34"
"25","helios/helios-services","f5ca2fed1af3b713111d3c621529405737e06150","29671354178c80b4de8deca9dce347336a14d7fa","LOCAL_VAR_RENAMING","0","1","2","[TotalHealthCheckGauge getValue (), TotalHealthCheckGauge TotalHealthCheckGauge (HealthCheckRegistry)]","34"
"0","helios/helios-system-tests","29671354178c80b4de8deca9dce347336a14d7fa","d7a70d4f1b04b594127c9fea34890219107c5eb4","IF_DIVIDING","9","1","139","[SystemTestBase awaitHostStatus (String, HostStatus.Status, int, TimeUnit), VolumeTest recvUtf8 (int, int), CliJobCreationTest initialize (), SystemTestBase createJob (String, String, String, List<String>, Map<String,String>, Map<String,PortMapping>, Map<ServiceEndpoint,ServicePorts>), CliJobCreationTest testSuccessJsonOutput (), SystemTestBase removeContainer (DockerClient, String), SystemTestBase undeployJob (JobId, String), SystemTestBase createJob (String, String, String, List<String>, Map<String,String>, Map<String,PortMapping>), SystemTestBase flatten (Iterable<?>), SystemTestBase zk (), DeploymentGroupTest testRollingUpdateMigrateNothingToUndeploy (), DeploymentGroupTest initialize (), SystemTestBase stopJob (JobId, String), CliJobCreationTest testTemplateAmbiguousJobJsonOutput (), SystemTestBase startAgent (String), SystemTestBase awaitTaskGone (HeliosClient, String, JobId, long, TimeUnit), SystemTestBase assertJobEquals (Job, Job), SystemTestBase startDefaultMaster (String), AgentStateDirConflictTest setup (), SystemTestBase startDefaultMaster (int, String), SystemTestBase startDefaultMasters (int, String), DeploymentGroupTest awaitUpWithLabels (String, String), AgentStateDirConflictTest stopQuietly (Service), VolumeTest call (), SystemTestBase masterName (), CliJobCreationTest testMergeFileAndCliArgs (), DeploymentGroupTest testStopDeploymentGroupGroupNotFound (), SystemTestBase assertJobsEqual (Map<JobId,Job>, Map<JobId,Job>), NamespaceTest test (), DeploymentGroupTest testStopDeploymentGroup (), SystemTestBase client (String, String), VolumeTest testCli (), DeploymentGroupTest testRollingUpdatePerformance (), SystemTestBase masterEndpoint (), SystemTestBase main (String), SystemTestBase startDefaultMasterDontWaitForZk (CuratorClientFactory, String), SystemTestBase cliJson (Class<T>, String, String), DeploymentGroupTest testRollingUpdateWithOverlap (), CliJobCreationTest testMergeFileAndCliArgsEnvPrecedence (), ClusterDeploymentTest zooKeeperTestManager (), DeploymentGroupTest testStatusNoRollingUpdate (), DeploymentGroupTest testStoppedJob (), AgentStateDirConflictTest makeAgent (String), LabelTest testCliHosts (), SystemTestBase awaitHostStatus (HeliosClient, String, HostStatus.Status, int, TimeUnit), SystemTestBase awaitHostStatusWithHostInfo (HeliosClient, String, HostStatus.Status, int, TimeUnit), CliJobCreationTest testInvalidJobJsonOutput (), SystemTestBase cliJson (Class<T>, String, List<String>), SystemTestBase baseTeardown (), SystemTestBase awaitJobState (HeliosClient, String, JobId, TaskStatus.State, int, TimeUnit), SystemTestBase startMaster (CuratorClientFactory, String), SystemTestBase deployJob (JobId, String), SystemTestBase createJobRawOutput (Job), ClusterDeploymentTest deploy (Job, String), SystemTestBase randomHexString (), SystemTestBase cli (String, String), SystemTestBase deployJob (JobId, String, String), SystemTestBase getOrNull (ListenableFuture<T>), DeploymentGroupTest testIdenticalRollouts (), DeploymentGroupTest testRemoveDeploymentGroupInactive (), SystemTestBase awaitDeploymentGroupStatus (HeliosClient, String, DeploymentGroupStatus.State), DeploymentGroupTest call (), SystemTestBase isCircleCi (), JobWatchExactTest write (int), SystemTestBase awaitHostRegistered (HeliosClient, String, int, TimeUnit), CliJobCreationTest testTemplateUnknownJobJsonOutput (), VolumeTest assertVolumes (JobId), SystemTestBase waitForMasterToBeFullyUp (), SystemTestBase flatten (Object), SystemTestBase masterAdminEndpoint (), SystemTestBase deregisterHost (String), LabelTest hostLabels (Set<String>), SystemTestBase createJob (Job), SystemTestBase startDefaultAgent (String, String), DeploymentGroupTest testRollingUpdateGroupNotFound (), DeploymentGroupTest awaitUndeployed (String, JobId), SystemTestBase cli (String, Object), AgentZooKeeperDownTolerationTest call (), SystemTestBase awaitHostRegistered (String, long, TimeUnit), DeploymentGroupTest testRollingUpdate (), JobWatchExactTest test (), SystemTestBase awaitTaskState (JobId, String, TaskStatus.State), AgentStateDirConflictTest test (), SystemTestBase dockerPortRange (), MultipleJobsTest jobStatusBulk (), SystemTestBase setupDefaultMaster (String), SystemTestBase main (Collection<String>), ClusterDeploymentTest onSuccess (JobUndeployResponse), SystemTestBase cli (String, List<String>), AgentZooKeeperDownTolerationTest test (), VolumeTest testClient (), DeploymentGroupTest testRollingUpdateMigrateWithToken (), SystemTestBase createJob (String, String, String, List<String>, Date), SystemTestBase createJob (String, String, String, List<String>, ImmutableMap<String,String>), AgentStateDirConflictTest teardown (), DeploymentGroupTest testAgentAddedAfterRollingUpdateIsDeployed (), DeploymentGroupTest testRollingUpdateWithToken (), SystemTestBase startMaster (String), AgentStateDirConflictTest uncaughtException (Thread, Throwable), SystemTestBase createJob (String, String, String, List<String>), DeploymentGroupTest testRollingUpdateWithOverlapAndParallelism (), ClusterDeploymentTest setup (), SystemTestBase defaultClient (), SystemTestBase listContainers (DockerClient, String), ClusterDeploymentTest onFailure (Throwable), SystemTestBase awaitJobThrottle (HeliosClient, String, JobId, ThrottleState, int, TimeUnit), ClusterDeploymentTest host (int), SystemTestBase resetAgentStateDir (), SystemTestBase createJob (String, String, String, String, List<String>, Map<String,String>, Map<String,PortMapping>, Map<ServiceEndpoint,ServicePorts>, Integer, Map<String,String>, Date), SystemTestBase startJob (JobId, String), DeploymentGroupTest testListDeploymentGroups (), SystemTestBase zooKeeperTestManager (), SystemTestBase baseSetup (), VolumeTest setup (), SystemTestBase dockerSetup (), SystemTestBase testHost (), SystemTestBase staticSetup (), SystemTestBase awaitHostStatusWithLabels (HeliosClient, String, HostStatus.Status, Map<String,String>), SystemTestBase listThreads (), LabelTest testHostLabels (), SystemTestBase getNewDockerClient (), SystemTestBase stopAgent (AgentMain), CliJobCreationTest call (), ClusterDeploymentTest undeploy (JobId, String), SystemTestBase temporaryPorts (), SystemTestBase masterPort (), SystemTestBase setupDefaultMaster (int, String), SystemTestBase assertDockerReachable (int), SystemTestBase masterAdminPort (), ClusterDeploymentTest onSuccess (JobDeployResponse), DeploymentGroupTest testRemovingAgentTagUndeploysJob (), DeploymentGroupTest testRollingUpdateMigrate (), DeploymentGroupTest testRemoveDeploymentGroupActive (), SystemTestBase createJob (String, String, String, List<String>, Map<String,String>, Map<String,PortMapping>, Map<ServiceEndpoint,ServicePorts>, Integer, Map<String,String>), PortCollisionJobTest test (), VolumeTest recv (int, int), SystemTestBase call (), ClusterDeploymentTest verifyCanDeployOnSeveralHosts (), DeploymentGroupTest testRollingUpdateCoordination ()]","1668"
"9","helios/helios-system-tests","d7a70d4f1b04b594127c9fea34890219107c5eb4","a30e1822ea2077fe9a6278eb0ead82b5f571e30c","LOCAL_VAR_RENAMING","0","1","2","[ClusterDeploymentTest zooKeeperTestManager (), ClusterDeploymentTest undeploy (JobId, String)]","24"
"16","helios/helios-system-tests","a30e1822ea2077fe9a6278eb0ead82b5f571e30c","a930c02d557edcb8236676e795e82b91aef4dbe6","LOCAL_VAR_RENAMING","0","1","1","[ClusterDeploymentTest undeploy (JobId, String)]","12"
"41","helios/helios-system-tests","a930c02d557edcb8236676e795e82b91aef4dbe6","2473745b57ef782695eda72db13520d89a4ce93e","LOCAL_VAR_RENAMING","0","1","3","[ClusterDeploymentTest zooKeeperTestManager (), ClusterDeploymentTest onSuccess (JobDeployResponse), ClusterDeploymentTest deploy (Job, String)]","36"
"0","helios/helios-testing-common","2473745b57ef782695eda72db13520d89a4ce93e","1b81e6b79bc40051976dc5fe370d003da655a4f4","SWITCH_EQUAL_SIDES","14","1","73","[TemporaryPorts run (), ZooKeeperTestManager curatorWithSuperAuth (), ZooKeeperTestingClusterManager awaitUp (long, TimeUnit), ZooKeeperTestManager awaitUp (long, TimeUnit), Polling awaitUnchecked (long, TimeUnit, Callable<T>), ZooKeeperTestManager awaitDown (int, TimeUnit), TemporaryPorts TemporaryPorts (Builder), Builder end (), ZooKeeperTestingClusterManager stop (), TemporaryPorts available (int), ZooKeeperTestingClusterManager resetPeer (int), ZooKeeperTestingClusterManager startPeer (int), ZooKeeperTestingServerManager connectString (), ZooKeeperTestManager connectString (), AllocatedPort release (), ZooKeeperTestingServerManager start (), AllocationFailedException builder (), ZooKeeperTestingClusterManager ensure (String), ZooKeeperTestingClusterManager peerCurator (int), TemporaryPorts create (), ZooKeeperTestingClusterManager apply (InetSocketAddress), ZooKeeperTestingClusterManager awaitDown (int, TimeUnit), ZooKeeperTestingServerManager close (), ZooKeeperTestingClusterManager createPeers (int), ZooKeeperTestingServerManager restore (Path), Builder lockDirectory (), ZooKeeperTestingClusterManager stopPeer (int), ZooKeeperTestingClusterManager call (), ZooKeeperTestManager start (), TemporaryPorts localPort (String), TemporaryPorts localPortRange (String, int), ZooKeeperTestingServerManager awaitDown (int, TimeUnit), ZooKeeperTestingClusterManager apply (InstanceSpec), Builder retries (), ZooKeeperTestingClusterManager createCurator (String), ZooKeeperTestingClusterManager ZooKeeperTestingClusterManager (), Builder retries (int), Builder start (int), Builder build (), Builder release (), ZooKeeperTestingClusterManager endpoints (Iterable<InetSocketAddress>), ZooKeeperTestingClusterManager start0 (), ZooKeeperTestingClusterManager close (), ZooKeeperTestingClusterManager allocateAddresses (List<InstanceSpec>), ZooKeeperTestingClusterManager curatorWithSuperAuth (), ZooKeeperTestingClusterManager connectString (), ZooKeeperTestingServerManager ZooKeeperTestingServerManager (), AllocatedPort port (), ZooKeeperTestingServerManager stop (), Builder end (int), ZooKeeperTestManager ensure (String), TemporaryPorts tryAcquire (String, int), TemporaryPorts after (), ZooKeeperTestingClusterManager start (), TemporaryPorts lock (int, String), ZooKeeperTestingClusterManager createCurators (List<InetSocketAddress>), ZooKeeperTestManager stop (), ZooKeeperTestingServerManager awaitUp (long, TimeUnit), Builder release (boolean), ZooKeeperTestingClusterManager connectString (Iterable<InetSocketAddress>), ZooKeeperTestingClusterManager peerDir (int), ZooKeeperTestingServerManager reset (), ZooKeeperTestManager close (), ZooKeeperTestingServerManager backup (Path), TemporaryPorts randomPort (), ZooKeeperTestingServerManager ensure (String), AllocatedPort AllocatedPort (int, Path, FileChannel, FileLock), Polling await (long, TimeUnit, Callable<T>), ZooKeeperTestingServerManager curatorWithSuperAuth (), Builder start (), ZooKeeperTestingClusterManager connectString (InetSocketAddress), Builder lockDirectory (Path), TemporaryPorts releasePorts ()]","365"
"3","helios/helios-testing-common","1b81e6b79bc40051976dc5fe370d003da655a4f4","d84941bfea1a0a70fba06c78fcfd0f9ca4545a75","LOCAL_VAR_RENAMING","0","1","4","[ThreadPoolScheduler ThreadPoolScheduler (), ThreadPoolScheduler Parallelized (Class<?>), ThreadPoolScheduler schedule (Runnable), ThreadPoolScheduler finished ()]","24"
"4","helios/helios-testing-common","d84941bfea1a0a70fba06c78fcfd0f9ca4545a75","1a23d348d96a6b8d6cdb066225a3f7ed42dc365b","FOR_TO_WHILE","1","1","1","[Polling await (long, TimeUnit, Callable<T>)]","6"
"5","helios/helios-testing-common","1a23d348d96a6b8d6cdb066225a3f7ed42dc365b","9cf2118ba90e5f77bf30f6c17a934121f2916c5d","SWITCH_EQUAL_SIDES","14","1","3","[TemporaryPorts lock (int, String), TemporaryPorts available (int), TemporaryPorts localPortRange (String, int)]","18"
"20","helios/helios-testing-common","9cf2118ba90e5f77bf30f6c17a934121f2916c5d","957e93456a679f8dcde294a6f57dc1e04e868ff8","LOCAL_VAR_RENAMING","0","1","1","[Polling await (long, TimeUnit, Callable<T>)]","6"
"27","helios/helios-testing-common","957e93456a679f8dcde294a6f57dc1e04e868ff8","d37e781c79b75528d38ae6beaebbf19a9ade769b","LOCAL_VAR_RENAMING","0","1","2","[ThreadPoolScheduler Parallelized (Class<?>), ThreadPoolScheduler finished ()]","12"
"29","helios/helios-testing-common","d37e781c79b75528d38ae6beaebbf19a9ade769b","f33ab2ec5b00f9016770e477e634815eb326d145","LOCAL_VAR_RENAMING","0","1","4","[TemporaryPorts lock (int, String), TemporaryPorts available (int), TemporaryPorts localPort (String), AllocatedPort release ()]","24"
"30","helios/helios-testing-common","f33ab2ec5b00f9016770e477e634815eb326d145","b454f646772d47c118c1b1b2f39af07df7bfe722","LOOP_IF_CONTINUE_TO_ELSE","11","1","1","[TemporaryPorts localPort (String)]","6"
"31","helios/helios-testing-common","b454f646772d47c118c1b1b2f39af07df7bfe722","6f05a01bd0e5e0afd5adb0f4417d5b646019e632","SWITCH_EQUAL_SIDES","14","1","3","[TemporaryPorts lock (int, String), TemporaryPorts available (int), TemporaryPorts localPortRange (String, int)]","18"
"32","helios/helios-testing-common","6f05a01bd0e5e0afd5adb0f4417d5b646019e632","830ae9295a267e5a23bbf7abe6a767f19397dbeb","LOCAL_VAR_RENAMING","0","1","3","[TemporaryPorts localPort (String), TemporaryPorts localPortRange (String, int), TemporaryPorts after ()]","18"
"34","helios/helios-testing-common","830ae9295a267e5a23bbf7abe6a767f19397dbeb","c96616f21cca2b12e80d3bd1080a50689749c9c7","REVERSE_IF_ELSE","3","1","2","[TemporaryPorts lock (int, String), AllocatedPort release ()]","12"
"37","helios/helios-testing-common","c96616f21cca2b12e80d3bd1080a50689749c9c7","408fc21bfe9b236e68602d250fc778ec4c65b6eb","STATEMENTS_ORDER_REARRANGEMENT","10","1","4","[AllocatedPort AllocatedPort (int, Path, FileChannel, FileLock), TemporaryPorts localPort (String), TemporaryPorts localPortRange (String, int), TemporaryPorts after ()]","24"
"38","helios/helios-testing-common","408fc21bfe9b236e68602d250fc778ec4c65b6eb","380ad8b2bf6f6b1171fc9b19664ed6394fd5190b","LOCAL_VAR_RENAMING","0","1","2","[Builder lockDirectory (Path), Builder lockDirectory ()]","12"
"40","helios/helios-testing-common","380ad8b2bf6f6b1171fc9b19664ed6394fd5190b","152cf0d02587b301f960a978b5ae647713f4ec3b","LOCAL_VAR_RENAMING","0","1","2","[ThreadPoolScheduler schedule (Runnable), ThreadPoolScheduler finished ()]","12"
"45","helios/helios-testing-common","152cf0d02587b301f960a978b5ae647713f4ec3b","b905dbc5c3a63bbcf642a372c310cb6242496fb1","LOCAL_VAR_RENAMING","0","1","3","[TemporaryPorts localPort (String), TemporaryPorts localPortRange (String, int), TemporaryPorts TemporaryPorts (Builder)]","18"
"58","helios/helios-testing-common","b905dbc5c3a63bbcf642a372c310cb6242496fb1","add4742c671a84b9906a2f1a6a742cd3d2c5f7b5","STATEMENTS_ORDER_REARRANGEMENT","10","1","4","[AllocatedPort AllocatedPort (int, Path, FileChannel, FileLock), TemporaryPorts localPort (String), TemporaryPorts localPortRange (String, int), TemporaryPorts after ()]","24"
"0","helios/helios-testing","add4742c671a84b9906a2f1a6a742cd3d2c5f7b5","8d08887e87bc2b7be98379f31b23ce57c74fa6e5","VAR_DECLARATION_DIVIDING","13","1","115","[HeliosDeploymentException HeliosDeploymentException (String, Throwable), Builder testReportDirectory (String), TemporaryJobs create (String), DefaultDeployer readyToDeploy (), JobPrefixFile prefix (), Builder Builder (String, Config, Map<String,String>, HeliosClient.Builder), DefaultProber probe (String, PortMapping), TemporaryJobs job (), HeliosSoloLogService scheduler (), InMemoryLogStreamFollower create (), JobPrefixFile create (Path), DefaultDeployer deploy (Job, List<String>, Set<String>, Prober, TemporaryJobReports.ReportWriter), Builder hostPickingStrategy (HostPickingStrategy), TemporaryJobs initialValue (), HeliosDeploymentException HeliosDeploymentException (Throwable), Builder processHostPickingStrategy (), TemporaryJobs call (), TemporaryJob TemporaryJob (HeliosClient, Prober, TemporaryJobReports.ReportWriter, Job, List<String>, Set<String>, String, long), HeliosDeploymentResource client (), TemporaryJob port (String, String), Builder endpoints (List<URI>), Builder hostFilter (String), TemporaryJobs after (Optional<TemporaryJobReports.ReportWriter>), JobPrefixFile JobPrefixFile (Path, FileChannel, FileLock), Builder domain (String), TemporaryJobs perform (Statement, TemporaryJobReports.ReportWriter), TemporaryJob undeploy (List<AssertionError>), HeliosSoloLogService runOneIteration (), Builder build (), HeliosSoloLogService HeliosSoloLogService (HeliosClient, DockerClient, LogStreamFollower), TemporaryJobs getListByKey (String, Config), Builder client (HeliosClient), JobPrefixFile close (AutoCloseable), TemporaryJobs prefix (), Builder user (String), JobPrefixFile tryFromExistingFile (Path), TemporaryJobs apply (Statement, Description), InMemoryLogStreamFollower getStdout (JobId), InMemoryLogStreamFollower InMemoryLogStreamFollower (ConcurrentMap<JobId,StreamHolder>), TemporaryJobs builder (Map<String,String>), Builder jobPrefix (String), TemporaryJob hosts (), Builder deployer (Deployer), DefaultDeployer DefaultDeployer (HeliosClient, List<TemporaryJob>, HostPickingStrategy, String, long), HeliosSoloLogService shutDown (), LogFollowJob LogFollowJob (String, JobId), TemporaryJob deploy (), TemporaryJobs builder (String, Map<String,String>, HeliosClient.Builder), Builder endpointStrings (List<String>), JobPrefixFile JobPrefixFile (String, Path), Builder endpoints (URI), HeliosDeploymentResource after (), TemporaryJobs builder (), StreamHolder StreamHolder (ByteArrayOutputStream, ByteArrayOutputStream), TemporaryJob job (), DefaultDeployer deploy (Job, String, Set<String>, Prober, TemporaryJobReports.ReportWriter), Builder prefixDirectory (String), TemporaryJobs builder (String, Map<String,String>), TemporaryJobs builder (String), TemporaryJobs jobWithConfig (String), TemporaryJobs evaluate (), HeliosDeploymentException HeliosDeploymentException (String), TemporaryJob addresses (String), TemporaryJobs client (), Builder jobDeployedMessageFormat (String), Builder deployTimeoutMillis (long), DefaultProber probeUdpPort (String, PortMapping), JobPrefixFile create (String, Path), Builder configureWithEnv (), Builder reports (TemporaryJobReports), TemporaryJob call (), Builder heliosClientHttpTimeoutSeconds (int), HeliosConfig loadConfig (), TemporaryJobs verifyJobsHealthy (), JobPrefixFile release (), TemporaryJob statuses (), HeliosDeploymentResource before (), TemporaryJob address (String), DefaultProber probeTcpPort (String, PortMapping), TemporaryJob outputDeployedMessage (String, String), InMemoryLogStreamFollower writeAndFlush (ByteBuffer, OutputStream), Builder prober (Prober), HeliosConfig getProfile (String, String, Config), LogFollowJob call (), Builder verifyHasStrategyKey (String), HeliosConfig getDefaultProfile (String, String, Config), TemporaryJobs create (), HeliosDeploymentResource call (), TemporaryJobs after (), TemporaryJob undeploy (), TemporaryJob awaitUp (String), TemporaryJob awaitPort (String, String), InMemoryLogStreamFollower followLog (JobId, String, Iterator<LogMessage>), TemporaryJobs createFromProfile (String), TemporaryJobs apply (TemporaryJobReports.ReportWriter), TemporaryJobs TemporaryJobs (Builder, Config), TemporaryJobs create (HeliosClient), TemporaryJobs jobPrefixFile (), InMemoryLogStreamFollower getStderr (JobId), HeliosDeploymentResource HeliosDeploymentResource (HeliosDeployment), TemporaryJobs before (), TemporaryJobs job (Job.Builder), TemporaryJob endpointFromHost (String), Builder endpoints (String), TemporaryJob verifyHealthy (String, TaskStatus), Polling await (long, TimeUnit, String, Callable<T>), JobPrefixFile deleteIfExists (Path), DefaultDeployer pickHost (List<String>), HeliosSoloLogService executor (), HeliosSoloLogService get (Future<T>), TemporaryJob verifyHealthy (), JobPrefixFile close (), TemporaryJobs removeOldJobs (), JobPrefixFile delete (), Polling awaitUnchecked (long, TimeUnit, String, Callable<T>)]","1265"
"2","helios/helios-testing","8d08887e87bc2b7be98379f31b23ce57c74fa6e5","29632d56e87b55e9372e918ed43187c40ab85484","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[HeliosSoloLogService HeliosSoloLogService (HeliosClient, DockerClient, LogStreamFollower)]","11"
"6","helios/helios-testing","29632d56e87b55e9372e918ed43187c40ab85484","356f3a44a860f163db6a8fc1b7fbd31cdfaa9e41","REVERSE_IF_ELSE","3","1","2","[HeliosSoloLogService runOneIteration (), LogFollowJob call ()]","22"
"11","helios/helios-testing","356f3a44a860f163db6a8fc1b7fbd31cdfaa9e41","46f029469537aa94800befb5f99f4b1569a08228","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[HeliosSoloLogService HeliosSoloLogService (HeliosClient, DockerClient, LogStreamFollower)]","11"
"18","helios/helios-testing","46f029469537aa94800befb5f99f4b1569a08228","5632763fb53efaab4d73a87fe4522ad3a9048d95","SWITCH_EQUAL_SIDES","14","1","1","[HeliosSoloLogService runOneIteration ()]","11"
"23","helios/helios-testing","5632763fb53efaab4d73a87fe4522ad3a9048d95","f01555909616badb01e444f640431e981666795d","SWITCH_EQUAL_SIDES","14","1","1","[HeliosSoloLogService runOneIteration ()]","11"
"27","helios/helios-testing","f01555909616badb01e444f640431e981666795d","5e59666215b9a5efd525ac828455b7e79d7080f1","LOCAL_VAR_RENAMING","0","1","1","[HeliosSoloLogService runOneIteration ()]","11"
"28","helios/helios-testing","5e59666215b9a5efd525ac828455b7e79d7080f1","86d15b30b32c3881931b017aff785790f154b44b","LOCAL_VAR_RENAMING","0","1","2","[HeliosSoloLogService runOneIteration (), LogFollowJob call ()]","22"
"30","helios/helios-testing","86d15b30b32c3881931b017aff785790f154b44b","53e4f067778340f7d13d58f0cd6d69c53afa2883","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[HeliosSoloLogService HeliosSoloLogService (HeliosClient, DockerClient, LogStreamFollower), LogFollowJob LogFollowJob (String, JobId)]","22"
"32","helios/helios-testing","53e4f067778340f7d13d58f0cd6d69c53afa2883","7ca3e85b16764ae199561d1f99dd1db703813d79","LOCAL_VAR_RENAMING","0","1","2","[HeliosSoloLogService runOneIteration (), HeliosSoloLogService shutDown ()]","22"
"37","helios/helios-testing","7ca3e85b16764ae199561d1f99dd1db703813d79","68f26c3ad8db7a80f3808ca6e5523b57d1637fc3","LOCAL_VAR_RENAMING","0","1","1","[LogFollowJob call ()]","11"
"38","helios/helios-testing","68f26c3ad8db7a80f3808ca6e5523b57d1637fc3","8caae60b8a214374d149986383e568ace36b0be2","SWITCH_EQUAL_SIDES","14","1","1","[HeliosSoloLogService runOneIteration ()]","11"
"39","helios/helios-testing","8caae60b8a214374d149986383e568ace36b0be2","7179464a66a30200eb69bbd8d6918dc745826867","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[HeliosSoloLogService shutDown (), LogFollowJob LogFollowJob (String, JobId)]","22"
"40","helios/helios-testing","7179464a66a30200eb69bbd8d6918dc745826867","ad9aef9264b33606c81618f9404f332c7012997b","SWITCH_EQUAL_SIDES","14","1","1","[HeliosSoloLogService runOneIteration ()]","11"
"42","helios/helios-testing","ad9aef9264b33606c81618f9404f332c7012997b","f1192ef1fd393ca419a11a86933eed6c9aa677a6","SWITCH_EQUAL_SIDES","14","1","1","[HeliosSoloLogService runOneIteration ()]","11"
"46","helios/helios-testing","f1192ef1fd393ca419a11a86933eed6c9aa677a6","063b0a777fed4f5114b74fe0b34527f4cc2b05a8","LOCAL_VAR_RENAMING","0","1","3","[HeliosSoloLogService runOneIteration (), HeliosSoloLogService HeliosSoloLogService (HeliosClient, DockerClient, LogStreamFollower), LogFollowJob call ()]","33"
"53","helios/helios-testing","063b0a777fed4f5114b74fe0b34527f4cc2b05a8","495f247231e68b5bd253b8b6ac91e546fa54f31a","REVERSE_IF_ELSE","3","1","2","[HeliosSoloLogService runOneIteration (), LogFollowJob call ()]","22"
"56","helios/helios-testing","495f247231e68b5bd253b8b6ac91e546fa54f31a","7c83d86550fcec2eacb58b3fc80e56101dbd6c9d","SWITCH_EQUAL_SIDES","14","1","1","[HeliosSoloLogService runOneIteration ()]","11"
"57","helios/helios-testing","7c83d86550fcec2eacb58b3fc80e56101dbd6c9d","c030aa1e48171ebf0140bb1a1b18c77262fd5266","LOCAL_VAR_RENAMING","0","1","2","[HeliosSoloLogService runOneIteration (), HeliosSoloLogService HeliosSoloLogService (HeliosClient, DockerClient, LogStreamFollower)]","22"
"59","helios/helios-testing","c030aa1e48171ebf0140bb1a1b18c77262fd5266","530a1cb32b988b9cbe7920460273d902346cb862","SWITCH_EQUAL_SIDES","14","1","1","[HeliosSoloLogService runOneIteration ()]","11"
"60","helios/helios-testing","530a1cb32b988b9cbe7920460273d902346cb862","0e12d6263c6c1956b04bad853003f5888ad181dc","SWITCH_EQUAL_SIDES","14","1","1","[HeliosSoloLogService runOneIteration ()]","11"
"65","helios/helios-testing","0e12d6263c6c1956b04bad853003f5888ad181dc","1bf57be83e7a32e45da690e94844413814cc5cf7","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[HeliosSoloLogService HeliosSoloLogService (HeliosClient, DockerClient, LogStreamFollower), LogFollowJob LogFollowJob (String, JobId)]","22"
"0","helios/helios-tools","1bf57be83e7a32e45da690e94844413814cc5cf7","d42b9464b7e6270b1a6172d51fd6ba5f389cc1f8","STATEMENTS_ORDER_REARRANGEMENT","10","1","90","[HostStatusDisplayer displayTask (boolean, JobStatusTable, JobId, JobStatus, Map<String,TaskStatus>, Iterable<String>), ScoredHost compare (ScoredHost, ScoredHost), CliConfig getMasterEndpoints (), ExplicitTarget getEndpointSupplier (), JobWatchCommand JobWatchCommand (Subparser), ScoredHost sortScoredHosts (List<ScoredHost>), JobListCommand escape (List<String>), SrvTarget SrvTarget (String, String), JobStatusCommand JobStatusCommand (Subparser), CliConfig fromFile (File, Map<String,String>), ScoredHost getSortedMatches (String), RollingUpdateCommand sleep (long), ExplicitTarget toString (), HostStatusDisplayer showJsonStatuses (PrintStream, String, Set<JobId>, Map<JobId,JobStatus>), JobCreateCommand parseListOfPairs (List<String>, String, String), JobStartCommand JobStartCommand (Subparser), SrvTarget getEndpointSupplier (), CliConfig CliConfig (List<String>, String, List<URI>), ExplicitTarget ExplicitTarget (URI), CliConfig getUsername (), JobWatchCommand hostMatches (List<String>, String), CliConfig getSrvName (), CliConfig fromEnvVar (Config, Map<String,String>), ScoredHost resolveName (String), ScoredHost findPrefixMatches (String), JobCreateCommand JobCreateCommand (Subparser), JobCreateCommand parseListOfPairs (List<String>, String), JobWatchCommand showReport (PrintStream, boolean, List<String>, Set<JobId>, DateTimeFormatter, HeliosClient), JobCreateCommand JobCreateCommand (Subparser, Supplier<Map<String,String>>), SrvTarget getDomain (), HostStatusDisplayer showStatusesForHosts (String, Set<JobId>, Map<JobId,JobStatus>, HostStatusDisplayer), JobWatchCommand chop (String, int), RollingUpdateCommand runWithJob (Namespace, HeliosClient, PrintStream, boolean, Job, BufferedReader), JobStatusTable task (JobId, String, TaskStatus, Deployment), CliConfig getConfigDirName (), CliConfig getConfigFileName (), CliConfig getDomainsString (), DeploymentGroupStatusCommand printTable (PrintStream, JobId, List<DeploymentGroupStatusResponse.HostStatus>, boolean), RollingUpdateCommand RollingUpdateCommand (Subparser, SleepFunction, Supplier<Long>), JobCreateCommand defaultMetadata (), ExplicitTarget from (String, Iterable<String>), ScoredHost scoreMatches (List<String>), SleepFunction sleep (long), SrvTarget toString (), SleepFunction nullableWithFallback (T, T), JobListCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader), ScoredHost ScoredHost (String, int), JobCreateCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader), HostRegisterCommand HostRegisterCommand (Subparser), SrvTarget hashCode (), JobRemoveCommand runWithJob (Namespace, HeliosClient, PrintStream, boolean, Job, BufferedReader), CliConfig fromUserConfig (Map<String,String>), JobStatusTable print (), ExplicitTarget hashCode (), Target getEndpointSupplier (), ExplicitTarget from (URI), CliConfig fromConfig (Config), JobCreateCommand nullOrInteger (String), DeploymentGroupRemoveCommand DeploymentGroupRemoveCommand (Subparser), HostResolver HostResolver (Set<String>, Name[]), RollingUpdateCommand get (), JobCreateCommand get (), HostStatusDisplayer filterJobStatus (JobStatus, Iterable<String>), DeploymentGroupStatusCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader), ScoredHost findMatchesWithLowestScore (List<ScoredHost>), SrvTarget getSrv (), JobRemoveCommand JobRemoveCommand (Subparser), ExplicitTarget equals (Object), JobStatusTable JobStatusTable (PrintStream, boolean), DeploymentGroupStatusCommand DeploymentGroupStatusCommand (Subparser), JobListCommand getJobStatuses (HeliosClient, Map<JobId,Job>, boolean), Target getName (), JobStartCommand runWithJob (Namespace, HeliosClient, PrintStream, boolean, Job, BufferedReader), HostStatusDisplayer matchedStatus (JobStatus, Iterable<String>, Map<String,TaskStatus>), JobWatchCommand run (Namespace, List<TargetAndClient>, PrintStream, boolean, BufferedReader), HostStatusDisplayer run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader), Target Target (String), JobWatchCommand watchJobsOnHosts (PrintStream, boolean, List<String>, Set<JobId>, int, List<TargetAndClient>), SrvTarget equals (Object), CliConfig getDomains (), HostRegisterCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader), ExplicitTarget getEndpoint (), JobListCommand JobListCommand (Subparser), HostResolver create (HeliosClient), JobWatchCommand watchJobsOnHosts (PrintStream, boolean, List<String>, List<JobId>, Integer, HeliosClient), JobListCommand escape (String), JobWatchCommand getStatuses (HeliosClient, Set<JobId>), DeploymentGroupRemoveCommand run (Namespace, HeliosClient, PrintStream, boolean, BufferedReader), RollingUpdateCommand RollingUpdateCommand (Subparser), DeploymentGroupStatusCommand run0 (HeliosClient, PrintStream, boolean, String, boolean)]","1260"
"9","helios/helios-tools","d42b9464b7e6270b1a6172d51fd6ba5f389cc1f8","abc30f89578fea7d937a1b89ebd867d86b5dc7d8","REVERSE_IF_ELSE","3","1","1","[JobRemoveCommand runWithJob (Namespace, HeliosClient, PrintStream, boolean, Job, BufferedReader)]","14"
"12","helios/helios-tools","abc30f89578fea7d937a1b89ebd867d86b5dc7d8","1158bab774149f6ede9318fdfd8a399154c0f1f6","LOCAL_VAR_RENAMING","0","1","2","[JobRemoveCommand runWithJob (Namespace, HeliosClient, PrintStream, boolean, Job, BufferedReader), JobRemoveCommand JobRemoveCommand (Subparser)]","28"
"14","helios/helios-tools","1158bab774149f6ede9318fdfd8a399154c0f1f6","1ebc08879fe79e5d7df5af2b363a8fd4190f78dd","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JobRemoveCommand runWithJob (Namespace, HeliosClient, PrintStream, boolean, Job, BufferedReader)]","14"
"19","helios/helios-tools","1ebc08879fe79e5d7df5af2b363a8fd4190f78dd","4499302df0025eebf3fc3e92021fcfe3011c23a4","SWITCH_EQUAL_SIDES","14","1","1","[JobRemoveCommand runWithJob (Namespace, HeliosClient, PrintStream, boolean, Job, BufferedReader)]","14"
"21","helios/helios-tools","4499302df0025eebf3fc3e92021fcfe3011c23a4","f9a142adfa4350098ef082eb67ab11f8b2500158","REVERSE_IF_ELSE","3","1","1","[JobRemoveCommand runWithJob (Namespace, HeliosClient, PrintStream, boolean, Job, BufferedReader)]","14"
"26","helios/helios-tools","f9a142adfa4350098ef082eb67ab11f8b2500158","490a09b263492b9724f71c093cbe7a55fb44db0c","REVERSE_IF_ELSE","3","1","1","[JobRemoveCommand runWithJob (Namespace, HeliosClient, PrintStream, boolean, Job, BufferedReader)]","14"
"28","helios/helios-tools","490a09b263492b9724f71c093cbe7a55fb44db0c","a0c1034e4cf8b61d8c2a1316ae297a60ca20ce23","LOCAL_VAR_RENAMING","0","1","1","[JobRemoveCommand runWithJob (Namespace, HeliosClient, PrintStream, boolean, Job, BufferedReader)]","14"
"32","helios/helios-tools","a0c1034e4cf8b61d8c2a1316ae297a60ca20ce23","2a143fc18c41d9f666ddc411618f5d5b6bd0a425","SWITCH_EQUAL_SIDES","14","1","1","[JobRemoveCommand runWithJob (Namespace, HeliosClient, PrintStream, boolean, Job, BufferedReader)]","14"
"33","helios/helios-tools","2a143fc18c41d9f666ddc411618f5d5b6bd0a425","bb9c9086d79e20bff3e154e7be94204d45e97a62","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JobRemoveCommand runWithJob (Namespace, HeliosClient, PrintStream, boolean, Job, BufferedReader)]","14"
"43","helios/helios-tools","bb9c9086d79e20bff3e154e7be94204d45e97a62","0fc29ca8fd0c11970bf290a5fc2fc8541c9c3071","REVERSE_IF_ELSE","3","1","1","[JobRemoveCommand runWithJob (Namespace, HeliosClient, PrintStream, boolean, Job, BufferedReader)]","14"
"50","helios/helios-tools","0fc29ca8fd0c11970bf290a5fc2fc8541c9c3071","44015df435bb68f3f4bf4353ad295212eb06198f","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JobRemoveCommand runWithJob (Namespace, HeliosClient, PrintStream, boolean, Job, BufferedReader)]","14"
"51","helios/helios-tools","44015df435bb68f3f4bf4353ad295212eb06198f","b60bbf2153927bbf1e6d63772fcad1ebe0a88c64","LOCAL_VAR_RENAMING","0","1","1","[JobRemoveCommand runWithJob (Namespace, HeliosClient, PrintStream, boolean, Job, BufferedReader)]","14"
"52","helios/helios-tools","b60bbf2153927bbf1e6d63772fcad1ebe0a88c64","6ef04b242ba255b95a1acf8eec0d5a9ca9973ae1","REVERSE_IF_ELSE","3","1","1","[JobRemoveCommand runWithJob (Namespace, HeliosClient, PrintStream, boolean, Job, BufferedReader)]","14"
"55","helios/helios-tools","6ef04b242ba255b95a1acf8eec0d5a9ca9973ae1","86c34b491d755965b149b32e0631874a36aaa6fd","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JobRemoveCommand runWithJob (Namespace, HeliosClient, PrintStream, boolean, Job, BufferedReader)]","14"
"56","helios/helios-tools","86c34b491d755965b149b32e0631874a36aaa6fd","f61afc72642f92157e60e9c1a0ef7172b4024748","REVERSE_IF_ELSE","3","1","1","[JobRemoveCommand runWithJob (Namespace, HeliosClient, PrintStream, boolean, Job, BufferedReader)]","14"
"57","helios/helios-tools","f61afc72642f92157e60e9c1a0ef7172b4024748","8cc26adca4a7decd17435b68db82b61052e1122b","SWITCH_EQUAL_SIDES","14","1","1","[JobRemoveCommand runWithJob (Namespace, HeliosClient, PrintStream, boolean, Job, BufferedReader)]","14"
"58","helios/helios-tools","8cc26adca4a7decd17435b68db82b61052e1122b","e8fb43c65350352224a6cfca548aaca04c9f902b","LOCAL_VAR_RENAMING","0","1","1","[JobRemoveCommand runWithJob (Namespace, HeliosClient, PrintStream, boolean, Job, BufferedReader)]","14"
"59","helios/helios-tools","e8fb43c65350352224a6cfca548aaca04c9f902b","89e2681b9fdb4791fb9a1de70c1a5150f1b73322","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JobRemoveCommand runWithJob (Namespace, HeliosClient, PrintStream, boolean, Job, BufferedReader)]","14"
"61","helios/helios-tools","89e2681b9fdb4791fb9a1de70c1a5150f1b73322","3c729632f715fd331c02f39813dcbeb7cb95145d","REVERSE_IF_ELSE","3","1","1","[JobRemoveCommand runWithJob (Namespace, HeliosClient, PrintStream, boolean, Job, BufferedReader)]","14"
"0","netty/buffer","fdb391085e68b9c843b5d9ff9ad5e9f923e3a572","5ebad1f90009a9220905a8a58c9ccb1c8ed0c4b6","SWITCH_STRING_EQUAL","15","1","708","[ByteWrapper toString (), UnpooledUnsafeHeapByteBuf _setLongLE (int, long), UnpooledDirectByteBuf _getByte (int), AdvancedLeakAwareByteBuf forEachByteDesc (int, int, ByteProcessor), ReadOnlyByteBufferBuf _setInt (int, int), ByteWrapper getBytes (int, ByteBuf, int, int), Component transferTo (ByteBuf), ByteWrapper isEmpty (T), UnpooledDirectByteBuf UnpooledDirectByteBuf (ByteBufAllocator, ByteBuffer, int), ReadOnlyByteBufferBuf memoryAddress (), AdvancedLeakAwareByteBuf getMediumLE (int), AdvancedLeakAwareByteBuf writeByte (int), ByteWrapper _getIntLE (int), ReadOnlyByteBufferBuf setByte (int, int), AdvancedLeakAwareByteBuf readRetainedSlice (int), UnsafeByteBufUtil setMediumLE (byte[], int, int), AdvancedLeakAwareByteBuf readBytes (ByteBuf, int), ReadOnlyByteBufferBuf setLongLE (int, long), UnpooledDirectByteBuf getByte (int), AdvancedLeakAwareByteBuf writeShortLE (int), AdvancedLeakAwareByteBuf copy (int, int), UnsafeByteBufUtil getBytes (AbstractByteBuf, long, int, byte[], int, int), UnpooledDirectByteBuf hasMemoryAddress (), ByteWrapper componentAtOffset (int), ByteWrapper _getShortLE (int), Component getBytes (int, ByteBuf), ReadOnlyByteBufferBuf readBytes (GatheringByteChannel, int), ByteWrapper checkForOverflow (int, int), Component unwrap (), ReadOnlyByteBufferBuf _setLong (int, long), AdvancedLeakAwareByteBuf setBytes (int, byte[], int, int), Component setBytes (int, byte[]), ByteWrapper internalComponentAtOffset (int), ReadOnlyByteBufferBuf alloc (), ByteWrapper _setLongLE (int, long), UnpooledDirectByteBuf _setIntLE (int, int), AdvancedLeakAwareByteBuf setBytes (int, byte[]), AdvancedLeakAwareByteBuf readByte (), Component writeBytes (ByteBuf, int), AbstractByteBufAllocator newHeapBuffer (int, int), UnpooledDirectByteBuf _getLong (int), AdvancedLeakAwareByteBuf getMedium (int), ByteWrapper _setLong (int, long), PoolChunkList toString (), AdvancedLeakAwareByteBuf readBytes (byte[], int, int), AdvancedLeakAwareByteBuf toString (Charset), UnpooledDirectByteBuf freeDirect (ByteBuffer), ByteWrapper isEmpty (byte[]), ReadOnlyByteBufferBuf asReadOnly (), AbstractByteBufAllocator heapBuffer (), AdvancedLeakAwareByteBuf getUnsignedShort (int), AdvancedLeakAwareByteBuf writeBytes (ByteBuffer), PoolChunk collapsePast (long), IntPriorityQueue isEmpty (), Component markReaderIndex (), UnsafeByteBufUtil getUnsignedMedium (long), UnsafeByteBufUtil setMediumLE (long, int), ByteWrapper _setShortLE (int, int), Processor reset (), AdvancedLeakAwareByteBuf getBytes (int, ByteBuffer), UnsafeByteBufUtil getLongLE (long), ByteWrapper _getUnsignedMedium (int), AdvancedLeakAwareByteBuf readShort (), AdvancedLeakAwareByteBuf readBytes (OutputStream, int), AdvancedLeakAwareByteBuf retain (int), UnpooledUnsafeHeapByteBuf _setMediumLE (int, int), Component writeBoolean (boolean), PoolChunk splitLargeRun (long, int), Component deallocate (), AdvancedLeakAwareByteBuf getShortLE (int), ReadOnlyByteBufferBuf getBytes (int, ByteBuf, int, int, boolean), AdvancedLeakAwareByteBuf readChar (), ReadOnlyByteBufferBuf isReadOnly (), AdvancedLeakAwareByteBuf getIntLE (int), ByteWrapper _setMediumLE (int, int), UnsafeByteBufUtil getLong (byte[], int), AdvancedLeakAwareByteBuf getBytes (int, FileChannel, long, int), UnpooledDirectByteBuf capacity (), PoolChunkList minUsage (), PoolChunkList add (PoolChunk<T>), UnsafeByteBufUtil setShortLE (byte[], int, int), UnsafeByteBufUtil setZero (byte[], int, int), AbstractByteBufAllocator compositeHeapBuffer (int), AdvancedLeakAwareByteBuf setLong (int, long), UnsafeByteBufUtil setByte (byte[], int, int), ByteWrapper forEachByteAsc0 (int, int, ByteProcessor), ReadOnlyDuplicatedByteBuf ensureWritable (int, boolean), ReadOnlyByteBufferBuf slice (int, int), AdvancedLeakAwareByteBuf writeBoolean (boolean), ByteWrapper addComponent (boolean, int, ByteBuf), UnpooledDirectByteBuf _getShort (int), ReadOnlyByteBufferBuf _setMediumLE (int, int), UnpooledDirectByteBuf setBytes (int, ByteBuffer), ReadOnlyByteBufferBuf setBytes (int, ByteBuf, int, int), AbstractByteBufAllocator directBuffer (int, int), AdvancedLeakAwareByteBuf touch (Object), UnsafeByteBufUtil getShortLE (byte[], int), AdvancedLeakAwareByteBuf duplicate (), ByteWrapper setBytes (int, InputStream, int), Component skipBytes (int), AdvancedLeakAwareByteBuf AdvancedLeakAwareByteBuf (ByteBuf, ByteBuf, ResourceLeakTracker<ByteBuf>), Component writeMedium (int), ByteWrapper consolidate (int, int), AdvancedLeakAwareByteBuf getUnsignedByte (int), AdvancedLeakAwareByteBuf setInt (int, int), CompositeByteBufIterator removeComp (int), PoolChunk isUsed (long), UnpooledDirectByteBuf getBytes (int, FileChannel, long, int, boolean), AdvancedLeakAwareByteBuf readBytes (int), ByteWrapper internalComponent (int), AdvancedLeakAwareByteBuf getCharSequence (int, int, Charset), ReadOnlySlicedByteBuf slice (int, int), CompositeByteBufIterator hasNext (), UnsafeByteBufUtil getShort (long), AdvancedLeakAwareByteBuf readUnsignedInt (), UnpooledDirectByteBuf _setShortLE (int, int), ReadOnlyByteBufferBuf getInt (int), PoolChunk removeAvailRun0 (long), AdvancedLeakAwareByteBuf readSlice (int), AbstractByteBufAllocator toString (), ByteWrapper _getInt (int), CompositeByteBuf CompositeByteBuf (ByteBufAllocator, boolean, int, Iterable<ByteBuf>), AdvancedLeakAwareByteBuf setBytes (int, ByteBuf, int), UnpooledUnsafeHeapByteBuf setShort (int, int), UnpooledDirectByteBuf UnpooledDirectByteBuf (ByteBufAllocator, int, int), PoolChunkList prevList (PoolChunkList<T>), AdvancedLeakAwareByteBuf setBytes (int, ByteBuf, int, int), ByteWrapper CompositeByteBuf (ByteBufAllocator, boolean, int, ByteWrapper<T>, T[], int), Component isAccessible (), UnpooledDirectByteBuf setBytes (int, ScatteringByteChannel, int), UnpooledDirectByteBuf _getInt (int), UnsafeByteBufUtil setShortLE (long, int), UnsafeByteBufUtil getLongLE (byte[], int), ByteWrapper setMedium (int, int), UnpooledDirectByteBuf getBytes (int, byte[], int, int, boolean), ByteWrapper addComponents0 (boolean, int, ByteBuf[], int), AdvancedLeakAwareByteBuf writeBytes (byte[]), UnsafeByteBufUtil copy (AbstractByteBuf, long, int, int), AdvancedLeakAwareByteBuf forEachByte (int, int, ByteProcessor), UnsafeByteBufUtil batchSetZero (long, int), AdvancedLeakAwareByteBuf writeMedium (int), ReadOnlyByteBufferBuf duplicate (), UnpooledUnsafeHeapByteBuf _getShort (int), ReadOnlySlicedByteBuf isWritable (int), ByteWrapper copyTo (int, int, int, ByteBuf), AdvancedLeakAwareByteBuf readInt (), AdvancedLeakAwareByteBuf writeLongLE (long), UnpooledUnsafeHeapByteBuf getByte (int), AdvancedLeakAwareByteBuf getBytes (int, OutputStream, int), ReadOnlyByteBufferBuf getBytes (int, FileChannel, long, int, boolean), AbstractByteBufAllocator directBuffer (int), PoolChunk destroy (), AbstractByteBufAllocator heapBuffer (int), ByteWrapper discardReadComponents (), ByteWrapper consolidate0 (int, int), PoolChunk getAvailRunByOffset (int), UnsafeByteBufUtil setBytes (AbstractByteBuf, long, int, ByteBuf, int, int), UnsafeByteBufUtil getInt (long), ByteWrapper setInt (int, int), ByteWrapper findComponent (int), AdvancedLeakAwareByteBuf getInt (int), UnsafeByteBufUtil getShort (byte[], int), ByteWrapper _getShort (int), UnpooledDirectByteBuf setBytes (int, FileChannel, long, int), PoolChunk pinnedBytes (), ByteWrapper arrayOffset (), AbstractByteBufAllocator directBuffer (), PoolChunkList maxUsage (), ReadOnlyByteBufferBuf getBytes (int, ByteBuffer, boolean), AdvancedLeakAwareByteBuf retainedSlice (int, int), PoolChunk PoolChunk (PoolArena<T>, Object, T, int), UnpooledDirectByteBuf nioBufferCount (), PoolChunk allocate (PooledByteBuf<T>, int, int, PoolThreadCache), PoolChunk lastPage (int, int), ReadOnlyByteBufferBuf _getIntLE (int), PoolChunk runFirstBestFit (int), Component writeBytes (ByteBuf, int, int), AdvancedLeakAwareByteBuf setIntLE (int, int), UnpooledDirectByteBuf setBytes (int, InputStream, int), ByteWrapper _getUnsignedMediumLE (int), UnpooledDirectByteBuf getBytes (int, ByteBuffer, boolean), AdvancedLeakAwareByteBuf order (ByteOrder), UnpooledDirectByteBuf getBytes (int, FileChannel, long, int), AdvancedLeakAwareByteBuf copy (), AdvancedLeakAwareByteBuf setBoolean (int, boolean), ReadOnlySlicedByteBuf asReadOnly (), Component writerIndex (int), ByteWrapper hasArray (), ReadOnlySlicedByteBuf ensureWritable (int, boolean), PoolChunk calculateRunSize (int), AdvancedLeakAwareByteBuf readBytes (ByteBuffer), AdvancedLeakAwareByteBuf writeLong (long), ByteWrapper discardReadBytes (), ByteWrapper copy (int, int), PoolChunk PoolChunk (PoolArena<T>, Object, T, int, int, int, int), PoolChunk allocateSubpage (int, PoolSubpage<T>), AbstractByteBufAllocator calculateNewCapacity (int, int), ByteWrapper getBytes (int, OutputStream, int), ByteWrapper _setShort (int, int), UnsafeByteBufUtil getLong (long), ReadOnlyByteBufferBuf getUnsignedMedium (int), UnpooledUnsafeHeapByteBuf setIntLE (int, int), CompositeByteBufIterator next (), AdvancedLeakAwareByteBuf readLongLE (), UnpooledDirectByteBuf order (), Component clear (), ByteWrapper hasMemoryAddress (), UnpooledDirectByteBuf getBytes (int, OutputStream, int, boolean), UnpooledUnsafeHeapByteBuf getLong (int), UnsafeByteBufUtil setBytes (AbstractByteBuf, long, int, byte[], int, int), AdvancedLeakAwareByteBuf writeFloat (float), PoolChunk usage (), Processor process (byte), ReadOnlyByteBufferBuf setInt (int, int), AdvancedLeakAwareByteBuf writeIntLE (int), Component resetReaderIndex (), ByteWrapper addComponents (boolean, ByteBuf), AdvancedLeakAwareByteBuf readBytes (ByteBuf, int, int), UnpooledUnsafeHeapByteBuf _setIntLE (int, int), AdvancedLeakAwareByteBuf getLong (int), AdvancedLeakAwareByteBuf bytesBefore (int, byte), ByteWrapper _getByte (int), IntPriorityQueue remove (int), ByteWrapper getBytes (int, FileChannel, long, int), AdvancedLeakAwareByteBuf getBytes (int, byte[]), PoolChunk toRunHandle (int, int, int), AdvancedLeakAwareByteBuf readBytes (GatheringByteChannel, int), ReadOnlyByteBufferBuf _setIntLE (int, int), AdvancedLeakAwareByteBuf getLongLE (int), ReadOnlyByteBufferBuf getUnsignedMediumLE (int), ByteWrapper capacity (), ReadOnlyByteBufferBuf isDirect (), UnsafeByteBufUtil setIntLE (long, int), Component reposition (int), Processor Processor (int[], int[]), ReadOnlyByteBufferBuf hasMemoryAddress (), PoolChunk chunkSize (), UnsafeByteBufUtil getUnsignedMediumLE (byte[], int), ByteWrapper _setIntLE (int, int), ByteWrapper setShort (int, int), UnpooledUnsafeHeapByteBuf _setInt (int, int), PoolChunkList add0 (PoolChunk<T>), ReadOnlyByteBufferBuf readBytes (ByteBuffer), UnpooledDirectByteBuf _setLongLE (int, long), ReadOnlyByteBufferBuf getBytes (int, GatheringByteChannel, int), AdvancedLeakAwareByteBuf skipBytes (int), ReadOnlyByteBufferBuf getLongLE (int), ReadOnlyByteBufferBuf unwrap (), AdvancedLeakAwareByteBuf readUnsignedShortLE (), UnsafeByteBufUtil setLongLE (byte[], int, long), AdvancedLeakAwareByteBuf getBytes (int, ByteBuf), UnpooledDirectByteBuf _setShort (int, int), UnpooledUnsafeHeapByteBuf setByte (int, int), Component setZero (int, int), ByteWrapper numComponents (), UnpooledUnsafeHeapByteBuf writeZero (int), AdvancedLeakAwareByteBuf writeBytes (InputStream, int), AdvancedLeakAwareByteBuf readBytes (FileChannel, long, int), Component writeByte (int), AdvancedLeakAwareByteBuf AdvancedLeakAwareByteBuf (ByteBuf, ResourceLeakTracker<ByteBuf>), UnpooledUnsafeHeapByteBuf _getIntLE (int), AdvancedLeakAwareByteBuf nioBuffer (), ReadOnlyByteBufferBuf nioBuffers (int, int), ByteWrapper internalNioBuffer (int, int), UnpooledDirectByteBuf internalNioBuffer (int, int), PoolChunk isSubpage (long), UnsafeByteBufUtil getByte (long), UnpooledUnsafeHeapByteBuf _setLong (int, long), AbstractByteBufAllocator newDirectBuffer (int, int), PoolChunk removeAvailRun (long), PoolChunk usage (int), AdvancedLeakAwareByteBuf writeCharSequence (CharSequence, Charset), AbstractByteBufAllocator heapBuffer (int, int), PoolChunk incrementPinnedMemory (int), AdvancedLeakAwareByteBuf readIntLE (), ReadOnlyByteBufferBuf order (), PoolChunkList minUsage0 (int), ReadOnlyByteBufferBuf _getShort (int), AdvancedLeakAwareByteBuf nioBufferCount (), AdvancedLeakAwareByteBuf slice (int, int), Component setBytes (int, ByteBuf, int), ByteWrapper addComponent (int, ByteBuf), IntPriorityQueue sink (int), ByteWrapper consolidateIfNeeded (), AbstractByteBufAllocator buffer (), UnsafeByteBufUtil getIntLE (byte[], int), Component slice (), AdvancedLeakAwareByteBuf getChar (int), AdvancedLeakAwareByteBuf getUnsignedIntLE (int), AdvancedLeakAwareByteBuf forEachByte (ByteProcessor), ByteWrapper checkComponentIndex (int), ReadOnlyByteBufferBuf internalNioBuffer (), UnpooledDirectByteBuf arrayOffset (), Component readBytes (ByteBuf, int), UnpooledDirectByteBuf alloc (), ReadOnlyByteBufferBuf isWritable (int), AdvancedLeakAwareByteBuf capacity (int), ReadOnlyByteBufferBuf _getLong (int), ReadOnlyByteBufferBuf _getUnsignedMediumLE (int), Processor getFoundNeedleId (), UnpooledUnsafeHeapByteBuf _setByte (int, int), AdvancedLeakAwareByteBuf getUnsignedShortLE (int), AdvancedLeakAwareByteBuf getBytes (int, GatheringByteChannel, int), ReadOnlyByteBufferBuf setShortLE (int, int), ReadOnlyByteBufferBuf capacity (), Component setDouble (int, double), AdvancedLeakAwareByteBuf writeMediumLE (int), UnsafeByteBufUtil setMedium (byte[], int, int), UnsafeByteBufUtil getIntLE (long), Component length (), UnsafeByteBufUtil setSingleBytes (AbstractByteBuf, long, int, ByteBuffer, int), ReadOnlyByteBufferBuf ensureWritable (int), AdvancedLeakAwareByteBuf nioBuffer (int, int), Component writeZero (int), UnpooledDirectByteBuf setMedium (int, int), ReadOnlyByteBufferBuf _getUnsignedMedium (int), UnsafeByteBufUtil setZero (long, int), Component writeBytes (ByteBuf), AdvancedLeakAwareByteBuf setDouble (int, double), AdvancedLeakAwareByteBuf setLongLE (int, long), ByteWrapper _setInt (int, int), Component setFloat (int, float), Component writeFloat (float), UnpooledUnsafeHeapByteBuf getUnsignedMediumLE (int), UnpooledUnsafeHeapByteBuf _setShortLE (int, int), AdvancedLeakAwareByteBuf discardSomeReadBytes (), AdvancedLeakAwareByteBuf getShort (int), AdvancedLeakAwareByteBuf writeBytes (byte[], int, int), UnpooledUnsafeHeapByteBuf _setMedium (int, int), ByteWrapper addComponent (ByteBuf), AbstractByteBufAllocator buffer (int, int), AdvancedLeakAwareByteBuf ensureWritable (int, boolean), AdvancedLeakAwareByteBuf bytesBefore (byte), ReadOnlyByteBufferBuf _getLongLE (int), ReadOnlyByteBufferBuf setBytes (int, InputStream, int), PoolChunk bitmapIdx (long), AdvancedLeakAwareByteBuf setBytes (int, ByteBuffer), ByteWrapper updateComponentOffsets (int), UnpooledDirectByteBuf setBytes (int, ByteBuf, int, int), UnsafeByteBufUtil getUnsignedMedium (byte[], int), ReadOnlyDuplicatedByteBuf asReadOnly (), UnpooledDirectByteBuf _getUnsignedMedium (int), ReadOnlyByteBufferBuf readBytes (byte[], int, int), ByteWrapper setByte (int, int), CompositeByteBufIterator clearComps (), ReadOnlyByteBufferBuf getShortLE (int), ReadOnlyByteBufferBuf getBytes (int, byte[], int, int, boolean), UnpooledDirectByteBuf hasArray (), AdvancedLeakAwareByteBuf readFloat (), UnsafeByteBufUtil setLong (long, long), Component markWriterIndex (), ReadOnlyByteBufferBuf getBytes (int, byte[], int, int), Component readBytes (byte[], int, int), UnpooledUnsafeHeapByteBuf setInt (int, int), ByteWrapper toComponentIndex0 (int), AdvancedLeakAwareByteBuf readUnsignedShort (), ReadOnlyByteBufferBuf getShort (int), ByteWrapper allocBuffer (int), ByteWrapper newComponent (ByteBuf, int), ReadOnlySlicedByteBuf duplicate (), UnpooledUnsafeHeapByteBuf setMediumLE (int, int), ByteWrapper ensureAccessible (ByteBuf), ReadOnlyByteBufferBuf readBytes (ByteBuf, int, int), PoolChunkList destroy (PoolArena<T>), Component Component (ByteBuf, int, ByteBuf, int, int, int, ByteBuf), UnpooledDirectByteBuf nioBuffers (int, int), AdvancedLeakAwareByteBuf touch (), UnpooledDirectByteBuf setInt (int, int), PoolChunk freeBytes (), ReadOnlyByteBufferBuf getByte (int), Component nioBuffers (), ReadOnlyByteBufferBuf _setMedium (int, int), ByteWrapper isDirect (), ReadOnlyByteBufferBuf setBytes (int, ByteBuffer), ReadOnlyByteBufferBuf getBytes (int, FileChannel, long, int), AdvancedLeakAwareByteBuf getFloat (int), ByteWrapper setBytes (int, byte[], int, int), AdvancedLeakAwareByteBuf writeDouble (double), AdvancedLeakAwareByteBuf ensureWritable (int), ReadOnlyByteBufferBuf _setShortLE (int, int), ByteWrapper capacity (int), AbstractByteBufAllocator toLeakAwareBuffer (CompositeByteBuf), UnpooledDirectByteBuf getBytes (int, byte[], int, int), AdvancedLeakAwareByteBuf recordLeakNonRefCountingOperation (ResourceLeakTracker<ByteBuf>), UnpooledUnsafeHeapByteBuf _getByte (int), Component discardSomeReadBytes (), ByteWrapper wrap (byte[]), ReadOnlyByteBufferBuf setLong (int, long), ByteWrapper removeComponent (int), UnpooledUnsafeHeapByteBuf allocateArray (int), UnsafeByteBufUtil getUnsignedMediumLE (long), ByteWrapper alloc (), ReadOnlyByteBufferBuf nioBuffer (int, int), AdvancedLeakAwareByteBuf readBytes (ByteBuf), Component retain (int), UnpooledUnsafeHeapByteBuf _getUnsignedMedium (int), ByteWrapper nioBuffer (int, int), Component readBytes (ByteBuf, int, int), UnsafeByteBufUtil setIntLE (byte[], int, int), ReadOnlyByteBufferBuf getIntLE (int), ByteWrapper wrap (ByteBuffer), UnsafeByteBufUtil batchSetZero (byte[], int, int), ReadOnlyByteBufferBuf hasArray (), ByteWrapper _setMedium (int, int), UnsafeByteBufUtil UnsafeByteBufUtil (), UnpooledUnsafeHeapByteBuf getShort (int), ReadOnlyByteBufferBuf ReadOnlyByteBufferBuf (ByteBufAllocator, ByteBuffer), ReadOnlyByteBufferBuf setBytes (int, FileChannel, long, int), ReadOnlyByteBufferBuf setBytes (int, byte[], int, int), UnpooledDirectByteBuf copy (int, int), ReadOnlyByteBufferBuf isWritable (), PoolChunk decrementPinnedMemory (int), ReadOnlyByteBufferBuf arrayOffset (), ByteWrapper findComponent0 (int), AdvancedLeakAwareByteBuf slice (), ByteWrapper addComponent (boolean, ByteBuf), AdvancedLeakAwareByteBuf writeBytes (ByteBuf, int), UnpooledUnsafeHeapByteBuf _getInt (int), Component setBoolean (int, boolean), IntPriorityQueue offer (int), ReadOnlyDuplicatedByteBuf duplicate (), UnpooledUnsafeHeapByteBuf setShortLE (int, int), AbstractByteBufAllocator compositeBuffer (), AdvancedLeakAwareByteBuf readMedium (), UnsafeByteBufUtil setLongLE (long, long), UnsafeByteBufUtil setBytes (AbstractByteBuf, long, int, InputStream, int), UnpooledUnsafeHeapByteBuf _getLong (int), UnpooledDirectByteBuf readBytes (GatheringByteChannel, int), AdvancedLeakAwareByteBuf setZero (int, int), UnpooledDirectByteBuf readBytes (FileChannel, long, int), AbstractByteBufAllocator ioBuffer (), Component writeBytes (byte[]), AdvancedLeakAwareByteBuf writeBytes (ByteBuf), ReadOnlyByteBufferBuf setIntLE (int, int), AdvancedLeakAwareByteBuf readMediumLE (), UnpooledUnsafeHeapByteBuf getInt (int), UnsafeByteBufUtil setByte (long, int), UnpooledDirectByteBuf setShort (int, int), UnpooledUnsafeHeapByteBuf _getShortLE (int), ByteWrapper order (), AdvancedLeakAwareByteBuf setFloat (int, float), ReadOnlyByteBufferBuf internalNioBuffer (int, int), ReadOnlyByteBufferBuf getBytes (int, OutputStream, int), UnpooledUnsafeHeapByteBuf setLongLE (int, long), PoolChunk insertAvailRun0 (int, long), PoolChunk runSize (int, long), ByteWrapper iterator (), ReadOnlyByteBufferBuf ensureWritable (int, boolean), UnpooledUnsafeHeapByteBuf _setShort (int, int), Component writeLong (long), PoolChunk initBufWithSubpage (PooledByteBuf<T>, ByteBuffer, long, int, PoolThreadCache), Component getBytes (int, byte[]), UnpooledDirectByteBuf unwrap (), AdvancedLeakAwareByteBuf getDouble (int), UnpooledDirectByteBuf deallocate (), UnsafeByteBufUtil setInt (byte[], int, int), ReadOnlyByteBufferBuf _getByte (int), UnpooledUnsafeHeapByteBuf _getLongLE (int), AdvancedLeakAwareByteBuf setShort (int, int), ReadOnlyByteBufferBuf getLong (int), ByteWrapper addComponents (boolean, Iterable<ByteBuf>), Component writeDouble (double), UnsafeByteBufUtil zeroTillAligned (long, int), AdvancedLeakAwareByteBuf writeBytes (ScatteringByteChannel, int), CompositeByteBuf CompositeByteBuf (ByteBufAllocator, boolean, int, ByteBuf), ReadOnlyByteBufferBuf getBytes (int, ByteBuf, int, int), UnpooledDirectByteBuf setLong (int, long), ByteWrapper forEachByteDesc0 (int, int, ByteProcessor), ByteWrapper getByte (int), Component readBytes (ByteBuffer), Component free (), UnpooledUnsafeHeapByteBuf getShortLE (int), Component writeBytes (byte[], int, int), AbstractByteBufAllocator AbstractByteBufAllocator (), ByteWrapper addComponents (int, ByteBuf), AdvancedLeakAwareByteBuf setShortLE (int, int), PoolChunk allocateRun (int), AdvancedLeakAwareByteBuf toString (int, int, Charset), ByteWrapper toComponentIndex (int), Component ensureWritable (int), AbstractByteBufAllocator compositeHeapBuffer (), ByteWrapper addComponents0 (boolean, int, ByteWrapper<T>, T[], int), AbstractByteBufAllocator compositeDirectBuffer (int), AdvancedLeakAwareByteBuf readUnsignedByte (), UnsafeByteBufUtil setShort (byte[], int, int), UnpooledDirectByteBuf setByte (int, int), UnpooledDirectByteBuf nioBuffer (int, int), UnsafeByteBufUtil getBytes (AbstractByteBuf, long, int, ByteBuffer), AbstractByteBufAllocator validate (int, int), UnpooledDirectByteBuf _setInt (int, int), PoolChunkList move0 (PoolChunk<T>), ByteWrapper memoryAddress (), UnpooledDirectByteBuf isContiguous (), PoolChunk insertAvailRun (int, int, long), AdvancedLeakAwareByteBuf internalNioBuffer (int, int), AdvancedLeakAwareByteBuf readShortLE (), UnsafeByteBufUtil setLong (byte[], int, long), AdvancedLeakAwareByteBuf getBytes (int, ByteBuf, int, int), AdvancedLeakAwareByteBuf writeBytes (ByteBuf, int, int), AdvancedLeakAwareByteBuf writeShort (int), Processor AhoCorasicSearchProcessorFactory (byte[]), ByteWrapper _setByte (int, int), Component srcIdx (int), Processor newSearchProcessor (), UnpooledDirectByteBuf _getLongLE (int), Component readBytes (OutputStream, int), AdvancedLeakAwareByteBuf writeChar (int), ReadOnlyByteBufferBuf _getShortLE (int), ByteWrapper decompose (int, int), ByteWrapper getBytes (int, byte[], int, int), PoolChunk newRunsAvailqueueArray (int), UnpooledUnsafeHeapByteBuf getIntLE (int), ByteWrapper consolidate (), ReadOnlyDuplicatedByteBuf slice (int, int), AbstractByteBufAllocator compositeDirectBuffer (), UnpooledUnsafeHeapByteBuf setLong (int, long), Component touch (Object), ByteWrapper maxNumComponents (), ReadOnlyByteBufferBuf nioBuffer (boolean), Component writeChar (int), UnpooledUnsafeHeapByteBuf UnpooledUnsafeHeapByteBuf (ByteBufAllocator, int, int), ByteWrapper setBytes (int, ByteBuf, int, int), AbstractByteBufAllocator ioBuffer (int), AdvancedLeakAwareByteBuf setByte (int, int), CompositeByteBuf CompositeByteBuf (ByteBufAllocator, boolean, int, int), UnpooledDirectByteBuf UnpooledDirectByteBuf (ByteBufAllocator, ByteBuffer, int, boolean, boolean), AdvancedLeakAwareByteBuf writeBytes (FileChannel, long, int), UnpooledDirectByteBuf setBytes (int, byte[], int, int), IntPriorityQueue lift (int), AdvancedLeakAwareByteBuf setBytes (int, InputStream, int), AdvancedLeakAwareByteBuf retainedDuplicate (), ByteWrapper nioBuffers (int, int), ReadOnlyByteBufferBuf getBytes (int, OutputStream, int, boolean), UnsafeByteBufUtil getBytes (long, byte[], int, int, OutputStream, int), AdvancedLeakAwareByteBuf retain (), ByteWrapper setBytes (int, ScatteringByteChannel, int), AbstractByteBufAllocator AbstractByteBufAllocator (boolean), PoolChunkList calculateMaxCapacity (int, int), PoolChunk initBuf (PooledByteBuf<T>, ByteBuffer, long, int, PoolThreadCache), Component readBytes (byte[]), UnpooledDirectByteBuf isDirect (), UnpooledDirectByteBuf _getUnsignedMediumLE (int), UnsafeByteBufUtil setInt (long, int), PoolChunk runOffset (long), ByteWrapper component (int), Component retain (), AdvancedLeakAwareByteBuf getUnsignedInt (int), AdvancedLeakAwareByteBuf readCharSequence (int, Charset), UnpooledDirectByteBuf capacity (int), UnpooledUnsafeHeapByteBuf getLongLE (int), ReadOnlyByteBufferBuf _setShort (int, int), AdvancedLeakAwareByteBuf readBoolean (), UnpooledDirectByteBuf getBytes (int, ByteBuffer), ReadOnlyByteBufferBuf _getInt (int), AdvancedLeakAwareByteBuf getBytes (int, ByteBuf, int), Component readerIndex (int), AdvancedLeakAwareByteBuf writeZero (int), Component getBytes (int, ByteBuf, int), AbstractByteBufAllocator toLeakAwareBuffer (ByteBuf), UnsafeByteBufUtil getByte (byte[], int), AdvancedLeakAwareByteBuf asReadOnly (), Component resetWriterIndex (), ReadOnlySlicedByteBuf isWritable (), UnpooledDirectByteBuf _setMediumLE (int, int), ReadOnlyByteBufferBuf isContiguous (), ByteWrapper isEmpty (ByteBuffer), AdvancedLeakAwareByteBuf getBoolean (int), ByteWrapper addComponents (Iterable<ByteBuf>), ByteWrapper addComponents (boolean, int, Iterable<ByteBuf>), PoolChunk free (long, int, ByteBuffer), AdvancedLeakAwareByteBuf nioBuffers (int, int), ByteWrapper setBytes (int, FileChannel, long, int), PoolChunkList allocate (PooledByteBuf<T>, int, int, PoolThreadCache), PoolChunkList iterator (), UnpooledDirectByteBuf getBytes (int, GatheringByteChannel, int, boolean), AdvancedLeakAwareByteBuf setChar (int, int), AdvancedLeakAwareByteBuf setMedium (int, int), UnpooledDirectByteBuf getInt (int), AdvancedLeakAwareByteBuf readLong (), Component setChar (int, int), CompositeByteBufIterator remove (), UnpooledUnsafeHeapByteBuf getUnsignedMedium (int), AbstractByteBufAllocator buffer (int), CompositeByteBuf CompositeByteBuf (ByteBufAllocator, boolean, int), UnpooledDirectByteBuf readBytes (byte[], int, int), AdvancedLeakAwareByteBuf getByte (int), AdvancedLeakAwareByteBuf getUnsignedMedium (int), UnsafeByteBufUtil setMedium (long, int), AdvancedLeakAwareByteBuf release (int), Component writeShort (int), UnsafeByteBufUtil setShort (long, int), UnpooledDirectByteBuf internalNioBuffer (), AdvancedLeakAwareByteBuf release (), ReadOnlyByteBufferBuf getBytes (int, ByteBuffer), ReadOnlyDuplicatedByteBuf isWritable (int), ByteWrapper removeComponents (int, int), UnpooledDirectByteBuf array (), ByteWrapper _getLong (int), PoolChunk toString (), ReadOnlyByteBufferBuf setShort (int, int), UnpooledDirectByteBuf _getIntLE (int), AdvancedLeakAwareByteBuf setCharSequence (int, CharSequence, Charset), ReadOnlyByteBufferBuf setBytes (int, ScatteringByteChannel, int), ByteWrapper array (), UnpooledDirectByteBuf getBytes (int, GatheringByteChannel, int), ReadOnlyByteBufferBuf array (), ByteWrapper addComponents (int, Iterable<ByteBuf>), IntPriorityQueue peek (), ReadOnlyByteBufferBuf readBytes (FileChannel, long, int), UnpooledDirectByteBuf getShort (int), Processor linkSuffixes (), UnpooledDirectByteBuf _getShortLE (int), ByteWrapper nioBufferCount (), ReadOnlyByteBufferBuf setMediumLE (int, int), PoolChunk isRun (long), AdvancedLeakAwareByteBuf readBytes (byte[]), Component duplicate (), UnpooledDirectByteBuf readBytes (OutputStream, int), Component writeBytes (ByteBuffer), UnpooledDirectByteBuf getBytes (int, ByteBuf, int, int), UnpooledDirectByteBuf memoryAddress (), AdvancedLeakAwareByteBuf setBytes (int, FileChannel, long, int), ReadOnlyByteBufferBuf deallocate (), ReadOnlyByteBufferBuf capacity (int), UnpooledUnsafeHeapByteBuf setMedium (int, int), AdvancedLeakAwareByteBuf bytesBefore (int, int, byte), UnsafeByteBufUtil getShortLE (long), ByteWrapper setBytes (int, ByteBuffer), UnpooledDirectByteBuf readBytes (ByteBuffer), UnsafeByteBufUtil getBytes (AbstractByteBuf, long, int, OutputStream, int), ByteWrapper _getLongLE (int), UnpooledUnsafeHeapByteBuf newSwappedByteBuf (), AdvancedLeakAwareByteBuf forEachByteDesc (ByteProcessor), ReadOnlySlicedByteBuf ReadOnlySlicedByteBuf (ByteBuf, int, int), UnpooledUnsafeHeapByteBuf _getUnsignedMediumLE (int), UnpooledDirectByteBuf getUnsignedMedium (int), AbstractByteBufAllocator compositeBuffer (int), IntPriorityQueue subord (int, int), UnsafeByteBufUtil setBytes (AbstractByteBuf, long, int, ByteBuffer), ByteWrapper addComponent0 (boolean, int, ByteBuf), UnpooledDirectByteBuf _setMedium (int, int), CompositeByteBuf CompositeByteBuf (ByteBufAllocator, boolean, int, ByteBuf[], int), ReadOnlyByteBufferBuf _setLongLE (int, long), Component idx (int), AbstractByteBufAllocator ioBuffer (int, int), UnpooledDirectByteBuf getBytes (int, OutputStream, int), PoolChunkList move (PoolChunk<T>), AdvancedLeakAwareByteBuf getUnsignedMediumLE (int), ByteWrapper CompositeByteBuf (ByteBufAllocator), AdvancedLeakAwareByteBuf readDouble (), UnsafeByteBufUtil newUnsafeDirectByteBuf (ByteBufAllocator, int, int), ReadOnlyByteBufferBuf getBytes (int, GatheringByteChannel, int, boolean), ByteWrapper findIt (int), ByteWrapper checkComponentIndex (int, int), UnpooledDirectByteBuf setByteBuffer (ByteBuffer, boolean), ReadOnlyDuplicatedByteBuf isWritable (), ByteWrapper addFlattenedComponents (boolean, ByteBuf), ReadOnlyDuplicatedByteBuf ReadOnlyDuplicatedByteBuf (ByteBuf), PoolChunkList remove (PoolChunk<T>), CompositeByteBufIterator removeCompRange (int, int), PoolChunk collapseNext (long), AdvancedLeakAwareByteBuf setBytes (int, ScatteringByteChannel, int), AdvancedLeakAwareByteBuf indexOf (int, int, byte), UnsafeByteBufUtil getBytes (AbstractByteBuf, long, int, ByteBuf, int, int), ByteWrapper toByteIndex (int), Component setBytes (int, ByteBuf), PoolChunkList free (PoolChunk<T>, long, int, ByteBuffer), UnpooledDirectByteBuf _setLong (int, long), ReadOnlyByteBufferBuf setMedium (int, int), ByteWrapper getBytes (int, GatheringByteChannel, int), IntPriorityQueue swap (int, int), UnpooledDirectByteBuf getLong (int), UnsafeByteBufUtil getInt (byte[], int), ByteWrapper newCompArray (int, int), IntPriorityQueue poll (), PoolChunk runPages (long), Component readBytes (ByteBuf), ByteWrapper setLong (int, long), Component touch (), ByteWrapper addComponents (ByteBuf), AdvancedLeakAwareByteBuf setMediumLE (int, int), Processor buildTrie (byte[][]), ReadOnlyByteBufferBuf readBytes (OutputStream, int), UnpooledDirectByteBuf allocateDirect (int), PoolChunk collapseRuns (long), ReadOnlyByteBufferBuf copy (int, int), PoolChunkList PoolChunkList (PoolArena<T>, PoolChunkList<T>, int, int, int), CompositeByteBufIterator shiftComps (int, int), UnpooledDirectByteBuf _setByte (int, int), AdvancedLeakAwareByteBuf setBytes (int, ByteBuf), AdvancedLeakAwareByteBuf newLeakAwareByteBuf (ByteBuf, ByteBuf, ResourceLeakTracker<ByteBuf>), UnpooledUnsafeHeapByteBuf setZero (int, int), Component writeInt (int), AdvancedLeakAwareByteBuf getBytes (int, byte[], int, int), AdvancedLeakAwareByteBuf nioBuffers (), AdvancedLeakAwareByteBuf readUnsignedMediumLE (), ReadOnlyByteBufferBuf nioBufferCount (), AdvancedLeakAwareByteBuf readUnsignedMedium (), ByteWrapper getBytes (int, ByteBuffer), Component internalNioBuffer (int, int), AdvancedLeakAwareByteBuf readUnsignedIntLE (), ReadOnlyByteBufferBuf _setByte (int, int), ByteWrapper wrap (T), Component setIndex (int, int), AdvancedLeakAwareByteBuf discardReadBytes (), CompositeByteBufIterator addComp (int, Component), AdvancedLeakAwareByteBuf retainedSlice (), AdvancedLeakAwareByteBuf writeInt (int)]","7788"
"3","netty/buffer","5ebad1f90009a9220905a8a58c9ccb1c8ed0c4b6","db04648ebe3cbeb8cb69ea977b4f12c756cfc159","VAR_DECLARATION_DIVIDING","13","1","1","[IntPriorityQueue offer (int)]","11"
"7","netty/buffer","db04648ebe3cbeb8cb69ea977b4f12c756cfc159","68f6b5fb42d06367074027e0aeb1a4407116cc25","LOCAL_VAR_RENAMING","0","1","2","[IntPriorityQueue sink (int), IntPriorityQueue swap (int, int)]","22"
"8","netty/buffer","68f6b5fb42d06367074027e0aeb1a4407116cc25","508d712ef5c69d9251846a577f789bddfec44f8e","LOCAL_VAR_RENAMING","0","1","2","[IntPriorityQueue offer (int), IntPriorityQueue remove (int)]","22"
"9","netty/buffer","508d712ef5c69d9251846a577f789bddfec44f8e","bf4fd37c1619f9f6481e8106a43b5ca82944c405","PP_TO_ADD_ASSIGNMENT","6","1","1","[IntPriorityQueue offer (int)]","11"
"10","netty/buffer","bf4fd37c1619f9f6481e8106a43b5ca82944c405","d0bcc6c8a596a6a3135c9db265ad213d06b1604c","SWITCH_EQUAL_SIDES","14","1","5","[IntPriorityQueue poll (), IntPriorityQueue isEmpty (), IntPriorityQueue offer (int), IntPriorityQueue peek (), IntPriorityQueue remove (int)]","55"
"14","netty/buffer","d0bcc6c8a596a6a3135c9db265ad213d06b1604c","10df1a2af6feb4a9d375c24535418b7c875ef12f","VAR_DECLARATION_MERGING","12","1","1","[IntPriorityQueue offer (int)]","11"
"20","netty/buffer","10df1a2af6feb4a9d375c24535418b7c875ef12f","2a389ab4a66bab1a055d2afc3dc06aef20bbd4dc","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[IntPriorityQueue poll (), IntPriorityQueue offer (int)]","22"
"21","netty/buffer","2a389ab4a66bab1a055d2afc3dc06aef20bbd4dc","74d9b0aafda76daec2b432417a0416e905d2f893","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[IntPriorityQueue offer (int)]","11"
"22","netty/buffer","74d9b0aafda76daec2b432417a0416e905d2f893","a9d9622dc269d48f0aa3f7eea10a87ddfc378ec5","WHILE_TO_FOR","2","1","2","[IntPriorityQueue lift (int), IntPriorityQueue sink (int)]","22"
"23","netty/buffer","a9d9622dc269d48f0aa3f7eea10a87ddfc378ec5","c0779e7f509d0d0f39f92ebc8524c53298ca8319","VAR_DECLARATION_DIVIDING","13","1","1","[IntPriorityQueue offer (int)]","11"
"25","netty/buffer","c0779e7f509d0d0f39f92ebc8524c53298ca8319","b9098fab057bf6d6120ce8991afd14b75a967102","LOCAL_VAR_RENAMING","0","1","2","[IntPriorityQueue offer (int), IntPriorityQueue swap (int, int)]","22"
"29","netty/buffer","b9098fab057bf6d6120ce8991afd14b75a967102","c32faee99735b21478fc505dc870691e4c604e89","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[IntPriorityQueue sink (int)]","11"
"30","netty/buffer","c32faee99735b21478fc505dc870691e4c604e89","7b6361da32b13b806d39a769747b23f4d421cc7f","SWITCH_EQUAL_SIDES","14","1","5","[IntPriorityQueue poll (), IntPriorityQueue isEmpty (), IntPriorityQueue offer (int), IntPriorityQueue peek (), IntPriorityQueue remove (int)]","55"
"40","netty/buffer","7b6361da32b13b806d39a769747b23f4d421cc7f","e14f914eb9847be397820269bd630d4ec9a8fdb7","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[IntPriorityQueue sink (int)]","11"
"41","netty/buffer","e14f914eb9847be397820269bd630d4ec9a8fdb7","fc5a18a86809a5482eacc97f695452dd96cb0e02","SWITCH_EQUAL_SIDES","14","1","2","[IntPriorityQueue poll (), IntPriorityQueue isEmpty ()]","22"
"44","netty/buffer","fc5a18a86809a5482eacc97f695452dd96cb0e02","58eca00b030584a1898ea39776149769d0a9cbc4","LOCAL_VAR_RENAMING","0","1","2","[IntPriorityQueue offer (int), IntPriorityQueue swap (int, int)]","22"
"45","netty/buffer","58eca00b030584a1898ea39776149769d0a9cbc4","b254598ca79dd23280909ed5cacced974e62c3f2","WHILE_TO_FOR","2","1","1","[IntPriorityQueue remove (int)]","11"
"47","netty/buffer","b254598ca79dd23280909ed5cacced974e62c3f2","a5629105dab3b7c350781ecd5d8bbc892cbacd46","REVERSE_IF_ELSE","3","1","2","[IntPriorityQueue poll (), IntPriorityQueue sink (int)]","22"
"50","netty/buffer","a5629105dab3b7c350781ecd5d8bbc892cbacd46","8bd222551937e2a22d663cfff076fa29500b7eda","REVERSE_IF_ELSE","3","1","3","[IntPriorityQueue poll (), IntPriorityQueue sink (int), IntPriorityQueue peek ()]","33"
"52","netty/buffer","8bd222551937e2a22d663cfff076fa29500b7eda","e9acbb95a13c1bc345b203980b38a7751d12b1ba","SWITCH_EQUAL_SIDES","14","1","1","[IntPriorityQueue isEmpty ()]","11"
"54","netty/buffer","e9acbb95a13c1bc345b203980b38a7751d12b1ba","731911d4b4a85793e76b214cf863aea53e8fa88a","VAR_DECLARATION_MERGING","12","1","1","[IntPriorityQueue offer (int)]","11"
"56","netty/buffer","731911d4b4a85793e76b214cf863aea53e8fa88a","e1f16dc49478521529dc2fa39851c260e66e4dca","VAR_DECLARATION_DIVIDING","13","1","1","[IntPriorityQueue offer (int)]","11"
"58","netty/buffer","e1f16dc49478521529dc2fa39851c260e66e4dca","ed0cf825c79b35d712ebc3f3cdf866c5b7b87bfa","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","2","[IntPriorityQueue offer (int), IntPriorityQueue remove (int)]","22"
"62","netty/buffer","ed0cf825c79b35d712ebc3f3cdf866c5b7b87bfa","3daa6e23bb065e4fb00fa5626b61fb8d0a1db368","VAR_DECLARATION_MERGING","12","1","1","[IntPriorityQueue offer (int)]","11"
"64","netty/buffer","3daa6e23bb065e4fb00fa5626b61fb8d0a1db368","74d22faee5c6c315fd5f456b70c273b858a149d5","VAR_DECLARATION_DIVIDING","13","1","1","[IntPriorityQueue offer (int)]","11"
"65","netty/buffer","74d22faee5c6c315fd5f456b70c273b858a149d5","ebd9f765d39e0fd5927af0122c7c65f4ed73db97","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[IntPriorityQueue poll ()]","11"
"0","netty/codec-dns","ebd9f765d39e0fd5927af0122c7c65f4ed73db97","16296a5c4432684aea62c24b38165a9c81bf49f8","PRE_POST_FIX_EXPRESSION_DIVIDING","16","1","86","[DnsOpCode DnsOpCode (int), DefaultDnsResponse toString (), DefaultDnsResponse clear (), DefaultDnsResponse setAuthoritativeAnswer (boolean), DefaultDnsResponse addRecord (DnsSection, int, DnsRecord), DnsResponse setTruncated (boolean), DnsResponse retain (), DnsRecordType hashCode (), DnsRecordType name (), AbstractDnsRecord equals (Object), AbstractDnsRecord toString (), DnsResponse setAuthoritativeAnswer (boolean), AbstractDnsRecord name (), DnsRecordType compareTo (DnsRecordType), DefaultDnsRecordEncoder encodePtrRecord (DnsPtrRecord, ByteBuf), DefaultDnsResponse setZ (int), DnsResponse touch (), DefaultDnsResponse code (), AbstractDnsRecord AbstractDnsRecord (String, DnsRecordType, long), DnsOpCode compareTo (DnsOpCode), DefaultDnsResponse setRecursionDesired (boolean), DefaultDnsResponse setRecursionAvailable (boolean), DnsOpCode valueOf (int), DefaultDnsRecordEncoder DefaultDnsRecordEncoder (), DefaultDnsResponse addRecord (DnsSection, DnsRecord), DefaultDnsRecordEncoder encodeRecord (DnsRecord, ByteBuf), DnsRecordType valueOf (int), DefaultDnsResponse DefaultDnsResponse (int, DnsOpCode), DefaultDnsResponse retain (), DnsOpCode byteValue (), DnsResponse addRecord (DnsSection, DnsRecord), DnsResponse isAuthoritativeAnswer (), AbstractDnsRecord hashCode (), DnsResponse touch (Object), DnsResponse isRecursionAvailable (), DnsResponse setCode (DnsResponseCode), DefaultDnsResponse touch (), DnsResponse retain (int), DefaultDnsResponse clear (DnsSection), DefaultDnsResponse isAuthoritativeAnswer (), DefaultDnsResponse retain (int), DefaultDnsRecordEncoder encodeOptPseudoRecord (DnsOptPseudoRecord, ByteBuf), DnsRecordType toString (), DnsOpCode DnsOpCode (int, String), DefaultDnsResponse setTruncated (boolean), DefaultDnsResponse setRecord (DnsSection, DnsRecord), AbstractDnsRecord AbstractDnsRecord (String, DnsRecordType, int, long), DnsResponse code (), DefaultDnsResponse isTruncated (), DefaultDnsRecordEncoder encodeName (String, ByteBuf), DefaultDnsResponse setOpCode (DnsOpCode), DnsResponse setRecursionDesired (boolean), DnsResponse clear (DnsSection), DefaultDnsResponse setCode (DnsResponseCode), DnsResponse setRecord (DnsSection, DnsRecord), DnsRecordType DnsRecordType (int), DnsRecordType equals (Object), DnsOpCode equals (Object), DnsResponse setOpCode (DnsOpCode), AbstractDnsRecord IDNtoASCII (String), DnsResponse setRecursionAvailable (boolean), DefaultDnsRecordEncoder padWithZeros (byte, int), DefaultDnsResponse DefaultDnsResponse (int), AbstractDnsRecord timeToLive (), AbstractDnsRecord type (), DnsResponse clear (), DnsResponse setId (int), DefaultDnsResponse touch (Object), DefaultDnsRecordEncoder encodeRawRecord (DnsRawRecord, ByteBuf), DefaultDnsResponse DefaultDnsResponse (int, DnsOpCode, DnsResponseCode), DnsOpCode toString (), DefaultDnsRecordEncoder encodeRecord0 (DnsRecord, ByteBuf), DnsResponse addRecord (DnsSection, int, DnsRecord), DefaultDnsResponse isRecursionAvailable (), DnsOpCode hashCode (), AbstractDnsRecord dnsClass (), DefaultDnsResponse setId (int), DnsResponse setZ (int), DefaultDnsRecordEncoder encodeQuestion (DnsQuestion, ByteBuf), DefaultDnsRecordEncoder encodeOptEcsRecord (DnsOptEcsRecord, ByteBuf), DefaultDnsRecordEncoder calculateEcsAddressLength (int, int), DnsRecordType DnsRecordType (int, String), DnsRecordType intValue (), DnsResponse isTruncated (), DnsRecordType valueOf (String), AbstractDnsRecord appendTrailingDot (String)]","516"
"2","netty/codec-dns","16296a5c4432684aea62c24b38165a9c81bf49f8","ad4d8fae63dc3875dba6b57811af202d329e10ba","SWITCH_EQUAL_SIDES","14","1","3","[DnsOpCode equals (Object), DnsOpCode valueOf (int), DnsOpCode toString ()]","18"
"7","netty/codec-dns","ad4d8fae63dc3875dba6b57811af202d329e10ba","50cacbc6fb7ce8dc56054f4f0fa714a111fc53b5","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DnsOpCode DnsOpCode (int, String)]","6"
"9","netty/codec-dns","50cacbc6fb7ce8dc56054f4f0fa714a111fc53b5","04a38f9597b5d2bf2ba647c66e1a4f0a81953c73","REVERSE_IF_ELSE","3","1","3","[DnsOpCode equals (Object), DnsOpCode valueOf (int), DnsOpCode toString ()]","18"
"12","netty/codec-dns","04a38f9597b5d2bf2ba647c66e1a4f0a81953c73","b77cdcea9114d9fbe7f94dbeb9c4312c1a1bddad","SWITCH_EQUAL_SIDES","14","1","3","[DnsOpCode equals (Object), DnsOpCode valueOf (int), DnsOpCode toString ()]","18"
"13","netty/codec-dns","b77cdcea9114d9fbe7f94dbeb9c4312c1a1bddad","150288bece4ae5864f866f8c729516278acb0b68","REVERSE_IF_ELSE","3","1","3","[DnsOpCode equals (Object), DnsOpCode valueOf (int), DnsOpCode toString ()]","18"
"16","netty/codec-dns","150288bece4ae5864f866f8c729516278acb0b68","7d28d509ccaea4e311b7d48122a7fa1c121f7dcf","LOCAL_VAR_RENAMING","0","1","2","[DnsOpCode valueOf (int), DnsOpCode DnsOpCode (int, String)]","12"
"18","netty/codec-dns","7d28d509ccaea4e311b7d48122a7fa1c121f7dcf","f6ce59c8d0a121980f45a0fe045d208893bc6c2f","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DnsOpCode DnsOpCode (int, String)]","6"
"20","netty/codec-dns","f6ce59c8d0a121980f45a0fe045d208893bc6c2f","3dc07c5882ff36dc1c5048644f50ba06aa25706a","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DnsOpCode DnsOpCode (int, String)]","6"
"25","netty/codec-dns","3dc07c5882ff36dc1c5048644f50ba06aa25706a","be6a8495b9c9aa087fc3b8a8e342e953f527c770","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DnsOpCode DnsOpCode (int, String)]","6"
"27","netty/codec-dns","be6a8495b9c9aa087fc3b8a8e342e953f527c770","0aa8d52a8a69bc0dec1561c678a8143da0424f3a","REVERSE_IF_ELSE","3","1","1","[DnsOpCode toString ()]","6"
"29","netty/codec-dns","0aa8d52a8a69bc0dec1561c678a8143da0424f3a","a8a8d35a4d1c5fac3101808fa10476489658028a","SWITCH_EQUAL_SIDES","14","1","3","[DnsOpCode equals (Object), DnsOpCode valueOf (int), DnsOpCode toString ()]","18"
"31","netty/codec-dns","a8a8d35a4d1c5fac3101808fa10476489658028a","63e4656f98a7bcb51b26aa587c2f347fb3f2ea30","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DnsOpCode DnsOpCode (int, String)]","6"
"38","netty/codec-dns","63e4656f98a7bcb51b26aa587c2f347fb3f2ea30","c32ccfcfc59da3c34aed661b7fe0452aefd4d980","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DnsOpCode DnsOpCode (int, String)]","6"
"46","netty/codec-dns","c32ccfcfc59da3c34aed661b7fe0452aefd4d980","d76c006de58bb5f332f924ca42ef2efa2072c3ad","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DnsOpCode DnsOpCode (int, String)]","6"
"54","netty/codec-dns","d76c006de58bb5f332f924ca42ef2efa2072c3ad","e8a98c7c85d885c5bf46b727c790f1442bf99ee1","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DnsOpCode DnsOpCode (int, String)]","6"
"55","netty/codec-dns","e8a98c7c85d885c5bf46b727c790f1442bf99ee1","a9b1096d86cbe0adcbab60355c9f0437041fd1c3","SWITCH_EQUAL_SIDES","14","1","3","[DnsOpCode equals (Object), DnsOpCode valueOf (int), DnsOpCode toString ()]","18"
"65","netty/codec-dns","a9b1096d86cbe0adcbab60355c9f0437041fd1c3","7fb7cabd8aa1e2ad888cdf30c6cbb2864b25921f","LOCAL_VAR_RENAMING","0","1","2","[DnsOpCode DnsOpCode (int, String), DnsOpCode toString ()]","12"
"0","netty/codec-haproxy","7fb7cabd8aa1e2ad888cdf30c6cbb2864b25921f","bd3b89870f8560a659dd0d01cfd7560bef605e78","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","86","[StructHeaderExtractor StructHeaderExtractor (int), HAProxyMessageDecoder failOverLimit (ChannelHandlerContext, int), HAProxyMessageDecoder match (byte[], ByteBuf, int), HAProxySSLTLV contentNumBytes (), HAProxyMessage HAProxyMessage (HAProxyProtocolVersion, HAProxyCommand, HAProxyProxiedProtocol, String, String, int, int), HAProxyMessage sourceAddress (), HAProxyTLV retainedDuplicate (), HAProxyTLV typeForByteValue (byte), HAProxySSLTLV isPP2ClientSSL (), StructHeaderExtractor delimiterLength (ByteBuf, int), HAProxySSLTLV HAProxySSLTLV (int, byte, List<HAProxyTLV>), HAProxyMessage proxiedProtocol (), HAProxyTLV byteValueForType (Type), HAProxyMessageDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), HAProxyMessageDecoder findEndOfHeader (ByteBuf), HAProxyMessage decodeHeader (ByteBuf), HAProxyMessage protocolVersion (), HAProxyConstants HAProxyConstants (), HeaderExtractor extract (ChannelHandlerContext, ByteBuf), HAProxyMessage release (int), HAProxyMessageDecoder failOverLimit (ChannelHandlerContext, String), HAProxyMessageDecoder detectProtocol (ByteBuf), HAProxySSLTLV toString (), HAProxyMessageDecoder HAProxyMessageDecoder (), HAProxyMessageDecoder HAProxyMessageDecoder (boolean), HAProxyTLV typeByteValue (), HAProxyMessageDecoder decodeLine (ChannelHandlerContext, ByteBuf), HAProxyMessage touch (Object), HAProxySSLTLV encapsulatedTLVs (), LineHeaderExtractor LineHeaderExtractor (int), HAProxyTLV touch (Object), HAProxyMessage retain (int), HAProxyTLV retain (), HAProxyMessage destinationAddress (), HAProxyTLV duplicate (), HAProxyTLV toString (), HAProxyMessage checkPort (int, AddressFamily), HAProxyTLV HAProxyTLV (Type, byte, ByteBuf), HAProxyMessage retain (), HAProxyMessage portStringToInt (String), HAProxyMessageDecoder decodeStruct (ChannelHandlerContext, ByteBuf), HAProxyMessage toString (), HAProxySSLTLV isPP2ClientCertSess (), HeaderExtractor findEndOfHeader (ByteBuf), StructHeaderExtractor findEndOfHeader (ByteBuf), HAProxyMessage touch (), HAProxyTLV contentNumBytes (), HAProxyTLV replace (ByteBuf), HAProxyTLV HAProxyTLV (byte, ByteBuf), HAProxyTLV retain (int), LineHeaderExtractor delimiterLength (ByteBuf, int), HAProxyMessage HAProxyMessage (HAProxyProtocolVersion, HAProxyCommand, HAProxyProxiedProtocol, String, String, String, String), HAProxyMessage readTlvs (ByteBuf), HAProxyMessageDecoder findVersion (ByteBuf), HAProxyMessage decodeHeader (String), HAProxyMessage tryRecord (), HAProxyMessageDecoder channelRead (ChannelHandlerContext, Object), HeaderExtractor HeaderExtractor (int), HAProxyMessage tlvNumBytes (), HAProxyMessage command (), HAProxyMessage sourcePort (), LineHeaderExtractor findEndOfHeader (ByteBuf), HAProxyTLV HAProxyTLV (Type, ByteBuf), HAProxyMessage readNextTLV (ByteBuf, int), HAProxyTLV copy (), HAProxyMessage ipBytesToString (ByteBuf, int), HAProxyMessage deallocate (), HAProxySSLTLV isPP2ClientCertConn (), HeaderExtractor delimiterLength (ByteBuf, int), HAProxySSLTLV client (), HAProxyMessage checkAddress (String, AddressFamily), HAProxyTLV touch (), HAProxySSLTLV HAProxySSLTLV (int, byte, List<HAProxyTLV>, ByteBuf), HAProxySSLTLV verify (), HAProxyTLV type (), HAProxyMessage destinationPort (), HAProxyMessage tlvs (), HAProxyMessageDecoder HAProxyMessageDecoder (int), HAProxyMessageDecoder findEndOfLine (ByteBuf), HAProxyMessage release (), HAProxyMessage HAProxyMessage (HAProxyProtocolVersion, HAProxyCommand, HAProxyProxiedProtocol, String, String, int, int, List<? extends HAProxyTLV>), HAProxyMessage unknownMsg (HAProxyProtocolVersion, HAProxyCommand), HAProxyTLV totalNumBytes (), HAProxyMessageDecoder fail (ChannelHandlerContext, String, Exception), HAProxyMessageDecoder isSingleDecode (), HAProxyMessageDecoder HAProxyMessageDecoder (int, boolean)]","430"
"4","netty/codec-haproxy","bd3b89870f8560a659dd0d01cfd7560bef605e78","eb045527e456a0314dd7b5ec82891655766788f5","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[HAProxyMessage decodeHeader (ByteBuf)]","5"
"6","netty/codec-haproxy","eb045527e456a0314dd7b5ec82891655766788f5","350f16235eacf663f47b476234e7504d7a149741","CASE_TO_IF_ELSE","17","1","3","[HAProxyMessage readNextTLV (ByteBuf, int), HAProxyMessage checkPort (int, AddressFamily), HAProxyMessage checkAddress (String, AddressFamily)]","15"
"7","netty/codec-haproxy","350f16235eacf663f47b476234e7504d7a149741","723de21a5c96c9e145b52bacce2a28d9fa15a5ee","LOCAL_VAR_RENAMING","0","1","2","[HAProxyMessage HAProxyMessage (HAProxyProtocolVersion, HAProxyCommand, HAProxyProxiedProtocol, String, String, int, int, List<? extends HAProxyTLV>), HAProxyMessage decodeHeader (ByteBuf)]","10"
"8","netty/codec-haproxy","723de21a5c96c9e145b52bacce2a28d9fa15a5ee","67467cbcb2d576a0d1edaeac6cc2b47c772c9fda","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[HAProxyMessage decodeHeader (ByteBuf)]","5"
"9","netty/codec-haproxy","67467cbcb2d576a0d1edaeac6cc2b47c772c9fda","ea602ff11b571c674a779b52d0cf085080064dbf","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[HAProxyMessage decodeHeader (ByteBuf)]","5"
"10","netty/codec-haproxy","ea602ff11b571c674a779b52d0cf085080064dbf","eb0098477940d143c1ab8a0309e5b854d21d9d4d","SWITCH_EQUAL_SIDES","14","1","5","[HAProxyMessage readNextTLV (ByteBuf, int), HAProxyMessage ipBytesToString (ByteBuf, int), HAProxyMessage checkPort (int, AddressFamily), HAProxyMessage checkAddress (String, AddressFamily), HAProxyMessage decodeHeader (String)]","25"
"13","netty/codec-haproxy","eb0098477940d143c1ab8a0309e5b854d21d9d4d","b7de51054fb01e5ac41849064e34f60b0a429741","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","1","[HAProxyMessage decodeHeader (ByteBuf)]","5"
"16","netty/codec-haproxy","b7de51054fb01e5ac41849064e34f60b0a429741","bd0ef923e1dd2f8494624aab30dcdcb5e5334eb0","REVERSE_IF_ELSE","3","1","6","[HAProxyMessage tryRecord (), HAProxyMessage deallocate (), HAProxyMessage toString (), HAProxyMessage checkPort (int, AddressFamily), HAProxyMessage touch (Object), HAProxyMessage checkAddress (String, AddressFamily)]","30"
"17","netty/codec-haproxy","bd0ef923e1dd2f8494624aab30dcdcb5e5334eb0","697aeb63a748cab49594feadfb6b34caab44098c","REVERSE_IF_ELSE","3","1","9","[HAProxyMessage tryRecord (), HAProxyMessage portStringToInt (String), HAProxyMessage ipBytesToString (ByteBuf, int), HAProxyMessage deallocate (), HAProxyMessage toString (), HAProxyMessage checkPort (int, AddressFamily), HAProxyMessage touch (Object), HAProxyMessage checkAddress (String, AddressFamily), HAProxyMessage decodeHeader (String)]","45"
"18","netty/codec-haproxy","697aeb63a748cab49594feadfb6b34caab44098c","b0111d5d6515a54a63b57356d4cee3a8649b4002","VAR_DECLARATION_MERGING","12","1","2","[HAProxyMessage decodeHeader (ByteBuf), HAProxyMessage ipBytesToString (ByteBuf, int)]","10"
"21","netty/codec-haproxy","b0111d5d6515a54a63b57356d4cee3a8649b4002","071877f869efd48f8f3b7cfb840a3707a8bd890d","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[HAProxyMessage decodeHeader (ByteBuf)]","5"
"24","netty/codec-haproxy","071877f869efd48f8f3b7cfb840a3707a8bd890d","eb74ba89271a64db976ee7f257e071fd9899d490","VAR_DECLARATION_MERGING","12","1","1","[HAProxyMessage decodeHeader (ByteBuf)]","5"
"27","netty/codec-haproxy","eb74ba89271a64db976ee7f257e071fd9899d490","de3358581be575d6518ddc69ad060df844ceadf2","FOR_TO_WHILE","1","1","2","[HAProxyMessage tlvNumBytes (), HAProxyMessage ipBytesToString (ByteBuf, int)]","10"
"28","netty/codec-haproxy","de3358581be575d6518ddc69ad060df844ceadf2","db711e9b1c721acd48daf7b3def2c645327ec37a","REVERSE_IF_ELSE","3","1","12","[HAProxyMessage tryRecord (), HAProxyMessage portStringToInt (String), HAProxyMessage readNextTLV (ByteBuf, int), HAProxyMessage decodeHeader (ByteBuf), HAProxyMessage ipBytesToString (ByteBuf, int), HAProxyMessage deallocate (), HAProxyMessage toString (), HAProxyMessage readTlvs (ByteBuf), HAProxyMessage checkPort (int, AddressFamily), HAProxyMessage touch (Object), HAProxyMessage checkAddress (String, AddressFamily), HAProxyMessage decodeHeader (String)]","60"
"33","netty/codec-haproxy","db711e9b1c721acd48daf7b3def2c645327ec37a","31bedec8b73f61cc664860b491198cc87087adec","VAR_DECLARATION_DIVIDING","13","1","2","[HAProxyMessage decodeHeader (ByteBuf), HAProxyMessage ipBytesToString (ByteBuf, int)]","10"
"34","netty/codec-haproxy","31bedec8b73f61cc664860b491198cc87087adec","99957f2ec9bebeea57b1bed56deb692212c75e7f","SWITCH_STRING_EQUAL","15","1","1","[HAProxyMessage decodeHeader (String)]","5"
"35","netty/codec-haproxy","99957f2ec9bebeea57b1bed56deb692212c75e7f","136d360a6b63d0add58f6c66ff3d1c83a609f002","WHILE_TO_FOR","2","1","2","[HAProxyMessage tlvNumBytes (), HAProxyMessage ipBytesToString (ByteBuf, int)]","10"
"36","netty/codec-haproxy","136d360a6b63d0add58f6c66ff3d1c83a609f002","e7418e4e48fb629de9da722ac208c6d9cab74be3","REVERSE_IF_ELSE","3","1","5","[HAProxyMessage tryRecord (), HAProxyMessage deallocate (), HAProxyMessage toString (), HAProxyMessage checkPort (int, AddressFamily), HAProxyMessage touch (Object)]","25"
"38","netty/codec-haproxy","e7418e4e48fb629de9da722ac208c6d9cab74be3","76f7cebf5270280f30f28448bfc2efe4a891db1d","PP_TO_ADD_ASSIGNMENT","6","1","2","[HAProxyMessage tlvNumBytes (), HAProxyMessage ipBytesToString (ByteBuf, int)]","10"
"39","netty/codec-haproxy","76f7cebf5270280f30f28448bfc2efe4a891db1d","fe31bf7ce00d89824d0c0f9e84db147beef6408a","SWITCH_STRING_EQUAL","15","1","1","[HAProxyMessage decodeHeader (String)]","5"
"40","netty/codec-haproxy","fe31bf7ce00d89824d0c0f9e84db147beef6408a","b9a9beb7f4461567e1a25a74a450f2911d6ccc44","VAR_DECLARATION_MERGING","12","1","1","[HAProxyMessage decodeHeader (ByteBuf)]","5"
"43","netty/codec-haproxy","b9a9beb7f4461567e1a25a74a450f2911d6ccc44","1746d87b3137bc1c894d18401638397a95fd4d42","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[HAProxyMessage HAProxyMessage (HAProxyProtocolVersion, HAProxyCommand, HAProxyProxiedProtocol, String, String, int, int, List<? extends HAProxyTLV>), HAProxyMessage decodeHeader (ByteBuf)]","10"
"44","netty/codec-haproxy","1746d87b3137bc1c894d18401638397a95fd4d42","e040df594c320d982eecc591e6919cebcbf6f12d","SWITCH_EQUAL_SIDES","14","1","5","[HAProxyMessage readNextTLV (ByteBuf, int), HAProxyMessage ipBytesToString (ByteBuf, int), HAProxyMessage checkPort (int, AddressFamily), HAProxyMessage checkAddress (String, AddressFamily), HAProxyMessage decodeHeader (String)]","25"
"45","netty/codec-haproxy","e040df594c320d982eecc591e6919cebcbf6f12d","60d746ef022fd15d088633c9d22433997c319197","SWITCH_STRING_EQUAL","15","1","1","[HAProxyMessage decodeHeader (String)]","5"
"47","netty/codec-haproxy","60d746ef022fd15d088633c9d22433997c319197","44c0b5ccbea4ddb608defb660e43ac7312ca58ad","VAR_DECLARATION_DIVIDING","13","1","1","[HAProxyMessage decodeHeader (ByteBuf)]","5"
"51","netty/codec-haproxy","44c0b5ccbea4ddb608defb660e43ac7312ca58ad","86194322b916b3e69974f950e7c8248a16f9472a","FOR_TO_WHILE","1","1","1","[HAProxyMessage tlvNumBytes ()]","5"
"52","netty/codec-haproxy","86194322b916b3e69974f950e7c8248a16f9472a","072dd7a6e0b80691805bf674846ad40ebeecede0","LOCAL_VAR_RENAMING","0","1","1","[HAProxyMessage readNextTLV (ByteBuf, int)]","5"
"55","netty/codec-haproxy","072dd7a6e0b80691805bf674846ad40ebeecede0","e76115fdb0ae1879dfcc5b9adca95094d6b669bf","INFIX_EXPRESSION_DIVIDING","8","1","1","[HAProxyMessage checkPort (int, AddressFamily)]","5"
"56","netty/codec-haproxy","e76115fdb0ae1879dfcc5b9adca95094d6b669bf","a348339cdec746abff49a065e1c3882f2e3d8c91","VAR_DECLARATION_MERGING","12","1","1","[HAProxyMessage tlvNumBytes ()]","5"
"57","netty/codec-haproxy","a348339cdec746abff49a065e1c3882f2e3d8c91","1d88531a64b174c9f81ecd75ca3025cb62cb4964","WHILE_TO_FOR","2","1","1","[HAProxyMessage tlvNumBytes ()]","5"
"60","netty/codec-haproxy","1d88531a64b174c9f81ecd75ca3025cb62cb4964","f76d8935f82a6c2a95694cc31613a26367bdbe7f","SWITCH_STRING_EQUAL","15","1","1","[HAProxyMessage decodeHeader (String)]","5"
"61","netty/codec-haproxy","f76d8935f82a6c2a95694cc31613a26367bdbe7f","1ef456c739a290765ed8f3fed54d8f394d4c6473","LOCAL_VAR_RENAMING","0","1","2","[HAProxyMessage decodeHeader (ByteBuf), HAProxyMessage toString ()]","10"
"0","netty/codec-http","1ef456c739a290765ed8f3fed54d8f394d4c6473","3bbbb8d5810e41cd17141347cc524ab24def9f97","FOR_TO_WHILE","1","1","133","[AbstractDiskHttpData tempFile (), SpdyCodecUtil isServerId (int), Builder allowNullOrigin (), AbstractDiskHttpData getString (), SpdyCodecUtil getUnsignedMedium (ByteBuf, int), SpdySessionStatus toString (), BinaryWebSocketFrame retain (int), Builder shortCurcuit (), HttpUtil formatHostnameForHttp (InetSocketAddress), CorsConfig CorsConfig (CorsConfigBuilder), Builder preflightResponseHeader (String, Callable<T>), Builder preflightResponseHeader (CharSequence, Iterable<T>), BinaryWebSocketFrame retainedDuplicate (), HttpUtil getCharsetAsSequence (CharSequence), SpdySessionStatus statusPhrase (), SpdySessionStatus code (), BinaryWebSocketFrame touch (Object), SpdyHeaderBlockJZlibEncoder encode (ByteBufAllocator, SpdyHeadersFrame), HttpUtil isTransferEncodingChunked (HttpMessage), HttpUtil isKeepAlive (HttpMessage), HttpUtil setTransferEncodingChunked (HttpMessage, boolean), HttpUtil setContentLength (HttpMessage, long), HttpUtil HttpUtil (), CorsConfig isCorsSupportEnabled (), CorsConfig isShortCircuit (), SpdyCodecUtil validateHeaderName (CharSequence), CorsConfig isPrivateNetworkAllowed (), SpdyCodecUtil SpdyCodecUtil (), CorsConfig isCredentialsAllowed (), BinaryWebSocketFrame BinaryWebSocketFrame (boolean, int, ByteBuf), BinaryWebSocketFrame touch (), Builder noPreflightResponseHeaders (), Builder build (), HttpUtil getMimeType (CharSequence), DefaultSpdyRstStreamFrame DefaultSpdyRstStreamFrame (int, int), ServerCookieDecoder ServerCookieDecoder (boolean), ServerCookieDecoder decodeAll (String), SpdySessionStatus hashCode (), HttpUtil isUnsupportedExpectation (HttpMessage), HttpUtil isOriginForm (String), AbstractDiskHttpData getString (Charset), Builder maxAge (long), AbstractDiskHttpData getByteBuf (), Builder Builder (), CorsConfig isAnyOriginSupported (), ServerCookieDecoder decode (String), CorsConfig maxAge (), BinaryWebSocketFrame duplicate (), BinaryWebSocketFrame BinaryWebSocketFrame (), HttpUtil isAsteriskForm (String), HttpUtil is100ContinueExpected (HttpMessage), AbstractDiskHttpData setContent (ByteBuf), AbstractDiskHttpData delete (), AbstractDiskHttpData touch (), DefaultSpdyRstStreamFrame DefaultSpdyRstStreamFrame (int, SpdyStreamStatus), Builder preflightResponseHeader (CharSequence, Object), CorsConfig toString (), Builder allowedRequestMethods (HttpMethod), HttpUtil getWebSocketContentLength (HttpMessage), HttpUtil getCharset (HttpMessage, Charset), SpdyCodecUtil getUnsignedShort (ByteBuf, int), HttpUtil getCharsetAsString (HttpMessage), BinaryWebSocketFrame retain (), BinaryWebSocketFrame copy (), CorsConfig withOrigins (String), Builder allowedRequestHeaders (String), DefaultSpdyRstStreamFrame toString (), Builder exposeHeaders (String), DateValueGenerator call (), SpdySessionStatus compareTo (SpdySessionStatus), SpdySessionStatus valueOf (int), SpdyCodecUtil getUnsignedInt (ByteBuf, int), CorsConfig isShortCurcuit (), SpdySessionStatus equals (Object), HttpUtil getMimeType (HttpMessage), HttpUtil getCharset (CharSequence), CorsConfig withOrigin (String), AbstractDiskHttpData addContent (ByteBuf, boolean), AbstractDiskHttpData setContent (InputStream), HttpUtil getCharset (HttpMessage), CorsConfig allowedRequestHeaders (), HttpUtil setKeepAlive (HttpHeaders, HttpVersion, boolean), AbstractDiskHttpData touch (Object), AbstractDiskHttpData renameTo (File), AbstractDiskHttpData deleteOnExit (), HttpUtil getCharset (CharSequence, Charset), AbstractDiskHttpData getPrefix (), AbstractDiskHttpData setContent (File), HttpUtil setKeepAlive (HttpMessage, boolean), DefaultSpdyRstStreamFrame status (), HttpUtil isOriginForm (URI), DefaultSpdyRstStreamFrame setStreamId (int), Builder allowCredentials (), Builder Builder (String), HttpUtil set100ContinueExpected (HttpMessage, boolean), SpdyCodecUtil getSignedInt (ByteBuf, int), HttpUtil normalizeAndGetContentLength (List<? extends CharSequence>, boolean, boolean), HttpUtil getContentLength (HttpMessage), CorsConfig origin (), AbstractDiskHttpData getBaseDirectory (), AbstractDiskHttpData getFile (), CorsConfig allowedRequestMethods (), AbstractDiskHttpData getChunk (int), AbstractDiskHttpData getDiskFilename (), CorsConfig origins (), DefaultSpdyRstStreamFrame setLast (boolean), CorsConfig exposedHeaders (), HttpUtil isExpectHeaderValid (HttpMessage), Builder disable (), SpdyCodecUtil validateHeaderValue (CharSequence), CorsConfig getValue (Callable<T>), SpdyHeaderBlockJZlibEncoder end (), AbstractDiskHttpData get (), CorsConfig isNullOriginAllowed (), AbstractDiskHttpData AbstractDiskHttpData (String, Charset, long), SpdyHeaderBlockJZlibEncoder encode (ByteBufAllocator), HttpUtil getContentLength (HttpMessage, long), AbstractDiskHttpData getPostfix (), DefaultSpdyRstStreamFrame setStatus (SpdyStreamStatus), HttpUtil getContentLength (HttpMessage, int), AbstractDiskHttpData isInMemory (), SpdySessionStatus SpdySessionStatus (int, String), SpdyHeaderBlockJZlibEncoder setInput (ByteBuf), ServerCookieDecoder decode (Collection<? super Cookie>, String), HttpUtil isAsteriskForm (URI), BinaryWebSocketFrame BinaryWebSocketFrame (ByteBuf), AbstractDiskHttpData readFrom (File), CorsConfig withAnyOrigin (), CorsConfig preflightResponseHeaders (), HttpUtil getCharsetAsSequence (HttpMessage), HttpUtil isContentLengthSet (HttpMessage), SpdyHeaderBlockJZlibEncoder SpdyHeaderBlockJZlibEncoder (SpdyVersion, int, int, int), BinaryWebSocketFrame replace (ByteBuf)]","1197"
"2","netty/codec-http","3bbbb8d5810e41cd17141347cc524ab24def9f97","204a6fcc19f7c99ad32d3ffc4a531905ba24a123","WHILE_TO_FOR","2","1","1","[SpdyCodecUtil validateHeaderValue (CharSequence)]","9"
"5","netty/codec-http","204a6fcc19f7c99ad32d3ffc4a531905ba24a123","f4d4454306b8821ebd2f7ace596e6446b8a4827e","REVERSE_IF_ELSE","3","1","1","[SpdyCodecUtil validateHeaderValue (CharSequence)]","9"
"6","netty/codec-http","f4d4454306b8821ebd2f7ace596e6446b8a4827e","ae55c96487fe1337113a7fbf38717e2c85e326d6","SWITCH_EQUAL_SIDES","14","1","3","[SpdyCodecUtil isServerId (int), SpdyCodecUtil validateHeaderValue (CharSequence), SpdyCodecUtil validateHeaderName (CharSequence)]","27"
"8","netty/codec-http","ae55c96487fe1337113a7fbf38717e2c85e326d6","95cb4322e096faba785c1ef74b5a5fcfcb8c4298","LOCAL_VAR_RENAMING","0","1","1","[WebSocketExtensionFilter mustSkip (WebSocketFrame)]","10"
"15","netty/codec-http","95cb4322e096faba785c1ef74b5a5fcfcb8c4298","db643541a011797f8b90fec4b64c0603dfee1d0f","LOCAL_VAR_RENAMING","0","1","1","[WebSocketExtensionFilter mustSkip (WebSocketFrame)]","10"
"25","netty/codec-http","db643541a011797f8b90fec4b64c0603dfee1d0f","5651895bc38ce27dfa4cc469dc19505928b8e253","LOCAL_VAR_RENAMING","0","1","1","[WebSocketExtensionFilter mustSkip (WebSocketFrame)]","10"
"28","netty/codec-http","5651895bc38ce27dfa4cc469dc19505928b8e253","c97c07977314b306d9af3d38ac9bfff05e63e109","LOCAL_VAR_RENAMING","0","1","0","[]","0"
"33","netty/codec-http","c97c07977314b306d9af3d38ac9bfff05e63e109","f4c8fc4752c6eb24777b2eca287a52a41e61cb65","LOCAL_VAR_RENAMING","0","1","0","[]","0"
"58","netty/codec-http","f4c8fc4752c6eb24777b2eca287a52a41e61cb65","0181d79874714850d04c7884ad1067ba6f5a4867","LOCAL_VAR_RENAMING","0","1","1","[WebSocketExtensionFilter mustSkip (WebSocketFrame)]","10"
"65","netty/codec-http","0181d79874714850d04c7884ad1067ba6f5a4867","b53d81bcbabb2bc609bc9c222ab891d526289593","LOCAL_VAR_RENAMING","0","1","0","[]","0"
"0","netty/codec-http2","b53d81bcbabb2bc609bc9c222ab891d526289593","cce70ea67e377f34d8df6c975e215445da723643","WHILE_TO_FOR","2","1","311","[DefaultHttp2DataFrame release (), State updateStreamableBytes (int, boolean), DefaultHttp2DataFrame duplicate (), DefaultHttp2DataFrame DefaultHttp2DataFrame (ByteBuf, boolean, int), CompressorHttp2ConnectionEncoder cleanup (Http2Stream, EmbeddedChannel), HeadersBlockBuilder headerSizeExceeded (), Http2MultiplexCodec handlerRemoved0 (ChannelHandlerContext), Http2GoAwayException lastStreamId (), HpackDecoder decodeULE128 (ByteBuf, long), CompressorHttp2ConnectionEncoder CompressorHttp2ConnectionEncoder (Http2ConnectionEncoder), HeadersBlockBuilder verifyAssociatedWithAStream (), State takeChild (Iterator<IntObjectMap.PrimitiveEntry<State>>, State, boolean, List<ParentChangedEvent>), DefaultHttp2FrameReader getStreamId (), InboundHttp2ToHttpAdapter onRstStreamRead (ChannelHandlerContext, int, long), DefaultHttp2FrameReader verifyContinuationFrame (), Http2MultiplexCodecStreamChannel flush0 (ChannelHandlerContext), Http2Decompressor decompressor (), DefaultHttp2PriorityFrame hashCode (), Http2GoAwayException Http2GoAwayException (GoAwayDetail), Http2HeadersSink Http2HeadersSink (int, Http2Headers, long, boolean), State close (), PendingStream close (Throwable), DelegatingDecompressorFrameListener DelegatingDecompressorFrameListener (Http2Connection, Http2FrameListener, boolean), InboundHttp2ToHttpAdapter newMessage (Http2Stream, Http2Headers, boolean, ByteBufAllocator), Http2GoAwayException debugData (), InboundHttp2ToHttpAdapter onSettingsRead (ChannelHandlerContext, Http2Settings), HeadersContinuation getStreamId (), State priorityQueueIndex (DefaultPriorityQueue<?>), DefaultHttp2PriorityFrame DefaultHttp2PriorityFrame (int, short, boolean), DefaultHttp2FrameReader headersConfiguration (), DefaultHttp2FrameReader lengthWithoutTrailingPadding (int, int), Http2GoAwayException cancelGoAwayStreams (GoAwayDetail), State removePseudoTimeQueue (State), Http2MultiplexCodec channelRead (ChannelHandlerContext, Object), HpackDecoder decodeULE128 (ByteBuf, int), HeadersBlockBuilder verifyStreamOrConnectionId (int, String), HpackDecoder HpackDecoder (long), WeightedFairQueueByteDistributor distribute (int, Writer, State), CompressorHttp2ConnectionEncoder writeData (ChannelHandlerContext, int, ByteBuf, int, boolean, ChannelPromise), InboundHttp2ToHttpAdapter fireChannelRead (ChannelHandlerContext, FullHttpMessage, boolean, Http2Stream), CompressorHttp2ConnectionEncoder nextReadableBuf (EmbeddedChannel), InboundHttp2ToHttpAdapter mustSendImmediately (FullHttpMessage), Http2MultiplexCodec visit (Http2FrameStream), DefaultHttp2DataFrame isEndStream (), State updatePseudoTime (State, int, long), DefaultHttp2DataFrame equals (Object), InboundHttp2ToHttpAdapter onDataRead (ChannelHandlerContext, int, ByteBuf, int, boolean), Http2MultiplexCodec onHttp2StreamStateChanged (ChannelHandlerContext, DefaultHttp2FrameStream), Http2GoAwayException StreamBufferingEncoder (Http2ConnectionEncoder, int), InboundHttp2ToHttpAdapter copyIfNeeded (ByteBufAllocator, FullHttpMessage), DelegatingDecompressorFrameListener DelegatingDecompressorFrameListener (Http2Connection, Http2FrameListener), WeightedFairQueueByteDistributor isChild (int, int, short), Frame send (ChannelHandlerContext, int), DefaultHttp2DataFrame refCnt (), StateOnlyComparator compare (State, State), State initChildrenIfEmpty (), DefaultHttp2FrameReader verifyRstStreamFrame (), State State (int), DefaultHttp2FrameReader DefaultHttp2FrameReader (Http2HeadersDecoder), DefaultHttp2PriorityFrame stream (Http2FrameStream), DelegatingDecompressorFrameListener initDecompressor (ChannelHandlerContext, int, Http2Headers, boolean), StatePseudoTimeComparator compare (State, State), Http2MultiplexCodecStreamChannel addChannelToReadCompletePendingQueue (), DefaultHttp2FrameReader verifyWindowUpdateFrame (), ConsumedBytesConverter unconsumedBytes (Http2Stream), WeightedFairQueueByteDistributor onStreamActive (Http2Stream), DefaultHttp2DataFrame retainedDuplicate (), CompressorHttp2ConnectionEncoder bindCompressorToStream (EmbeddedChannel, int), Http2GoAwayException onStreamClosed (Http2Stream), DelegatingDecompressorFrameListener decompressor (Http2Stream), State getTotalWeight (), WeightedFairQueueByteDistributor state (Http2Stream), State State (Http2Stream, int), DefaultHttp2PriorityFrame streamDependency (), DefaultHttp2FrameReader DefaultHttp2FrameReader (), HeadersBlockBuilder headers (), HpackHuffmanDecoder processNibble (int), State pollPseudoTimeQueue (), Http2MultiplexCodecStreamChannel isParentReadInProgress (), Http2MultiplexCodecStreamChannel parentContext (), HpackHuffmanEncoder getEncodedLength (CharSequence), HpackHuffmanDecoder process (byte), InboundHttp2ToHttpAdapter onHeadersRead (ChannelHandlerContext, int, Http2Headers, int, short, boolean, int, boolean), Http2MultiplexCodec channelWritabilityChanged (ChannelHandlerContext), HpackDecoder getIndexedHeader (int), DefaultHttp2DataFrame DefaultHttp2DataFrame (ByteBuf), DefaultHttp2DataFrame initialFlowControlledBytes (), DefaultHttp2FrameReader processFragment (boolean, ByteBuf, int, Http2FrameListener), DefaultHttp2FrameReader readContinuationFrame (ByteBuf, Http2FrameListener), State setDistributing (), DefaultHttp2FrameReader configuration (), DefaultHttp2HeadersEncoder maxHeaderTableSize (long), State offerPseudoTimeQueue (State), State setParent (State), WeightedFairQueueByteDistributor notifyParentChanged (List<ParentChangedEvent>), ConsumedBytesConverter initialWindowSize (Http2Stream), State offerAndInitializePseudoTime (State), HpackHuffmanEncoder encodeSlowPath (ByteBuf, CharSequence), DefaultHttp2DataFrame toString (), InboundHttp2ToHttpAdapter onHeadersRead (ChannelHandlerContext, int, Http2Headers, int, boolean), State removeAllChildrenExcept (State), DefaultHttp2HeadersEncoder maxHeaderTableSize (), Http2GoAwayException writeRstStream (ChannelHandlerContext, int, long, ChannelPromise), CompressorHttp2ConnectionEncoder getTargetContentEncoding (CharSequence), HpackHuffmanEncoder HpackHuffmanEncoder (int[], byte[]), WeightedFairQueueByteDistributor numChildren (int), EncodedLengthProcessor reset (), DefaultHttp2FrameReader resetHeadersContinuationIfEnd (boolean), HeadersBlockBuilder verifyNotProcessingHeaders (), HpackDecoder readName (int), WeightedFairQueueByteDistributor distributeToChildren (int, Writer, State), Http2MultiplexCodec processPendingReadCompleteQueue (), InboundHttp2ToHttpAdapter onRstStreamRead (Http2Stream, FullHttpMessage), DefaultHttp2FrameReader readPushPromiseFrame (ChannelHandlerContext, ByteBuf, Http2FrameListener), DefaultHttp2FrameReader verifyPriorityFrame (), DefaultHttp2DataFrame touch (Object), Http2MultiplexCodec Http2MultiplexCodec (Http2ConnectionEncoder, Http2ConnectionDecoder, Http2Settings, ChannelHandler, ChannelHandler, boolean, boolean), CompressorHttp2ConnectionEncoder newCompressor (ChannelHandlerContext, Http2Headers, boolean), Http2MultiplexCodec flush0 (ChannelHandlerContext), Http2Decompressor Http2Decompressor (EmbeddedChannel), WeightedFairQueueByteDistributor distribute (int, Writer), DefaultHttp2DataFrame stream (Http2FrameStream), HeadersContinuation headersBlockBuilder (), DelegatingDecompressorFrameListener nextReadableBuf (EmbeddedChannel), DefaultHttp2FrameReader close (), DefaultHttp2PriorityFrame toString (), DefaultHttp2FrameReader processPayloadState (ChannelHandlerContext, ByteBuf, Http2FrameListener), ConsumedBytesConverter initialWindowSize (), HpackDecoder notEnoughDataException (ByteBuf), EncodeProcessor process (byte), InboundHttp2ToHttpAdapter InboundHttp2ToHttpAdapter (Http2Connection, int, boolean, boolean), DefaultHttp2FrameReader verifyHeadersFrame (), DefaultHttp2DataFrame DefaultHttp2DataFrame (ByteBuf, boolean), State initChildren (), WeightedFairQueueByteDistributor updateDependencyTree (int, int, short, boolean), WeightedFairQueueByteDistributor allocationQuantum (int), ConsumedBytesConverter ConsumedBytesConverter (Http2LocalFlowController), DefaultHttp2DataFrame copy (), DefaultHttp2HeadersEncoder close (), DefaultHttp2FrameReader DefaultHttp2FrameReader (boolean), ConsumedBytesConverter incrementWindowSize (Http2Stream, int), HpackDecoder getMaxHeaderListSize (), DefaultHttp2DataFrame retain (int), DelegatingDecompressorFrameListener cleanup (Http2Decompressor), InboundHttp2ToHttpAdapter putMessage (Http2Stream, FullHttpMessage), Http2GoAwayException writeHeaders (ChannelHandlerContext, int, Http2Headers, int, boolean, ChannelPromise), Frame Frame (ChannelPromise), Http2GoAwayException tryCreatePendingStreams (), DefaultHttp2FrameReader readGoAwayFrame (ChannelHandlerContext, ByteBuf, Http2FrameListener), DefaultHttp2FrameReader maxFrameSize (int), Http2MultiplexCodec channelReadComplete (ChannelHandlerContext), Http2MultiplexCodec onHttp2Frame (ChannelHandlerContext, Http2Frame), HpackDecoder decode (ByteBuf, Http2HeadersSink), DelegatingDecompressorFrameListener newContentDecompressor (ChannelHandlerContext, CharSequence), InboundHttp2ToHttpAdapter removeMessage (Http2Stream, boolean), ConsumedBytesConverter initialWindowSize (int), CompressorHttp2ConnectionEncoder defaultCompressionOptions (), DefaultHttp2PriorityFrame exclusive (), DefaultHttp2FrameReader verifyGoAwayFrame (), ImmediateSendDetector copyIfNeeded (ByteBufAllocator, FullHttpMessage), State activeCountChangeForTree (int), DefaultHttp2FrameReader readSettingsFrame (ChannelHandlerContext, ByteBuf, Http2FrameListener), HpackDecoder getMaxHeaderTableSize (), DefaultHttp2DataFrame release (int), State removeChild (State), DefaultHttp2PriorityFrame name (), State priorityQueueIndex (DefaultPriorityQueue<?>, int), HpackHuffmanEncoder HpackHuffmanEncoder (), State peekPseudoTimeQueue (), ParentChangedEvent ParentChangedEvent (State, State), HpackDecoder HpackDecoder (long, int), DefaultHttp2DataFrame padding (), Http2GoAwayException remoteSettings (Http2Settings), WeightedFairQueueByteDistributor onStreamAdded (Http2Stream), Http2GoAwayException canCreateStream (), WeightedFairQueueByteDistributor onStreamClosed (Http2Stream), Http2MultiplexCodecStreamChannel write0 (ChannelHandlerContext, Object), State isActive (), Http2MultiplexCodec onHttpClientUpgrade (), DefaultHttp2FrameReader verifyFrameState (), DefaultHttp2FrameReader readWindowUpdateFrame (ChannelHandlerContext, ByteBuf, Http2FrameListener), DataFrame DataFrame (ByteBuf, int, boolean, ChannelPromise), Http2GoAwayException onGoAwayReceived (int, long, ByteBuf), CompressorHttp2ConnectionEncoder writeHeaders (ChannelHandlerContext, int, Http2Headers, int, boolean, ChannelPromise), DefaultHttp2DataFrame DefaultHttp2DataFrame (boolean), Http2MultiplexCodec onUserEventTriggered (ChannelHandlerContext, Object), DefaultHttp2FrameReader verifyPushPromiseFrame (), DefaultHttp2FrameReader readRstStreamFrame (ChannelHandlerContext, ByteBuf, Http2FrameListener), HeadersBlockBuilder close (), CompressorHttp2ConnectionEncoder onStreamRemoved (Http2Stream), InboundHttp2ToHttpAdapter onStreamRemoved (Http2Stream), HpackDecoder getHeaderField (int), DefaultHttp2HeadersEncoder maxHeaderListSize (long), Http2HeadersSink appendToHeaderList (AsciiString, AsciiString), DefaultHttp2DataFrame name (), DefaultHttp2DataFrame replace (ByteBuf), EncodedLengthProcessor length (), DefaultHttp2PriorityFrame weight (), Http2MultiplexCodec handlerAdded0 (ChannelHandlerContext), InboundHttp2ToHttpAdapter getMessage (Http2Stream), DataFrame send (ChannelHandlerContext, int), HeadersContinuation processFragment (boolean, ByteBuf, int, Http2FrameListener), DefaultHttp2DataFrame retain (), PendingStream sendFrames (), DefaultHttp2FrameReader readPriorityFrame (ChannelHandlerContext, ByteBuf, Http2FrameListener), DelegatingDecompressorFrameListener onHeadersRead (ChannelHandlerContext, int, Http2Headers, int, boolean), DefaultHttp2FrameReader verifyPingFrame (), DefaultHttp2HeadersEncoder configuration (), EncodedLengthProcessor process (byte), Http2GoAwayException writeHeaders (ChannelHandlerContext, int, Http2Headers, int, short, boolean, int, boolean, ChannelPromise), DelegatingDecompressorFrameListener onHeadersRead (ChannelHandlerContext, int, Http2Headers, int, short, boolean, int, boolean), DefaultHttp2FrameReader readPadding (ByteBuf), HpackDecoder decode (int, ByteBuf, Http2Headers, boolean), State setStreamReservedOrActivated (), State unsetActive (), DefaultHttp2HeadersEncoder DefaultHttp2HeadersEncoder (SensitivityDetector, HpackEncoder), HpackDecoder decodeDynamicTableSizeUpdates (ByteBuf), ConsumedBytesConverter windowSize (Http2Stream), GoAwayDetail GoAwayDetail (int, long, byte[]), State toString (), State takeChild (State, boolean, List<ParentChangedEvent>), HpackDecoder readStringLiteral (ByteBuf, int, boolean), State State (int, Http2Stream, int), DefaultHttp2HeadersEncoder DefaultHttp2HeadersEncoder (SensitivityDetector, boolean, int, int), Http2MultiplexCodec onHttp2FrameStreamException (ChannelHandlerContext, Http2FrameStreamException), HeadersFrame send (ChannelHandlerContext, int), DefaultHttp2PriorityFrame equals (Object), HpackDecoder validateHeader (int, AsciiString, CharSequence, HeaderType), Http2MultiplexCodecStreamChannel Http2MultiplexCodecStreamChannel (DefaultHttp2FrameStream, ChannelHandler), Http2Decompressor incrementDecompressedBytes (int), WeightedFairQueueByteDistributor WeightedFairQueueByteDistributor (Http2Connection), InboundHttp2ToHttpAdapter processHeadersEnd (ChannelHandlerContext, Http2Stream, FullHttpMessage, boolean), State unsetDistributing (), DefaultHttp2FrameReader readPingFrame (ChannelHandlerContext, long, Http2FrameListener), DefaultHttp2DataFrame touch (), Http2HeadersSink finish (), HeadersBlockBuilder addFragment (ByteBuf, int, ByteBufAllocator, boolean), DefaultHttp2FrameReader verifySettingsFrame (), DefaultHttp2HeadersEncoder DefaultHttp2HeadersEncoder (SensitivityDetector), Http2Decompressor incrementCompressedBytes (int), HpackDecoder insertHeader (Http2HeadersSink, AsciiString, AsciiString, IndexType), HeadersFrame HeadersFrame (Http2Headers, int, short, boolean, int, boolean, ChannelPromise), EncodeProcessor end (), CompressorHttp2ConnectionEncoder newContentCompressor (ChannelHandlerContext, CharSequence), CompressorHttp2ConnectionEncoder CompressorHttp2ConnectionEncoder (Http2ConnectionEncoder, int, int, int), Http2GoAwayException writeData (ChannelHandlerContext, int, ByteBuf, int, boolean, ChannelPromise), DefaultHttp2FrameReader readUnknownFrame (ChannelHandlerContext, ByteBuf, Http2FrameListener), State write (int, Writer), Http2MultiplexCodec newOutboundStream (), HpackHuffmanDecoder HpackHuffmanDecoder (), DefaultHttp2FrameReader readDataFrame (ChannelHandlerContext, ByteBuf, Http2FrameListener), DefaultHttp2HeadersEncoder DefaultHttp2HeadersEncoder (), ConsumedBytesConverter channelHandlerContext (ChannelHandlerContext), DefaultHttp2FrameReader closeHeadersContinuation (), State isDistributing (), DefaultHttp2FrameReader readHeadersFrame (ChannelHandlerContext, ByteBuf, Http2FrameListener), DelegatingDecompressorFrameListener onDataRead (ChannelHandlerContext, int, ByteBuf, int, boolean), Http2GoAwayException numBufferedStreams (), CompressorHttp2ConnectionEncoder newCompressionChannel (ChannelHandlerContext, ZlibWrapper), ConsumedBytesConverter receiveFlowControlledFrame (Http2Stream, ByteBuf, int, boolean), Frame release (Throwable), HpackDecoder length (), WeightedFairQueueByteDistributor WeightedFairQueueByteDistributor (Http2Connection, int), DefaultHttp2HeadersEncoder DefaultHttp2HeadersEncoder (SensitivityDetector, boolean, int), HpackDecoder setMaxHeaderTableSize (long), ConsumedBytesConverter consumeBytes (Http2Stream, int), InboundHttp2ToHttpAdapter processHeadersBegin (ChannelHandlerContext, Http2Stream, Http2Headers, boolean, boolean, boolean), DefaultHttp2FrameReader frameSizePolicy (), State setActive (), State toString (StringBuilder), DelegatingDecompressorFrameListener getTargetContentEncoding (CharSequence), State wasStreamReservedOrActivated (), WeightedFairQueueByteDistributor onStreamRemoved (Http2Stream), State isDescendantOf (State), DefaultHttp2FrameReader verifyPadding (int), HeadersContinuation close (), Http2GoAwayException errorCode (), DefaultHttp2FrameReader maxFrameSize (), DefaultHttp2FrameReader verifyDataFrame (), HpackHuffmanEncoder encode (ByteBuf, CharSequence), Http2GoAwayException close (), DefaultHttp2HeadersEncoder DefaultHttp2HeadersEncoder (SensitivityDetector, boolean), HpackHuffmanDecoder decode (ByteBuf, int), ConsumedBytesConverter frameWriter (Http2FrameWriter), PendingStream PendingStream (ChannelHandlerContext, int), DefaultHttp2FrameReader preProcessFrame (ByteBuf), HpackDecoder setMaxHeaderListSize (long), CompressorHttp2ConnectionEncoder writeHeaders (ChannelHandlerContext, int, Http2Headers, int, short, boolean, int, boolean, ChannelPromise), CompressorHttp2ConnectionEncoder CompressorHttp2ConnectionEncoder (Http2ConnectionEncoder, CompressionOptions), Http2Decompressor consumeBytes (int, int), DefaultHttp2HeadersEncoder encodeHeaders (int, Http2Headers, ByteBuf), Http2ChannelClosedException Http2ChannelClosedException (), Http2GoAwayException Http2GoAwayException (int, long, byte[]), HpackDecoder setDynamicTableSize (long), HpackDecoder size (), InboundHttp2ToHttpAdapter onPushPromiseRead (ChannelHandlerContext, int, int, Http2Headers, int), DefaultHttp2FrameReader readFrame (ChannelHandlerContext, ByteBuf, Http2FrameListener), DefaultHttp2HeadersEncoder maxHeaderListSize (), HpackHuffmanEncoder getEncodedLengthSlowPath (CharSequence), Http2MultiplexCodec onHttp2GoAwayFrame (ChannelHandlerContext, Http2GoAwayFrame), WeightedFairQueueByteDistributor updateStreamableBytes (StreamState), DataFrame release (Throwable), WeightedFairQueueByteDistributor state (int), State State (Http2Stream), DefaultHttp2FrameReader verifyUnknownFrame (), Http2GoAwayException isExistingStream (int), DelegatingDecompressorFrameListener onStreamRemoved (Http2Stream), DefaultHttp2DataFrame hashCode (), Http2GoAwayException StreamBufferingEncoder (Http2ConnectionEncoder), ImmediateSendDetector mustSendImmediately (FullHttpMessage), DefaultHttp2DataFrame content ()]","4043"
"3","netty/codec-http2","cce70ea67e377f34d8df6c975e215445da723643","24620fcbadcd00f3bc4af37591540b982aeee9f0","VAR_DECLARATION_MERGING","12","1","1","[HpackHuffmanEncoder encodeSlowPath (ByteBuf, CharSequence)]","13"
"8","netty/codec-http2","24620fcbadcd00f3bc4af37591540b982aeee9f0","9a5be4a3ccc9e6d43ea71e3b7ec93218cad3813f","REVERSE_IF_ELSE","3","1","1","[EncodeProcessor end ()]","13"
"9","netty/codec-http2","9a5be4a3ccc9e6d43ea71e3b7ec93218cad3813f","ab66b33877f2a8bf16df6a8e4389780edc177a06","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","2","[EncodedLengthProcessor process (byte), EncodeProcessor process (byte)]","26"
"12","netty/codec-http2","ab66b33877f2a8bf16df6a8e4389780edc177a06","5bc493fce01d6ce1ae559f0ea6cee660e34e0b9c","REVERSE_IF_ELSE","3","1","4","[EncodeProcessor end (), HpackHuffmanEncoder encodeSlowPath (ByteBuf, CharSequence), HpackHuffmanEncoder encode (ByteBuf, CharSequence), HpackHuffmanEncoder getEncodedLength (CharSequence)]","52"
"14","netty/codec-http2","5bc493fce01d6ce1ae559f0ea6cee660e34e0b9c","127793d8e111403fed5c14914a125d56c98b7964","WHILE_TO_FOR","2","1","1","[HpackHuffmanEncoder encodeSlowPath (ByteBuf, CharSequence)]","13"
"17","netty/codec-http2","127793d8e111403fed5c14914a125d56c98b7964","a487aa30e789e5197ffcd1291b85daf4268e1040","FOR_TO_WHILE","1","1","3","[HpackHuffmanEncoder encodeSlowPath (ByteBuf, CharSequence), HpackHuffmanEncoder getEncodedLengthSlowPath (CharSequence), EncodeProcessor process (byte)]","39"
"18","netty/codec-http2","a487aa30e789e5197ffcd1291b85daf4268e1040","8c7bc39449f9e00ead33bd3a56a90cd7bfc50afd","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[HpackHuffmanEncoder encodeSlowPath (ByteBuf, CharSequence)]","13"
"21","netty/codec-http2","8c7bc39449f9e00ead33bd3a56a90cd7bfc50afd","0baeeb7cd67136a22c79312a7f8436d7b6c1821d","STATEMENTS_ORDER_REARRANGEMENT","10","1","5","[EncodeProcessor end (), HpackHuffmanEncoder encodeSlowPath (ByteBuf, CharSequence), HpackHuffmanEncoder getEncodedLengthSlowPath (CharSequence), EncodeProcessor process (byte), HpackHuffmanEncoder HpackHuffmanEncoder (int[], byte[])]","65"
"25","netty/codec-http2","0baeeb7cd67136a22c79312a7f8436d7b6c1821d","9437cffc8cc39e27be5a0a192aa67eddaef1435c","INFIX_EXPRESSION_DIVIDING","8","1","3","[EncodedLengthProcessor length (), EncodedLengthProcessor process (byte), HpackHuffmanEncoder getEncodedLengthSlowPath (CharSequence)]","39"
"26","netty/codec-http2","9437cffc8cc39e27be5a0a192aa67eddaef1435c","64b35ca7589dc2e19576a1455163d1824ada7b41","VAR_DECLARATION_DIVIDING","13","1","1","[HpackHuffmanEncoder encodeSlowPath (ByteBuf, CharSequence)]","13"
"29","netty/codec-http2","64b35ca7589dc2e19576a1455163d1824ada7b41","8ec16d9ccabb9c0c5aa6eaf57ae7e2d1519f6b0f","WHILE_TO_FOR","2","1","1","[EncodeProcessor process (byte)]","13"
"30","netty/codec-http2","8ec16d9ccabb9c0c5aa6eaf57ae7e2d1519f6b0f","cfc654ba79752805707218ae4704b8b8e93a2f1c","VAR_DECLARATION_MERGING","12","1","1","[HpackHuffmanEncoder encodeSlowPath (ByteBuf, CharSequence)]","13"
"35","netty/codec-http2","cfc654ba79752805707218ae4704b8b8e93a2f1c","7eca9c60c3a781460c8685d6ca09985b9ee19395","STATEMENTS_ORDER_REARRANGEMENT","10","1","3","[HpackHuffmanEncoder encodeSlowPath (ByteBuf, CharSequence), EncodeProcessor process (byte), HpackHuffmanEncoder HpackHuffmanEncoder (int[], byte[])]","39"
"39","netty/codec-http2","7eca9c60c3a781460c8685d6ca09985b9ee19395","5b317475d00a9bd0c1c67f31afd174cf6cc98834","PP_TO_ADD_ASSIGNMENT","6","1","1","[HpackHuffmanEncoder getEncodedLengthSlowPath (CharSequence)]","13"
"43","netty/codec-http2","5b317475d00a9bd0c1c67f31afd174cf6cc98834","c1f71b88375c2d7c40fa06be92e33849beeb6ece","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[EncodeProcessor process (byte)]","13"
"45","netty/codec-http2","c1f71b88375c2d7c40fa06be92e33849beeb6ece","af0895bd05c1f517eebbfcf7e0224a973eff7518","VAR_DECLARATION_DIVIDING","13","1","1","[HpackHuffmanEncoder encodeSlowPath (ByteBuf, CharSequence)]","13"
"49","netty/codec-http2","af0895bd05c1f517eebbfcf7e0224a973eff7518","76d3bcf9f1858b737caac0e359b2029c37d0ebe7","WHILE_TO_FOR","2","1","1","[HpackHuffmanEncoder getEncodedLengthSlowPath (CharSequence)]","13"
"51","netty/codec-http2","76d3bcf9f1858b737caac0e359b2029c37d0ebe7","9fa2bebd9e80a35757c1b18767cc683f71bbce36","REVERSE_IF_ELSE","3","1","3","[EncodeProcessor end (), HpackHuffmanEncoder encodeSlowPath (ByteBuf, CharSequence), HpackHuffmanEncoder getEncodedLength (CharSequence)]","39"
"52","netty/codec-http2","9fa2bebd9e80a35757c1b18767cc683f71bbce36","517dc79f32690b746a6538394408e919960afdce","FOR_TO_WHILE","1","1","3","[HpackHuffmanEncoder encodeSlowPath (ByteBuf, CharSequence), HpackHuffmanEncoder getEncodedLengthSlowPath (CharSequence), EncodeProcessor process (byte)]","39"
"60","netty/codec-http2","517dc79f32690b746a6538394408e919960afdce","fd30f1285ea1486339a7b43482b7580a65819410","PP_TO_ADD_ASSIGNMENT","6","1","1","[HpackHuffmanEncoder encodeSlowPath (ByteBuf, CharSequence)]","13"
"61","netty/codec-http2","fd30f1285ea1486339a7b43482b7580a65819410","eb8adc9340239c3d23010ad5216cf3d13bde5364","WHILE_TO_FOR","2","1","3","[HpackHuffmanEncoder encodeSlowPath (ByteBuf, CharSequence), HpackHuffmanEncoder getEncodedLengthSlowPath (CharSequence), EncodeProcessor process (byte)]","39"
"62","netty/codec-http2","eb8adc9340239c3d23010ad5216cf3d13bde5364","76bf9baae7e28196999c25364f44d190e87e3653","FOR_TO_WHILE","1","1","2","[HpackHuffmanEncoder getEncodedLengthSlowPath (CharSequence), EncodeProcessor process (byte)]","26"
"64","netty/codec-http2","76bf9baae7e28196999c25364f44d190e87e3653","cd781cefaf371dd7138210fefb6846dde4988c8d","VAR_DECLARATION_MERGING","12","1","1","[HpackHuffmanEncoder encodeSlowPath (ByteBuf, CharSequence)]","13"
"65","netty/codec-http2","cd781cefaf371dd7138210fefb6846dde4988c8d","cf306dbb859a98fa4358b80254832a20c7634f59","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[HpackHuffmanEncoder encodeSlowPath (ByteBuf, CharSequence)]","13"
"0","netty/codec-memcache","cf306dbb859a98fa4358b80254832a20c7634f59","44f50ecca19e0dc6df1436ac3233894a46e11a92","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","74","[DefaultBinaryMemcacheRequest DefaultBinaryMemcacheRequest (ByteBuf), AbstractBinaryMemcacheMessage setMagic (byte), AbstractBinaryMemcacheMessage setOpaque (int), DefaultBinaryMemcacheRequest retain (), DefaultBinaryMemcacheRequest DefaultBinaryMemcacheRequest (ByteBuf, ByteBuf), DefaultLastMemcacheContent retain (int), DefaultBinaryMemcacheRequest copyMeta (DefaultBinaryMemcacheRequest), AbstractBinaryMemcacheMessage retain (), AbstractMemcacheObjectEncoder encodeAndRetain (Object), AbstractMemcacheObjectEncoder encodeMessage (ChannelHandlerContext, M), AbstractBinaryMemcacheMessage setKey (ByteBuf), DefaultFullBinaryMemcacheRequest touch (), AbstractBinaryMemcacheMessage key (), AbstractBinaryMemcacheMessage setDataType (byte), AbstractBinaryMemcacheMessage extras (), DefaultFullBinaryMemcacheRequest deallocate (), DefaultBinaryMemcacheRequest DefaultBinaryMemcacheRequest (), BinaryMemcacheResponseDecoder BinaryMemcacheResponseDecoder (), AbstractBinaryMemcacheMessage setExtras (ByteBuf), AbstractBinaryMemcacheMessage dataType (), AbstractBinaryMemcacheMessage opcode (), DefaultFullBinaryMemcacheRequest newInstance (ByteBuf, ByteBuf, ByteBuf), AbstractBinaryMemcacheEncoder encodeKey (ByteBuf, ByteBuf), DefaultLastMemcacheContent touch (), DefaultLastMemcacheContent retainedDuplicate (), AbstractBinaryMemcacheEncoder encodeMessage (ChannelHandlerContext, M), AbstractBinaryMemcacheEncoder encodeHeader (ByteBuf, M), AbstractBinaryMemcacheMessage touch (), AbstractMemcacheObjectEncoder encode (ChannelHandlerContext, Object, List<Object>), BinaryMemcacheResponseDecoder decodeHeader (ByteBuf), DefaultLastMemcacheContent copy (), DefaultBinaryMemcacheRequest retain (int), BinaryMemcacheResponseDecoder BinaryMemcacheResponseDecoder (int), AbstractBinaryMemcacheMessage magic (), AbstractBinaryMemcacheMessage keyLength (), BinaryMemcacheResponseDecoder buildInvalidMessage (), AbstractBinaryMemcacheMessage extrasLength (), DefaultFullBinaryMemcacheRequest content (), DefaultFullBinaryMemcacheRequest retain (), AbstractBinaryMemcacheMessage AbstractBinaryMemcacheMessage (ByteBuf, ByteBuf), DefaultLastMemcacheContent touch (Object), DefaultLastMemcacheContent replace (ByteBuf), AbstractBinaryMemcacheMessage touch (Object), AbstractBinaryMemcacheMessage setOpcode (byte), DefaultBinaryMemcacheRequest touch (), AbstractBinaryMemcacheMessage copyMeta (AbstractBinaryMemcacheMessage), DefaultLastMemcacheContent DefaultLastMemcacheContent (), DefaultLastMemcacheContent duplicate (), DefaultBinaryMemcacheRequest reserved (), DefaultFullBinaryMemcacheRequest DefaultFullBinaryMemcacheRequest (ByteBuf, ByteBuf, ByteBuf), AbstractBinaryMemcacheMessage setKeyLength (short), AbstractBinaryMemcacheMessage setExtrasLength (byte), AbstractBinaryMemcacheMessage deallocate (), AbstractBinaryMemcacheMessage setTotalBodyLength (int), AbstractBinaryMemcacheMessage totalBodyLength (), BinaryMemcacheRequestEncoder encodeHeader (ByteBuf, BinaryMemcacheRequest), DefaultBinaryMemcacheRequest setReserved (short), DefaultBinaryMemcacheRequest touch (Object), DefaultFullBinaryMemcacheRequest copy (), DefaultFullBinaryMemcacheRequest replace (ByteBuf), AbstractBinaryMemcacheMessage retain (int), DefaultFullBinaryMemcacheRequest retain (int), AbstractBinaryMemcacheMessage cas (), AbstractBinaryMemcacheMessage opaque (), AbstractMemcacheObjectEncoder acceptOutboundMessage (Object), DefaultLastMemcacheContent DefaultLastMemcacheContent (ByteBuf), AbstractBinaryMemcacheMessage setCas (long), AbstractBinaryMemcacheEncoder encodeExtras (ByteBuf, ByteBuf), DefaultLastMemcacheContent retain (), AbstractMemcacheObjectEncoder contentLength (Object), DefaultFullBinaryMemcacheRequest duplicate (), DefaultFullBinaryMemcacheRequest touch (Object), DefaultFullBinaryMemcacheRequest retainedDuplicate (), DefaultFullBinaryMemcacheRequest DefaultFullBinaryMemcacheRequest (ByteBuf, ByteBuf)]","592"
"2","netty/codec-memcache","44f50ecca19e0dc6df1436ac3233894a46e11a92","2d16577f017cc8c6ba0b2ab2c56c6bd53355a606","REVERSE_IF_ELSE","3","1","1","[DefaultFullBinaryMemcacheRequest replace (ByteBuf)]","8"
"5","netty/codec-memcache","2d16577f017cc8c6ba0b2ab2c56c6bd53355a606","a09b5df7b3ff79a8a191b5b25aa52eeb57b9bce1","LOCAL_VAR_RENAMING","0","1","2","[DefaultFullBinaryMemcacheRequest newInstance (ByteBuf, ByteBuf, ByteBuf), DefaultFullBinaryMemcacheRequest retain (int)]","16"
"9","netty/codec-memcache","a09b5df7b3ff79a8a191b5b25aa52eeb57b9bce1","f2ee616411e15a96895fcffa2c35ffabe9bab52b","REVERSE_IF_ELSE","3","1","2","[DefaultFullBinaryMemcacheRequest duplicate (), DefaultFullBinaryMemcacheRequest replace (ByteBuf)]","16"
"18","netty/codec-memcache","f2ee616411e15a96895fcffa2c35ffabe9bab52b","a83de045a92e02032bfac419ea8786ba13741fdf","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DefaultFullBinaryMemcacheRequest DefaultFullBinaryMemcacheRequest (ByteBuf, ByteBuf, ByteBuf)]","8"
"21","netty/codec-memcache","a83de045a92e02032bfac419ea8786ba13741fdf","44ccf2e3cc7f368426a855481db579260ed45cbf","REVERSE_IF_ELSE","3","1","2","[DefaultFullBinaryMemcacheRequest duplicate (), DefaultFullBinaryMemcacheRequest replace (ByteBuf)]","16"
"22","netty/codec-memcache","44ccf2e3cc7f368426a855481db579260ed45cbf","694305133768755032b42589d8be9d36174a3c17","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DefaultFullBinaryMemcacheRequest DefaultFullBinaryMemcacheRequest (ByteBuf, ByteBuf, ByteBuf)]","8"
"28","netty/codec-memcache","694305133768755032b42589d8be9d36174a3c17","f4bbba1ffd26e2fab48a6e70bd18f8be17b326c1","LOCAL_VAR_RENAMING","0","1","5","[DefaultFullBinaryMemcacheRequest DefaultFullBinaryMemcacheRequest (ByteBuf, ByteBuf, ByteBuf), DefaultFullBinaryMemcacheRequest touch (Object), DefaultFullBinaryMemcacheRequest replace (ByteBuf), DefaultFullBinaryMemcacheRequest content (), DefaultFullBinaryMemcacheRequest deallocate ()]","40"
"33","netty/codec-memcache","f4bbba1ffd26e2fab48a6e70bd18f8be17b326c1","30f89df00d457d89ebfdfcf7d1604645c6eba18b","REVERSE_IF_ELSE","3","1","1","[DefaultFullBinaryMemcacheRequest replace (ByteBuf)]","8"
"34","netty/codec-memcache","30f89df00d457d89ebfdfcf7d1604645c6eba18b","ec4f4b28204ecd36fce8fad063d520b7a662789d","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[DefaultFullBinaryMemcacheRequest replace (ByteBuf)]","8"
"39","netty/codec-memcache","ec4f4b28204ecd36fce8fad063d520b7a662789d","90b790209aa215b2e1023b66af9ddbe4eb6683bb","LOCAL_VAR_RENAMING","0","1","2","[DefaultFullBinaryMemcacheRequest newInstance (ByteBuf, ByteBuf, ByteBuf), DefaultFullBinaryMemcacheRequest replace (ByteBuf)]","16"
"45","netty/codec-memcache","90b790209aa215b2e1023b66af9ddbe4eb6683bb","edcca82488f01429d191366320dc9a1569049442","LOCAL_VAR_RENAMING","0","1","2","[DefaultFullBinaryMemcacheRequest DefaultFullBinaryMemcacheRequest (ByteBuf, ByteBuf, ByteBuf), DefaultFullBinaryMemcacheRequest touch (Object)]","16"
"50","netty/codec-memcache","edcca82488f01429d191366320dc9a1569049442","74d71e62d2ef17abc27b551dac0a9b82aa31c711","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DefaultFullBinaryMemcacheRequest DefaultFullBinaryMemcacheRequest (ByteBuf, ByteBuf, ByteBuf)]","8"
"55","netty/codec-memcache","74d71e62d2ef17abc27b551dac0a9b82aa31c711","9f4a0f037c64f66bfe585b7b76491d772279cde6","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","3","[DefaultFullBinaryMemcacheRequest duplicate (), DefaultFullBinaryMemcacheRequest copy (), DefaultFullBinaryMemcacheRequest replace (ByteBuf)]","24"
"62","netty/codec-memcache","9f4a0f037c64f66bfe585b7b76491d772279cde6","f2a636e03b8a9321a3afee5d78707ba134311e7f","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","2","[DefaultFullBinaryMemcacheRequest duplicate (), DefaultFullBinaryMemcacheRequest replace (ByteBuf)]","16"
"65","netty/codec-memcache","f2a636e03b8a9321a3afee5d78707ba134311e7f","b5bf0b0723d8a22afd3ce1344d48ce843efaaa0c","LOCAL_VAR_RENAMING","0","1","2","[DefaultFullBinaryMemcacheRequest duplicate (), DefaultFullBinaryMemcacheRequest newInstance (ByteBuf, ByteBuf, ByteBuf)]","16"
"0","netty/codec-mqtt","b5bf0b0723d8a22afd3ce1344d48ce843efaaa0c","d9f504587398e4652c925b8a2dbb50783ff9e5e5","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","88","[MqttConnectPayload toString (), MqttConnectMessage payload (), MqttPublishMessage retainedDuplicate (), MqttCodecUtil getMqttVersion (ChannelHandlerContext), MqttMessageIdVariableHeader withEmptyProperties (), MqttPublishMessage touch (Object), MqttConnectPayload MqttConnectPayload (String, String, byte[], String, byte[]), MqttDecoder MqttDecoder (int, int), MqttDecoder decodeMessageIdAndPropertiesVariableHeader (ChannelHandlerContext, ByteBuf), MqttSubscriptionOption retainHandling (), MqttSubscriptionOption toString (), MqttUnsubAckPayload MqttUnsubAckPayload (short), MqttPublishMessage replace (ByteBuf), MqttDecoder MqttDecoder (), MqttDecoder decodePubReplyMessage (ByteBuf), MqttDecoder decodeConnAckVariableHeader (ChannelHandlerContext, ByteBuf), MqttMessageIdVariableHeader from (int), MqttConnectPayload willMessage (), MqttConnectPayload willProperties (), MqttConnectPayload passwordInBytes (), MqttCodecUtil MqttCodecUtil (), MqttPublishMessage MqttPublishMessage (MqttFixedHeader, MqttPublishVariableHeader, ByteBuf), MqttDecoder decodeMessageId (ByteBuf), Result decodeProperties (ByteBuf), MqttDecoder decodeByteArray (ByteBuf), MqttPublishMessage release (), MqttPublishMessage retain (int), MqttSubscriptionOption qos (), MqttConnectPayload clientIdentifier (), MqttPublishMessage retain (), MqttUnsubAckPayload typedReasonCodes (), MqttMessageIdVariableHeader messageId (), MqttSubscriptionOption RetainedHandlingPolicy (int), MqttDecoder decodeVariableHeader (ChannelHandlerContext, ByteBuf, MqttFixedHeader), MqttPublishMessage variableHeader (), Result Result (T, int), MqttConnectPayload willTopic (), MqttDecoder decodeFixedHeader (ChannelHandlerContext, ByteBuf), MqttDecoder MqttDecoder (int), MqttDecoder decodePublishVariableHeader (ChannelHandlerContext, ByteBuf, MqttFixedHeader), MqttDecoder packInts (int, int), MqttConnectPayload willMessageInBytes (), MqttCodecUtil isValidClientId (MqttVersion, int, String), MqttPublishMessage content (), MqttPublishMessage payload (), MqttDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), MqttCodecUtil isValidPublishTopicName (String), MqttDecoder decodeConnectionVariableHeader (ChannelHandlerContext, ByteBuf), MqttDecoder unpackB (long), MqttDecoder decodeMsbLsb (ByteBuf), MqttUnsubAckPayload typedReasonCodesToOrdinal (), MqttUnsubAckPayload withEmptyDefaults (MqttUnsubAckPayload), MqttDecoder unpackA (long), MqttConnectMessage variableHeader (), MqttConnectPayload userName (), MqttSubscriptionOption hashCode (), MqttSubscriptionOption valueOf (int), MqttDecoder decodeString (ByteBuf), MqttConnectMessage MqttConnectMessage (MqttFixedHeader, MqttConnectVariableHeader, MqttConnectPayload), MqttPublishMessage refCnt (), MqttSubscriptionOption value (), MqttCodecUtil setMqttVersion (ChannelHandlerContext, MqttVersion), MqttSubscriptionOption isNoLocal (), MqttDecoder decodeVariableByteInteger (ByteBuf), MqttPublishMessage release (int), MqttSubscriptionOption equals (Object), MqttMessageIdVariableHeader withDefaultEmptyProperties (), MqttSubscriptionOption onlyFromQos (MqttQoS), MqttDecoder decodeConnectionPayload (ByteBuf, int, MqttConnectVariableHeader), MqttUnsubAckPayload unsubscribeReasonCodes (), MqttSubscriptionOption MqttSubscriptionOption (MqttQoS, boolean, boolean, RetainedHandlingPolicy), MqttCodecUtil isValidMessageId (int), MqttCodecUtil validateFixedHeader (ChannelHandlerContext, MqttFixedHeader), MqttConnectPayload password (), MqttPublishMessage copy (), MqttPublishMessage duplicate (), MqttConnectPayload MqttConnectPayload (String, String, String, String, String), MqttMessageIdVariableHeader MqttMessageIdVariableHeader (int), MqttDecoder decodeReasonCodeAndPropertiesVariableHeader (ByteBuf), MqttUnsubAckPayload MqttUnsubAckPayload (Iterable<Short>), MqttPublishMessage touch (), MqttConnectPayload MqttConnectPayload (String, MqttProperties, String, byte[], String, byte[]), MqttMessageIdVariableHeader toString (), MqttUnsubAckPayload toString (), MqttSubscriptionOption isRetainAsPublished (), MqttCodecUtil resetUnusedFields (MqttFixedHeader), MqttDecoder decodeString (ByteBuf, int, int), MqttDecoder invalidMessage (Throwable)]","704"
"8","netty/codec-mqtt","d9f504587398e4652c925b8a2dbb50783ff9e5e5","33a26f64e642192e8fc52420c05d7f0a622e3484","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[MqttConnectPayload MqttConnectPayload (String, MqttProperties, String, byte[], String, byte[])]","8"
"12","netty/codec-mqtt","33a26f64e642192e8fc52420c05d7f0a622e3484","1fd06ad15884a4350513c3e8f1f1dd3b5999c9c6","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[MqttConnectPayload MqttConnectPayload (String, MqttProperties, String, byte[], String, byte[])]","8"
"13","netty/codec-mqtt","1fd06ad15884a4350513c3e8f1f1dd3b5999c9c6","136113073794ac369dece64d875986c1b8529578","VAR_DECLARATION_DIVIDING","13","1","1","[MqttCodecUtil isValidClientId (MqttVersion, int, String)]","8"
"15","netty/codec-mqtt","136113073794ac369dece64d875986c1b8529578","69ca3e7fa7eb2d0ba2a8d13334e6734f4609edd3","REVERSE_IF_ELSE","3","1","8","[MqttSubAckPayload toString (), MqttSubAckPayload MqttSubAckPayload (MqttReasonCodes.SubAck), MqttSubAckPayload MqttSubAckPayload (int), MqttSubAckPayload MqttSubAckPayload (Iterable<Integer>), MqttSubAckPayload reasonCodes (), MqttSubAckPayload grantedQoSLevels (), MqttSubAckPayload typedReasonCodes (), MqttSubAckPayload typedReasonCodesToOrdinal ()]","72"
"19","netty/codec-mqtt","69ca3e7fa7eb2d0ba2a8d13334e6734f4609edd3","557a6c69e5cf78ceb5faa24312b15825b1a2c5c4","REVERSE_IF_ELSE","3","1","2","[MqttSubAckPayload MqttSubAckPayload (Iterable<Integer>), MqttSubAckPayload grantedQoSLevels ()]","18"
"32","netty/codec-mqtt","557a6c69e5cf78ceb5faa24312b15825b1a2c5c4","90fa1d508fddf3a33c31da77876117286335cd89","SWITCH_EQUAL_SIDES","14","1","1","[MqttSubAckPayload MqttSubAckPayload (Iterable<Integer>)]","9"
"33","netty/codec-mqtt","90fa1d508fddf3a33c31da77876117286335cd89","8f03200e099667914e746ee88bf297b584e762e4","LOCAL_VAR_RENAMING","0","1","2","[MqttSubAckPayload MqttSubAckPayload (Iterable<Integer>), MqttSubAckPayload typedReasonCodesToOrdinal ()]","18"
"34","netty/codec-mqtt","8f03200e099667914e746ee88bf297b584e762e4","4449e5dc9f62796865474539462f30519e96df04","SWITCH_EQUAL_SIDES","14","1","1","[MqttSubAckPayload MqttSubAckPayload (Iterable<Integer>)]","9"
"37","netty/codec-mqtt","4449e5dc9f62796865474539462f30519e96df04","9c25a0329770505121c4146d844421828d824bde","SWITCH_EQUAL_SIDES","14","1","1","[MqttSubAckPayload MqttSubAckPayload (Iterable<Integer>)]","9"
"44","netty/codec-mqtt","9c25a0329770505121c4146d844421828d824bde","5124f3fe9a8cef02d2164e12aa589b642570e616","SWITCH_EQUAL_SIDES","14","1","1","[MqttSubAckPayload MqttSubAckPayload (Iterable<Integer>)]","9"
"51","netty/codec-mqtt","5124f3fe9a8cef02d2164e12aa589b642570e616","381988cf0bf430a5a0e25e828460d59e4e805ef5","REVERSE_IF_ELSE","3","1","2","[MqttSubAckPayload MqttSubAckPayload (Iterable<Integer>), MqttSubAckPayload grantedQoSLevels ()]","18"
"53","netty/codec-mqtt","381988cf0bf430a5a0e25e828460d59e4e805ef5","c77f4fd76561aabd77157e699d433658b15e18fe","LOCAL_VAR_RENAMING","0","1","7","[MqttSubAckPayload toString (), MqttSubAckPayload MqttSubAckPayload (MqttReasonCodes.SubAck), MqttSubAckPayload MqttSubAckPayload (int), MqttSubAckPayload MqttSubAckPayload (Iterable<Integer>), MqttSubAckPayload grantedQoSLevels (), MqttSubAckPayload typedReasonCodes (), MqttSubAckPayload typedReasonCodesToOrdinal ()]","63"
"58","netty/codec-mqtt","c77f4fd76561aabd77157e699d433658b15e18fe","fc96cc766d9653ecbc20fa6118de4edb61e8c9c8","SWITCH_EQUAL_SIDES","14","1","1","[MqttSubAckPayload MqttSubAckPayload (Iterable<Integer>)]","9"
"60","netty/codec-mqtt","fc96cc766d9653ecbc20fa6118de4edb61e8c9c8","632fc4e6be029cdb7610e5ddc9317935921029be","SWITCH_EQUAL_SIDES","14","1","1","[MqttSubAckPayload MqttSubAckPayload (Iterable<Integer>)]","9"
"61","netty/codec-mqtt","632fc4e6be029cdb7610e5ddc9317935921029be","0f7b4b0b1c9ec8fe9d555da3a99aa29ad8ba7ffe","REVERSE_IF_ELSE","3","1","2","[MqttSubAckPayload MqttSubAckPayload (Iterable<Integer>), MqttSubAckPayload grantedQoSLevels ()]","18"
"0","netty/codec-redis","0f7b4b0b1c9ec8fe9d555da3a99aa29ad8ba7ffe","48fb2cad6034fab2813625912f04944218cf7e6a","LOCAL_VAR_RENAMING","0","1","36","[RedisDecoder readEndOfLine (ByteBuf), RedisMessagePool getError (ByteBuf), AbstractStringRedisMessage AbstractStringRedisMessage (String), RedisMessagePool getByteBufOfInteger (long), RedisCodecException RedisCodecException (Throwable), AbstractStringRedisMessage content (), RedisDecoder newInlineRedisMessage (RedisMessageType, ByteBuf), ArrayHeaderRedisMessage isNull (), RedisDecoder RedisDecoder (int, RedisMessagePool, boolean), ToPositiveLongProcessor reset (), RedisMessagePool getSimpleString (ByteBuf), AbstractStringRedisMessage toString (), RedisMessagePool getInteger (long), RedisMessagePool getError (String), RedisDecoder decodeBulkStringContent (ByteBuf, List<Object>), RedisDecoder RedisDecoder (boolean), RedisDecoder decodeBulkStringEndOfLine (ByteBuf, List<Object>), RedisDecoder RedisDecoder (), ArrayHeaderRedisMessage length (), RedisMessagePool getInteger (ByteBuf), RedisDecoder decodeInline (ByteBuf, List<Object>), RedisMessagePool getSimpleString (String), RedisDecoder decodeBulkString (ByteBuf, List<Object>), RedisDecoder resetDecoder (), ToPositiveLongProcessor content (), ToPositiveLongProcessor process (byte), RedisDecoder RedisDecoder (int, RedisMessagePool), ArrayHeaderRedisMessage toString (), RedisCodecException RedisCodecException (String), RedisDecoder decodeLength (ByteBuf, List<Object>), ArrayHeaderRedisMessage ArrayHeaderRedisMessage (long), RedisDecoder parseRedisNumber (ByteBuf), RedisDecoder parsePositiveNumber (ByteBuf), RedisDecoder decodeType (ByteBuf), RedisDecoder readLine (ByteBuf), RedisDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","180"
"4","netty/codec-redis","48fb2cad6034fab2813625912f04944218cf7e6a","ab77238655c3b5341ea57d357e7e61b81bdd6930","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[RedisDecoder RedisDecoder (int, RedisMessagePool, boolean)]","5"
"5","netty/codec-redis","ab77238655c3b5341ea57d357e7e61b81bdd6930","ac0702ea7b0b0e70854636226c4d3ea80a7f386f","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","1","[RedisDecoder decodeBulkStringContent (ByteBuf, List<Object>)]","5"
"7","netty/codec-redis","ac0702ea7b0b0e70854636226c4d3ea80a7f386f","1752aa7acf734943885d7c554fdfaa65a5a01eea","SWITCH_EQUAL_SIDES","14","1","2","[RedisDecoder readEndOfLine (ByteBuf), RedisDecoder parseRedisNumber (ByteBuf)]","10"
"9","netty/codec-redis","1752aa7acf734943885d7c554fdfaa65a5a01eea","619754e569196216cc53af04f9fbe5a2ae8d92b4","INFIX_EXPRESSION_DIVIDING","8","1","3","[RedisDecoder decodeBulkStringContent (ByteBuf, List<Object>), RedisDecoder parseRedisNumber (ByteBuf), ToPositiveLongProcessor process (byte)]","15"
"10","netty/codec-redis","619754e569196216cc53af04f9fbe5a2ae8d92b4","92ee8af557b10ed198f0929226d3613580848fd5","INFIX_EXPRESSION_DIVIDING","8","1","2","[ToPositiveLongProcessor process (byte), RedisDecoder RedisDecoder (int, RedisMessagePool, boolean)]","10"
"13","netty/codec-redis","92ee8af557b10ed198f0929226d3613580848fd5","ddc22700c993402302d1cbf07bdcb0a008aa20b6","SWITCH_EQUAL_SIDES","14","1","2","[RedisDecoder readEndOfLine (ByteBuf), RedisDecoder parseRedisNumber (ByteBuf)]","10"
"16","netty/codec-redis","ddc22700c993402302d1cbf07bdcb0a008aa20b6","fbc0ab109c609f2024b32d45330083d3d9027c92","CASE_TO_IF_ELSE","17","1","4","[RedisDecoder decodeBulkString (ByteBuf, List<Object>), RedisDecoder newInlineRedisMessage (RedisMessageType, ByteBuf), RedisDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), RedisDecoder decodeLength (ByteBuf, List<Object>)]","20"
"18","netty/codec-redis","fbc0ab109c609f2024b32d45330083d3d9027c92","b015a9be052c119d5383ffc2f15ea35546179fc5","SWITCH_EQUAL_SIDES","14","1","2","[RedisDecoder parseRedisNumber (ByteBuf), RedisDecoder newInlineRedisMessage (RedisMessageType, ByteBuf)]","10"
"22","netty/codec-redis","b015a9be052c119d5383ffc2f15ea35546179fc5","c00e32416bf570d43249005c183d61621d21198f","FOR_TO_WHILE","1","1","1","[RedisDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","5"
"23","netty/codec-redis","c00e32416bf570d43249005c183d61621d21198f","3e3ed387304a8f60049645919c1df9619b138648","WHILE_TO_FOR","2","1","1","[RedisDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","5"
"25","netty/codec-redis","3e3ed387304a8f60049645919c1df9619b138648","14795256b43b8d630d98769558fae93baa85a4fe","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","2","[RedisDecoder parseRedisNumber (ByteBuf), RedisDecoder decodeType (ByteBuf)]","10"
"26","netty/codec-redis","14795256b43b8d630d98769558fae93baa85a4fe","f90093b7bc66b8b3beec7d2ffc2894ba1b9147fe","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","2","[RedisDecoder parseRedisNumber (ByteBuf), RedisDecoder decodeType (ByteBuf)]","10"
"29","netty/codec-redis","f90093b7bc66b8b3beec7d2ffc2894ba1b9147fe","60d5143daa250f233136a344e99765c0045f0005","SWITCH_EQUAL_SIDES","14","1","2","[RedisDecoder parseRedisNumber (ByteBuf), RedisDecoder newInlineRedisMessage (RedisMessageType, ByteBuf)]","10"
"31","netty/codec-redis","60d5143daa250f233136a344e99765c0045f0005","b545a083eb6ea1659921bf2b9a8ea9677f9b2c8b","STATEMENTS_ORDER_REARRANGEMENT","10","1","6","[RedisDecoder decodeBulkStringContent (ByteBuf, List<Object>), RedisDecoder parseRedisNumber (ByteBuf), RedisDecoder newInlineRedisMessage (RedisMessageType, ByteBuf), RedisDecoder resetDecoder (), ToPositiveLongProcessor process (byte), RedisDecoder RedisDecoder (int, RedisMessagePool, boolean)]","30"
"32","netty/codec-redis","b545a083eb6ea1659921bf2b9a8ea9677f9b2c8b","92f6ef551c9ea3cc7763ed4c9a9fe53fc42b9b5d","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[RedisDecoder parseRedisNumber (ByteBuf), RedisDecoder newInlineRedisMessage (RedisMessageType, ByteBuf)]","10"
"36","netty/codec-redis","92f6ef551c9ea3cc7763ed4c9a9fe53fc42b9b5d","09ee0cefa804e2b15327fa200b78c21374bdac97","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[RedisDecoder decodeBulkStringContent (ByteBuf, List<Object>), RedisDecoder newInlineRedisMessage (RedisMessageType, ByteBuf)]","10"
"38","netty/codec-redis","09ee0cefa804e2b15327fa200b78c21374bdac97","08fb0d0ed9bf5c5335616de850ecc7feb8f439d5","REVERSE_IF_ELSE","3","1","8","[RedisDecoder readEndOfLine (ByteBuf), RedisDecoder decodeBulkString (ByteBuf, List<Object>), RedisDecoder decodeBulkStringContent (ByteBuf, List<Object>), RedisDecoder parseRedisNumber (ByteBuf), RedisDecoder newInlineRedisMessage (RedisMessageType, ByteBuf), ToPositiveLongProcessor process (byte), RedisDecoder decodeBulkStringEndOfLine (ByteBuf, List<Object>), RedisDecoder readLine (ByteBuf)]","40"
"41","netty/codec-redis","08fb0d0ed9bf5c5335616de850ecc7feb8f439d5","2590434b9dabc12714eda339c353982a41a48fbb","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","2","[RedisDecoder parseRedisNumber (ByteBuf), RedisDecoder decodeType (ByteBuf)]","10"
"47","netty/codec-redis","2590434b9dabc12714eda339c353982a41a48fbb","06a092587fa88382f0cc539412fc11247c28493c","LOCAL_VAR_RENAMING","0","1","2","[ToPositiveLongProcessor process (byte), RedisDecoder RedisDecoder (int, RedisMessagePool, boolean)]","10"
"48","netty/codec-redis","06a092587fa88382f0cc539412fc11247c28493c","6843c7c83c3c70bfa442b8b7ee19c105b8bd26fa","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[RedisDecoder newInlineRedisMessage (RedisMessageType, ByteBuf), RedisDecoder RedisDecoder (int, RedisMessagePool, boolean)]","10"
"50","netty/codec-redis","6843c7c83c3c70bfa442b8b7ee19c105b8bd26fa","383ea74349073cdefface60fc1c61764ef94eb10","FOR_TO_WHILE","1","1","1","[RedisDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","5"
"57","netty/codec-redis","383ea74349073cdefface60fc1c61764ef94eb10","3717605c3b14ce36cfac4a588169eb73bdec0e51","STATEMENTS_ORDER_REARRANGEMENT","10","1","6","[RedisDecoder decodeBulkStringContent (ByteBuf, List<Object>), RedisDecoder parseRedisNumber (ByteBuf), RedisDecoder newInlineRedisMessage (RedisMessageType, ByteBuf), RedisDecoder resetDecoder (), ToPositiveLongProcessor process (byte), RedisDecoder RedisDecoder (int, RedisMessagePool, boolean)]","30"
"58","netty/codec-redis","3717605c3b14ce36cfac4a588169eb73bdec0e51","8a010c132a81cf4109f9ea73fa1337c5b05ae0af","REVERSE_IF_ELSE","3","1","12","[RedisDecoder readEndOfLine (ByteBuf), RedisDecoder decodeBulkString (ByteBuf, List<Object>), RedisDecoder decodeBulkStringContent (ByteBuf, List<Object>), RedisDecoder parseRedisNumber (ByteBuf), RedisDecoder newInlineRedisMessage (RedisMessageType, ByteBuf), RedisDecoder decodeType (ByteBuf), ToPositiveLongProcessor process (byte), RedisDecoder decodeBulkStringEndOfLine (ByteBuf, List<Object>), RedisDecoder readLine (ByteBuf), RedisDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), RedisDecoder decodeInline (ByteBuf, List<Object>), RedisDecoder decodeLength (ByteBuf, List<Object>)]","60"
"64","netty/codec-redis","8a010c132a81cf4109f9ea73fa1337c5b05ae0af","b4c746ef6e259325a29dfd144acf31aea57e232a","STATEMENTS_ORDER_REARRANGEMENT","10","1","6","[RedisDecoder decodeBulkStringContent (ByteBuf, List<Object>), RedisDecoder parseRedisNumber (ByteBuf), RedisDecoder newInlineRedisMessage (RedisMessageType, ByteBuf), RedisDecoder resetDecoder (), ToPositiveLongProcessor process (byte), RedisDecoder RedisDecoder (int, RedisMessagePool, boolean)]","30"
"0","netty/codec-smtp","b4c746ef6e259325a29dfd144acf31aea57e232a","a23d8d7b9d771a10a34329e411dc5b9a671c6696","LOOP_IF_CONTINUE_TO_ELSE","11","1","27","[DefaultSmtpResponse DefaultSmtpResponse (int, List<CharSequence>), DefaultSmtpResponse equals (Object), SmtpResponseDecoder SmtpResponseDecoder (int), SmtpResponseDecoder newDecoderException (ByteBuf, int, int), SmtpUtils SmtpUtils (), DefaultSmtpResponse DefaultSmtpResponse (int), DefaultSmtpRequest toString (), DefaultSmtpResponse toString (), SmtpUtils toUnmodifiableList (CharSequence), DefaultSmtpRequest DefaultSmtpRequest (SmtpCommand, CharSequence), DefaultSmtpRequest parameters (), DefaultSmtpResponse DefaultSmtpResponse (int, CharSequence), SmtpResponseDecoder parseCode (ByteBuf), DefaultSmtpRequest command (), SmtpRequestEncoder acceptOutboundMessage (Object), SmtpRequestEncoder encode (ChannelHandlerContext, Object, List<Object>), DefaultSmtpRequest DefaultSmtpRequest (SmtpCommand), DefaultSmtpResponse details (), DefaultSmtpRequest DefaultSmtpRequest (SmtpCommand, List<CharSequence>), SmtpRequestEncoder writeParameters (List<CharSequence>, ByteBuf, boolean), DefaultSmtpResponse code (), DefaultSmtpRequest equals (Object), DefaultSmtpRequest hashCode (), DefaultSmtpRequest DefaultSmtpRequest (CharSequence, CharSequence), DefaultSmtpResponse hashCode (), SmtpResponseDecoder parseNumber (byte), SmtpResponseDecoder decode (ChannelHandlerContext, ByteBuf)]","135"
"1","netty/codec-smtp","a23d8d7b9d771a10a34329e411dc5b9a671c6696","182ee410fb5ff8eac35d0e160d456e7ac1a894d1","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","14","[SmtpRequests rset (), SmtpRequests help (String), SmtpRequests ehlo (CharSequence), SmtpRequests quit (), SmtpRequests empty (CharSequence), SmtpRequests expn (CharSequence), SmtpRequests data (), SmtpRequests mail (CharSequence, CharSequence), SmtpRequests rcpt (CharSequence, CharSequence), SmtpRequests SmtpRequests (), SmtpRequests auth (CharSequence), SmtpRequests noop (), SmtpRequests helo (CharSequence), SmtpRequests vrfy (CharSequence)]","84"
"2","netty/codec-smtp","182ee410fb5ff8eac35d0e160d456e7ac1a894d1","2339d1b0813e90d16cb5e396a52e8d526e26bef8","REVERSE_IF_ELSE","3","1","2","[SmtpRequests mail (CharSequence, CharSequence), SmtpRequests rcpt (CharSequence, CharSequence)]","12"
"3","netty/codec-smtp","2339d1b0813e90d16cb5e396a52e8d526e26bef8","2ac7b0efab08e73303e209e06fb6bf7297f47097","SWITCH_EQUAL_SIDES","14","1","2","[SmtpRequests mail (CharSequence, CharSequence), SmtpRequests rcpt (CharSequence, CharSequence)]","12"
"4","netty/codec-smtp","2ac7b0efab08e73303e209e06fb6bf7297f47097","38df0c3b98a06b9511ef67cca8d10c6190964d07","REVERSE_IF_ELSE","3","1","2","[SmtpRequests mail (CharSequence, CharSequence), SmtpRequests rcpt (CharSequence, CharSequence)]","12"
"13","netty/codec-smtp","38df0c3b98a06b9511ef67cca8d10c6190964d07","bce8d9244a16ad90ed4482dd740b93498f447ce2","LOCAL_VAR_RENAMING","0","1","2","[SmtpRequests data (), SmtpRequests mail (CharSequence, CharSequence)]","12"
"20","netty/codec-smtp","bce8d9244a16ad90ed4482dd740b93498f447ce2","6f4e237eb44707e6bc5a9216249924c3ec1897fe","REVERSE_IF_ELSE","3","1","2","[SmtpRequests mail (CharSequence, CharSequence), SmtpRequests rcpt (CharSequence, CharSequence)]","12"
"25","netty/codec-smtp","6f4e237eb44707e6bc5a9216249924c3ec1897fe","ef75d8cd34901709742800863bd10bcee1b225be","LOCAL_VAR_RENAMING","0","1","2","[SmtpRequests data (), SmtpRequests helo (CharSequence)]","12"
"31","netty/codec-smtp","ef75d8cd34901709742800863bd10bcee1b225be","29c9728fe478e9be48b89bd16d13e7470ff0062d","SWITCH_EQUAL_SIDES","14","1","2","[SmtpRequests mail (CharSequence, CharSequence), SmtpRequests rcpt (CharSequence, CharSequence)]","12"
"33","netty/codec-smtp","29c9728fe478e9be48b89bd16d13e7470ff0062d","26963dda1328f0ede7f4ba08a3e395cdfa0d6beb","SWITCH_EQUAL_SIDES","14","1","3","[SmtpRequests mail (CharSequence, CharSequence), SmtpRequests rcpt (CharSequence, CharSequence), SmtpRequests help (String)]","18"
"34","netty/codec-smtp","26963dda1328f0ede7f4ba08a3e395cdfa0d6beb","041f94e37b9e8240adad8fa89b0c4d4afacaf83d","LOCAL_VAR_RENAMING","0","1","2","[SmtpRequests data (), SmtpRequests rcpt (CharSequence, CharSequence)]","12"
"36","netty/codec-smtp","041f94e37b9e8240adad8fa89b0c4d4afacaf83d","f3dd07c712027b46543fda5a3b53e01dc4882aeb","INFIX_EXPRESSION_DIVIDING","8","1","2","[SmtpRequests mail (CharSequence, CharSequence), SmtpRequests rcpt (CharSequence, CharSequence)]","12"
"41","netty/codec-smtp","f3dd07c712027b46543fda5a3b53e01dc4882aeb","f60c2b73ef62da1e9418512c5ddd4e9c50652707","LOCAL_VAR_RENAMING","0","1","2","[SmtpRequests mail (CharSequence, CharSequence), SmtpRequests rcpt (CharSequence, CharSequence)]","12"
"53","netty/codec-smtp","f60c2b73ef62da1e9418512c5ddd4e9c50652707","91861dc3b6756860a9e9e74757e4061c638d1b22","REVERSE_IF_ELSE","3","1","2","[SmtpRequests mail (CharSequence, CharSequence), SmtpRequests rcpt (CharSequence, CharSequence)]","12"
"54","netty/codec-smtp","91861dc3b6756860a9e9e74757e4061c638d1b22","3b2fb68e107434700a31f0ed60b754e8dfc1a279","REVERSE_IF_ELSE","3","1","2","[SmtpRequests mail (CharSequence, CharSequence), SmtpRequests rcpt (CharSequence, CharSequence)]","12"
"57","netty/codec-smtp","3b2fb68e107434700a31f0ed60b754e8dfc1a279","6067a083d0b30b0e98e531711c1e15c1786f19e1","INFIX_EXPRESSION_DIVIDING","8","1","2","[SmtpRequests mail (CharSequence, CharSequence), SmtpRequests rcpt (CharSequence, CharSequence)]","12"
"61","netty/codec-smtp","6067a083d0b30b0e98e531711c1e15c1786f19e1","353198455bc159e403cc96d3ea8946989d590ac0","REVERSE_IF_ELSE","3","1","2","[SmtpRequests mail (CharSequence, CharSequence), SmtpRequests rcpt (CharSequence, CharSequence)]","12"
"0","netty/codec-socks","353198455bc159e403cc96d3ea8946989d590ac0","5c695cf85d1b2b48628afb9c05a317e1a82202e6","WHILE_TO_FOR","2","1","52","[SocksCmdResponse encodeAsByteBuf (ByteBuf), Socks4CommandType toString (), Socks4CommandType Socks4CommandType (int, String), DefaultSocks5CommandRequest DefaultSocks5CommandRequest (Socks5CommandType, Socks5AddressType, String, int), SocksCmdResponse SocksCmdResponse (SocksCmdStatus, SocksAddressType), DefaultSocks5InitialResponse authMethod (), Socks5PasswordAuthRequestDecoder fail (List<Object>, Exception), SocksCmdResponse cmdStatus (), Socks5ServerEncoder addressEncoder (), DefaultSocks5CommandRequest toString (), Socks5InitialRequestDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), Socks5ServerEncoder Socks5ServerEncoder (), DefaultSocks5InitialResponse toString (), Socks5InitialResponseDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), SocksAuthResponseDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), Socks5AddressType hashCode (), Socks5ServerEncoder encodeAuthMethodResponse (Socks5InitialResponse, ByteBuf), DefaultSocks5CommandRequest dstAddr (), Socks5ServerEncoder encodeCommandResponse (Socks5CommandResponse, ByteBuf), Socks4CommandType Socks4CommandType (int), Socks5PasswordAuthRequestDecoder Socks5PasswordAuthRequestDecoder (), SocksRequest requestType (), SocksAuthResponseDecoder SocksAuthResponseDecoder (), Socks4CommandType compareTo (Socks4CommandType), Socks4CommandType hashCode (), DefaultSocks5InitialResponse DefaultSocks5InitialResponse (Socks5AuthMethod), DefaultSocks5CommandRequest dstPort (), Socks5AddressType Socks5AddressType (int, String), Socks5ServerEncoder encode (ChannelHandlerContext, Socks5Message, ByteBuf), Socks5ServerEncoder encodePasswordAuthResponse (Socks5PasswordAuthResponse, ByteBuf), Socks5AddressType byteValue (), DefaultSocks5CommandRequest dstAddrType (), DefaultSocks5CommandRequest type (), SocksCmdResponse port (), Socks5InitialRequestDecoder Socks5InitialRequestDecoder (), SocksCmdResponse addressType (), Socks5InitialRequestDecoder fail (List<Object>, Exception), Socks5AddressType valueOf (byte), Socks5ServerEncoder Socks5ServerEncoder (Socks5AddressEncoder), Socks5AddressType Socks5AddressType (int), Socks5AddressType compareTo (Socks5AddressType), SocksRequest SocksRequest (SocksRequestType), Socks5AddressType toString (), SocksCmdResponse SocksCmdResponse (SocksCmdStatus, SocksAddressType, String, int), Socks5InitialResponseDecoder fail (List<Object>, Exception), Socks5InitialResponseDecoder Socks5InitialResponseDecoder (), SocksCmdResponse host (), Socks4CommandType equals (Object), Socks5AddressType equals (Object), Socks4CommandType valueOf (byte), Socks4CommandType byteValue (), Socks5PasswordAuthRequestDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","572"
"1","netty/codec-socks","5c695cf85d1b2b48628afb9c05a317e1a82202e6","aa916b8b7e8848ebaa42fd869b74bd72cf5d55cd","STATEMENTS_ORDER_REARRANGEMENT","10","1","9","[Socks4CommandStatus Socks4CommandStatus (int, String), Socks4CommandStatus compareTo (Socks4CommandStatus), Socks4CommandStatus toString (), Socks4CommandStatus valueOf (byte), Socks4CommandStatus hashCode (), Socks4CommandStatus byteValue (), Socks4CommandStatus equals (Object), Socks4CommandStatus Socks4CommandStatus (int), Socks4CommandStatus isSuccess ()]","108"
"2","netty/codec-socks","aa916b8b7e8848ebaa42fd869b74bd72cf5d55cd","cf150daab966da3286797d20c2de92020641abb8","LOCAL_VAR_RENAMING","0","1","2","[SocksAuthRequestDecoder SocksAuthRequestDecoder (), SocksAuthRequestDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","26"
"25","netty/codec-socks","cf150daab966da3286797d20c2de92020641abb8","bc86147eb15ab7a75452457676a429c00583f39b","CASE_TO_IF_ELSE","17","1","1","[SocksAuthRequestDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","13"
"27","netty/codec-socks","bc86147eb15ab7a75452457676a429c00583f39b","0d7d7c647048bc113c721023b758b34d241dd4a6","LOCAL_VAR_RENAMING","0","1","1","[SocksAuthRequestDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","13"
"28","netty/codec-socks","0d7d7c647048bc113c721023b758b34d241dd4a6","b6dd67e55434814e32d94d83df51da15791c4fce","REVERSE_IF_ELSE","3","1","1","[SocksAuthRequestDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","13"
"34","netty/codec-socks","b6dd67e55434814e32d94d83df51da15791c4fce","34aa127461bd2da830ec4db4978902c60d801233","REVERSE_IF_ELSE","3","1","1","[SocksAuthRequestDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","13"
"37","netty/codec-socks","34aa127461bd2da830ec4db4978902c60d801233","7d7cf991b8cf9082aee665a4ec6103595ce9e5f0","SWITCH_EQUAL_SIDES","14","1","1","[SocksAuthRequestDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","13"
"38","netty/codec-socks","7d7cf991b8cf9082aee665a4ec6103595ce9e5f0","a573ce287a4f22f4354c827a63c980d1f311a08e","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SocksAuthRequestDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","13"
"47","netty/codec-socks","a573ce287a4f22f4354c827a63c980d1f311a08e","548d0c1fda8d19c20195464a9c9dbeab17f9c34f","LOCAL_VAR_RENAMING","0","1","1","[SocksAuthRequestDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","13"
"57","netty/codec-socks","548d0c1fda8d19c20195464a9c9dbeab17f9c34f","3ccdd478a2b39ae37603bb8766abb5499269657f","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SocksAuthRequestDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>)]","13"
"0","netty/codec-stomp","3ccdd478a2b39ae37603bb8766abb5499269657f","5e19104d496366ca902aa7114c45374ef5528bd5","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","70","[DefaultStompHeadersSubframe headers (), StompSubframeAggregator isStartMessage (StompSubframe), StompSubframeDecoder StompSubframeDecoder (), DefaultLastStompContentSubframe retainedDuplicate (), StompSubframeDecoder readCommand (ByteBuf), StompSubframeAggregator ignoreContentAfterContinueResponse (Object), DefaultStompFrame release (int), DefaultStompFrame touch (), DefaultStompFrame touch (Object), Utf8LineParser charSequence (), Utf8LineParser Utf8LineParser (AppendableCharSequence, int), StompSubframeDecoder StompSubframeDecoder (int, int), DefaultStompFrame retain (), DefaultStompHeadersSubframe toString (), DefaultStompFrame copy (), DefaultStompFrame release (), StompSubframeDecoder getContentLength (StompHeaders), DefaultLastStompContentSubframe toString (), DefaultStompFrame DefaultStompFrame (StompCommand, ByteBuf), DefaultStompFrame DefaultStompFrame (StompCommand, ByteBuf, DefaultStompHeaders), StompHeaders contains (CharSequence, CharSequence, boolean), DefaultStompHeadersSubframe setDecoderResult (DecoderResult), StompSubframeAggregator isContentLengthInvalid (StompHeadersSubframe, int), DefaultStompFrame retain (int), StompSubframeAggregator isLastContentMessage (StompContentSubframe), Utf8LineParser process (byte), DefaultLastStompContentSubframe DefaultLastStompContentSubframe (ByteBuf), DefaultLastStompContentSubframe replace (ByteBuf), DefaultStompFrame retainedDuplicate (), StompSubframeDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), StompHeaders iteratorAsString (), DefaultStompFrame replace (ByteBuf), HeaderParser HeaderParser (AppendableCharSequence, int, boolean), DefaultLastStompContentSubframe duplicate (), HeaderParser parseHeader (StompHeadersSubframe, ByteBuf), DefaultLastStompContentSubframe touch (), DefaultStompHeadersSubframe DefaultStompHeadersSubframe (StompCommand, DefaultStompHeaders), HeaderParser appendTo (AppendableCharSequence, char), StompSubframeAggregator isContentMessage (StompSubframe), DefaultStompHeadersSubframe decoderResult (), DefaultStompFrame content (), StompSubframeDecoder skipNullCharacter (ByteBuf), HeaderParser shouldUnescape (StompCommand), Utf8LineParser reset (), HeaderParser reset (), DefaultLastStompContentSubframe copy (), DefaultLastStompContentSubframe retain (int), DefaultStompHeadersSubframe command (), StompSubframeAggregator beginAggregation (StompHeadersSubframe, ByteBuf), HeaderParser process (byte), StompSubframeAggregator newContinueResponse (StompHeadersSubframe, int, ChannelPipeline), StompSubframeAggregator StompSubframeAggregator (int), DefaultStompFrame refCnt (), DefaultStompFrame duplicate (), StompSubframeAggregator isAggregated (StompSubframe), StompSubframeDecoder skipControlCharacters (ByteBuf), DefaultLastStompContentSubframe touch (Object), DefaultStompFrame DefaultStompFrame (StompCommand), StompHeaders getAllAsString (CharSequence), StompSubframeDecoder readHeaders (ByteBuf, StompHeadersSubframe), Utf8LineParser appendTo (AppendableCharSequence, char), Utf8LineParser parse (ByteBuf), StompSubframeDecoder StompSubframeDecoder (int, int, boolean), DefaultLastStompContentSubframe retain (), DefaultStompFrame toString (), StompSubframeAggregator closeAfterContinueResponse (Object), DefaultStompHeadersSubframe DefaultStompHeadersSubframe (StompCommand), StompHeaders getAsString (CharSequence), StompSubframeDecoder StompSubframeDecoder (boolean), StompSubframeDecoder resetDecoder ()]","420"
"50","netty/codec-stomp","5e19104d496366ca902aa7114c45374ef5528bd5","4b1771f544d8808996726efb30d1148725d52e1c","LOCAL_VAR_RENAMING","0","1","2","[StompSubframeAggregator isLastContentMessage (StompContentSubframe), StompSubframeAggregator isContentMessage (StompSubframe)]","12"
"62","netty/codec-stomp","4b1771f544d8808996726efb30d1148725d52e1c","08f187e3c7760004442a6d1cfa3396ab103f74b2","LOCAL_VAR_RENAMING","0","1","2","[StompSubframeAggregator newContinueResponse (StompHeadersSubframe, int, ChannelPipeline), StompSubframeAggregator closeAfterContinueResponse (Object)]","12"
"0","netty/codec-xml","08f187e3c7760004442a6d1cfa3396ab103f74b2","40a99f010990d8c8ab56d6dda19cfe1cbbf3076a","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","34","[XmlDTD hashCode (), XmlElementStart attributes (), XmlAttribute toString (), XmlElementStart hashCode (), XmlContent data (), XmlAttribute hashCode (), XmlDTD equals (Object), XmlElementStart toString (), XmlContent hashCode (), XmlDTD toString (), XmlDocumentStart equals (Object), XmlDocumentStart version (), XmlAttribute namespace (), XmlDocumentStart hashCode (), XmlDocumentStart toString (), XmlAttribute name (), XmlDTD XmlDTD (String), XmlAttribute type (), XmlDocumentStart encoding (), XmlContent equals (Object), XmlDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), XmlDocumentStart XmlDocumentStart (String, String, boolean, String), XmlAttribute prefix (), XmlCdata XmlCdata (String), XmlAttribute equals (Object), XmlAttribute XmlAttribute (String, String, String, String, String), XmlElementStart equals (Object), XmlDTD text (), XmlElementStart XmlElementStart (String, String, String), XmlAttribute value (), XmlDocumentStart standalone (), XmlContent toString (), XmlContent XmlContent (String), XmlDocumentStart encodingScheme ()]","238"
"1","netty/codec-xml","40a99f010990d8c8ab56d6dda19cfe1cbbf3076a","0610a86258e3556c6540b2145274dee623f1c9ec","SWITCH_STRING_EQUAL","15","1","6","[XmlEntityReference equals (Object), XmlEntityReference XmlEntityReference (String, String), XmlEntityReference name (), XmlEntityReference toString (), XmlEntityReference hashCode (), XmlEntityReference text ()]","48"
"4","netty/codec-xml","0610a86258e3556c6540b2145274dee623f1c9ec","3390d22a152791c707de84ecff6d6c93be2b59ff","LOCAL_VAR_RENAMING","0","1","2","[XmlElementEnd XmlElementEnd (String, String, String), XmlElementEnd toString ()]","18"
"11","netty/codec-xml","3390d22a152791c707de84ecff6d6c93be2b59ff","8623386af429fa70b9aa84c89abcb70133025b67","LOCAL_VAR_RENAMING","0","1","1","[XmlElementEnd XmlElementEnd (String, String, String)]","9"
"17","netty/codec-xml","8623386af429fa70b9aa84c89abcb70133025b67","6cb00773b37e3192034ff4929e14fc17fd77bb28","LOCAL_VAR_RENAMING","0","1","1","[XmlElementEnd XmlElementEnd (String, String, String)]","9"
"42","netty/codec-xml","6cb00773b37e3192034ff4929e14fc17fd77bb28","cba37c6abf97405f084b8b8d0ea52ea3debad6b4","LOCAL_VAR_RENAMING","0","1","1","[XmlElementEnd XmlElementEnd (String, String, String)]","9"
"43","netty/codec-xml","cba37c6abf97405f084b8b8d0ea52ea3debad6b4","c533618043f5aeb899a6b4336a503e7ec1c27776","LOCAL_VAR_RENAMING","0","1","1","[XmlElementEnd XmlElementEnd (String, String, String)]","9"
"0","netty/codec","c533618043f5aeb899a6b4336a503e7ec1c27776","901df76886768510155b4bde5b03c00418e01f68","CASE_TO_IF_ELSE","17","1","86","[LengthFieldBasedFrameDecoder LengthFieldBasedFrameDecoder (ByteOrder, int, int, int, int, int, boolean), JsonObjectDecoder reset (), JsonObjectDecoder decodeByte (byte, ByteBuf, int), ZlibChecksumMethods updateByteBuffer (Checksum), LengthFieldBasedFrameDecoder extractFrame (ChannelHandlerContext, ByteBuf, int, int), JsonObjectDecoder extractObject (ChannelHandlerContext, ByteBuf, int, int), LengthFieldBasedFrameDecoder exceededFrameLength (ByteBuf, long), CompactObjectInputStream CompactObjectInputStream (InputStream, ClassResolver), LimitingByteInput skip (long), ZlibChecksumMethods update (ByteBuf, int, int), LimitingByteInput LimitingByteInput (ByteInput, long), Bzip2Encoder isClosed (), LengthFieldBasedFrameDecoder getUnadjustedFrameLength (ByteBuf, int, int, ByteOrder), ZlibChecksumMethods process (byte), JsonObjectDecoder JsonObjectDecoder (), JsonObjectDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), Crc32c update (int), LimitingByteInput read (byte[]), Bzip2Encoder finishEncode (ChannelHandlerContext, ChannelPromise), Crc32c crc32c (int, int), ReflectiveByteBufChecksum ReflectiveByteBufChecksum (Checksum, Method), LineBasedFrameDecoder fail (ChannelHandlerContext, String), Bzip2Encoder Bzip2Encoder (int), JsonObjectDecoder JsonObjectDecoder (int, boolean), ChannelBufferByteInput read (byte[], int, int), Crc32c reset (), JsonObjectDecoder JsonObjectDecoder (boolean), LimitingByteInput readable (int), JsonObjectDecoder initDecoding (byte), Bzip2Encoder close (ChannelPromise), LengthFieldBasedFrameDecoder LengthFieldBasedFrameDecoder (int, int, int, int, int), LengthFieldPrepender LengthFieldPrepender (int, int), Bzip2Encoder run (), SlowByteBufChecksum getValue (), CompactObjectInputStream readStreamHeader (), SlowByteBufChecksum update (int), LengthFieldBasedFrameDecoder decode (ChannelHandlerContext, ByteBuf), LengthFieldBasedFrameDecoder failOnFrameLengthLessThanLengthFieldEndOffset (ByteBuf, long, int), ReflectiveByteBufChecksum update (ByteBuf, int, int), LengthFieldPrepender LengthFieldPrepender (ByteOrder, int, int, boolean), Crc32c update (byte[], int, int), LengthFieldPrepender LengthFieldPrepender (int), LengthFieldBasedFrameDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), SoftReferenceMap fold (V), LimitingByteInput read (), LengthFieldBasedFrameDecoder LengthFieldBasedFrameDecoder (int, int, int), LengthFieldPrepender encode (ChannelHandlerContext, ByteBuf, List<Object>), ChannelBufferByteInput close (), LineBasedFrameDecoder decode (ChannelHandlerContext, ByteBuf, List<Object>), LimitingByteInput close (), Bzip2Encoder handlerAdded (ChannelHandlerContext), LengthFieldBasedFrameDecoder LengthFieldBasedFrameDecoder (int, int, int, int, int, boolean), Bzip2Encoder Bzip2Encoder (), CompactObjectInputStream readClassDescriptor (), Bzip2Encoder close (ChannelHandlerContext, ChannelPromise), ChannelBufferByteInput skip (long), LengthFieldBasedFrameDecoder fail (long), ChannelBufferByteInput available (), LineBasedFrameDecoder fail (ChannelHandlerContext, int), SlowByteBufChecksum update (byte[], int, int), LengthFieldPrepender LengthFieldPrepender (int, boolean), Bzip2Encoder encode (ChannelHandlerContext, ByteBuf, ByteBuf), SlowByteBufChecksum SlowByteBufChecksum (Checksum), LengthFieldBasedFrameDecoder failIfNecessary (boolean), LineBasedFrameDecoder LineBasedFrameDecoder (int, boolean, boolean), LimitingByteInput read (byte[], int, int), LineBasedFrameDecoder LineBasedFrameDecoder (int), LineBasedFrameDecoder decode (ChannelHandlerContext, ByteBuf), SlowByteBufChecksum reset (), ChannelBufferByteInput read (), Bzip2Encoder closeBlock (ByteBuf), Bzip2Encoder close (), LengthFieldBasedFrameDecoder failOnFrameLengthLessThanInitialBytesToStrip (ByteBuf, long, int), LengthFieldPrepender LengthFieldPrepender (int, int, boolean), ChannelBufferByteInput read (byte[]), ZlibChecksumMethods wrapChecksum (Checksum), LengthFieldBasedFrameDecoder discardingTooLongFrame (ByteBuf), LineBasedFrameDecoder findEndOfLine (ByteBuf), Bzip2Encoder ctx (), CompactObjectInputStream resolveClass (ObjectStreamClass), SoftReferenceMap SoftReferenceMap (Map<K,Reference<V>>), ChannelBufferByteInput ChannelBufferByteInput (ByteBuf), LimitingByteInput available (), Crc32c getValue (), JsonObjectDecoder JsonObjectDecoder (int), LengthFieldBasedFrameDecoder failOnNegativeLengthField (ByteBuf, long, int)]","946"
"2","netty/codec","901df76886768510155b4bde5b03c00418e01f68","00acea2f3f152cfde6322580cd1190cf6c164aa3","SWITCH_EQUAL_SIDES","14","1","1","[CompactObjectInputStream readClassDescriptor ()]","11"
"4","netty/codec","00acea2f3f152cfde6322580cd1190cf6c164aa3","8e82ce6f9c6f67e6498a49268bf3beca28e42a97","LOCAL_VAR_RENAMING","0","1","2","[CompactObjectInputStream resolveClass (ObjectStreamClass), CompactObjectInputStream readClassDescriptor ()]","22"
"13","netty/codec","8e82ce6f9c6f67e6498a49268bf3beca28e42a97","5196d2d1e6869c8de2326e9e4fa5514e44028ebf","REVERSE_IF_ELSE","3","1","2","[CompactObjectInputStream readClassDescriptor (), CompactObjectInputStream readStreamHeader ()]","22"
"14","netty/codec","5196d2d1e6869c8de2326e9e4fa5514e44028ebf","91cb2c2bec5bc8e3971b27eba5a2ab5ea3988c6a","LOCAL_VAR_RENAMING","0","1","3","[CompactObjectInputStream resolveClass (ObjectStreamClass), CompactObjectInputStream readClassDescriptor (), CompactObjectInputStream CompactObjectInputStream (InputStream, ClassResolver)]","33"
"16","netty/codec","91cb2c2bec5bc8e3971b27eba5a2ab5ea3988c6a","d602d531792ba39a4596b1813629859e61d5784f","LOCAL_VAR_RENAMING","0","1","2","[CompactObjectInputStream resolveClass (ObjectStreamClass), CompactObjectInputStream readClassDescriptor ()]","22"
"23","netty/codec","d602d531792ba39a4596b1813629859e61d5784f","6bc279b12b53e4bec8d69804098bae7efd3ec80e","REVERSE_IF_ELSE","3","1","1","[CompactObjectInputStream readClassDescriptor ()]","11"
"30","netty/codec","6bc279b12b53e4bec8d69804098bae7efd3ec80e","fc1cf89b92b2026763e8efc3acda8ce8eabc494b","REVERSE_IF_ELSE","3","1","1","[CompactObjectInputStream readClassDescriptor ()]","11"
"32","netty/codec","fc1cf89b92b2026763e8efc3acda8ce8eabc494b","6e02036c951bece9164bb7be69a5de2a1f2f404b","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[CompactObjectInputStream CompactObjectInputStream (InputStream, ClassResolver)]","11"
"33","netty/codec","6e02036c951bece9164bb7be69a5de2a1f2f404b","17c40ece18bbec05cd3925f2b72fc2e40ef4a98a","SWITCH_EQUAL_SIDES","14","1","1","[CompactObjectInputStream readClassDescriptor ()]","11"
"37","netty/codec","17c40ece18bbec05cd3925f2b72fc2e40ef4a98a","7b126c1ca32a7c268b38cf5cf35ef4fc3c905c78","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[CompactObjectInputStream CompactObjectInputStream (InputStream, ClassResolver)]","11"
"42","netty/codec","7b126c1ca32a7c268b38cf5cf35ef4fc3c905c78","d7c87bc26f704216af1950e17afcb47b3e570423","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[CompactObjectInputStream CompactObjectInputStream (InputStream, ClassResolver)]","11"
"46","netty/codec","d7c87bc26f704216af1950e17afcb47b3e570423","45117fa66c06802545ffbe000fc2d4909ed50538","SWITCH_EQUAL_SIDES","14","1","1","[CompactObjectInputStream readClassDescriptor ()]","11"
"49","netty/codec","45117fa66c06802545ffbe000fc2d4909ed50538","636e51684f6c508aa5d43603d917c14b50591a6a","SWITCH_EQUAL_SIDES","14","1","1","[CompactObjectInputStream readClassDescriptor ()]","11"
"51","netty/codec","636e51684f6c508aa5d43603d917c14b50591a6a","b71b00b2fa7b5d62a4aa3084b424c4c0ba4fb118","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[CompactObjectInputStream CompactObjectInputStream (InputStream, ClassResolver)]","11"
"54","netty/codec","b71b00b2fa7b5d62a4aa3084b424c4c0ba4fb118","2e44d85f89de188ddcd21863e5b76434c47b1e92","REVERSE_IF_ELSE","3","1","1","[CompactObjectInputStream readClassDescriptor ()]","11"
"58","netty/codec","2e44d85f89de188ddcd21863e5b76434c47b1e92","7112b3ca3a965f2c3c0f66bf3526687e90dbb64f","LOCAL_VAR_RENAMING","0","1","2","[CompactObjectInputStream readClassDescriptor (), CompactObjectInputStream CompactObjectInputStream (InputStream, ClassResolver)]","22"
"63","netty/codec","7112b3ca3a965f2c3c0f66bf3526687e90dbb64f","1ad800c37ccf99f33beb089eadf6ce261acd3522","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[CompactObjectInputStream CompactObjectInputStream (InputStream, ClassResolver)]","11"
"0","netty/common","1ad800c37ccf99f33beb089eadf6ce261acd3522","5892249ea3fe331e1378e27f994f7df6b73d7dac","PRE_POST_FIX_EXPRESSION_DIVIDING","16","1","379","[PlatformDependent putShort (byte[], int, short), SingleThreadEventExecutor hasTasks (), SingleThreadEventExecutor threadProperties (), SocketUtils bind (DatagramChannel, SocketAddress), PlatformDependent putInt (byte[], int, int), PlatformDependent isAndroid (), ThreadLocalRandomProvider current (), LeanCancellationException checkDeadLock (), PlatformDependent putLong (byte[], int, long), PlatformDependent equals (byte[], int, byte[], int, int), Signal hashCode (), PlatformDependent hashCodeAsciiCompute (CharSequence, int, int), SingleThreadEventExecutor SingleThreadEventExecutor (EventExecutorGroup, Executor, boolean, int, RejectedExecutionHandler), PlatformDependent hashCodeAsciiSanitizeInt (CharSequence, int), Mpsc normalizedOs (), Mpsc bitMode0 (), ConstantTimeUtils equalsConstantTime (CharSequence, CharSequence), DefaultThreadProperties isDaemon (), Mpsc newSpscQueue (), ConstantTimeUtils equalsConstantTime (int, int), PlatformDependent decrementMemoryCounter (int), LeanCancellationException cause0 (Object), ConstantTimeUtils ConstantTimeUtils (), PlatformDependent throwException (Throwable), LocalPool accept (DefaultHandle<T>), SocketUtils connect (SocketChannel, SocketAddress), LeanCancellationException isCancelled (), Mpsc isZeroSafe (byte[], int, int), DefaultPromise DefaultPromise (), PlatformDependent newConcurrentHashMap (int), NonWakeupRunnable drainTasks (), PlatformDependent putShort (long, short), SignalConstant SignalConstant (int, String), BlockingMessageQueue peek (), LeanCancellationException toStringBuilder (), DefaultHandle toAvailable (), LeanCancellationException awaitUninterruptibly (long), Mpsc maybeSuperUser0 (), Recycler onRemoval (LocalPool<T>), SocketUtils localSocketAddress (ServerSocket), Mpsc normalizedLinuxClassifiers (), PlatformDependent newLongCounter (), SingleThreadEventExecutor executeExpiredScheduledTasks (), SingleThreadEventExecutor fetchFromScheduledTaskQueue (), Signal compareTo (Signal), PromiseNotifier cascade (F, Promise<? super V>), PlatformDependent setMemory (long, long, byte), PlatformDependent newConcurrentHashMap (int, float), SocketUtils loopbackAddress (), PlatformDependent directBufferPreferred (), ThreadLocalRandomProvider PlatformDependent (), PlatformDependent reallocateDirectNoCleaner (ByteBuffer, int), Mpsc newMpscQueue (int, int), SingleThreadEventExecutor confirmShutdown (), CharsetUtil decoder (Charset, CodingErrorAction), PlatformDependent safeConstructPutInt (Object, long, int), LeanCancellationException await (long, TimeUnit), LeanCancellationException executor (), LeanCancellationException get (), Mpsc isJ9Jvm (), SingleThreadEventExecutor runExistingTasksFrom (Queue<Runnable>), LeanCancellationException addListener0 (GenericFutureListener<? extends Future<? super V>>), SingleThreadEventExecutor run (), SingleThreadEventExecutor removeTask (Runnable), CharsetUtil encoder (Charset, CodingErrorAction), PlatformDependent allocateMemory (long), LeanCancellationException syncUninterruptibly (), LeanCancellationException fillInStackTrace (), CharsetUtil getDecoder (Charset), Signal expect (Signal), DefaultPromise setUncancellable (), CharsetUtil decoder (Charset, CodingErrorAction, CodingErrorAction), BlockingMessageQueue fill (Supplier<T>, WaitStrategy, ExitCondition), LocalPool LocalPool (int, int, int), PlatformDependent align (long, int), PlatformDependent equalsConstantTime (byte[], int, byte[], int, int), DefaultHandle unguardedToAvailable (), PlatformDependent javaVersion (), SingleThreadEventExecutor removeShutdownHook (Runnable), SingleThreadEventExecutor wakeup (boolean), PlatformDependent incrementMemoryCounter (int), PlatformDependent hashCodeAsciiSanitizeShort (CharSequence, int), PlatformDependent hashCodeAscii (byte[], int, int), Mpsc newMpscQueue (), SocketUtils accept (ServerSocketChannel), DefaultThreadProperties isInterrupted (), Recycler initialValue (), Mpsc getClassLoader (Class<?>), BlockingMessageQueue BlockingMessageQueue (int), Mpsc normalizeArch (String), PlatformDependent setMemory (byte[], int, long, byte), SingleThreadEventExecutor delayNanos (long), LeanCancellationException notifyListeners0 (DefaultFutureListeners), BlockingMessageQueue poll (), PlatformDependent getShortSafe (byte[], int), PlatformDependent getLong (byte[], int), AtomicLongCounter value (), SocketUtils empty (), LeanCancellationException cancel (boolean), SingleThreadEventExecutor shutdown (), SingleThreadEventExecutor addShutdownHook (Runnable), LeanCancellationException getNow (), Recycler Recycler (int, int), PlatformDependent copyMemory (byte[], int, byte[], int, long), SingleThreadEventExecutor inEventLoop (Thread), LeanCancellationException sync (), PlatformDependent directBufferAddress (ByteBuffer), DefaultThreadProperties name (), SocketUtils SocketUtils (), AbstractConstant AbstractConstant (int, String), SocketUtils socketAddress (String, int), AbstractConstant compareTo (T), DefaultThreadProperties isAlive (), PlatformDependent canEnableTcpNoDelayByDefault (), PlatformDependent hasUnsafe (), Recycler recycle (Object), PlatformDependent throwException0 (Throwable), Mpsc newFixedMpmcQueue (int), NonWakeupRunnable startThread (), PlatformDependent run (), PlatformDependent hashCodeAscii (CharSequence), SingleThreadEventExecutor offerTask (Runnable), BlockingMessageQueue clear (), DefaultThreadProperties state (), PlatformDependent getObject (Object, long), PlatformDependent addFilesystemOsClassifiers (Set<String>, Set<String>), DefaultHandle unguardedRecycle (Object), DefaultThreadProperties stackTrace (), SingleThreadEventExecutor lazyExecute0 (Runnable), LeanCancellationException decWaiters (), Recycler Recycler (int, int, int, int), PlatformDependent freeDirectBuffer (ByteBuffer), Signal toString (), SocketUtils bind (SocketChannel, SocketAddress), PlatformDependent isOsx (), PlatformDependent putInt (long, int), SingleThreadEventExecutor invokeAny (Collection<? extends Callable<T>>), SingleThreadEventExecutor runShutdownHooks (), DefaultPromise isCancellable (), LeanCancellationException notifyProgressiveListeners (long, long), LeanCancellationException setValue0 (Object), PlatformDependent putLong (long, long), DefaultPromise isSuccess (), AbstractConstant id (), Mpsc newFixedMpscQueue (int), PlatformDependent getInt (Object, long), AtomicLongCounter increment (), PlatformDependent toIntExact8 (long), NonWakeupRunnable ensureThreadStarted (int), PlatformDependent newConcurrentHashMap (Map<? extends K,? extends V>), LeanCancellationException isCancelled0 (Object), SingleThreadEventExecutor deadlineNanos (), PlatformDependent getInt (long), LeanCancellationException setFailure0 (Throwable), Signal initCause (Throwable), Mpsc getMaxDirectMemorySizeArgPattern (), Mpsc addClassifier (Set<String>, Set<String>, String), SingleThreadEventExecutor execute (Runnable), SocketUtils connect (Socket, SocketAddress, int), BlockingMessageQueue drain (Consumer<T>), CharsetUtil values (), PromiseNotifier operationComplete (F), PlatformDependent getLong (long), Mpsc unsafeUnavailabilityCause0 (), SingleThreadEventExecutor invokeAll (Collection<? extends Callable<T>>, long, TimeUnit), AtomicLongCounter decrement (), CharsetUtil getEncoder (Charset), LocalPool release (DefaultHandle<T>, boolean), Recycler unguardedRecycle (Object), PlatformDependent copyMemory (long, long, long), EnhancedHandle EnhancedHandle (), DefaultThreadProperties id (), SingleThreadEventExecutor runAllTasks (long), AbstractConstant toString (), Mpsc getSystemClassLoader (), PlatformDependent newConcurrentHashMap (), Mpsc isWindows0 (), SingleThreadEventExecutor runScheduledAndExecutorTasks (int), PlatformDependent usedDirectMemory (), PlatformDependent getByte (long), PlatformDependent current (), PlatformDependent copyMemory (long, byte[], int, long), NonWakeupRunnable reject (), StacklessCancellationException fillInStackTrace (), Recycler Recycler (int, int, int, int, int), DefaultHandle set (T), PlatformDependent getIntVolatile (long), PlatformDependent directBuffer (long, int), SocketUtils allAddressesByName (String), PlatformDependent putByte (Object, long, byte), LeanCancellationException await (long), Recycler threadLocalSize (), SingleThreadEventExecutor cleanup (), Recycler Recycler (), AbstractConstant name (), LeanCancellationException isDone (), CharsetUtil encoder (Charset, CodingErrorAction, CodingErrorAction), PlatformDependent useDirectBufferNoCleaner (), Signal valueOf (Class<?>, String), AtomicLongCounter add (long), PlatformDependent getInt (int[], long), SingleThreadEventExecutor interruptThread (), SingleThreadEventExecutor execute (Runnable, boolean), LocalPool claim (), CharsetUtil CharsetUtil (), StacklessCancellationException StacklessCancellationException (), LeanCancellationException run (), PromiseNotifier PromiseNotifier (boolean, Promise<? super V>), PlatformDependent isUnaligned (), CauseHolder CauseHolder (Throwable), CharsetUtil encoder (Charset), Mpsc createTempFile (String, String, File), Mpsc toDirectory (String), PlatformDependent allocateDirectNoCleaner (int), PlatformDependent getByte (byte[], long), PlatformDependent hashCodeAsciiSanitizeByte (char), SingleThreadEventExecutor runAllTasks (), PlatformDependent putByte (long, byte), LocalPool isTerminated (Thread), DefaultPromise setFailure (Throwable), PlatformDependent maybeSuperUser (), Mpsc normalize (String), PlatformDependent putObject (Object, long, Object), DefaultPromise tryFailure (Throwable), LeanCancellationException removeListeners (GenericFutureListener<? extends Future<? super V>>), BlockingMessageQueue size (), Mpsc addressSize0 (), LeanCancellationException awaitUninterruptibly (), Signal fillInStackTrace (), Mpsc isIkvmDotNet (), Mpsc isOsx0 (), DefaultPromise trySuccess (V), PlatformDependent getIntSafe (byte[], int), Recycler recycle (T, Handle<T>), DefaultThreadProperties DefaultThreadProperties (Thread), AbstractConstant equals (Object), CauseHolder safeExecute (EventExecutor, Runnable), SingleThreadEventExecutor pollTask (), BlockingMessageQueue offer (T), DefaultPromise setSuccess (V), NonWakeupRunnable wakesUpForTask (Runnable), LeanCancellationException await (), Mpsc threadLocalRandom (), PlatformDependent addressSize (), Recycler Recycler (int, int, int), PlatformDependent getShort (long), PlatformDependent reallocateMemory (long, long), Signal newConstant (int, String), SingleThreadEventExecutor SingleThreadEventExecutor (EventExecutorGroup, ThreadFactory, boolean), LeanCancellationException addListener (GenericFutureListener<? extends Future<? super V>>), DefaultHandle toClaimed (), StacklessCancellationException newInstance (Class<?>, String), SingleThreadEventExecutor pollTaskFrom (Queue<Runnable>), SocketUtils addressesFromNetworkInterface (NetworkInterface), PlatformDependent addPropertyOsClassifiers (Set<String>, Set<String>), BlockingMessageQueue fill (Supplier<T>), Mpsc tmpdir0 (), SingleThreadEventExecutor addTask (Runnable), Recycler Recycler (int), ConstantTimeUtils equalsConstantTime (byte[], int, byte[], int, int), LeanCancellationException incWaiters (), LeanCancellationException notifyProgressiveListener0 (ProgressiveFuture, GenericProgressiveFutureListener, long, long), LeanCancellationException notifyListeners (), BlockingMessageQueue capacity (), PlatformDependent isWindows (), Mpsc isIkvmDotNet0 (), PlatformDependent freeDirectNoCleaner (ByteBuffer), Signal Signal (int, String), Mpsc estimateMaxDirectMemory (), PlatformDependent hasAlignDirectByteBuffer (), DefaultHandle recycle (Object), SingleThreadEventExecutor pendingTasks (), LeanCancellationException checkNotifyWaiters (), DefaultPromise DefaultPromise (EventExecutor), BlockingMessageQueue fill (Supplier<T>, int), BlockingMessageQueue relaxedPoll (), Signal name (), Recycler get (), BlockingMessageQueue relaxedPeek (), LeanCancellationException removeListener (GenericFutureListener<? extends Future<? super V>>), SingleThreadEventExecutor SingleThreadEventExecutor (EventExecutorGroup, Executor, boolean), LeanCancellationException rethrowIfFailed (), PlatformDependent toIntExact (long), SingleThreadEventExecutor shutdownGracefully (long, long, TimeUnit), BlockingMessageQueue drain (Consumer<T>, int), LeanCancellationException removeListener0 (GenericFutureListener<? extends Future<? super V>>), PlatformDependent getShort (byte[], int), PromiseNotifier cascade (boolean, F, Promise<? super V>), DefaultHandle DefaultHandle (LocalPool<T>), PlatformDependent getByte (byte[], int), BlockingMessageQueue relaxedOffer (T), Mpsc getContextClassLoader (), SocketUtils hardwareAddressFromNetworkInterface (NetworkInterface), Mpsc run (), LeanCancellationException notifyListenerWithStackOverFlowProtection (EventExecutor, Future<?>, GenericFutureListener<?>), Signal id (), PlatformDependent alignDirectBuffer (ByteBuffer, int), Recycler toString (), LeanCancellationException notifyListenersNow (), BlockingMessageQueue isEmpty (), NonWakeupRunnable doStartThread (), SingleThreadEventExecutor terminationFuture (), NonWakeupRunnable reject (Runnable), SocketUtils run (), Mpsc equalsSafe (byte[], int, byte[], int, int), PlatformDependent tmpdir (), Mpsc normalizeOsReleaseVariableValue (String), Mpsc newMpscQueue (int), Signal valueOf (String), LocalPool newHandle (), LeanCancellationException toString (), Signal equals (Object), DefaultThreadProperties priority (), PlatformDependent getLongSafe (byte[], int), LeanCancellationException progressiveListeners (), Mpsc byteArrayBaseOffset0 (), PlatformDependent isZero (byte[], int, int), PlatformDependent bitMode (), LeanCancellationException setSuccess0 (V), LeanCancellationException await0 (long, boolean), Mpsc normalizeOs (String), Mpsc isJ9Jvm0 (), PromiseNotifier PromiseNotifier (Promise<? super V>), NativeLibraryUtil loadLibrary (String, boolean), PlatformDependent objectFieldOffset (Field), SingleThreadEventExecutor afterRunningAllTasks (), SingleThreadEventExecutor newTaskQueue (), SingleThreadEventExecutor newTaskQueue (int), CharsetUtil decoder (Charset), Mpsc newChunkedMpscQueue (int, int), AbstractConstant hashCode (), SingleThreadEventExecutor throwIfInEventLoop (String), PlatformDependent byteArrayBaseOffset (), SingleThreadEventExecutor peekTask (), LeanCancellationException addListeners (GenericFutureListener<? extends Future<? super V>>), SingleThreadEventExecutor SingleThreadEventExecutor (EventExecutorGroup, ThreadFactory, boolean, int, RejectedExecutionHandler), PlatformDependent getUnsafeUnavailabilityCause (), SingleThreadEventExecutor runAllTasksFrom (Queue<Runnable>), SocketUtils bind (Socket, SocketAddress), ConstantTimeUtils equalsConstantTime (long, long), PromiseNotifier operationComplete (Future), Mpsc normalizedArch (), Mpsc Mpsc (), PlatformDependent hasDirectBufferNoCleanerConstructor (), PlatformDependent putIntOrdered (long, int), SingleThreadEventExecutor lazyExecute (Runnable), PlatformDependent allocateUninitializedArray (int), LeanCancellationException isDone0 (Object), SingleThreadEventExecutor awaitTermination (long, TimeUnit), NativeLibraryUtil NativeLibraryUtil (), PlatformDependent freeMemory (long), PlatformDependent copyMemory (byte[], int, long, long), PlatformDependent getLong (long[], long), PlatformDependent putByte (byte[], int, byte), SingleThreadEventExecutor execute0 (Runnable), SingleThreadEventExecutor invokeAll (Collection<? extends Callable<T>>), LeanCancellationException notifyProgressiveListeners0 (ProgressiveFuture<?>, GenericProgressiveFutureListener<?>[], long, long), SocketUtils addressByName (String), LeanCancellationException cause (), SingleThreadEventExecutor takeTask (), LeanCancellationException awaitUninterruptibly (long, TimeUnit), PlatformDependent newConcurrentHashMap (int, float, int), SingleThreadEventExecutor isShuttingDown (), LeanCancellationException notifyListener (EventExecutor, Future<?>, GenericFutureListener<?>), Mpsc hashCodeAsciiSafe (byte[], int, int), DefaultHandle get (), BlockingMessageQueue drain (Consumer<T>, WaitStrategy, ExitCondition), EnhancedHandle unguardedRecycle (Object), LeanCancellationException get (long, TimeUnit), SingleThreadEventExecutor isTerminated (), SingleThreadEventExecutor updateLastExecutionTime (), SingleThreadEventExecutor invokeAny (Collection<? extends Callable<T>>, long, TimeUnit), Mpsc newConcurrentDeque (), SingleThreadEventExecutor isShutdown (), SingleThreadEventExecutor SingleThreadEventExecutor (EventExecutorGroup, Executor, boolean, Queue<Runnable>, RejectedExecutionHandler), PlatformDependent getInt (byte[], int), LeanCancellationException notifyListener0 (Future, GenericFutureListener), Recycler newObject (Handle<T>), PlatformDependent maxDirectMemory ()]","4169"
"6","netty/common","5892249ea3fe331e1378e27f994f7df6b73d7dac","b07a428636e83776a08c2b49de9f3a0950dcf833","WHILE_TO_FOR","2","1","1","[ConstantTimeUtils equalsConstantTime (CharSequence, CharSequence)]","11"
"8","netty/common","b07a428636e83776a08c2b49de9f3a0950dcf833","a3881010c5b6063d8833c4598f5c82d6cb54a5ad","VAR_DECLARATION_MERGING","12","1","1","[ConstantTimeUtils equalsConstantTime (byte[], int, byte[], int, int)]","11"
"10","netty/common","a3881010c5b6063d8833c4598f5c82d6cb54a5ad","18a9e778feed5213fffbef7cebf1169b5af20366","VAR_DECLARATION_DIVIDING","13","1","1","[ConstantTimeUtils equalsConstantTime (byte[], int, byte[], int, int)]","11"
"15","netty/common","18a9e778feed5213fffbef7cebf1169b5af20366","9fc12ee42ed7cc6e58888069db086e05c08d17aa","LOCAL_VAR_RENAMING","0","1","26","[Slf4JLogger debug (String, Object), Slf4JLogger warn (String, Object, Object), Slf4JLogger error (String, Object), Slf4JLogger isWarnEnabled (), Slf4JLogger info (String, Object, Object), Slf4JLogger debug (String, Object, Object), Slf4JLogger isDebugEnabled (), Slf4JLogger warn (String, Throwable), Slf4JLogger trace (String), Slf4JLogger trace (String, Object), Slf4JLogger isErrorEnabled (), Slf4JLogger debug (String), Slf4JLogger warn (String, Object), Slf4JLogger info (String, Object), Slf4JLogger trace (String, Object, Object), Slf4JLogger error (String, Throwable), Slf4JLogger info (String), Slf4JLogger isInfoEnabled (), Slf4JLogger info (String, Throwable), Slf4JLogger warn (String), Slf4JLogger isTraceEnabled (), Slf4JLogger debug (String, Throwable), Slf4JLogger trace (String, Throwable), Slf4JLogger Slf4JLogger (Logger), Slf4JLogger error (String), Slf4JLogger error (String, Object, Object)]","312"
"18","netty/common","9fc12ee42ed7cc6e58888069db086e05c08d17aa","f902bd4fa6c0527c1a67458ac4f853c748f57a7e","LOCAL_VAR_RENAMING","0","1","2","[Slf4JLogger trace (String), Slf4JLogger error (String)]","24"
"26","netty/common","f902bd4fa6c0527c1a67458ac4f853c748f57a7e","7135446cacd8b618518d630848ebcc7500e3acc6","LOCAL_VAR_RENAMING","0","1","2","[Slf4JLogger error (String, Object), Slf4JLogger info (String, Object, Object)]","24"
"27","netty/common","7135446cacd8b618518d630848ebcc7500e3acc6","0d47e5a1e355efbdcb777cd64ea9ff859569afc9","LOCAL_VAR_RENAMING","0","1","1","[Slf4JLogger error (String, Object)]","12"
"0","netty/example","0d47e5a1e355efbdcb777cd64ea9ff859569afc9","95c73503f30e29d632da9c39a2a57b90bf9b94b1","IF_DIVIDING","9","1","39","[Http2StaticFileServerHandler sendListing (ChannelHandlerContext, File, String), ObjectEchoClient main (String[]), ByteEchoPeerBase ByteEchoPeerBase (int, SocketAddress, SocketAddress), Http2StaticFileServerHandler sendError (ChannelHandlerContext, HttpResponseStatus), ByteEchoPeerBase run (), RxtxClientHandler channelActive (ChannelHandlerContext), Http2Server initChannel (SocketChannel), HttpUploadServerInitializer HttpUploadServerInitializer (SslContext), Http2StaticFileServerHandler sanitizeUri (String), FactorialClientHandler exceptionCaught (ChannelHandlerContext, Throwable), WebSocketServer main (String[]), ObjectEchoClient initChannel (SocketChannel), Http2StaticFileServerHandler operationProgressed (ChannelProgressiveFuture, long, long), StompClientHandler channelActive (ChannelHandlerContext), Http2StaticFileServerHandler sendRedirect (ChannelHandlerContext, String), Http2StaticFileServerHandler channelRead (ChannelHandlerContext, Object), WebSocketClient initChannel (SocketChannel), Http2Server configureTLS (), ByteEchoPeerBase initChannel (UdtChannel), Http2StaticFileServerHandler setContentTypeHeader (Http2Headers, File), RxtxClientHandler channelRead0 (ChannelHandlerContext, String), StompClientHandler exceptionCaught (ChannelHandlerContext, Throwable), FactorialClientHandler operationComplete (ChannelFuture), FactorialClientHandler channelActive (ChannelHandlerContext), Http2StaticFileServerHandler sendNotModified (ChannelHandlerContext), Http2StaticFileServerHandler exceptionCaught (ChannelHandlerContext, Throwable), Http2StaticFileServerHandler setDateAndCacheHeaders (Http2Headers, File), Http2Server start (), Http2StaticFileServerHandler setDateHeader (Http2Headers), FactorialClientHandler sendNumbers (), Http2FrameClient main (String[]), Http2Server Http2Server (EventLoopGroup), WebSocketClient main (String[]), FactorialClientHandler getFactorial (), FactorialClientHandler channelRead0 (ChannelHandlerContext, BigInteger), StompClientHandler channelRead0 (ChannelHandlerContext, StompFrame), HttpUploadServerInitializer initChannel (SocketChannel), Http2FrameClient Http2FrameClient (), Http2StaticFileServerHandler operationComplete (ChannelProgressiveFuture)]","429"
"4","netty/example","95c73503f30e29d632da9c39a2a57b90bf9b94b1","67d91a5502ea216573fa7e1925e1ce5c47c694dd","STATEMENTS_ORDER_REARRANGEMENT","10","1","5","[ByteEchoPeerHandler ByteEchoPeerHandler (int), ByteEchoPeerHandler channelRead0 (ChannelHandlerContext, ByteBuf), ByteEchoPeerHandler channelReadComplete (ChannelHandlerContext), ByteEchoPeerHandler channelActive (ChannelHandlerContext), ByteEchoPeerHandler exceptionCaught (ChannelHandlerContext, Throwable)]","60"
"7","netty/example","67d91a5502ea216573fa7e1925e1ce5c47c694dd","ec6a8c65fcc4c7f055b9668671cd13cdfa1cdcfe","LOCAL_VAR_RENAMING","0","1","2","[ByteEchoPeerHandler channelActive (ChannelHandlerContext), ByteEchoPeerHandler exceptionCaught (ChannelHandlerContext, Throwable)]","24"
"8","netty/example","ec6a8c65fcc4c7f055b9668671cd13cdfa1cdcfe","067ebe0538f3a3fd1d07c2bc51ce6abf5bd5f3a1","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ByteEchoPeerHandler ByteEchoPeerHandler (int)]","12"
"17","netty/example","067ebe0538f3a3fd1d07c2bc51ce6abf5bd5f3a1","3aaf44ddc4a7e724d4fe9aba46a14c2f162eb652","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ByteEchoPeerHandler ByteEchoPeerHandler (int)]","12"
"21","netty/example","3aaf44ddc4a7e724d4fe9aba46a14c2f162eb652","6e5b693de36d8ec1fee87607bb2d8c7235afcc79","FOR_TO_WHILE","1","1","1","[ByteEchoPeerHandler ByteEchoPeerHandler (int)]","12"
"22","netty/example","6e5b693de36d8ec1fee87607bb2d8c7235afcc79","26d803c784026f3c8acfdc1788193d29756877b3","WHILE_TO_FOR","2","1","1","[ByteEchoPeerHandler ByteEchoPeerHandler (int)]","12"
"29","netty/example","26d803c784026f3c8acfdc1788193d29756877b3","6a7f5faf8e368f185b83a5b2065daac00ee404f1","FOR_TO_WHILE","1","1","1","[ByteEchoPeerHandler ByteEchoPeerHandler (int)]","12"
"31","netty/example","6a7f5faf8e368f185b83a5b2065daac00ee404f1","f07f4af97beaadb36f99a7161ff19f9bdb2ec02f","PP_TO_ADD_ASSIGNMENT","6","1","1","[ByteEchoPeerHandler ByteEchoPeerHandler (int)]","12"
"42","netty/example","f07f4af97beaadb36f99a7161ff19f9bdb2ec02f","c6706ebc59cf12de732be047b20364d8206737fc","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ByteEchoPeerHandler ByteEchoPeerHandler (int)]","12"
"46","netty/example","c6706ebc59cf12de732be047b20364d8206737fc","ece726edceaebac765ad8c003d5f69a91c7af602","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ByteEchoPeerHandler ByteEchoPeerHandler (int)]","12"
"55","netty/example","ece726edceaebac765ad8c003d5f69a91c7af602","f959be227eb8a4aea0a8797ea50fa2494e5553ed","LOCAL_VAR_RENAMING","0","1","2","[ByteEchoPeerHandler ByteEchoPeerHandler (int), ByteEchoPeerHandler channelReadComplete (ChannelHandlerContext)]","24"
"61","netty/example","f959be227eb8a4aea0a8797ea50fa2494e5553ed","33dd4fc98629c8b5acd6c4bd607344b4fee566b2","LOCAL_VAR_RENAMING","0","1","1","[ByteEchoPeerHandler channelRead0 (ChannelHandlerContext, ByteBuf)]","12"
"65","netty/example","33dd4fc98629c8b5acd6c4bd607344b4fee566b2","a32c7268109195eddd7d7cb5a848031c2dc6feac","WHILE_TO_FOR","2","1","1","[ByteEchoPeerHandler ByteEchoPeerHandler (int)]","12"
"0","netty/handler-proxy","a32c7268109195eddd7d7cb5a848031c2dc6feac","9d987ea2f89f0ecf3a9440e2ea30457b593a69a9","IF_DIVIDING","9","1","68","[ProxyHandler removeEncoder (ChannelHandlerContext), Socks4ProxyHandler removeDecoder (ChannelHandlerContext), Socks5ProxyHandler protocol (), ProxyHandler failPendingWritesAndClose (Throwable), Socks5ProxyHandler password (), Socks4ProxyHandler addCodec (ChannelHandlerContext), ProxyHandler destinationAddress (), ProxyHandler isConnected (), ProxyHandler setConnectSuccess (), ProxyHandler protocol (), Socks5ProxyHandler Socks5ProxyHandler (SocketAddress), ProxyHandler cancelConnectTimeoutFuture (), ProxyConnectionEvent toString (), ProxyHandler safeRemoveEncoder (), ProxyHandler proxyAddress (), ProxyHandler readIfNeeded (ChannelHandlerContext), Socks4ProxyHandler newInitialMessage (ChannelHandlerContext), ProxyHandler connect (ChannelHandlerContext, SocketAddress, SocketAddress, ChannelPromise), ProxyHandler setConnectFailure (Throwable), ProxyConnectionEvent ProxyConnectionEvent (String, String, SocketAddress, SocketAddress), Socks4ProxyHandler authScheme (), ProxyHandler failPendingWrites (Throwable), Socks5ProxyHandler removeEncoder (ChannelHandlerContext), ProxyHandler handleResponse (ChannelHandlerContext, Object), ProxyHandler writePendingWrites (), ProxyHandler exceptionCaught (ChannelHandlerContext, Throwable), Socks4ProxyHandler username (), ProxyHandler sendInitialMessage (ChannelHandlerContext), Socks5ProxyHandler handleResponse (ChannelHandlerContext, Object), ProxyHandler channelActive (ChannelHandlerContext), LazyChannelPromise executor (), ProxyHandler connectFuture (), ProxyHandler ProxyHandler (SocketAddress), ProxyHandler write (ChannelHandlerContext, Object, ChannelPromise), ProxyHandler safeRemoveDecoder (), ProxyConnectionEvent authScheme (), ProxyHandler exceptionMessage (String), ProxyHandler operationComplete (ChannelFuture), ProxyConnectionEvent proxyAddress (), Socks5ProxyHandler Socks5ProxyHandler (SocketAddress, String, String), ProxyHandler authScheme (), ProxyHandler newInitialMessage (ChannelHandlerContext), Socks5ProxyHandler newInitialMessage (ChannelHandlerContext), ProxyHandler setConnectTimeoutMillis (long), ProxyHandler channelReadComplete (ChannelHandlerContext), Socks4ProxyHandler protocol (), ProxyHandler addPendingWrite (ChannelHandlerContext, Object, ChannelPromise), Socks4ProxyHandler handleResponse (ChannelHandlerContext, Object), ProxyConnectionEvent protocol (), Socks5ProxyHandler removeDecoder (ChannelHandlerContext), ProxyHandler addCodec (ChannelHandlerContext), Socks4ProxyHandler Socks4ProxyHandler (SocketAddress), Socks4ProxyHandler Socks4ProxyHandler (SocketAddress, String), Socks5ProxyHandler authScheme (), ProxyHandler sendToProxyServer (Object), ProxyConnectionEvent destinationAddress (), Socks4ProxyHandler removeEncoder (ChannelHandlerContext), Socks5ProxyHandler username (), ProxyHandler handlerAdded (ChannelHandlerContext), ProxyHandler removeDecoder (ChannelHandlerContext), ProxyHandler channelInactive (ChannelHandlerContext), ProxyHandler channelRead (ChannelHandlerContext, Object), ProxyHandler flush (ChannelHandlerContext), ProxyHandler run (), ProxyHandler connectTimeoutMillis (), Socks5ProxyHandler addCodec (ChannelHandlerContext), Socks5ProxyHandler sendConnectCommand (ChannelHandlerContext), Socks5ProxyHandler socksAuthMethod ()]","272"
"1","netty/handler-proxy","9d987ea2f89f0ecf3a9440e2ea30457b593a69a9","555aff198f878fb0cdc3961b5e419d3356b8a8ce","REVERSE_IF_ELSE","3","1","36","[HttpClientCodecWrapper handlerRemoved (ChannelHandlerContext), HttpClientCodecWrapper userEventTriggered (ChannelHandlerContext, Object), HttpClientCodecWrapper connect (ChannelHandlerContext, SocketAddress, SocketAddress, ChannelPromise), HttpProxyHandler HttpProxyHandler (SocketAddress, HttpHeaders, boolean), HttpClientCodecWrapper disconnect (ChannelHandlerContext, ChannelPromise), HttpClientCodecWrapper write (ChannelHandlerContext, Object, ChannelPromise), HttpClientCodecWrapper channelInactive (ChannelHandlerContext), HttpClientCodecWrapper channelRead (ChannelHandlerContext, Object), HttpProxyConnectException headers (), HttpProxyHandler handleResponse (ChannelHandlerContext, Object), HttpProxyHandler removeDecoder (ChannelHandlerContext), HttpClientCodecWrapper channelReadComplete (ChannelHandlerContext), HttpProxyHandler addCodec (ChannelHandlerContext), HttpProxyHandler password (), HttpProxyHandler protocol (), HttpClientCodecWrapper bind (ChannelHandlerContext, SocketAddress, ChannelPromise), HttpClientCodecWrapper close (ChannelHandlerContext, ChannelPromise), HttpProxyHandler HttpProxyHandler (SocketAddress, String, String), HttpProxyHandler HttpProxyHandler (SocketAddress, HttpHeaders), HttpClientCodecWrapper read (ChannelHandlerContext), HttpProxyHandler authScheme (), HttpClientCodecWrapper flush (ChannelHandlerContext), HttpProxyHandler HttpProxyHandler (SocketAddress), HttpProxyConnectException HttpProxyConnectException (String, HttpHeaders), HttpClientCodecWrapper handlerAdded (ChannelHandlerContext), HttpClientCodecWrapper channelUnregistered (ChannelHandlerContext), HttpProxyHandler HttpProxyHandler (SocketAddress, String, String, HttpHeaders), HttpClientCodecWrapper channelRegistered (ChannelHandlerContext), HttpProxyHandler removeEncoder (ChannelHandlerContext), HttpClientCodecWrapper channelWritabilityChanged (ChannelHandlerContext), HttpProxyHandler username (), HttpClientCodecWrapper exceptionCaught (ChannelHandlerContext, Throwable), HttpProxyHandler newInitialMessage (ChannelHandlerContext), HttpClientCodecWrapper channelActive (ChannelHandlerContext), HttpClientCodecWrapper deregister (ChannelHandlerContext, ChannelPromise), HttpProxyHandler HttpProxyHandler (SocketAddress, String, String, HttpHeaders, boolean)]","180"
"2","netty/handler-proxy","555aff198f878fb0cdc3961b5e419d3356b8a8ce","21e581338ac520f5ad4d516460ac97233b004f31","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[HttpProxyHandler HttpProxyHandler (SocketAddress, HttpHeaders, boolean), HttpProxyHandler HttpProxyHandler (SocketAddress, String, String, HttpHeaders, boolean)]","10"
"6","netty/handler-proxy","21e581338ac520f5ad4d516460ac97233b004f31","0883756141a484d48c8d6a4f1ed528536b9d7dd9","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[HttpProxyHandler newInitialMessage (ChannelHandlerContext)]","5"
"7","netty/handler-proxy","0883756141a484d48c8d6a4f1ed528536b9d7dd9","0b9dd85d602a8bb1d905a5b71d6b3f5d9cf5a791","INFIX_EXPRESSION_DIVIDING","8","1","1","[HttpProxyHandler newInitialMessage (ChannelHandlerContext)]","5"
"9","netty/handler-proxy","0b9dd85d602a8bb1d905a5b71d6b3f5d9cf5a791","94984bb45f86143c90ff86843a347923932cbb65","INFIX_EXPRESSION_DIVIDING","8","1","1","[HttpProxyHandler newInitialMessage (ChannelHandlerContext)]","5"
"15","netty/handler-proxy","94984bb45f86143c90ff86843a347923932cbb65","6e2a0dce2f8b2550d451c7e8019fe9d0d5736ffc","LOCAL_VAR_RENAMING","0","1","4","[ProxyConnectException ProxyConnectException (), ProxyConnectException ProxyConnectException (String), ProxyConnectException ProxyConnectException (Throwable), ProxyConnectException ProxyConnectException (String, Throwable)]","24"
"58","netty/handler-proxy","6e2a0dce2f8b2550d451c7e8019fe9d0d5736ffc","91707f257fea63d8a10a129f0a499b42efe13743","LOCAL_VAR_RENAMING","0","1","1","[ProxyConnectException ProxyConnectException (Throwable)]","6"
"62","netty/handler-proxy","91707f257fea63d8a10a129f0a499b42efe13743","31e775be70f5d12c4366957ba1769f5990b96929","LOCAL_VAR_RENAMING","0","1","2","[ProxyConnectException ProxyConnectException (Throwable), ProxyConnectException ProxyConnectException (String, Throwable)]","12"
"0","netty/handler-ssl-ocsp","31e775be70f5d12c4366957ba1769f5990b96929","431613841a75cb5f4ed104d681c2ef4b15538021","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","27","[OcspClient validateResponse (Promise<BasicOCSPResp>, BasicOCSPResp, DEROctetString, X509Certificate, boolean), OcspResponse toString (), OcspClient operationComplete (Future<OCSPResp>), OcspClient parseOcspUrlFromCertificate (X509Certificate), OcspClient run (), OcspValidationEvent toString (), Initializer OcspClient (), Initializer initChannel (SocketChannel), OcspResponse nextUpdate (), OcspValidationEvent OcspValidationEvent (OcspResponse), OcspClient operationComplete (ChannelFuture), OcspValidationEvent response (), IoTransport IoTransport (EventLoop, ChannelFactory<SocketChannel>, ChannelFactory<DatagramChannel>), IoTransport eventLoop (), OcspClient validateNonce (BasicOCSPResp, DEROctetString), Initializer Initializer (Promise<OCSPResp>), OcspClient validateSignature (BasicOCSPResp, X509Certificate), IoTransport socketChannel (), IoTransport newChannel (), OcspResponse status (), OcspResponse thisUpdate (), IoTransport create (EventLoop, ChannelFactory<SocketChannel>, ChannelFactory<DatagramChannel>), OcspResponse OcspResponse (Status, Date, Date), OcspClient query (EventLoop, ByteBuf, String, int, String, IoTransport, DnsNameResolver), OcspClient operationComplete (Future<InetAddress>), OcspClient query (X509Certificate, X509Certificate, boolean, IoTransport, DnsNameResolver), IoTransport datagramChannel ()]","108"
"8","netty/handler-ssl-ocsp","431613841a75cb5f4ed104d681c2ef4b15538021","a2673bdfd4b38bb32b64d1160e245e75134d0ecc","LOCAL_VAR_RENAMING","0","1","3","[OcspResponse status (), OcspResponse toString (), OcspResponse OcspResponse (Status, Date, Date)]","12"
"17","netty/handler-ssl-ocsp","a2673bdfd4b38bb32b64d1160e245e75134d0ecc","f556d11933799cb5696ac497dae1e9f9a345dda6","LOCAL_VAR_RENAMING","0","1","3","[OcspResponse nextUpdate (), OcspResponse toString (), OcspResponse OcspResponse (Status, Date, Date)]","12"
"23","netty/handler-ssl-ocsp","f556d11933799cb5696ac497dae1e9f9a345dda6","00e71d02669e81f8e47d9f99a71a6a3f339d801b","LOCAL_VAR_RENAMING","0","1","1","[OcspResponse OcspResponse (Status, Date, Date)]","4"
"24","netty/handler-ssl-ocsp","00e71d02669e81f8e47d9f99a71a6a3f339d801b","c9abcfd641e0d70360099bc0ac7d4ef29cd26cd5","LOCAL_VAR_RENAMING","0","1","3","[OcspResponse thisUpdate (), OcspResponse toString (), OcspResponse OcspResponse (Status, Date, Date)]","12"
"36","netty/handler-ssl-ocsp","c9abcfd641e0d70360099bc0ac7d4ef29cd26cd5","753255678b522b7915948e079009bb6de25f4941","LOCAL_VAR_RENAMING","0","1","1","[OcspResponse OcspResponse (Status, Date, Date)]","4"
"54","netty/handler-ssl-ocsp","753255678b522b7915948e079009bb6de25f4941","f4ffb4a3e80da053fcfbb5f5d681b9a5c6e82110","LOCAL_VAR_RENAMING","0","1","3","[OcspResponse status (), OcspResponse toString (), OcspResponse OcspResponse (Status, Date, Date)]","12"
"0","netty/handler","f4ffb4a3e80da053fcfbb5f5d681b9a5c6e82110","4dc482a47b3f0c984e8953a1eb4687aa939a05d6","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","200","[ReferenceCountedOpenSslContext newHandler (ByteBufAllocator, boolean), SslContextBuilder protocols (Iterable<String>), ChunkedStream progress (), ReferenceCountedOpenSslContext retain (int), ReferenceCountedOpenSslContext selectorFailureBehavior (), AsyncPrivateKeyMethod AsyncPrivateKeyMethod (OpenSslEngineMap, OpenSslAsyncPrivateKeyMethod), ChunkedStream transferredBytes (), ReferenceCountedOpenSslContext refCnt (), SslContextBuilder forServer (InputStream, InputStream), SslContextBuilder trustManager (TrustManagerFactory), FingerprintTrustManagerFactoryBuilder FingerprintTrustManagerFactoryBuilder (String), SslContextBuilder keyManager (InputStream, InputStream), SslContextBuilder forServer (File, File, String), OpenSslSniHostnameMatcher OpenSslSniHostnameMatcher (OpenSslEngineMap), OpenSslPrivateKeyMaterial retain (), OpenSslPrivateKey OpenSslPrivateKey (long), ReferenceCountedOpenSslContext touch (), ReferenceCountedOpenSslContext getBioNonApplicationBufferSize (), ReferenceCountedOpenSslContext newEngine0 (ByteBufAllocator, String, int, boolean), OpenSslCachingKeyMaterialProvider destroy (), OpenSslPrivateKey retain (), ChunkedStream ChunkedStream (InputStream), SslContextBuilder forClient (), PrivateKeyMethod sign (long, int, byte[]), SslContextBuilder endpointIdentificationAlgorithm (String), AbstractSniHandler onLookupComplete (ChannelHandlerContext, Future<T>), ReferenceCountedOpenSslContext setPrivateKeyMethod (OpenSslPrivateKeyMethod), OpenSslPrivateKeyMaterial certificateChain (), AbstractSniHandler AbstractSniHandler (int, long), ExtendedTrustManagerVerifyCallback verify (ReferenceCountedOpenSslEngine, X509Certificate[], String), ReferenceCountedOpenSslContext getRejectRemoteInitiatedRenegotiation (), OpenSslPrivateKey touch (), SslContextBuilder build (), SslContextBuilder sslContextProvider (Provider), SniCompletionEvent SniCompletionEvent (Throwable), ChunkedStream length (), SslContextBuilder sessionCacheSize (long), ReferenceCountedOpenSslContext chooseTrustManager (TrustManager[]), OpenSslPrivateKey retain (int), OpenSslPrivateKeyMaterial certificateChainAddress (), AbstractSniHandler handlerAdded (ChannelHandlerContext), OpenSslCertificateException OpenSslCertificateException (String, int), AbstractCertificateVerifier verify (ReferenceCountedOpenSslEngine, X509Certificate[], String), ChunkedStream readChunk (ChannelHandlerContext), JdkNpnApplicationProtocolNegotiator JdkNpnApplicationProtocolNegotiator (boolean, String), OpenSslCertificateException checkErrorCode (int), ReferenceCountedOpenSslServerContext sessionContext (), AbstractSniHandler checkStartTimeout (ChannelHandlerContext), ReferenceCountedOpenSslContext newHandler (ByteBufAllocator, boolean, Executor), DefaultOpenSslEngineMap newBIO (ByteBuf), JdkNpnApplicationProtocolNegotiator JdkNpnApplicationProtocolNegotiator (boolean, boolean, String), SslContextBuilder ciphers (Iterable<String>, CipherSuiteFilter), OpenSslPrivateKey getFormat (), SslContextBuilder ciphers (Iterable<String>), JdkNpnApplicationProtocolNegotiator wrapSslEngine (SSLEngine, JdkApplicationProtocolNegotiator, boolean), TrustManagerVerifyCallback TrustManagerVerifyCallback (OpenSslEngineMap, X509TrustManager), SslContextBuilder option (SslContextOption<T>, T), AbstractCertificateVerifier translateToError (Throwable), ReferenceCountedOpenSslContext opensslSelectorFailureBehavior (ApplicationProtocolConfig.SelectorFailureBehavior), DefaultOpenSslEngineMap toBIO (ByteBufAllocator, X509Certificate), SslContextBuilder forServer (File, File), AbstractSniHandler onLookupComplete (ChannelHandlerContext, String, Future<T>), ReferenceCountedOpenSslContext destroy (), OpenSslServerCertificateCallback handle (long, byte[], byte[][]), ChunkedStream close (), SslContextBuilder forServer (PrivateKey, X509Certificate), SslContextBuilder forServer (KeyManagerFactory), OpenSslCertificateException errorCode (), SniCompletionEvent hostname (), AbstractCertificateVerifier verify (long, byte[][], String), ReferenceCountedOpenSslContext deallocate (), ReferenceCountedOpenSslContext context (), ReferenceCountedOpenSslContext sessionContext (), OpenSslPrivateKey touch (Object), JdkNpnApplicationProtocolNegotiator JdkNpnApplicationProtocolNegotiator (boolean, boolean, Iterable<String>), AbstractSniHandler AbstractSniHandler (long), ReferenceCountedOpenSslContext certificates (byte[][]), ReferenceCountedOpenSslContext cipherSuites (), SslContextBuilder SslContextBuilder (boolean), ExtendedTrustManagerVerifyCallback ExtendedTrustManagerVerifyCallback (OpenSslEngineMap, X509ExtendedTrustManager), OpenSslCachingKeyMaterialProvider OpenSslCachingKeyMaterialProvider (X509KeyManager, String, int), SslContextBuilder keyManager (PrivateKey, Iterable<? extends X509Certificate>), JdkNpnApplicationProtocolNegotiator JdkNpnApplicationProtocolNegotiator (String), ReferenceCountedOpenSslContext ReferenceCountedOpenSslContext (Iterable<String>, CipherSuiteFilter, OpenSslApplicationProtocolNegotiator, int, Certificate[], ClientAuth, String[], boolean, String, boolean, boolean, Map.Entry<SslContextOption<?>,Object>), AbstractSniHandler extractSniHostname (ByteBuf), ReferenceCountedOpenSslServerContext ReferenceCountedOpenSslServerContext (X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, Iterable<String>, CipherSuiteFilter, ApplicationProtocolConfig, long, long, ClientAuth, String[], boolean, boolean, String, Map.Entry<SslContextOption<?>,Object>), ReferenceCountedOpenSslContext protocol (), OpenSslPrivateKeyMaterial OpenSslPrivateKeyMaterial (long, X509Certificate[]), SslContextBuilder applicationProtocolConfig (ApplicationProtocolConfig), ReferenceCountedOpenSslServerContext ReferenceCountedOpenSslServerContext (X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, Iterable<String>, CipherSuiteFilter, OpenSslApplicationProtocolNegotiator, long, long, ClientAuth, String[], boolean, boolean, String, Map.Entry<SslContextOption<?>,Object>), SslContextBuilder sessionTimeout (long), ReferenceCountedOpenSslContext newHandler (ByteBufAllocator, String, int, boolean), DefaultOpenSslEngineMap freeBio (long), SslContextBuilder forServer (PrivateKey, String, Iterable<? extends X509Certificate>), SslContextBuilder trustManager (File), FingerprintTrustManagerFactoryBuilder build (), SslContextBuilder keyManager (PrivateKey, X509Certificate), JdkNpnApplicationProtocolNegotiator JdkNpnApplicationProtocolNegotiator (ProtocolSelectorFactory, ProtocolSelectionListenerFactory, Iterable<String>), SslContextBuilder keyManager (File, File), SslContextBuilder forServer (InputStream, InputStream, String), SslContextBuilder forServer (PrivateKey, Iterable<? extends X509Certificate>), CompressionAlgorithm algorithmId (), SslContextBuilder trustManager (X509Certificate), OpenSslPrivateKeyMaterial retain (int), ResultCallbackListener operationComplete (Future<byte[]>), ChunkedStream readChunk (ByteBufAllocator), DefaultOpenSslEngineMap retrieveEngine (OpenSslEngineMap, long), CompressionAlgorithm CompressionAlgorithm (OpenSslEngineMap, OpenSslCertificateCompressionAlgorithm), SniCompletionEvent SniCompletionEvent (String, Throwable), AbstractSniHandler run (), SslContextBuilder toArray (Iterable<? extends T>, T[]), PrivateKeyMethod PrivateKeyMethod (OpenSslEngineMap, OpenSslPrivateKeyMethod), DefaultOpenSslEngineMap toBIO (ByteBufAllocator, PrivateKey), AbstractSniHandler AbstractSniHandler (), ReferenceCountedOpenSslContext stats (), OpenSslCertificateException OpenSslCertificateException (Throwable, int), OpenSslCachingKeyMaterialProvider chooseKeyMaterial (ByteBufAllocator, String), ReferenceCountedOpenSslContext retain (), OpenSslServerCertificateCallback OpenSslServerCertificateCallback (OpenSslEngineMap, OpenSslKeyMaterialManager), OpenSslPrivateKeyMaterial touch (Object), PrivateKeyMethod decrypt (long, byte[]), OpenSslSniHostnameMatcher match (long, String), ReferenceCountedOpenSslContext setRejectRemoteInitiatedRenegotiation (boolean), OpenSslPrivateKeyMaterial touch (), AbstractSniHandler lookup (ChannelHandlerContext, String), OpenSslPrivateKeyMaterial privateKeyAddress (), ReferenceCountedOpenSslContext protocols (), ReferenceCountedOpenSslContext release (), ReferenceCountedOpenSslContext selectedListenerFailureBehavior (), AsyncPrivateKeyMethod sign (long, int, byte[], ResultCallback<byte[]>), AbstractSniHandler lookup (ChannelHandlerContext, ByteBuf), AbstractCertificateVerifier AbstractCertificateVerifier (OpenSslEngineMap), OpenSslPrivateKey isDestroyed (), ReferenceCountedOpenSslContext newHandler (ByteBufAllocator, String, int, boolean, Executor), ChunkedStream ChunkedStream (InputStream, int), SslContextBuilder trustManager (InputStream), ReferenceCountedOpenSslContext setUseTasks (boolean), DefaultOpenSslEngineMap get (long), OpenSslPrivateKey destroy (), OpenSslPrivateKey getAlgorithm (), SslContextBuilder trustManager (Iterable<? extends X509Certificate>), OpenSslPrivateKeyMaterial releaseChain (), SslContextBuilder keyManager (KeyManager), ReferenceCountedOpenSslContext applicationProtocolNegotiator (), ReferenceCountedOpenSslContext setTicketKeys (byte[]), DefaultOpenSslEngineMap setKeyMaterial (long, X509Certificate[], PrivateKey, String), OpenSslCertificateException OpenSslCertificateException (String, Throwable, int), DefaultOpenSslEngineMap add (ReferenceCountedOpenSslEngine), SslContextBuilder keyManager (KeyManagerFactory), DefaultOpenSslEngineMap remove (long), ReferenceCountedOpenSslContext newEngine (ByteBufAllocator, String, int), FingerprintTrustManagerFactoryBuilder fingerprints (CharSequence), OpenSslPrivateKey deallocate (), ReferenceCountedOpenSslContext chooseX509KeyManager (KeyManager[]), ReferenceCountedOpenSslServerContext newSessionContext (ReferenceCountedOpenSslContext, long, OpenSslEngineMap, X509Certificate[], TrustManagerFactory, X509Certificate[], PrivateKey, String, KeyManagerFactory, String, long, long), ReferenceCountedOpenSslContext release (int), ReferenceCountedOpenSslContext sslCtxPointer (), SslContextBuilder enableOcsp (boolean), SslContextBuilder sslProvider (SslProvider), CompressionAlgorithm compress (long, byte[]), SslContextBuilder keyManager (PrivateKey, String, X509Certificate), SslContextBuilder forServer (KeyManager), SslContextBuilder clientAuth (ClientAuth), SslContextBuilder secureRandom (SecureRandom), ReferenceCountedOpenSslContext isClient (), DefaultOpenSslEngineMap toBIO (ByteBufAllocator, PemEncoded), CompressionAlgorithm decompress (long, int, byte[]), ReferenceCountedOpenSslContext useExtendedTrustManager (X509TrustManager), SslContextBuilder keyManager (File, File, String), ResultCallbackListener verifyResult (byte[]), SslContextBuilder keyManager (PrivateKey, String, Iterable<? extends X509Certificate>), OpenSslCertificateException OpenSslCertificateException (int), AbstractSniHandler fireSniCompletionEvent (ChannelHandlerContext, String, Future<?>), SslContextBuilder protocols (String), AsyncPrivateKeyMethod decrypt (long, byte[], ResultCallback<byte[]>), JdkNpnApplicationProtocolNegotiator JdkNpnApplicationProtocolNegotiator (ProtocolSelectorFactory, ProtocolSelectionListenerFactory, String), SslContextBuilder trustManager (TrustManager), SniCompletionEvent toString (), ResultCallbackListener ResultCallbackListener (ReferenceCountedOpenSslEngine, long, ResultCallback<byte[]>), ReferenceCountedOpenSslContext toNegotiator (ApplicationProtocolConfig), OpenSslPrivateKey newKeyMaterial (long, X509Certificate[]), ChunkedStream isEndOfInput (), JdkNpnApplicationProtocolNegotiator JdkNpnApplicationProtocolNegotiator (boolean, Iterable<String>), OpenSslPrivateKey getEncoded (), SslContextBuilder keyManager (InputStream, InputStream, String), ReferenceCountedOpenSslServerContext setVerifyCallback (long, OpenSslEngineMap, X509TrustManager), OpenSslPrivateKeyMaterial deallocate (), FingerprintTrustManagerFactoryBuilder fingerprints (Iterable<? extends CharSequence>), ReferenceCountedOpenSslContext setBioNonApplicationBufferSize (int), SslContextBuilder forServer (PrivateKey, String, X509Certificate), AbstractSniHandler channelActive (ChannelHandlerContext), DefaultOpenSslEngineMap providerFor (KeyManagerFactory, String), ReferenceCountedOpenSslContext touch (Object), SniCompletionEvent SniCompletionEvent (String), JdkNpnApplicationProtocolNegotiator JdkNpnApplicationProtocolNegotiator (Iterable<String>), SslContextBuilder keyStoreType (String), SslContextBuilder startTls (boolean), OpenSslPrivateKey privateKeyAddress (), TrustManagerVerifyCallback verify (ReferenceCountedOpenSslEngine, X509Certificate[], String), ReferenceCountedOpenSslContext newEngine (ByteBufAllocator)]","2200"
"1","netty/handler","4dc482a47b3f0c984e8953a1eb4687aa939a05d6","72e6987640320d36b6ba0efd0202c13dc0cbc818","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SniCompletionEvent SniCompletionEvent (String, Throwable)]","11"
"6","netty/handler","72e6987640320d36b6ba0efd0202c13dc0cbc818","a2bffd367c1769f052654e6750152f555c85a0a1","SWITCH_EQUAL_SIDES","14","1","1","[SniCompletionEvent toString ()]","11"
"12","netty/handler","a2bffd367c1769f052654e6750152f555c85a0a1","998e1aefb1d1a0f3a3bf6ac239e2b7d92d2c6faf","LOCAL_VAR_RENAMING","0","1","4","[OpenSslSessionTicketKey name (), OpenSslSessionTicketKey OpenSslSessionTicketKey (byte[], byte[], byte[]), OpenSslSessionTicketKey aesKey (), OpenSslSessionTicketKey hmacKey ()]","48"
"20","netty/handler","998e1aefb1d1a0f3a3bf6ac239e2b7d92d2c6faf","341c2bd00cc36db1b0ea182bbfbf92529eaff663","LOCAL_VAR_RENAMING","0","1","4","[OpenSslSessionTicketKey name (), OpenSslSessionTicketKey OpenSslSessionTicketKey (byte[], byte[], byte[]), OpenSslSessionTicketKey aesKey (), OpenSslSessionTicketKey hmacKey ()]","48"
"38","netty/handler","341c2bd00cc36db1b0ea182bbfbf92529eaff663","2634cd1bcc0d57a219263931252585971317c476","LOCAL_VAR_RENAMING","0","1","4","[OpenSslSessionTicketKey name (), OpenSslSessionTicketKey OpenSslSessionTicketKey (byte[], byte[], byte[]), OpenSslSessionTicketKey aesKey (), OpenSslSessionTicketKey hmacKey ()]","48"
"56","netty/handler","2634cd1bcc0d57a219263931252585971317c476","5bca20a665596a8fffb963a7c3ae9ebd937dc937","LOCAL_VAR_RENAMING","0","1","1","[OpenSslSessionTicketKey OpenSslSessionTicketKey (byte[], byte[], byte[])]","12"
"64","netty/handler","5bca20a665596a8fffb963a7c3ae9ebd937dc937","6894d7d272de7a4700c7c613ef6b59526647c154","LOCAL_VAR_RENAMING","0","1","4","[OpenSslSessionTicketKey name (), OpenSslSessionTicketKey OpenSslSessionTicketKey (byte[], byte[], byte[]), OpenSslSessionTicketKey aesKey (), OpenSslSessionTicketKey hmacKey ()]","48"
"65","netty/handler","6894d7d272de7a4700c7c613ef6b59526647c154","1dfd180a7b65bd7e75e39e89fe3c4eb404c62cb9","LOCAL_VAR_RENAMING","0","1","4","[OpenSslSessionTicketKey name (), OpenSslSessionTicketKey OpenSslSessionTicketKey (byte[], byte[], byte[]), OpenSslSessionTicketKey aesKey (), OpenSslSessionTicketKey hmacKey ()]","48"
"0","netty/microbench","1dfd180a7b65bd7e75e39e89fe3c4eb404c62cb9","ebe68cd6bd2c11c63c3c3974a41ad4e7d3edee78","VAR_DECLARATION_MERGING","12","1","61","[SearchBenchmark kmp (), SearchBenchmark setup (), AbstractMicrobenchmarkBase jvmArgs (), UnsafeByteBufBenchmark setLongUnsafeByteBuf (), CompositeByteBufWriteOutBenchmark setup (), AbstractByteBufGetCharSequenceBenchmark getCharSequenceOld (), UnsafeByteBufBenchmark setup (), HpackDecoderBenchmark add (CharSequence, CharSequence), SearchBenchmark randomBytes (Random, int, int, int), UnsafeByteBufBenchmark setLongByteBuffer (), AbstractMicrobenchmarkBase getMeasureIterations (), HttpRequestDecoderUtils HttpRequestDecoderUtils (), HpackDecoderULE128Benchmark decodeMaxLong (), HpackDecoderULE128Benchmark decodeULE128 (ByteBuf, long), AbstractByteBufGetCharSequenceBenchmark jvmArgs (), CompositeByteBufWriteOutBenchmark sourceBuffers (int), AbstractMicrobenchmarkBase handleUnexpectedException (Throwable), HpackDecoderULE128Benchmark setup (), SlicedByteBufBenchmark tearDown (), AbstractMicrobenchmarkBase newOptionsBuilder (), HttpFragmentedRequestDecoderBenchmark releaseStepBuffers (), UnsafeByteBufBenchmark setGetLongUnsafeByteBuf (), HttpRequestDecoderUtils createContent (String), HpackDecoderBenchmark teardown (), CompositeByteBufWriteOutBenchmark writeFCBB (), UnsafeByteBufBenchmark tearDown (), HpackDecoderBenchmark getSerializedHeaders (Http2Headers, boolean), UnsafeByteBufBenchmark setGetLongByteBuffer (), SearchBenchmark ahoCorasic (), CompositeByteBufWriteOutBenchmark makeLargeChunks (int), AbstractMicrobenchmarkBase getReportDir (), SearchBenchmark indexOf (), SearchBenchmark teardown (), HpackDecoderBenchmark setup (), CompositeByteBufWriteOutBenchmark jvmArgs (), SearchBenchmark getHaystack (Random), HpackDecoderBenchmark decode (Blackhole), SlicedByteBufBenchmark writeAsciiStringSlice (), AbstractByteBufGetCharSequenceBenchmark traverse (CharSequence), HpackDecoderULE128Benchmark decodeMaxInt (), SearchBenchmark getNeedle (Random), AbstractByteBufGetCharSequenceBenchmark newBuffer (byte[], int), CompositeByteBufWriteOutBenchmark makeSmallChunks (int), AbstractMicrobenchmarkBase run (), CompositeByteBufWriteOutBenchmark teardown (), AbstractMicrobenchmarkBase removeAssertions (String[]), HpackDecoderULE128Benchmark decodeULE128UsingLong (ByteBuf, int), AbstractByteBufGetCharSequenceBenchmark getCharSequence (), SlicedByteBufBenchmark setup (), HttpFragmentedRequestDecoderBenchmark testDecodeWholeRequestInMultipleStepsMixedDelimiters (), SearchBenchmark bitap (), HpackDecoderULE128Benchmark decodeULE128 (ByteBuf, int), HpackDecoderULE128Benchmark decodeMaxIntWithLong (), AbstractByteBufGetCharSequenceBenchmark teardown (), SlicedByteBufBenchmark writeAsciiStringSliceAbstract (), AbstractByteBufGetCharSequenceBenchmark setup (), AbstractMicrobenchmarkBase getWarmupIterations (), HttpFragmentedRequestDecoderBenchmark initPipeline (), CompositeByteBufWriteOutBenchmark writeCBB (), HpackDecoderULE128Benchmark decodeMaxIntUsingLong (), HttpFragmentedRequestDecoderBenchmark stepsBuffers (ByteBufAllocator, byte[], int, boolean)]","610"
"6","netty/microbench","ebe68cd6bd2c11c63c3c3974a41ad4e7d3edee78","d6f8b970ce97234b1d793a76ff1cfd1a9451bbf4","STATEMENTS_ORDER_REARRANGEMENT","10","1","6","[HpackUtilBenchmark oldEquals (), HpackUtilBenchmark setup (), HpackUtilBenchmark newTestEncoder (), HpackUtilBenchmark newEquals (), HpackUtilBenchmark oldEquals (CharSequence, CharSequence), HpackUtilBenchmark newEquals (CharSequence, CharSequence)]","66"
"11","netty/microbench","d6f8b970ce97234b1d793a76ff1cfd1a9451bbf4","604e7c0682d55567e51a3142e18dccdb633475b3","REVERSE_IF_ELSE","3","1","3","[HpackUtilBenchmark newEquals (), HpackUtilBenchmark oldEquals (CharSequence, CharSequence), HpackUtilBenchmark newEquals (CharSequence, CharSequence)]","33"
"15","netty/microbench","604e7c0682d55567e51a3142e18dccdb633475b3","54d58060937bd7a47df1b318a5385789b8b4c7a5","REVERSE_IF_ELSE","3","1","1","[HpackUtilBenchmark newEquals (CharSequence, CharSequence)]","11"
"17","netty/microbench","54d58060937bd7a47df1b318a5385789b8b4c7a5","00353758c17dd6aaff10a20ea58e508c3edaf1f6","STATEMENTS_ORDER_REARRANGEMENT","10","1","3","[HpackUtilBenchmark newTestEncoder (), HpackUtilBenchmark oldEquals (CharSequence, CharSequence), HpackUtilBenchmark newEquals (CharSequence, CharSequence)]","33"
"18","netty/microbench","00353758c17dd6aaff10a20ea58e508c3edaf1f6","6b817a96a2f38718bad6660a4c3e44c788ecd036","FOR_TO_WHILE","1","1","2","[HpackUtilBenchmark newEquals (), HpackUtilBenchmark oldEquals (CharSequence, CharSequence)]","22"
"19","netty/microbench","6b817a96a2f38718bad6660a4c3e44c788ecd036","f552be0c7fa82deea8ccfdc8ec7a0b078f4ea1c3","PP_TO_ADD_ASSIGNMENT","6","1","1","[HpackUtilBenchmark oldEquals (CharSequence, CharSequence)]","11"
"23","netty/microbench","f552be0c7fa82deea8ccfdc8ec7a0b078f4ea1c3","3266973b371819bdc95b0f34167184f551b806df","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","1","[HpackUtilBenchmark oldEquals (CharSequence, CharSequence)]","11"
"27","netty/microbench","3266973b371819bdc95b0f34167184f551b806df","bb72c12e2e60e9d903d01e3d3708d7f102d71fc8","WHILE_TO_FOR","2","1","2","[HpackUtilBenchmark newEquals (), HpackUtilBenchmark oldEquals (CharSequence, CharSequence)]","22"
"28","netty/microbench","bb72c12e2e60e9d903d01e3d3708d7f102d71fc8","06b55f50137d1d3d1285aa696678c65465482054","VAR_DECLARATION_MERGING","12","1","1","[HpackUtilBenchmark newEquals ()]","11"
"29","netty/microbench","06b55f50137d1d3d1285aa696678c65465482054","4dd9d3891fad97cd6461fbcbad611c440fcf504e","FOR_TO_WHILE","1","1","3","[HpackUtilBenchmark oldEquals (), HpackUtilBenchmark newEquals (), HpackUtilBenchmark oldEquals (CharSequence, CharSequence)]","33"
"37","netty/microbench","4dd9d3891fad97cd6461fbcbad611c440fcf504e","f5be48e331d2c8f7176c987547e290cd55ce08cf","VAR_DECLARATION_MERGING","12","1","1","[HpackUtilBenchmark oldEquals ()]","11"
"44","netty/microbench","f5be48e331d2c8f7176c987547e290cd55ce08cf","cc59ed6f684892fadb046c4a50160b49df606c83","STATEMENTS_ORDER_REARRANGEMENT","10","1","3","[HpackUtilBenchmark oldEquals (), HpackUtilBenchmark newEquals (), HpackUtilBenchmark oldEquals (CharSequence, CharSequence)]","33"
"54","netty/microbench","cc59ed6f684892fadb046c4a50160b49df606c83","651ffebf073349c44c44e8ff9b796b238caf0d9a","WHILE_TO_FOR","2","1","3","[HpackUtilBenchmark oldEquals (), HpackUtilBenchmark newEquals (), HpackUtilBenchmark oldEquals (CharSequence, CharSequence)]","33"
"60","netty/microbench","651ffebf073349c44c44e8ff9b796b238caf0d9a","e1aa526b566a38eaf8255b502cae28aab3dbca16","STATEMENTS_ORDER_REARRANGEMENT","10","1","4","[HpackUtilBenchmark oldEquals (), HpackUtilBenchmark newEquals (), HpackUtilBenchmark oldEquals (CharSequence, CharSequence), HpackUtilBenchmark newEquals (CharSequence, CharSequence)]","44"
"62","netty/microbench","e1aa526b566a38eaf8255b502cae28aab3dbca16","ae4aab86c3a05ee577637aea641b599d73d23545","LOCAL_VAR_RENAMING","0","1","2","[HpackUtilBenchmark newTestEncoder (), HpackUtilBenchmark newEquals ()]","22"
"65","netty/microbench","ae4aab86c3a05ee577637aea641b599d73d23545","d01c2657a13afa110178c8290372bc08d286adc6","SWITCH_EQUAL_SIDES","14","1","1","[HpackUtilBenchmark oldEquals (CharSequence, CharSequence)]","11"
"0","netty/resolver-dns-classes-macos","d01c2657a13afa110178c8290372bc08d286adc6","3faf3687ea500417d1d4632c4ebfa62c2a50c113","IF_DIVIDING","9","1","17","[MacOSDnsServerAddressStreamProvider resolvers (), DnsResolver port (), MacOSDnsServerAddressStreamProvider nameServerAddressStream (String), MacOSDnsServerAddressStreamProvider compare (DnsResolver, DnsResolver), MacOSDnsServerAddressStreamProvider loadNativeLibrary (), DnsResolver nameservers (), DnsResolver options (), MacOSDnsServerAddressStreamProvider unavailabilityCause (), MacOSDnsServerAddressStreamProvider MacOSDnsServerAddressStreamProvider (), MacOSDnsServerAddressStreamProvider retrieveCurrentMappings (), MacOSDnsServerAddressStreamProvider isAvailable (), DnsResolver DnsResolver (String, byte[][], int, String[], String, int, int), DnsResolver domain (), DnsResolver searchOrder (), DnsResolver searches (), MacOSDnsServerAddressStreamProvider ensureAvailability (), DnsResolver timeout ()]","34"
"4","netty/resolver-dns-classes-macos","3faf3687ea500417d1d4632c4ebfa62c2a50c113","3a7f7e5f62e4583294c8bbf445adea7a6b50ba44","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","2","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String), MacOSDnsServerAddressStreamProvider retrieveCurrentMappings ()]","4"
"6","netty/resolver-dns-classes-macos","3a7f7e5f62e4583294c8bbf445adea7a6b50ba44","2f8c4b50267f0e38742d66084a2cd6b1e33e680f","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String)]","2"
"7","netty/resolver-dns-classes-macos","2f8c4b50267f0e38742d66084a2cd6b1e33e680f","acc8b25e46c135fe7368d5b37caa4b8903efafb4","SWITCH_EQUAL_SIDES","14","1","1","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String)]","2"
"8","netty/resolver-dns-classes-macos","acc8b25e46c135fe7368d5b37caa4b8903efafb4","625865592d637e7ddb3f89b3ca4ec9693b3040f7","REVERSE_IF_ELSE","3","1","4","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String), MacOSDnsServerAddressStreamProvider retrieveCurrentMappings (), MacOSDnsServerAddressStreamProvider loadNativeLibrary (), MacOSDnsServerAddressStreamProvider ensureAvailability ()]","8"
"10","netty/resolver-dns-classes-macos","625865592d637e7ddb3f89b3ca4ec9693b3040f7","bece0b6572f608915c35459f459aa8e59ac334c7","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String)]","2"
"11","netty/resolver-dns-classes-macos","bece0b6572f608915c35459f459aa8e59ac334c7","65089c3419d902e9ff7c9713494f2054e5013afa","FOR_TO_WHILE","1","1","1","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String)]","2"
"12","netty/resolver-dns-classes-macos","65089c3419d902e9ff7c9713494f2054e5013afa","7ce6e77fd8ae8f9c1aa932daa479c621dd5fcb17","FOR_TO_WHILE","1","1","1","[MacOSDnsServerAddressStreamProvider retrieveCurrentMappings ()]","2"
"13","netty/resolver-dns-classes-macos","7ce6e77fd8ae8f9c1aa932daa479c621dd5fcb17","d1942053492e8da203411bcc42c66423e2bdbef9","LOOP_IF_CONTINUE_TO_ELSE","11","1","1","[MacOSDnsServerAddressStreamProvider retrieveCurrentMappings ()]","2"
"19","netty/resolver-dns-classes-macos","d1942053492e8da203411bcc42c66423e2bdbef9","6cd83ddf72a286ee18b87b58b7c2d50cfd0b23c4","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String)]","2"
"20","netty/resolver-dns-classes-macos","6cd83ddf72a286ee18b87b58b7c2d50cfd0b23c4","60905b6188b4159d2535f9049c4d9a9b148e2ef0","STATEMENTS_ORDER_REARRANGEMENT","10","1","3","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String), MacOSDnsServerAddressStreamProvider retrieveCurrentMappings (), MacOSDnsServerAddressStreamProvider loadNativeLibrary ()]","6"
"21","netty/resolver-dns-classes-macos","60905b6188b4159d2535f9049c4d9a9b148e2ef0","94c014b302de283b64af0a82c6b763dd27c5aedd","LOCAL_VAR_RENAMING","0","1","1","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String)]","2"
"22","netty/resolver-dns-classes-macos","94c014b302de283b64af0a82c6b763dd27c5aedd","30c4810f079470c73e3bf5064a3797327a27d527","REVERSE_IF_ELSE","3","1","2","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String), MacOSDnsServerAddressStreamProvider retrieveCurrentMappings ()]","4"
"25","netty/resolver-dns-classes-macos","30c4810f079470c73e3bf5064a3797327a27d527","502343b1bd07cb88bec5122d702c947dabc197c4","WHILE_TO_FOR","2","1","1","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String)]","2"
"28","netty/resolver-dns-classes-macos","502343b1bd07cb88bec5122d702c947dabc197c4","08dc294285cf08095c72c3061a5d98e7afbbae9b","PP_TO_ADD_ASSIGNMENT","6","1","1","[MacOSDnsServerAddressStreamProvider retrieveCurrentMappings ()]","2"
"30","netty/resolver-dns-classes-macos","08dc294285cf08095c72c3061a5d98e7afbbae9b","1947e2ac220f171bf8f66b945c99fc185246e745","SWITCH_EQUAL_SIDES","14","1","2","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String), MacOSDnsServerAddressStreamProvider retrieveCurrentMappings ()]","4"
"33","netty/resolver-dns-classes-macos","1947e2ac220f171bf8f66b945c99fc185246e745","3b5a651974ffdcc9b739f1a721ea8c3bd0466d75","SWITCH_EQUAL_SIDES","14","1","1","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String)]","2"
"34","netty/resolver-dns-classes-macos","3b5a651974ffdcc9b739f1a721ea8c3bd0466d75","1378fa323180489b1f2fb3314d539a1a70a3efb7","LOCAL_VAR_RENAMING","0","1","2","[MacOSDnsServerAddressStreamProvider retrieveCurrentMappings (), MacOSDnsServerAddressStreamProvider compare (DnsResolver, DnsResolver)]","4"
"35","netty/resolver-dns-classes-macos","1378fa323180489b1f2fb3314d539a1a70a3efb7","98d6b4f43fbca17be234430d0a03fa47d2b5d6e9","LOCAL_VAR_RENAMING","0","1","1","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String)]","2"
"36","netty/resolver-dns-classes-macos","98d6b4f43fbca17be234430d0a03fa47d2b5d6e9","18d36cb2360e5d1829e81860d3d5a237a8f9b8b7","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","1","[MacOSDnsServerAddressStreamProvider retrieveCurrentMappings ()]","2"
"37","netty/resolver-dns-classes-macos","18d36cb2360e5d1829e81860d3d5a237a8f9b8b7","81140788e3b0ce2b205421df7e5aff1358e46ddb","INFIX_EXPRESSION_DIVIDING","8","1","1","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String)]","2"
"38","netty/resolver-dns-classes-macos","81140788e3b0ce2b205421df7e5aff1358e46ddb","991b18584dc36c4c0a25fb0db9001cda8a54c4b3","INFIX_EXPRESSION_DIVIDING","8","1","1","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String)]","2"
"43","netty/resolver-dns-classes-macos","991b18584dc36c4c0a25fb0db9001cda8a54c4b3","5a8666c2dc0cc7429ab4bfa25d779bb21cc80f61","LOCAL_VAR_RENAMING","0","1","2","[MacOSDnsServerAddressStreamProvider retrieveCurrentMappings (), MacOSDnsServerAddressStreamProvider loadNativeLibrary ()]","4"
"47","netty/resolver-dns-classes-macos","5a8666c2dc0cc7429ab4bfa25d779bb21cc80f61","5ae92b70119cf4ff56c04972fa155a05c974145a","SWITCH_EQUAL_SIDES","14","1","2","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String), MacOSDnsServerAddressStreamProvider retrieveCurrentMappings ()]","4"
"48","netty/resolver-dns-classes-macos","5ae92b70119cf4ff56c04972fa155a05c974145a","4388dde80d09ced95948d43109599cb6b3cde6fd","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[MacOSDnsServerAddressStreamProvider retrieveCurrentMappings ()]","2"
"50","netty/resolver-dns-classes-macos","4388dde80d09ced95948d43109599cb6b3cde6fd","307cc16ed30ad7b7c89d4e5a9c5bf5d2fb10b921","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","2","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String), MacOSDnsServerAddressStreamProvider retrieveCurrentMappings ()]","4"
"54","netty/resolver-dns-classes-macos","307cc16ed30ad7b7c89d4e5a9c5bf5d2fb10b921","6db68139803e7bdf5ac1326dc4b360643c1b02bb","REVERSE_IF_ELSE","3","1","1","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String)]","2"
"55","netty/resolver-dns-classes-macos","6db68139803e7bdf5ac1326dc4b360643c1b02bb","6223fcd37ea046ad06cb01cef539cec4f0363bec","FOR_TO_WHILE","1","1","1","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String)]","2"
"60","netty/resolver-dns-classes-macos","6223fcd37ea046ad06cb01cef539cec4f0363bec","e519072b434f27da9ab12892fbc5a83ce67d9f4e","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","2","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String), MacOSDnsServerAddressStreamProvider retrieveCurrentMappings ()]","4"
"65","netty/resolver-dns-classes-macos","e519072b434f27da9ab12892fbc5a83ce67d9f4e","01e38aed32bd337c1e0003827da64016ec9dc39a","REVERSE_IF_ELSE","3","1","4","[MacOSDnsServerAddressStreamProvider nameServerAddressStream (String), MacOSDnsServerAddressStreamProvider retrieveCurrentMappings (), MacOSDnsServerAddressStreamProvider loadNativeLibrary (), MacOSDnsServerAddressStreamProvider ensureAvailability ()]","8"
"0","netty/resolver-dns","01e38aed32bd337c1e0003827da64016ec9dc39a","4d60b47505bc37f5049feeda61dffe9678b2eb73","INFIX_EXPRESSION_DIVIDING","8","1","173","[DnsNameResolver run (), Builder setNdots (int), DatagramDnsQueryContext DatagramDnsQueryContext (Channel, Future<? extends Channel>, InetSocketAddress, DnsQueryContextManager, int, boolean, long, DnsQuestion, DnsRecord[], Promise<AddressedEnvelope<DnsResponse,InetSocketAddress>>, Bootstrap, boolean), DnsNameResolverBuilder queryServerAddressStream (DnsServerAddressStream), DnsNameResolver DnsNameResolver (EventLoop, ChannelFactory<? extends DatagramChannel>, DnsCache, DnsCache, DnsQueryLifecycleObserverFactory, long, ResolvedAddressTypes, boolean, int, boolean, int, boolean, HostsFileEntriesResolver, DnsServerAddressStreamProvider, String[], int, boolean), DnsNameResolverBuilder maxQueriesPerResolve (int), DnsNameResolverBuilder resolveCache (DnsCache), DnsNameResolver loopbackAddress (), UnixResolverOptions UnixResolverOptions (int, int, int), DnsNameResolverBuilder getOrNewAuthoritativeDnsServerCache (), DefaultDnsCnameCache DefaultDnsCnameCache (), DnsNameResolver queryTimeoutMillis (), DnsNameResolverBuilder copy (), DnsNameResolver cnameCache (), UnixResolverOptions newBuilder (), UnixResolverOptions timeout (), DnsNameResolverBuilder cnameCache (DnsCnameCache), DefaultDnsCnameCache clear (String), DnsNameResolverBuilder resolvedAddressTypes (ResolvedAddressTypes), DnsQueryIdRange maxUsableIds (), DnsNameResolver doResolve (String, DnsRecord[], Promise<InetAddress>, DnsCache), DnsNameResolver nextNameServerAddress (), DnsNameResolver isDecodeIdn (), DnsNameResolver trySuccess (Promise<T>, T), DnsNameResolverBuilder newQueryServerAddressStream (DnsServerAddressStreamProvider), DnsNameResolver resolveAll (DnsQuestion, Iterable<DnsRecord>, Promise<List<DnsRecord>>), DnsNameResolver validateAdditional (DnsRecord, boolean), DatagramDnsQueryContext protocol (), AuthoritativeDnsServerCacheAdapter get (String), DnsNameResolverBuilder socketChannelFactory (ChannelFactory<? extends SocketChannel>), DnsNameResolver isOptResourceEnabled (), DatagramDnsQueryContext newQuery (int, InetSocketAddress), DnsNameResolver doResolveCached (String, DnsRecord[], Promise<InetAddress>, DnsCache), DnsNameResolver resolveRecordTypes (), DnsNameResolver dnsQueryLifecycleObserverFactory (), Builder build (), DnsNameResolverBuilder ndots (int), DnsNameResolverBuilder channelFactory (), DnsNameResolverBuilder nameServerProvider (DnsServerAddressStreamProvider), DefaultDnsCnameCache DefaultDnsCnameCache (int, int), DefaultDnsCnameCache minTtl (), DnsNameResolverBuilder channelType (Class<? extends DatagramChannel>), DnsNameResolver supportsAAAARecords (), Builder setTimeout (int), DnsNameResolver isTransportOrTimeoutError (Throwable), DnsNameResolver query (DnsQuestion, Iterable<DnsRecord>), DnsNameResolverBuilder build (), Builder Builder (), DnsQueryIdRange nextId (), DnsNameResolverBuilder searchDomains (Iterable<String>), DnsNameResolver operationComplete (Future<List<InetAddress>>), DnsNameResolver resolve (String, Iterable<DnsRecord>, Promise<InetAddress>), DnsNameResolver doResolveAllUncached (String, DnsRecord[], Promise<?>, Promise<List<InetAddress>>, DnsCache, boolean), DnsNameResolverBuilder negativeTtl (int), DnsQueryContextManager toIPv4Address (Inet6Address), DnsNameResolver query (DnsQuestion, Promise<AddressedEnvelope<? extends DnsResponse,InetSocketAddress>>), DnsNameResolver query (InetSocketAddress, DnsQuestion, Promise<AddressedEnvelope<? extends DnsResponse,InetSocketAddress>>), DnsQueryIdRange DnsQueryIdRange (int, int), DnsNameResolverBuilder channelFactory (ChannelFactory<? extends DatagramChannel>), DnsNameResolverBuilder ttl (int, int), DnsNameResolverBuilder dnsQueryLifecycleObserverFactory (DnsQueryLifecycleObserverFactory), DnsNameResolver isLocalWindowsHost (String), DnsNameResolver close (), DnsNameResolver anyInterfaceSupportsIpV6 (), DnsNameResolver maxQueriesPerResolve (), DnsResponseHandler channelActive (ChannelHandlerContext), DnsQueryContextMap add (DnsQueryContext), DnsNameResolver newNameServerAddressStream (String), DnsNameResolverBuilder DnsNameResolverBuilder (), DnsNameResolver operationComplete (ChannelFuture), DnsNameResolver query (InetSocketAddress, DnsQuestion, Iterable<DnsRecord>), DnsQueryIdSpace nextId (), DnsNameResolver resolveHostsFileEntry (String), UnixResolverOptions attempts (), DnsQueryContextMap get (int), DnsNameResolverBuilder consolidateCacheSize (int), DnsQueryIdSpace usableIds (), DnsNameResolverBuilder socketChannelType (Class<? extends SocketChannel>, boolean), DnsNameResolver doResolveAll (String, DnsRecord[], Promise<List<InetAddress>>, DnsCache), DnsNameResolver doResolveAllUncached0 (String, DnsRecord[], Promise<?>, Promise<List<InetAddress>>, DnsCache, boolean), DnsQueryContextMap remove (int), Builder setAttempts (int), AuthoritativeDnsServerCacheAdapter clear (), DnsNameResolver resolveAll (String, Iterable<DnsRecord>), DnsNameResolver doResolveUncached (String, DnsRecord[], Promise<InetAddress>, DnsCache, boolean), AuthoritativeDnsServerCacheAdapter AuthoritativeDnsServerCacheAdapter (DnsCache), DnsNameResolver toArray (Iterable<DnsRecord>, boolean), DnsQueryIdSpace maxUsableIds (), DefaultDnsCnameCache clear (), DnsNameResolverBuilder queryServerAddressStream (), DnsNameResolver tryFailure (Promise<?>, Throwable), DnsNameResolver newRedirectDnsServerStream (String, List<InetSocketAddress>), DnsResponseHandler channelRead (ChannelHandlerContext, Object), DnsNameResolverBuilder getOrNewCnameCache (), DnsNameResolver resolvedAddressTypes (), DnsNameResolver doResolve (String, Promise<InetAddress>), DnsNameResolver searchDomains (), DnsNameResolverBuilder hostsFileEntriesResolver (HostsFileEntriesResolver), DnsNameResolver preferredAddressType (ResolvedAddressTypes), DnsNameResolverBuilder maxPayloadSize (int), DnsQueryIdSpace pushId (int), DnsQueryContextManager getOrCreateContextMap (InetSocketAddress), DnsResponseHandler exceptionCaught (ChannelHandlerContext, Throwable), DnsNameResolver doResolveAll (String, Promise<List<InetAddress>>), DnsNameResolverBuilder computeResolvedAddressTypes (InternetProtocolFamily), DefaultDnsCnameCache equals (String, String), DnsNameResolver newRedirectServerAddress (InetAddress), DefaultDnsCnameCache get (String), DnsNameResolver isTimeoutError (Throwable), DnsNameResolver hasEntries (List<? extends DnsCacheEntry>), DnsQueryIdRange pushId (int), DnsNameResolverBuilder recursionDesired (boolean), DnsNameResolver authoritativeDnsServerCache (), DnsNameResolver query (DnsQuestion), DnsNameResolverBuilder queryTimeoutMillis (long), DnsNameResolver decodeResponse (ChannelHandlerContext, DatagramPacket), UnixResolverOptions toString (), DnsQueryContextManager getContextMap (InetSocketAddress), DnsNameResolver supportsARecords (), DnsNameResolver isSharable (), DnsNameResolver isRecursionDesired (), DnsNameResolver resolveCache (), DnsNameResolverBuilder nameServerProvider (), DefaultDnsCnameCache cache (String, String, long, EventLoop), DnsNameResolverBuilder getOrNewCache (), DnsNameResolverBuilder DnsNameResolverBuilder (EventLoop), DnsNameResolver resolveAll (DnsQuestion), DnsNameResolver ndots (), DnsNameResolver hostname (String), DnsQueryIdSpace DnsQueryIdSpace (), DnsQueryContextManager add (InetSocketAddress, DnsQueryContext), DnsNameResolverBuilder authoritativeDnsServerCache (DnsCache), DnsNameResolverBuilder traceEnabled (boolean), DnsNameResolver initChannel (DatagramChannel), DnsNameResolver query (InetSocketAddress, DnsQuestion, Iterable<DnsRecord>, Promise<AddressedEnvelope<? extends DnsResponse,InetSocketAddress>>), DnsResponseHandler DnsResponseHandler (Promise<Channel>), DnsNameResolver resolveAll (DnsQuestion, DnsRecord[], Promise<List<DnsRecord>>), DnsNameResolverBuilder localAddress (SocketAddress), DnsNameResolverBuilder eventLoop (EventLoop), DnsQueryIdRange usableIds (), DnsNameResolverBuilder socketChannelType (Class<? extends SocketChannel>), DnsNameResolverBuilder authoritativeDnsServerCache (AuthoritativeDnsServerCache), DnsNameResolver cast (Promise<?>), AuthoritativeDnsServerCacheAdapter cache (String, InetSocketAddress, long, EventLoop), DnsNameResolver doResolveAllCached (String, DnsRecord[], Promise<List<InetAddress>>, DnsCache, String[], int, InternetProtocolFamily[]), DnsNameResolver query (InetSocketAddress, DnsQuestion), DnsNameResolver getSearchDomainsHack (), DnsNameResolverBuilder decodeIdn (boolean), DnsNameResolver resolve (String, Iterable<DnsRecord>), DnsNameResolver maxPayloadSize (), DnsNameResolver resolveAll (String, Iterable<DnsRecord>, Promise<List<InetAddress>>), DnsNameResolver resolveNow (String, DnsRecord[], Promise<?>, Promise<List<InetAddress>>, DnsCache, boolean), DnsNameResolverBuilder optResourceEnabled (boolean), DnsNameResolver queryDnsServerAddressStream (), DnsQueryIdSpace newBucket (int), UnixResolverOptions ndots (), DnsNameResolver resolvedInternetProtocolFamiliesUnsafe (), DnsNameResolver preferredAddressType (), DnsNameResolverBuilder socketChannelFactory (ChannelFactory<? extends SocketChannel>, boolean), DefaultDnsCnameCache shouldReplaceAll (String), DefaultDnsCnameCache maxTtl (), DnsNameResolver executor (), AuthoritativeDnsServerCacheAdapter clear (String), DnsNameResolverBuilder completeOncePreferredResolved (boolean), DnsQueryContextManager get (InetSocketAddress, int), DnsNameResolver hostsFileEntriesResolver (), DnsNameResolver DnsNameResolver (EventLoop, ChannelFactory<? extends DatagramChannel>, ChannelFactory<? extends SocketChannel>, boolean, DnsCache, DnsCnameCache, AuthoritativeDnsServerCache, SocketAddress, DnsQueryLifecycleObserverFactory, long, ResolvedAddressTypes, boolean, int, boolean, int, boolean, HostsFileEntriesResolver, DnsServerAddressStreamProvider, DnsServerAddressStream, String[], int, boolean, boolean, int), DnsNameResolver DnsNameResolver (EventLoop, ChannelFactory<? extends DatagramChannel>, DnsCache, AuthoritativeDnsServerCache, DnsQueryLifecycleObserverFactory, long, ResolvedAddressTypes, boolean, int, boolean, int, boolean, HostsFileEntriesResolver, DnsServerAddressStreamProvider, String[], int, boolean), DnsNameResolver doQuery (Channel, Future<? extends Channel>, InetSocketAddress, DnsQuestion, DnsQueryLifecycleObserver, DnsRecord[], boolean, Promise<AddressedEnvelope<? extends DnsResponse,InetSocketAddress>>), DnsNameResolver resolveAll (DnsQuestion, Iterable<DnsRecord>), DnsNameResolver resolveHostsFileEntries (String), DnsQueryContextManager remove (InetSocketAddress, int), DnsQueryContextManager toCompactAddress (Inet4Address)]","1384"
"10","netty/resolver-dns","4d60b47505bc37f5049feeda61dffe9678b2eb73","55d8cc4cc6cabccf58277a1c98cd0fabba9eed50","SWITCH_EQUAL_SIDES","14","1","1","[AuthoritativeDnsServerCacheAdapter get (String)]","8"
"12","netty/resolver-dns","55d8cc4cc6cabccf58277a1c98cd0fabba9eed50","5089de6ab361360016dcad4e78763f94744e069c","LOCAL_VAR_RENAMING","0","1","5","[DnsErrorCauseException DnsErrorCauseException (String, DnsResponseCode, boolean), DnsErrorCauseException getCode (), DnsErrorCauseException DnsErrorCauseException (String, DnsResponseCode), DnsErrorCauseException fillInStackTrace (), DnsErrorCauseException newStatic (String, DnsResponseCode, Class<?>, String)]","45"
"18","netty/resolver-dns","5089de6ab361360016dcad4e78763f94744e069c","55d13a2207bb8815151c35fd9e1e19edaf06678a","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DnsErrorCauseException DnsErrorCauseException (String, DnsResponseCode)]","9"
"24","netty/resolver-dns","55d13a2207bb8815151c35fd9e1e19edaf06678a","bb00fc55b52c39731bf8dd2d6adcad8cce5920a2","LOCAL_VAR_RENAMING","0","1","2","[DnsErrorCauseException DnsErrorCauseException (String, DnsResponseCode, boolean), DnsErrorCauseException newStatic (String, DnsResponseCode, Class<?>, String)]","18"
"26","netty/resolver-dns","bb00fc55b52c39731bf8dd2d6adcad8cce5920a2","c5ba820c7d9322a6d1dc5e9f72307ea5c25d9308","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[DnsErrorCauseException newStatic (String, DnsResponseCode, Class<?>, String)]","9"
"29","netty/resolver-dns","c5ba820c7d9322a6d1dc5e9f72307ea5c25d9308","24f889edeee529f0e9c4a8e579dc70a0b280c4cb","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[DnsErrorCauseException newStatic (String, DnsResponseCode, Class<?>, String)]","9"
"30","netty/resolver-dns","24f889edeee529f0e9c4a8e579dc70a0b280c4cb","658bc08bed9f209f4d84e4718a8b2f58acccf873","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[DnsErrorCauseException newStatic (String, DnsResponseCode, Class<?>, String)]","9"
"33","netty/resolver-dns","658bc08bed9f209f4d84e4718a8b2f58acccf873","29e34612fe6c08121ec6944159a26335eab1e692","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[DnsErrorCauseException newStatic (String, DnsResponseCode, Class<?>, String)]","9"
"41","netty/resolver-dns","29e34612fe6c08121ec6944159a26335eab1e692","06b6cacce99b97c9a4f37603eaaa8d3cc50a81a3","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DnsErrorCauseException DnsErrorCauseException (String, DnsResponseCode, boolean)]","9"
"46","netty/resolver-dns","06b6cacce99b97c9a4f37603eaaa8d3cc50a81a3","13c44314f27a884d9ab6a376448889e660b7dead","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[DnsErrorCauseException newStatic (String, DnsResponseCode, Class<?>, String)]","9"
"52","netty/resolver-dns","13c44314f27a884d9ab6a376448889e660b7dead","76b866213a40841967ee8bdc4d07879a87abe8d9","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DnsErrorCauseException DnsErrorCauseException (String, DnsResponseCode, boolean)]","9"
"54","netty/resolver-dns","76b866213a40841967ee8bdc4d07879a87abe8d9","b19f70198266489c92cf84480e1f8a191d5f5404","LOCAL_VAR_RENAMING","0","1","2","[DnsErrorCauseException DnsErrorCauseException (String, DnsResponseCode, boolean), DnsErrorCauseException newStatic (String, DnsResponseCode, Class<?>, String)]","18"
"57","netty/resolver-dns","b19f70198266489c92cf84480e1f8a191d5f5404","0ce6b90064bf5f60fe2ed531023bc7b434b59623","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[DnsErrorCauseException DnsErrorCauseException (String, DnsResponseCode, boolean), DnsErrorCauseException DnsErrorCauseException (String, DnsResponseCode)]","18"
"0","netty/resolver","0ce6b90064bf5f60fe2ed531023bc7b434b59623","bcd22edcf83612ec535f347a0d4dea9377c110c3","FOR_TO_WHILE","1","1","44","[RoundRobinInetAddressResolver doResolve (String, Promise<InetAddress>), AddressResolverGroup close (), Parser parse (Reader), ParserImpl parseSilently (), Parser parse (), ParserImpl parse (File, Charset), RoundRobinInetAddressResolver doResolveAll (String, Promise<List<InetAddress>>), HostsFileParser parse (File, Charset), ParserImpl ParserImpl (), AddressResolverGroup AddressResolverGroup (), Parser ipv6Entries (), ParserImpl parse (Reader), NoopAddressResolverGroup NoopAddressResolverGroup (), Parser ipv4Entries (), RoundRobinInetAddressResolver close (), Parser parseSilently (), HostsFileParser parse (File), HostsFileParser parse (), RoundRobinInetAddressResolver RoundRobinInetAddressResolver (EventExecutor, NameResolver<InetAddress>), Parser parse (Charset), HostsFileParser HostsFileParser (), InetNameResolver InetNameResolver (EventExecutor), AddressResolverGroup newResolver (EventExecutor), HostsFileParser parse (Reader), ParserImpl parseSilently (Charset), AddressResolverGroup getResolver (EventExecutor), ParserImpl parse (), AddressResolverGroup operationComplete (Future<Object>), HostsFileParser parseSilently (), Parser HostsFileEntriesProvider (Map<String,List<InetAddress>>, Map<String,List<InetAddress>>), ParserImpl parse (Charset), NoopAddressResolverGroup newResolver (EventExecutor), ParserImpl parseSilently (File, Charset), Parser parseSilently (Charset), RoundRobinInetAddressResolver operationComplete (Future<List<InetAddress>>), HostsFileParser parseSilently (Charset), RoundRobinInetAddressResolver randomIndex (int), Parser parse (File, Charset), Parser parseSilently (File, Charset), InetNameResolver asAddressResolver (), HostsFileParser hostsFileEntries (HostsFileEntriesProvider), ParserImpl locateHostsFile (), HostsFileParser toMapWithSingleValue (Map<String,List<InetAddress>>), Parser parser ()]","264"
"2","netty/resolver","bcd22edcf83612ec535f347a0d4dea9377c110c3","8fe3dc6d11bdaf6909086d45a3d8b0ce465fefab","CASE_TO_IF_ELSE","17","1","9","[DefaultHostsFileEntriesResolver DefaultHostsFileEntriesResolver (HostsFileEntriesProvider.Parser, long), DefaultHostsFileEntriesResolver firstAddress (List<InetAddress>), DefaultHostsFileEntriesResolver address (String, ResolvedAddressTypes), DefaultHostsFileEntriesResolver normalize (String), DefaultHostsFileEntriesResolver parseEntries (HostsFileEntriesProvider.Parser), DefaultHostsFileEntriesResolver allAddresses (List<InetAddress>, List<InetAddress>), DefaultHostsFileEntriesResolver ensureHostsFileEntriesAreFresh (), DefaultHostsFileEntriesResolver DefaultHostsFileEntriesResolver (), DefaultHostsFileEntriesResolver addresses (String, ResolvedAddressTypes)]","63"
"4","netty/resolver","8fe3dc6d11bdaf6909086d45a3d8b0ce465fefab","2e71bc64d210626a3e388abd9aec795444b2dca1","LOCAL_VAR_RENAMING","0","1","7","[InetSocketAddressResolver doResolve (InetSocketAddress, Promise<InetSocketAddress>), InetSocketAddressResolver close (), InetSocketAddressResolver operationComplete (Future<List<InetAddress>>), InetSocketAddressResolver InetSocketAddressResolver (EventExecutor, NameResolver<InetAddress>), InetSocketAddressResolver doResolveAll (InetSocketAddress, Promise<List<InetSocketAddress>>), InetSocketAddressResolver operationComplete (Future<InetAddress>), InetSocketAddressResolver doIsResolved (InetSocketAddress)]","56"
"5","netty/resolver","2e71bc64d210626a3e388abd9aec795444b2dca1","05354597727fca126bee639e5dd2337b60deb47d","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[InetSocketAddressResolver InetSocketAddressResolver (EventExecutor, NameResolver<InetAddress>)]","8"
"7","netty/resolver","05354597727fca126bee639e5dd2337b60deb47d","65915257bccd01c245b564f9aa6827fbf7983282","LOCAL_VAR_RENAMING","0","1","4","[InetSocketAddressResolver doResolve (InetSocketAddress, Promise<InetSocketAddress>), InetSocketAddressResolver operationComplete (Future<List<InetAddress>>), InetSocketAddressResolver doResolveAll (InetSocketAddress, Promise<List<InetSocketAddress>>), InetSocketAddressResolver operationComplete (Future<InetAddress>)]","32"
"11","netty/resolver","65915257bccd01c245b564f9aa6827fbf7983282","5b3c28d44442ff596c48df8b7dba4235db7d86f2","LOCAL_VAR_RENAMING","0","1","5","[InetSocketAddressResolver doResolve (InetSocketAddress, Promise<InetSocketAddress>), InetSocketAddressResolver close (), InetSocketAddressResolver operationComplete (Future<List<InetAddress>>), InetSocketAddressResolver InetSocketAddressResolver (EventExecutor, NameResolver<InetAddress>), InetSocketAddressResolver doResolveAll (InetSocketAddress, Promise<List<InetSocketAddress>>)]","40"
"13","netty/resolver","5b3c28d44442ff596c48df8b7dba4235db7d86f2","d9b87ec78c4dbe27f1a581d8e91ac894f4998e75","LOCAL_VAR_RENAMING","0","1","3","[InetSocketAddressResolver doResolve (InetSocketAddress, Promise<InetSocketAddress>), InetSocketAddressResolver InetSocketAddressResolver (EventExecutor, NameResolver<InetAddress>), InetSocketAddressResolver operationComplete (Future<InetAddress>)]","24"
"17","netty/resolver","d9b87ec78c4dbe27f1a581d8e91ac894f4998e75","748a285744373e52beb00d9611210f32b7fdb06c","LOCAL_VAR_RENAMING","0","1","3","[InetSocketAddressResolver operationComplete (Future<List<InetAddress>>), InetSocketAddressResolver doResolveAll (InetSocketAddress, Promise<List<InetSocketAddress>>), InetSocketAddressResolver doIsResolved (InetSocketAddress)]","24"
"26","netty/resolver","748a285744373e52beb00d9611210f32b7fdb06c","9bce66105bafaa5cb9b0813b5f841716009ee422","REVERSE_IF_ELSE","3","1","4","[InetSocketAddressResolver doResolve (InetSocketAddress, Promise<InetSocketAddress>), InetSocketAddressResolver operationComplete (Future<List<InetAddress>>), InetSocketAddressResolver doResolveAll (InetSocketAddress, Promise<List<InetSocketAddress>>), InetSocketAddressResolver operationComplete (Future<InetAddress>)]","32"
"30","netty/resolver","9bce66105bafaa5cb9b0813b5f841716009ee422","79ec3596d5f36653a92fe001d7c4ce5e3e5ba54f","REVERSE_IF_ELSE","3","1","2","[InetSocketAddressResolver operationComplete (Future<List<InetAddress>>), InetSocketAddressResolver doResolveAll (InetSocketAddress, Promise<List<InetSocketAddress>>)]","16"
"36","netty/resolver","79ec3596d5f36653a92fe001d7c4ce5e3e5ba54f","c3f8f1e949676ec165260dbd9728dbfe5d10038b","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[InetSocketAddressResolver InetSocketAddressResolver (EventExecutor, NameResolver<InetAddress>)]","8"
"39","netty/resolver","c3f8f1e949676ec165260dbd9728dbfe5d10038b","dd8912243ccc16816042a1842f8c42f9e13c6e6d","REVERSE_IF_ELSE","3","1","2","[InetSocketAddressResolver operationComplete (Future<List<InetAddress>>), InetSocketAddressResolver doResolveAll (InetSocketAddress, Promise<List<InetSocketAddress>>)]","16"
"40","netty/resolver","dd8912243ccc16816042a1842f8c42f9e13c6e6d","c68a804a2d35e11748a16b9107c7b5ad8434c934","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[InetSocketAddressResolver InetSocketAddressResolver (EventExecutor, NameResolver<InetAddress>)]","8"
"54","netty/resolver","c68a804a2d35e11748a16b9107c7b5ad8434c934","760b163d36d23cdb34ca2b93be501f5b207f861c","REVERSE_IF_ELSE","3","1","2","[InetSocketAddressResolver operationComplete (Future<List<InetAddress>>), InetSocketAddressResolver doResolveAll (InetSocketAddress, Promise<List<InetSocketAddress>>)]","16"
"59","netty/resolver","760b163d36d23cdb34ca2b93be501f5b207f861c","74af2231243e3c263dd1fbac91945b8ece55e53d","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[InetSocketAddressResolver InetSocketAddressResolver (EventExecutor, NameResolver<InetAddress>)]","8"
"63","netty/resolver","74af2231243e3c263dd1fbac91945b8ece55e53d","05f6d32c4d8046b1b2c3ce02a6daabe3c8a5c0c4","REVERSE_IF_ELSE","3","1","2","[InetSocketAddressResolver operationComplete (Future<List<InetAddress>>), InetSocketAddressResolver doResolveAll (InetSocketAddress, Promise<List<InetSocketAddress>>)]","16"
"0","netty/testsuite-autobahn","05f6d32c4d8046b1b2c3ce02a6daabe3c8a5c0c4","63a9b46fc21ab0eb09c1c8963aa8dc6a68a0d68f","SWITCH_STRING_EQUAL","15","1","11","[AutobahnServer AutobahnServer (int), AutobahnServerHandler sendHttpResponse (ChannelHandlerContext, HttpRequest, FullHttpResponse), AutobahnServerHandler handleHttpRequest (ChannelHandlerContext, HttpRequest), AutobahnServerHandler getWebSocketLocation (HttpRequest), AutobahnServerInitializer initChannel (SocketChannel), AutobahnServer main (String[]), AutobahnServer run (), AutobahnServerHandler channelReadComplete (ChannelHandlerContext), AutobahnServerHandler handleWebSocketFrame (ChannelHandlerContext, WebSocketFrame), AutobahnServerHandler exceptionCaught (ChannelHandlerContext, Throwable), AutobahnServerHandler channelRead (ChannelHandlerContext, Object)]","33"
"7","netty/testsuite-autobahn","63a9b46fc21ab0eb09c1c8963aa8dc6a68a0d68f","95814169b33ee479d46e671cf2c15adc2328fafe","SWITCH_EQUAL_SIDES","14","1","1","[AutobahnServerHandler handleHttpRequest (ChannelHandlerContext, HttpRequest)]","3"
"13","netty/testsuite-autobahn","95814169b33ee479d46e671cf2c15adc2328fafe","ded54d5d8f4b4823d0782f0d8555de1071c728b6","LOCAL_VAR_RENAMING","0","1","2","[AutobahnServerHandler exceptionCaught (ChannelHandlerContext, Throwable), AutobahnServerHandler channelRead (ChannelHandlerContext, Object)]","6"
"42","netty/testsuite-autobahn","ded54d5d8f4b4823d0782f0d8555de1071c728b6","88ba53aeee364186f8cd92989c418c5c6a6e3349","SWITCH_EQUAL_SIDES","14","1","1","[AutobahnServerHandler handleHttpRequest (ChannelHandlerContext, HttpRequest)]","3"
"45","netty/testsuite-autobahn","88ba53aeee364186f8cd92989c418c5c6a6e3349","3c3a38e84b4a028f79a1b0e07f1926410444da7d","REVERSE_IF_ELSE","3","1","2","[AutobahnServerHandler sendHttpResponse (ChannelHandlerContext, HttpRequest, FullHttpResponse), AutobahnServerHandler handleWebSocketFrame (ChannelHandlerContext, WebSocketFrame)]","6"
"47","netty/testsuite-autobahn","3c3a38e84b4a028f79a1b0e07f1926410444da7d","3f8060f56952587ca84629425542f47dfe8a70ba","LOCAL_VAR_RENAMING","0","1","2","[AutobahnServerHandler handleHttpRequest (ChannelHandlerContext, HttpRequest), AutobahnServerHandler handleWebSocketFrame (ChannelHandlerContext, WebSocketFrame)]","6"
"64","netty/testsuite-autobahn","3f8060f56952587ca84629425542f47dfe8a70ba","17b6caaf7c472006cedde799b0f37061116929a5","REVERSE_IF_ELSE","3","1","2","[AutobahnServerHandler sendHttpResponse (ChannelHandlerContext, HttpRequest, FullHttpResponse), AutobahnServerHandler handleWebSocketFrame (ChannelHandlerContext, WebSocketFrame)]","6"
"0","netty/testsuite-http2","17b6caaf7c472006cedde799b0f37061116929a5","c939aefd0fe03d01958973a96a4f234972d3edcc","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","6","[HelloWorldHttp2HandlerBuilder build (Http2ConnectionDecoder, Http2ConnectionEncoder, Http2Settings), Http2Server Http2Server (int), Http2Server main (String[]), HelloWorldHttp2HandlerBuilder HelloWorldHttp2HandlerBuilder (), Http2Server run (), HelloWorldHttp2HandlerBuilder build ()]","12"
"1","netty/testsuite-http2","c939aefd0fe03d01958973a96a4f234972d3edcc","9965c1cfc561afa1958e8b9a0b64a49a5663ac40","REVERSE_IF_ELSE","3","1","4","[HelloWorldHttp1Handler channelRead0 (ChannelHandlerContext, FullHttpRequest), HelloWorldHttp1Handler channelReadComplete (ChannelHandlerContext), HelloWorldHttp1Handler HelloWorldHttp1Handler (String), HelloWorldHttp1Handler exceptionCaught (ChannelHandlerContext, Throwable)]","12"
"11","netty/testsuite-http2","9965c1cfc561afa1958e8b9a0b64a49a5663ac40","bb386364dd66c2c4cde8506de785864ccaf60354","REVERSE_IF_ELSE","3","1","1","[HelloWorldHttp1Handler channelRead0 (ChannelHandlerContext, FullHttpRequest)]","3"
"12","netty/testsuite-http2","bb386364dd66c2c4cde8506de785864ccaf60354","a31a3993023934c6689645004b5871b3b7cd9b62","LOCAL_VAR_RENAMING","0","1","2","[HelloWorldHttp1Handler channelRead0 (ChannelHandlerContext, FullHttpRequest), HelloWorldHttp1Handler HelloWorldHttp1Handler (String)]","6"
"28","netty/testsuite-http2","a31a3993023934c6689645004b5871b3b7cd9b62","2f3787105ffd2cbe22dd03616c61602232b27614","REVERSE_IF_ELSE","3","1","1","[HelloWorldHttp1Handler channelRead0 (ChannelHandlerContext, FullHttpRequest)]","3"
"34","netty/testsuite-http2","2f3787105ffd2cbe22dd03616c61602232b27614","24450dc68aee57bb233c6a698e2ec95ae194a17e","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[Http2Server main (String[])]","3"
"38","netty/testsuite-http2","24450dc68aee57bb233c6a698e2ec95ae194a17e","e8239ed06dfebb70d65c9bf55eb40b3821a0cc4e","LOCAL_VAR_RENAMING","0","1","2","[Http2Server Http2Server (int), Http2Server run ()]","6"
"39","netty/testsuite-http2","e8239ed06dfebb70d65c9bf55eb40b3821a0cc4e","1d06b6af54487b2bb5028e05c720feafdf38c9de","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[Http2Server main (String[])]","3"
"52","netty/testsuite-http2","1d06b6af54487b2bb5028e05c720feafdf38c9de","f73e53c6fe5a99b880c7dd1767d96739ca6406a1","LOCAL_VAR_RENAMING","0","1","1","[HelloWorldHttp1Handler channelRead0 (ChannelHandlerContext, FullHttpRequest)]","3"
"55","netty/testsuite-http2","f73e53c6fe5a99b880c7dd1767d96739ca6406a1","891fe13066eb414ce5c06e5fb80da16f1fbfc244","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[Http2Server main (String[])]","3"
"60","netty/testsuite-http2","891fe13066eb414ce5c06e5fb80da16f1fbfc244","9e307b8eda39877799ed7d4f650c8a7668005ff4","LOCAL_VAR_RENAMING","0","1","2","[Http2Server main (String[]), Http2Server run ()]","6"
"0","netty/testsuite-native-image-client-runtime-init","9e307b8eda39877799ed7d4f650c8a7668005ff4","ac4cbd461ac8accfa995e6fcd8d57f2f1de3eff7","WHILE_TO_FOR","2","1","2","[NativeClientWithNettyInitAtRuntime main (String[]), NativeClientWithNettyInitAtRuntime NativeClientWithNettyInitAtRuntime ()]","2"
"1","netty/testsuite-native-image-client-runtime-init","ac4cbd461ac8accfa995e6fcd8d57f2f1de3eff7","28af8fa74f7fb79c326e13cb3f2556482cc90ff6","LOCAL_VAR_RENAMING","0","1","1","[NativeClientWithNettyInitAtRuntime main (String[])]","1"
"13","netty/testsuite-native-image-client-runtime-init","28af8fa74f7fb79c326e13cb3f2556482cc90ff6","4fbb1122963d3b672028c08b1fa6273f7cb230b0","LOCAL_VAR_RENAMING","0","1","1","[NativeClientWithNettyInitAtRuntime main (String[])]","1"
"18","netty/testsuite-native-image-client-runtime-init","4fbb1122963d3b672028c08b1fa6273f7cb230b0","0329e4bfca35f14f173de824847fa5af7173d3fe","LOCAL_VAR_RENAMING","0","1","1","[NativeClientWithNettyInitAtRuntime main (String[])]","1"
"50","netty/testsuite-native-image-client-runtime-init","0329e4bfca35f14f173de824847fa5af7173d3fe","0cb2c63eb907596183fe6995232266136dcccf4e","LOCAL_VAR_RENAMING","0","1","1","[NativeClientWithNettyInitAtRuntime main (String[])]","1"
"0","netty/testsuite-native-image-client","0cb2c63eb907596183fe6995232266136dcccf4e","2237627f59f0f621b547bc75fafbcfa95c180489","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","2","[DnsNativeClient DnsNativeClient (), DnsNativeClient main (String[])]","2"
"9","netty/testsuite-native-image-client","2237627f59f0f621b547bc75fafbcfa95c180489","727ad21460d65f524cc5af3b33d732a778a04c47","LOCAL_VAR_RENAMING","0","1","1","[DnsNativeClient main (String[])]","1"
"15","netty/testsuite-native-image-client","727ad21460d65f524cc5af3b33d732a778a04c47","252bfa971b6d5de2bfaa87585ad7055bafd1a578","LOCAL_VAR_RENAMING","0","1","1","[DnsNativeClient main (String[])]","1"
"18","netty/testsuite-native-image-client","252bfa971b6d5de2bfaa87585ad7055bafd1a578","15741429b6ecda195cc429367c3e4d1167a38efe","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DnsNativeClient main (String[])]","1"
"21","netty/testsuite-native-image-client","15741429b6ecda195cc429367c3e4d1167a38efe","a6acfe4b1ca3e8c7ab0771f982f4fed00db184f7","LOCAL_VAR_RENAMING","0","1","1","[DnsNativeClient main (String[])]","1"
"24","netty/testsuite-native-image-client","a6acfe4b1ca3e8c7ab0771f982f4fed00db184f7","bbe07016d76ed5e2a395322ca02d7b2b97368a44","LOCAL_VAR_RENAMING","0","1","1","[DnsNativeClient main (String[])]","1"
"29","netty/testsuite-native-image-client","bbe07016d76ed5e2a395322ca02d7b2b97368a44","fa59fe35bf14411660a0c7f4461838c1e0da624f","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DnsNativeClient main (String[])]","1"
"32","netty/testsuite-native-image-client","fa59fe35bf14411660a0c7f4461838c1e0da624f","33493d82bafbc4b81d3020f8cd09f3e44a5dae61","LOCAL_VAR_RENAMING","0","1","1","[DnsNativeClient main (String[])]","1"
"50","netty/testsuite-native-image-client","33493d82bafbc4b81d3020f8cd09f3e44a5dae61","71401d78c580647b71fc01b7dd62473a8c278952","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DnsNativeClient main (String[])]","1"
"53","netty/testsuite-native-image-client","71401d78c580647b71fc01b7dd62473a8c278952","097d65008bba10622d17478daee4b9b5a365179c","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[DnsNativeClient main (String[])]","1"
"0","netty/testsuite-native-image","097d65008bba10622d17478daee4b9b5a365179c","0fdca992e9f7ebcc84ef17f2c4058ad2cf0e9fda","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","6","[HttpNativeServer HttpNativeServer (), HttpNativeServerHandler channelReadComplete (ChannelHandlerContext), HttpNativeServerInitializer initChannel (SocketChannel), HttpNativeServerHandler channelRead0 (ChannelHandlerContext, HttpObject), HttpNativeServerHandler exceptionCaught (ChannelHandlerContext, Throwable), HttpNativeServer main (String[])]","18"
"3","netty/testsuite-native-image","0fdca992e9f7ebcc84ef17f2c4058ad2cf0e9fda","c8710dbf12a37d915281dee3c8d7b2cffe1b8ab5","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[HttpNativeServer main (String[])]","3"
"13","netty/testsuite-native-image","c8710dbf12a37d915281dee3c8d7b2cffe1b8ab5","311337413944b02bd4a99d7d85eab429fbeed181","LOCAL_VAR_RENAMING","0","1","1","[HttpNativeServer main (String[])]","3"
"16","netty/testsuite-native-image","311337413944b02bd4a99d7d85eab429fbeed181","e67555384be31b9c0ccd0c45040ac8cc5235cd0c","LOCAL_VAR_RENAMING","0","1","1","[HttpNativeServer main (String[])]","3"
"23","netty/testsuite-native-image","e67555384be31b9c0ccd0c45040ac8cc5235cd0c","5e365395e69db4262de9b5e07f987ed193a8cbc4","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[HttpNativeServer main (String[])]","3"
"31","netty/testsuite-native-image","5e365395e69db4262de9b5e07f987ed193a8cbc4","db78702417d8c3462dc67d37723d08b217ca4124","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[HttpNativeServer main (String[])]","3"
"40","netty/testsuite-native-image","db78702417d8c3462dc67d37723d08b217ca4124","c9934f1e39ad63266652cba0b9e11ea5c01e53e6","LOCAL_VAR_RENAMING","0","1","1","[HttpNativeServer main (String[])]","3"
"52","netty/testsuite-native-image","c9934f1e39ad63266652cba0b9e11ea5c01e53e6","b32ae6a80100d57a5d1d49aeaebaa4f0a3cecb0c","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[HttpNativeServer main (String[])]","3"
"0","netty/testsuite","b32ae6a80100d57a5d1d49aeaebaa4f0a3cecb0c","cae351eacd5b40554543b617fc3582f0cb87339e","FOR_TO_WHILE","1","1","111","[TestServerHandler handleException (ChannelHandlerContext, Throwable), EchoHandler exceptionCaught (ChannelHandlerContext, Throwable), SocketStartTlsTest testStartTls (ServerBootstrap, Bootstrap, SslContext, SslContext, boolean), SocketEchoTest run (ServerBootstrap, Bootstrap), SocketEchoTest testSimpleEchoWithAdditionalExecutorAndVoidPromise (ServerBootstrap, Bootstrap), TestNumReadsRecvByteBufAllocator lastBytesRead (int), SocketEchoTest testSimpleEcho0 (ServerBootstrap, Bootstrap, boolean, boolean, boolean), TestNumReadsRecvByteBufAllocator allocate (ByteBufAllocator), SocketEchoTest testSimpleEchoWithVoidPromise (ServerBootstrap, Bootstrap), SocketGatheringWriteTest testGatheringWriteWithCompositeNotAutoRead (ServerBootstrap, Bootstrap), TestNumReadsRecvByteBufAllocator attemptedBytesRead (int), TestNumReadsRecvByteBufAllocator readComplete (), DatagramConnectNotExistsTest exceptionCaught (ChannelHandlerContext, Throwable), StartTlsServerHandler channelReadComplete (ChannelHandlerContext), SocketEchoTest testSimpleEchoWithVoidPromise (TestInfo), SocketStartTlsTest shutdownExecutor (), TestNumReadsRecvByteBufAllocator reset (ChannelConfig), ReadPendingReadHandler assertAllRead (), SocketGatheringWriteTest run (ServerBootstrap, Bootstrap), EchoHandler channelReadComplete (ChannelHandlerContext), SocketEchoTest testSimpleEchoWithAdditionalExecutorNotAutoRead (ServerBootstrap, Bootstrap), EchoHandler EchoHandler (boolean), ReadPendingReadHandler channelRead (ChannelHandlerContext, Object), TestHandler channelRead0 (ChannelHandlerContext, ByteBuf), TestHandler exceptionCaught (ChannelHandlerContext, Throwable), SocketStartTlsTest data (), TestServerHandler channelRead0 (ChannelHandlerContext, ByteBuf), SocketGatheringWriteTest testGatheringWriteBig (TestInfo), SocketStartTlsTest run (ServerBootstrap, Bootstrap), ReadPendingInitializer initChannel (Channel), SocketStartTlsTest createExecutor (), StartTlsClientHandler channelRead0 (ChannelHandlerContext, String), SocketEchoTest testSimpleEchoWithAdditionalExecutorAndVoidPromise (TestInfo), SocketEchoTest testSimpleEchoWithAdditionalExecutor (ServerBootstrap, Bootstrap), SocketExceptionHandlingTest run (ServerBootstrap, Bootstrap), AcceptedChannelCounter AcceptedChannelCounter (int), ExceptionHandler exceptionCaught (ChannelHandlerContext, Throwable), BootstrapFactory newInstance (), StartTlsServerHandler channelRead0 (ChannelHandlerContext, String), TestHandler TestHandler (boolean), TestNumReadsRecvByteBufAllocator continueReading (UncheckedBooleanSupplier), SocketEchoTest exceptionCaught (ChannelHandlerContext, Throwable), EchoHandler channelActive (ChannelHandlerContext), StartTlsServerHandler channelActive (ChannelHandlerContext), TestServerHandler TestServerHandler (boolean, Promise<Void>, int), TestsuitePermutation allocator (), TestHandler channelActive (ChannelHandlerContext), SocketReadPendingTest testReadPendingIsResetAfterEachRead (TestInfo), SocketExceptionHandlingTest testReadPendingIsResetAfterEachRead (ServerBootstrap, Bootstrap), AcceptedChannelCounter channelActive (ChannelHandlerContext), SocketGatheringWriteTest testGatheringWriteWithComposite (ServerBootstrap, Bootstrap), SocketEchoTest testSimpleEchoWithVoidPromiseNotAutoRead (TestInfo), BootstrapComboFactory newClientInstance (), ServerSocketSuspendTest testSuspendAndResumeAccept (ServerBootstrap), SocketStartTlsTest testStartTls (SslContext, SslContext, TestInfo), SocketEchoTest createGroup (), TestNumReadsRecvByteBufAllocator incMessagesRead (int), StartTlsServerHandler exceptionCaught (ChannelHandlerContext, Throwable), SocketGatheringWriteTest testGatheringWrite (ServerBootstrap, Bootstrap), TestHandler channelReadComplete (ChannelHandlerContext), TestNumReadsRecvByteBufAllocator TestNumReadsRecvByteBufAllocator (int), TestHandler handleException (ChannelHandlerContext, Throwable), SocketExceptionHandlingTest testReadPendingIsResetAfterEachRead (TestInfo), SocketStartTlsTest testStartTlsNotAutoRead (ServerBootstrap, Bootstrap, SslContext, SslContext), StartTlsClientHandler StartTlsClientHandler (SSLEngine, boolean), TestNumReadsRecvByteBufAllocator newHandle (), SocketGatheringWriteTest testGatheringWrite0 (ServerBootstrap, Bootstrap, byte[], boolean, boolean), SocketReadPendingTest testReadPendingIsResetAfterEachRead (ServerBootstrap, Bootstrap), SocketGatheringWriteTest testGatheringWriteNotAutoRead (TestInfo), SocketEchoTest testSimpleEchoWithVoidPromiseNotAutoRead (ServerBootstrap, Bootstrap), ServerSocketSuspendTest run (ServerBootstrap), ReadPendingReadHandler channelReadComplete (ChannelHandlerContext), StartTlsClientHandler exceptionCaught (ChannelHandlerContext, Throwable), BuggyChannelHandler channelRead (ChannelHandlerContext, Object), SocketGatheringWriteTest testGatheringWriteWithComposite (TestInfo), StartTlsServerHandler StartTlsServerHandler (SSLEngine, boolean), SocketEchoTest testSimpleEcho (TestInfo), SocketStartTlsTest initChannel (Channel), TestNumReadsRecvByteBufAllocator attemptedBytesRead (), SocketEchoTest testSimpleEchoNotAutoRead (TestInfo), SocketEchoTest destroyGroup (), SocketEchoTest testSimpleEchoWithAdditionalExecutorNotAutoRead (TestInfo), SocketStartTlsTest testStartTls (ServerBootstrap, Bootstrap, SslContext, SslContext), SocketEchoTest testSimpleEcho (ServerBootstrap, Bootstrap), SocketGatheringWriteTest testGatheringWriteNotAutoRead (ServerBootstrap, Bootstrap), DatagramConnectNotExistsTest testConnectNotExists (TestInfo), SocketEchoTest initChannel (Channel), DatagramConnectNotExistsTest run (Bootstrap), SocketEchoTest testSimpleEchoNotAutoRead (ServerBootstrap, Bootstrap), SocketGatheringWriteTest testGatheringWriteBig (ServerBootstrap, Bootstrap), BootstrapComboFactory newServerInstance (), MyInitializer initChannel (Channel), StartTlsClientHandler channelReadComplete (ChannelHandlerContext), TestServerHandler channelInactive (ChannelHandlerContext), SocketReadPendingTest run (ServerBootstrap, Bootstrap), SocketGatheringWriteTest compressHeapDumps (), StartTlsClientHandler channelActive (ChannelHandlerContext), SocketStartTlsTest testStartTlsNotAutoRead (SslContext, SslContext, TestInfo), EchoHandler channelRead0 (ChannelHandlerContext, ByteBuf), AbstractSctpTest configure (ServerBootstrap, Bootstrap, ByteBufAllocator), TestNumReadsRecvByteBufAllocator continueReading (), DatagramConnectNotExistsTest newFactories (), DatagramConnectNotExistsTest testConnectNotExists (Bootstrap), SocketEchoTest testSimpleEchoWithAdditionalExecutor (TestInfo), TestNumReadsRecvByteBufAllocator lastBytesRead (), SocketGatheringWriteTest testGatheringWriteWithCompositeNotAutoRead (TestInfo), TestNumReadsRecvByteBufAllocator guess (), TestsuitePermutation TestsuitePermutation (), SocketGatheringWriteTest testGatheringWrite (TestInfo), AbstractSctpTest newFactories (), ServerSocketSuspendTest testSuspendAndResumeAccept (TestInfo)]","999"
"2","netty/testsuite","cae351eacd5b40554543b617fc3582f0cb87339e","646ce7afbc97c46e2cb949617856a3c0115400fe","WHILE_TO_FOR","2","1","1","[SocketGatheringWriteTest testGatheringWrite0 (ServerBootstrap, Bootstrap, byte[], boolean, boolean)]","9"
"4","netty/testsuite","646ce7afbc97c46e2cb949617856a3c0115400fe","6850083253946adc7a5ffcf8529eae459c670d44","SWITCH_EQUAL_SIDES","14","1","1","[SocketGatheringWriteTest testGatheringWrite0 (ServerBootstrap, Bootstrap, byte[], boolean, boolean)]","9"
"5","netty/testsuite","6850083253946adc7a5ffcf8529eae459c670d44","845b663211b864f68cd7e5652afb8b0c2ff5cbb8","SWITCH_EQUAL_SIDES","14","1","1","[SocketGatheringWriteTest testGatheringWrite0 (ServerBootstrap, Bootstrap, byte[], boolean, boolean)]","9"
"6","netty/testsuite","845b663211b864f68cd7e5652afb8b0c2ff5cbb8","25b37123f569e529e66a15a3fcd56e0fa5c6901c","REVERSE_IF_ELSE","3","1","2","[TestHandler channelReadComplete (ChannelHandlerContext), TestHandler exceptionCaught (ChannelHandlerContext, Throwable)]","18"
"7","netty/testsuite","25b37123f569e529e66a15a3fcd56e0fa5c6901c","fc68900a855522ffd8c306df7c510ce9e5536fe0","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","1","[SocketGatheringWriteTest testGatheringWrite0 (ServerBootstrap, Bootstrap, byte[], boolean, boolean)]","9"
"9","netty/testsuite","fc68900a855522ffd8c306df7c510ce9e5536fe0","da7e9cdf1cdeaf3e426c6b9785344cb4feece318","LOCAL_VAR_RENAMING","0","1","6","[AbstractDatagramTest internetProtocolFamily (), AbstractDatagramTest newFactories (), AbstractDatagramTest newSocketAddress (), AbstractDatagramTest socketInternetProtocalFamily (), AbstractDatagramTest configure (Bootstrap, Bootstrap, ByteBufAllocator), AbstractDatagramTest groupInternetProtocalFamily ()]","60"
"15","netty/testsuite","da7e9cdf1cdeaf3e426c6b9785344cb4feece318","7af483f74913b6e26f7db51b1640f27e7937d627","LOCAL_VAR_RENAMING","0","1","1","[AbstractDatagramTest configure (Bootstrap, Bootstrap, ByteBufAllocator)]","10"
"23","netty/testsuite","7af483f74913b6e26f7db51b1640f27e7937d627","7f7f1a8152f0b994d8bdfcbf538aac0e82dc13a2","LOCAL_VAR_RENAMING","0","1","1","[AbstractDatagramTest configure (Bootstrap, Bootstrap, ByteBufAllocator)]","10"
"32","netty/testsuite","7f7f1a8152f0b994d8bdfcbf538aac0e82dc13a2","8b62dfb3cc46cee876d50ee3d1631d8d0d730d6b","CASE_TO_IF_ELSE","17","1","1","[AbstractDatagramTest newSocketAddress ()]","10"
"39","netty/testsuite","8b62dfb3cc46cee876d50ee3d1631d8d0d730d6b","88dd131561db3ed86506a1df387514c2384245ad","LOCAL_VAR_RENAMING","0","1","1","[AbstractDatagramTest configure (Bootstrap, Bootstrap, ByteBufAllocator)]","10"
"40","netty/testsuite","88dd131561db3ed86506a1df387514c2384245ad","6d9b23fe0027505e16e1e4ebdea4e71b6b29d473","REVERSE_IF_ELSE","3","1","1","[AbstractDatagramTest newSocketAddress ()]","10"
"49","netty/testsuite","6d9b23fe0027505e16e1e4ebdea4e71b6b29d473","d9764ce4d3782f3377d1dfd382f1af725e15ea06","SWITCH_EQUAL_SIDES","14","1","1","[AbstractDatagramTest newSocketAddress ()]","10"
"50","netty/testsuite","d9764ce4d3782f3377d1dfd382f1af725e15ea06","a0e4da502bead71c4fc4e1dda9052e65b2ae0c68","SWITCH_EQUAL_SIDES","14","1","1","[AbstractDatagramTest newSocketAddress ()]","10"
"54","netty/testsuite","a0e4da502bead71c4fc4e1dda9052e65b2ae0c68","75313e9f6c78dbe9a262a97e4491a0ca81190c58","SWITCH_EQUAL_SIDES","14","1","1","[AbstractDatagramTest newSocketAddress ()]","10"
"57","netty/testsuite","75313e9f6c78dbe9a262a97e4491a0ca81190c58","9d3683907ff71042c46c9c0d6f85cc2a549419d8","LOCAL_VAR_RENAMING","0","1","1","[AbstractDatagramTest configure (Bootstrap, Bootstrap, ByteBufAllocator)]","10"
"59","netty/testsuite","9d3683907ff71042c46c9c0d6f85cc2a549419d8","0941c170b979a305a9cf68a4220d44bc63cd6413","SWITCH_EQUAL_SIDES","14","1","1","[AbstractDatagramTest newSocketAddress ()]","10"
"0","netty/transport-classes-epoll","0941c170b979a305a9cf68a4220d44bc63cd6413","a4e4afad35acfd90ec8a0971855b5eb13a2cb729","LOOP_IF_CONTINUE_TO_ELSE","11","1","166","[Epoll isTcpFastOpenServerSideAvailable (), EpollSocketChannelConfig setWriteBufferHighWaterMark (int), EpollSocketChannelConfig setIpBindAddressNoPort (boolean), EpollSocketChannelConfig setTcpMd5Sig (Map<InetAddress,byte[]>), EpollEventLoopGroup EpollEventLoopGroup (ThreadFactory), Native splice (int, long, int, long, long), EpollSocketChannelConfig getSendBufferSize (), Native epollWait0 (int, long, int, int, int, int, long), Native eventFd (), Native offsetofEpollData (), EpollSocketChannelConfig setAutoClose (boolean), Native sendmmsg0 (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket[], int, int), EpollSocketChannelConfig getOption (ChannelOption<T>), EpollSocketChannelConfig setAutoRead (boolean), EpollServerSocketChannel config (), EpollSocketChannelConfig isIpBindAddressNoPort (), EpollServerChannelConfig setMaxMessagesPerRead (int), EpollEventLoopGroup EpollEventLoopGroup (int, Executor, EventExecutorChooserFactory, SelectStrategyFactory, RejectedExecutionHandler, EventLoopTaskQueueFactory, EventLoopTaskQueueFactory), EpollEventArray memoryAddress (), EpollEventArray calculateBufferCapacity (int), EpollSocketChannelConfig getTcpKeepCnt (), EpollSocketChannelConfig setSoLinger (int), EpollServerChannelConfig setBacklog (int), EpollSocketChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), Native recvmsg (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket), Epoll Epoll (), EpollEventArray EpollEventArray (int), EpollServerChannelConfig setReceiveBufferSize (int), Native registerUnix (), EpollSocketChannelConfig isAllowHalfClosure (), EpollSocketChannelConfig setTcpKeepCntl (int), Native newEventFd (), EpollServerChannelConfig setConnectTimeoutMillis (int), EpollServerChannelConfig setWriteBufferHighWaterMark (int), Epoll unavailabilityCause (), EpollServerChannelConfig setAllocator (ByteBufAllocator), EpollSocketChannelConfig getTrafficClass (), EpollServerSocketChannel remoteAddress (), EpollSocketChannelConfig isTcpFastOpenConnect (), EpollSocketChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), EpollEventLoopGroup EpollEventLoopGroup (int, ThreadFactory, int), EpollSocketChannelConfig setSendBufferSize (int), EpollServerSocketChannel localAddress (), EpollEventLoopGroup EpollEventLoopGroup (int), EpollEventArray length (), EpollSocketChannelConfig isTcpNoDelay (), EpollSocketChannelConfig setWriteBufferLowWaterMark (int), EpollServerSocketChannel EpollServerSocketChannel (), Native sizeofEpollEvent (), EpollServerChannelConfig getTcpFastopen (), EpollServerSocketChannel EpollServerSocketChannel (InternetProtocolFamily), EpollEventArray free (), EpollServerSocketChannel EpollServerSocketChannel (LinuxSocket, boolean), Native epollWait (int, long, int, int), EpollSocketChannelConfig getSoLinger (), Native epollCtlAdd (int, int, int), EpollSocketChannelConfig EpollSocketChannelConfig (EpollSocketChannel), EpollServerChannelConfig setMessageSizeEstimator (MessageSizeEstimator), EpollSocketChannelConfig setTcpNotSentLowAt (long), EpollSocketChannelConfig setAllocator (ByteBufAllocator), EpollServerChannelConfig setTcpFastopen (int), EpollServerSocketChannel EpollServerSocketChannel (int), EpollEventLoopGroup EpollEventLoopGroup (int, SelectStrategyFactory), EpollEventLoopGroup EpollEventLoopGroup (int, Executor, EventExecutorChooserFactory, SelectStrategyFactory, RejectedExecutionHandler, EventLoopTaskQueueFactory), EpollServerChannelConfig isReuseAddress (), EpollSocketChannelConfig isIpTransparent (), EpollServerChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), EpollSocketChannelConfig setTcpKeepIdle (int), Native eventFdRead (int), Native recvmmsg (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket[], int, int), EpollSocketChannelConfig setTcpNoDelay (boolean), EpollEventLoopGroup EpollEventLoopGroup (), Native epollWait (FileDescriptor, EpollEventArray, FileDescriptor, int, int), EpollServerSocketChannel isCompatible (EventLoop), Native recvmsg0 (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket), EpollSocketChannelConfig setAllowHalfClosure (boolean), Native epollWait (FileDescriptor, EpollEventArray, boolean), Native splice0 (int, long, int, long, long), Native eventFdWrite (int, long), EpollSocketChannelConfig isKeepAlive (), Epoll ensureAvailability (), EpollSocketChannelConfig setKeepAlive (boolean), EpollEventArray events (int), Native epollTimerWasUsed (long), Native isSupportingUdpSegment (), EpollServerSocketChannel setTcpMd5Sig (Map<InetAddress,byte[]>), EpollSocketChannelConfig getOptions (), EpollSocketChannelConfig setConnectTimeoutMillis (int), EpollSocketChannelConfig getReceiveBufferSize (), EpollSocketChannelConfig isTcpCork (), EpollServerChannelConfig getReceiveBufferSize (), EpollSocketChannelConfig getTcpUserTimeout (), EpollServerChannelConfig setWriteBufferLowWaterMark (int), Native Native (), EpollSocketChannelConfig setPerformancePreferences (int, int, int), EpollSocketChannelConfig setMessageSizeEstimator (MessageSizeEstimator), EpollServerChannelConfig setPerformancePreferences (int, int, int), EpollSocketChannelConfig setWriteSpinCount (int), EpollEventLoopGroup newChild (Executor, Object), EpollEventArray increase (), Native newEpollCreate (), EpollServerChannelConfig setWriteSpinCount (int), Native epollCtlMod0 (int, int, int), Native recvmmsg0 (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket[], int, int), EpollServerChannelConfig getBacklog (), Native epollCtlDel (int, int), EpollServerChannelConfig setOption (ChannelOption<T>, T), EpollServerSocketChannel tcpMd5SigAddresses (), EpollSocketChannelConfig getSoBusyPoll (), EpollEventLoopGroup EpollEventLoopGroup (int, Executor, SelectStrategyFactory), EpollServerSocketChannel newChildChannel (int, byte[], int, int), EpollEventLoopGroup EpollEventLoopGroup (int, ThreadFactory), Native epollCtlAdd0 (int, int, int), EpollServerChannelConfig setAutoRead (boolean), EpollSocketChannelConfig setTcpQuickAck (boolean), Native newTimerFd (), EpollEventLoopGroup EpollEventLoopGroup (int, ThreadFactory, int, SelectStrategyFactory), EpollSocketChannelConfig getTcpKeepIntvl (), EpollSocketChannelConfig setReceiveBufferSize (int), EpollServerChannelConfig EpollServerChannelConfig (AbstractEpollChannel), Native sendmmsg (int, boolean, NativeDatagramPacketArray.NativeDatagramPacket[], int, int), Native epollCtlMod (int, int, int), EpollServerChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), EpollEventLoopGroup EpollEventLoopGroup (int, Executor, EventExecutorChooserFactory, SelectStrategyFactory, RejectedExecutionHandler), Native epollBusyWait (FileDescriptor, EpollEventArray), Epoll isTcpFastOpenClientSideAvailable (), EpollEventLoopGroup EpollEventLoopGroup (int, ThreadFactory, SelectStrategyFactory), Native epollCreate (), EpollServerChannelConfig getOption (ChannelOption<T>), EpollSocketChannelConfig setTcpKeepIntvl (int), EpollEventLoopGroup EpollEventLoopGroup (int, Executor), EpollEventLoopGroup setIoRatio (int), EpollSocketChannelConfig calculateMaxBytesPerGatheringWrite (), EpollSocketChannelConfig setTcpCork (boolean), EpollServerChannelConfig setReuseAddress (boolean), EpollServerSocketChannel doBind (SocketAddress), EpollEventArray fd (int), EpollSocketChannelConfig setMaxMessagesPerRead (int), EpollSocketChannelConfig setTcpKeepCnt (int), EpollSocketChannelConfig getTcpNotSentLowAt (), EpollSocketChannelConfig isReuseAddress (), EpollServerSocketChannel EpollServerSocketChannel (LinuxSocket), EpollServerChannelConfig getOptions (), EpollSocketChannelConfig setTcpFastOpenConnect (boolean), EpollServerChannelConfig setEpollMode (EpollMode), EpollSocketChannelConfig setOption (ChannelOption<T>, T), EpollSocketChannelConfig setTcpUserTimeout (int), Native epollBusyWait0 (int, long, int), EpollEventArray getInt (int, int), Native epollWait (FileDescriptor, EpollEventArray, int), EpollSocketChannelConfig setTrafficClass (int), EpollEventLoopGroup EpollEventLoopGroup (int, Executor, EventExecutorChooserFactory, SelectStrategyFactory), Native run (), Native loadNativeLibrary (), EpollSocketChannelConfig getTcpKeepIdle (), Native epollCtlDel0 (int, int), EpollSocketChannelConfig setEpollMode (EpollMode), EpollSocketChannelConfig setSoBusyPoll (int), EpollSocketChannelConfig isTcpQuickAck (), EpollSocketChannelConfig setIpTransparent (boolean), Native epollReady (long), Native sendmmsg (int, NativeDatagramPacketArray.NativeDatagramPacket[], int, int), EpollSocketChannelConfig setReuseAddress (boolean), Native timerFd (), Epoll isAvailable (), Native epollWait (FileDescriptor, EpollEventArray, FileDescriptor, int, int, long)]","1162"
"17","netty/transport-classes-epoll","a4e4afad35acfd90ec8a0971855b5eb13a2cb729","93d4deec336e49d934e553ed308c3d2bfbf9f8a4","SWITCH_EQUAL_SIDES","14","1","2","[EpollServerChannelConfig getOption (ChannelOption<T>), EpollServerChannelConfig setOption (ChannelOption<T>, T)]","14"
"19","netty/transport-classes-epoll","93d4deec336e49d934e553ed308c3d2bfbf9f8a4","67db72c55c0bd18a3df88855a547232b035e9712","REVERSE_IF_ELSE","3","1","1","[EpollServerChannelConfig setOption (ChannelOption<T>, T)]","7"
"26","netty/transport-classes-epoll","67db72c55c0bd18a3df88855a547232b035e9712","139f26c15098d5758ba58ff62ac2a229cdcae257","REVERSE_IF_ELSE","3","1","2","[EpollServerChannelConfig getOption (ChannelOption<T>), EpollServerChannelConfig setOption (ChannelOption<T>, T)]","14"
"27","netty/transport-classes-epoll","139f26c15098d5758ba58ff62ac2a229cdcae257","add020ab529fce5170f12284971c2649c2b4269e","REVERSE_IF_ELSE","3","1","1","[EpollServerChannelConfig setOption (ChannelOption<T>, T)]","7"
"28","netty/transport-classes-epoll","add020ab529fce5170f12284971c2649c2b4269e","43a070636314a6c99f4378670030f62ec59cd91e","REVERSE_IF_ELSE","3","1","1","[EpollServerChannelConfig setOption (ChannelOption<T>, T)]","7"
"34","netty/transport-classes-epoll","43a070636314a6c99f4378670030f62ec59cd91e","fa5d3ec392d24a054d928514462e89f80773e2a2","REVERSE_IF_ELSE","3","1","1","[EpollServerChannelConfig setOption (ChannelOption<T>, T)]","7"
"37","netty/transport-classes-epoll","fa5d3ec392d24a054d928514462e89f80773e2a2","d5fd08d6ca655cb07a301c71bf9cbd2fcbc8bd9e","REVERSE_IF_ELSE","3","1","2","[EpollServerChannelConfig getOption (ChannelOption<T>), EpollServerChannelConfig setOption (ChannelOption<T>, T)]","14"
"42","netty/transport-classes-epoll","d5fd08d6ca655cb07a301c71bf9cbd2fcbc8bd9e","ed1952882a5e0b5ae47344bb1c472da70167c0ff","REVERSE_IF_ELSE","3","1","1","[EpollServerChannelConfig setOption (ChannelOption<T>, T)]","7"
"49","netty/transport-classes-epoll","ed1952882a5e0b5ae47344bb1c472da70167c0ff","8c6b82f6eaec1c23a55b68e47e9d417c8e311f86","REVERSE_IF_ELSE","3","1","2","[EpollServerChannelConfig getOption (ChannelOption<T>), EpollServerChannelConfig setOption (ChannelOption<T>, T)]","14"
"51","netty/transport-classes-epoll","8c6b82f6eaec1c23a55b68e47e9d417c8e311f86","8507dec7e79efb071ced80d80558bd17d12b3f87","SWITCH_EQUAL_SIDES","14","1","2","[EpollServerChannelConfig getOption (ChannelOption<T>), EpollServerChannelConfig setOption (ChannelOption<T>, T)]","14"
"53","netty/transport-classes-epoll","8507dec7e79efb071ced80d80558bd17d12b3f87","f6368963508b60b675569844e3adce9607d0655b","REVERSE_IF_ELSE","3","1","1","[EpollServerChannelConfig setOption (ChannelOption<T>, T)]","7"
"55","netty/transport-classes-epoll","f6368963508b60b675569844e3adce9607d0655b","6269546bca84af439d16008c326b20bedbda1b8c","SWITCH_EQUAL_SIDES","14","1","1","[EpollServerChannelConfig setOption (ChannelOption<T>, T)]","7"
"62","netty/transport-classes-epoll","6269546bca84af439d16008c326b20bedbda1b8c","574ba541832cf0d59b8ab99bbb9ad35003df4f03","SWITCH_EQUAL_SIDES","14","1","2","[EpollServerChannelConfig getOption (ChannelOption<T>), EpollServerChannelConfig setOption (ChannelOption<T>, T)]","14"
"0","netty/transport-classes-kqueue","574ba541832cf0d59b8ab99bbb9ad35003df4f03","e7d95e9ccd4d511f8915b43475d5a9bce00b41b0","IF_DIVIDING","9","1","154","[AbstractKQueueUnsafe flush0 (), KQueueEventLoop cleanArray (), AbstractKQueueChannel newDirectBuffer (Object, ByteBuf), KQueueDomainDatagramChannelConfig getSendBufferSize (), KQueueDomainUnsafe readReadyFd (), AbstractKQueueUnsafe fulfillConnectPromise (ChannelPromise, Throwable), AbstractKQueueChannel doDisconnect (), KQueueDomainSocketChannel KQueueDomainSocketChannel (), AbstractKQueueUnsafe doFinishConnect (), KQueueDomainSocketChannel config (), KQueueDomainDatagramChannelConfig setSendBufferSize (int), KQueueServerChannelConfig setWriteBufferLowWaterMark (int), KQueueDomainDatagramChannelConfig setAutoClose (boolean), AbstractKQueueChannel isAllowHalfClosure (ChannelConfig), KQueueDomainDatagramChannelConfig setMessageSizeEstimator (MessageSizeEstimator), KQueueDomainDatagramChannelConfig setMaxMessagesPerWrite (int), KQueueServerChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), KQueueServerChannelConfig setMaxMessagesPerRead (int), KQueueServerChannelConfig isTcpFastOpen (), AbstractKQueueChannel doBeginRead (), KQueueServerChannelConfig getBacklog (), KQueueServerSocketChannel KQueueServerSocketChannel (BsdSocket, boolean), AbstractKQueueUnsafe readReadyBefore (), AbstractKQueueUnsafe connect (SocketAddress, SocketAddress, ChannelPromise), KQueueDomainDatagramChannelConfig setActiveOnOpen (boolean), AbstractKQueueUnsafe failConnectPromise (Throwable), AbstractKQueueChannel isSoErrorZero (BsdSocket), AbstractKQueueChannel AbstractKQueueChannel (Channel, BsdSocket, SocketAddress), AbstractKQueueChannel doWriteBytes (ChannelOutboundBuffer, ByteBuf), AbstractKQueueChannel fd (), KQueueServerSocketChannel remoteAddress (), KQueueEventLoop cleanup (), AbstractKQueueChannel doClose (), KQueueDomainSocketChannel KQueueDomainSocketChannel (int), AbstractKQueueChannel newDirectBuffer0 (Object, ByteBuf, ByteBufAllocator, int), KQueueDomainDatagramChannelConfig setConnectTimeoutMillis (int), AbstractKQueueUnsafe shutdownInput (boolean), AbstractKQueueUnsafe clearReadFilter0 (), KQueueDomainSocketChannel doBind (SocketAddress), AbstractKQueueUnsafe readEOF (), KQueueEventLoop handleLoopException (Throwable), KQueueServerChannelConfig isReuseAddress (), AbstractKQueueUnsafe readReady (long), KQueueEventLoop run (), KQueueDomainSocketChannel filterOutboundMessage (Object), AbstractKQueueChannel newUnsafe (), KQueueServerSocketChannel KQueueServerSocketChannel (BsdSocket), KQueueEventLoop newTaskQueue0 (int), AbstractKQueueChannel shouldBreakReadReady (ChannelConfig), KQueueServerSocketChannel isCompatible (EventLoop), AbstractKQueueChannel isActive (), AbstractKQueueUnsafe executeReadReadyRunnable (ChannelConfig), KQueueDomainDatagramChannelConfig KQueueDomainDatagramChannelConfig (KQueueDomainDatagramChannel), AbstractKQueueChannel run (), KQueueServerSocketChannel config (), AbstractKQueueUnsafe doConnect0 (SocketAddress, SocketAddress), KQueueDomainDatagramChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), AbstractKQueueChannel doDeregister (), KQueueDomainDatagramChannelConfig setAllocator (ByteBufAllocator), KQueueDomainDatagramChannelConfig getOptions (), AbstractKQueueChannel evSet0 (short, short), AbstractKQueueChannel unregisterFilters (), AbstractKQueueChannel doReadBytes (ByteBuf), AbstractKQueueUnsafe localAddress0 (), AbstractKQueueUnsafe readReady (KQueueRecvByteAllocatorHandle), KQueueDomainDatagramChannelConfig getOption (ChannelOption<T>), KQueueEventLoop evSet (AbstractKQueueChannel, short, short, int), KQueueDomainSocketChannel doWriteSingle (ChannelOutboundBuffer), KQueueServerChannelConfig getReceiveBufferSize (), KQueueServerSocketChannel newChildChannel (int, byte[], int, int), AbstractKQueueDatagramChannel doWriteMessage (Object), AbstractKQueueUnsafe recvBufAllocHandle (), AbstractKQueueUnsafe fireEventAndClose (Object), KQueueServerChannelConfig setConnectTimeoutMillis (int), KQueueEventLoop add (AbstractKQueueChannel), KQueueServerChannelConfig setRcvAllocTransportProvidesGuess (boolean), KQueueServerChannelConfig setWriteSpinCount (int), KQueueDomainSocketChannel doConnect (SocketAddress, SocketAddress), KQueueServerChannelConfig setPerformancePreferences (int, int, int), AbstractKQueueDatagramChannel AbstractKQueueDatagramChannel (Channel, BsdSocket, boolean), KQueueDomainDatagramChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), KQueueServerChannelConfig setOption (ChannelOption<T>, T), AbstractKQueueChannel isCompatible (EventLoop), KQueueServerChannelConfig getOption (ChannelOption<T>), KQueueEventLoop setIoRatio (int), KQueueServerChannelConfig setMessageSizeEstimator (MessageSizeEstimator), KQueueEventLoop registeredChannels (), AbstractKQueueDatagramChannel doWrite (ChannelOutboundBuffer), KQueueEventLoop wakeup (boolean), AbstractKQueueUnsafe fulfillConnectPromise (ChannelPromise, boolean), KQueueServerSocketChannel doBind (SocketAddress), AbstractKQueueChannel clearRdHup0 (), KQueueDomainDatagramChannelConfig getActiveOnOpen (), KQueueServerChannelConfig setReuseAddress (boolean), AbstractKQueueChannel writeFilter (boolean), KQueueEventLoop registeredChannelsIterator (), AbstractKQueueUnsafe doConnect (SocketAddress, SocketAddress), KQueueDomainSocketChannel newUnsafe (), AbstractKQueueUnsafe operationComplete (ChannelFuture), KQueueEventLoop processReady (int), AbstractKQueueChannel resetCachedAddresses (), KQueueEventLoop getIoRatio (), KQueueEventLoop kqueueWait (boolean), AbstractKQueueChannel evSet (short, short), KQueueServerSocketChannel localAddress (), AbstractKQueueChannel newDirectBuffer (ByteBuf), AbstractKQueueChannel config (), KQueueServerChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), KQueueEventLoop KQueueEventLoop (EventLoopGroup, Executor, int, SelectStrategy, RejectedExecutionHandler, EventLoopTaskQueueFactory, EventLoopTaskQueueFactory), KQueueDomainDatagramChannelConfig setWriteSpinCount (int), AbstractKQueueChannel AbstractKQueueChannel (Channel, BsdSocket, boolean), KQueueEventLoop wakeup (), KQueueDomainSocketChannel KQueueDomainSocketChannel (Channel, BsdSocket), KQueueDomainDatagramChannelConfig setMaxMessagesPerRead (int), AbstractKQueueChannel evSet0 (short, short, int), KQueueDomainSocketChannel localAddress (), AbstractKQueueDatagramChannel metadata (), AbstractKQueueUnsafe writeReady (), KQueueServerChannelConfig setAutoRead (boolean), AbstractKQueueChannel clearReadFilter (), AbstractKQueueUnsafe remoteAddress0 (), KQueueServerChannelConfig setAllocator (ByteBufAllocator), KQueueEventLoop kqueueWaitNow (), KQueueDomainSocketChannel remoteAddress (), KQueueEventLoop remove (AbstractKQueueChannel), AbstractKQueueChannel isOpen (), KQueueEventLoop closeAll (), KQueueDomainDatagramChannelConfig setRcvAllocTransportProvidesGuess (boolean), AbstractKQueueChannel doRegister (), AbstractKQueueChannel metadata (), KQueueDomainDatagramChannelConfig setOption (ChannelOption<T>, T), KQueueEventLoop newTaskQueue (EventLoopTaskQueueFactory), KQueueEventLoop newTaskQueue (int), AbstractKQueueUnsafe doBind (SocketAddress), KQueueServerChannelConfig setWriteBufferHighWaterMark (int), KQueueEventLoop get (), KQueueDomainUnsafe readReady (KQueueRecvByteAllocatorHandle), KQueueDomainSocketChannel peerCredentials (), KQueueServerChannelConfig setBacklog (int), AbstractKQueueChannel checkResolvable (InetSocketAddress), AbstractKQueueUnsafe run (), KQueueDomainSocketChannel localAddress0 (), KQueueServerChannelConfig setReceiveBufferSize (int), AbstractKQueueChannel readFilter (boolean), KQueueDomainDatagramChannelConfig setAutoRead (boolean), KQueueDomainSocketChannel remoteAddress0 (), AbstractKQueueUnsafe finishConnect (), AbstractKQueueUnsafe readReadyFinally (ChannelConfig), KQueueEventLoop kqueueWait (int, int), KQueueServerChannelConfig getOptions (), KQueueServerSocketChannel KQueueServerSocketChannel (), KQueueServerSocketChannel KQueueServerSocketChannel (int), KQueueServerChannelConfig setTcpFastOpen (boolean), KQueueServerChannelConfig KQueueServerChannelConfig (AbstractKQueueChannel)]","1078"
"1","netty/transport-classes-kqueue","e7d95e9ccd4d511f8915b43475d5a9bce00b41b0","4c14a40934b3be3482fe4884d98286e1064d0015","INFIX_EXPRESSION_DIVIDING","8","1","6","[AcceptFilter filterName (), AcceptFilter equals (Object), AcceptFilter AcceptFilter (String, String), AcceptFilter filterArgs (), AcceptFilter hashCode (), AcceptFilter toString ()]","48"
"5","netty/transport-classes-kqueue","4c14a40934b3be3482fe4884d98286e1064d0015","0e47ae550f2d5329ae4503de17fd0b88eb047c80","LOCAL_VAR_RENAMING","0","1","24","[KQueueDomainSocketChannelConfig setSendBufferSize (int), KQueueDomainSocketChannelConfig getOptions (), KQueueDomainSocketChannelConfig isAllowHalfClosure (), KQueueDomainSocketChannelConfig setReadMode (DomainSocketReadMode), KQueueDomainSocketChannelConfig setAllowHalfClosure (boolean), KQueueDomainSocketChannelConfig setAutoClose (boolean), KQueueDomainSocketChannelConfig getReadMode (), KQueueDomainSocketChannelConfig setOption (ChannelOption<T>, T), KQueueDomainSocketChannelConfig setAllocator (ByteBufAllocator), KQueueDomainSocketChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), KQueueDomainSocketChannelConfig setReceiveBufferSize (int), KQueueDomainSocketChannelConfig setWriteBufferLowWaterMark (int), KQueueDomainSocketChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), KQueueDomainSocketChannelConfig setWriteSpinCount (int), KQueueDomainSocketChannelConfig getOption (ChannelOption<T>), KQueueDomainSocketChannelConfig setRcvAllocTransportProvidesGuess (boolean), KQueueDomainSocketChannelConfig getReceiveBufferSize (), KQueueDomainSocketChannelConfig getSendBufferSize (), KQueueDomainSocketChannelConfig KQueueDomainSocketChannelConfig (AbstractKQueueChannel), KQueueDomainSocketChannelConfig setAutoRead (boolean), KQueueDomainSocketChannelConfig setMaxMessagesPerRead (int), KQueueDomainSocketChannelConfig setWriteBufferHighWaterMark (int), KQueueDomainSocketChannelConfig setMessageSizeEstimator (MessageSizeEstimator), KQueueDomainSocketChannelConfig setConnectTimeoutMillis (int)]","216"
"8","netty/transport-classes-kqueue","0e47ae550f2d5329ae4503de17fd0b88eb047c80","20751acc201d22960c1f5fa167d403c9f2240e4d","REVERSE_IF_ELSE","3","1","1","[KQueueDomainSocketChannelConfig setOption (ChannelOption<T>, T)]","9"
"18","netty/transport-classes-kqueue","20751acc201d22960c1f5fa167d403c9f2240e4d","feb3a9cf5e14de4e8ad2652259241d8b29829f18","LOCAL_VAR_RENAMING","0","1","2","[KQueueDomainSocketChannelConfig getSendBufferSize (), KQueueDomainSocketChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator)]","18"
"19","netty/transport-classes-kqueue","feb3a9cf5e14de4e8ad2652259241d8b29829f18","02d6d5f76e91f7386b5bd0bf66160de8277a8c2b","SWITCH_EQUAL_SIDES","14","1","2","[KQueueDomainSocketChannelConfig setOption (ChannelOption<T>, T), KQueueDomainSocketChannelConfig getOption (ChannelOption<T>)]","18"
"20","netty/transport-classes-kqueue","02d6d5f76e91f7386b5bd0bf66160de8277a8c2b","6239d9c9f20f4be99f433a212a6314a19790a50f","LOCAL_VAR_RENAMING","0","1","2","[KQueueDomainSocketChannelConfig setOption (ChannelOption<T>, T), KQueueDomainSocketChannelConfig setWriteSpinCount (int)]","18"
"28","netty/transport-classes-kqueue","6239d9c9f20f4be99f433a212a6314a19790a50f","ae1747ca5d667dc206c30b0f924656b62a11bc0d","SWITCH_EQUAL_SIDES","14","1","1","[KQueueDomainSocketChannelConfig setOption (ChannelOption<T>, T)]","9"
"37","netty/transport-classes-kqueue","ae1747ca5d667dc206c30b0f924656b62a11bc0d","b4a9b7a653ad6861efba0c7eef5318379ea94ce4","LOCAL_VAR_RENAMING","0","1","2","[KQueueDomainSocketChannelConfig setAllowHalfClosure (boolean), KQueueDomainSocketChannelConfig setReceiveBufferSize (int)]","18"
"38","netty/transport-classes-kqueue","b4a9b7a653ad6861efba0c7eef5318379ea94ce4","9da77b1f3819ece0a66f3bee9a1056a7b00b2158","LOCAL_VAR_RENAMING","0","1","2","[KQueueDomainSocketChannelConfig setMessageSizeEstimator (MessageSizeEstimator), KQueueDomainSocketChannelConfig setConnectTimeoutMillis (int)]","18"
"39","netty/transport-classes-kqueue","9da77b1f3819ece0a66f3bee9a1056a7b00b2158","723c8e4e5fdfa6058ac12be60e0ad7efe977b190","LOCAL_VAR_RENAMING","0","1","2","[KQueueDomainSocketChannelConfig setSendBufferSize (int), KQueueDomainSocketChannelConfig setAllowHalfClosure (boolean)]","18"
"45","netty/transport-classes-kqueue","723c8e4e5fdfa6058ac12be60e0ad7efe977b190","d917bfd33bbc6d11090992630b09fa702957f259","SWITCH_EQUAL_SIDES","14","1","1","[KQueueDomainSocketChannelConfig setOption (ChannelOption<T>, T)]","9"
"47","netty/transport-classes-kqueue","d917bfd33bbc6d11090992630b09fa702957f259","7a9ada0f372b9287936ff4c78133809711348f58","REVERSE_IF_ELSE","3","1","2","[KQueueDomainSocketChannelConfig setOption (ChannelOption<T>, T), KQueueDomainSocketChannelConfig getOption (ChannelOption<T>)]","18"
"0","netty/transport-native-unix-common-tests","7a9ada0f372b9287936ff4c78133809711348f58","4c9eec7a4881fcf63ab8814298c3e08fec2c95bd","INFIX_EXPRESSION_DIVIDING","8","1","37","[DetectPeerCloseWithoutReadTest channelActive (ChannelHandlerContext), SocketTest testSendBufferSize (), NoMemoryAddressByteBuf memoryAddress (), DetectPeerCloseWithoutReadTest initChannel (Channel), SocketTest setup (), DetectPeerCloseWithoutReadTest clientCloseWithoutServerReadIsDetectedExtraReadRequested (), SocketTest testSoLinger (), NoMemoryAddressByteBuf NoMemoryAddressByteBuf (int), DetectPeerCloseWithoutReadTest clientCloseWithoutServerReadIsDetectedNoExtraReadRequested (), DetectPeerCloseWithoutReadTest serverCloseWithoutClientReadIsDetectedNoExtraReadRequested (), SocketTest testIntOpt (), SocketTest level (), DetectPeerCloseWithoutReadTest clientChannel (), SocketTest newSocket (), TestHandler channelInactive (ChannelHandlerContext), NoMemoryAddressByteBuf hasMemoryAddress (), UnixTestUtils newInetLoopbackSocketAddress (), DetectPeerCloseWithoutReadTest newGroup (), UnixTestUtils newSocketAddress (), SocketTest tearDown (), SocketTest testRawOpt (), UnixTestUtils UnixTestUtils (), SocketTest testDoubleCloseDoesNotThrow (), SocketTest testTcpNoDelay (), DetectPeerCloseWithoutReadTest serverCloseWithoutClientReadIsDetected0 (boolean), SocketTest testKeepAlive (), DetectPeerCloseWithoutReadTest serverChannel (), TestHandler channelRead0 (ChannelHandlerContext, ByteBuf), SocketTest testTrafficClass (), DetectPeerCloseWithoutReadTest serverCloseWithoutClientReadIsDetectedExtraReadRequested (), IovArrayTest testNotFailsWihtoutMemoryAddress (), TestHandler TestHandler (AtomicInteger, boolean, CountDownLatch), UnixTestUtils getLoopbackAddress (), SocketTest testReceivedBufferSize (), DetectPeerCloseWithoutReadTest clientCloseWithoutServerReadIsDetected0 (boolean), UnixTestUtils newDomainSocketAddress (), SocketTest optname ()]","148"
"4","netty/transport-native-unix-common-tests","4c9eec7a4881fcf63ab8814298c3e08fec2c95bd","4bfa8affa4250fadc42846482d4dbf9c5417be7e","VAR_DECLARATION_MERGING","12","1","1","[SocketTest testSendBufferSize ()]","4"
"8","netty/transport-native-unix-common-tests","4bfa8affa4250fadc42846482d4dbf9c5417be7e","dcdbcae93e96ae3865b4abf6391f50d44a06b7f9","LOCAL_VAR_RENAMING","0","1","2","[SocketTest testDoubleCloseDoesNotThrow (), SocketTest testSendBufferSize ()]","8"
"10","netty/transport-native-unix-common-tests","dcdbcae93e96ae3865b4abf6391f50d44a06b7f9","b33ac1aac19bacc3b22c297cb8272b430b8606c3","LOCAL_VAR_RENAMING","0","1","1","[SocketTest testReceivedBufferSize ()]","4"
"17","netty/transport-native-unix-common-tests","b33ac1aac19bacc3b22c297cb8272b430b8606c3","51e5a2dc5df0f0f5a0bb48a2caaa77d5cd640fe6","VAR_DECLARATION_DIVIDING","13","1","2","[SocketTest testSendBufferSize (), SocketTest testReceivedBufferSize ()]","8"
"30","netty/transport-native-unix-common-tests","51e5a2dc5df0f0f5a0bb48a2caaa77d5cd640fe6","7b64ce89c60fb11cf245eebfb22ffa076d18c116","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[SocketTest testSendBufferSize (), SocketTest testReceivedBufferSize ()]","8"
"31","netty/transport-native-unix-common-tests","7b64ce89c60fb11cf245eebfb22ffa076d18c116","1a090c118d412bccb1f1c398799851dd7cd1b5bf","LOCAL_VAR_RENAMING","0","1","2","[SocketTest testDoubleCloseDoesNotThrow (), SocketTest testReceivedBufferSize ()]","8"
"33","netty/transport-native-unix-common-tests","1a090c118d412bccb1f1c398799851dd7cd1b5bf","498cb208ce31d49e20e8206f11c2f76b503ad15e","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SocketTest testSendBufferSize ()]","4"
"35","netty/transport-native-unix-common-tests","498cb208ce31d49e20e8206f11c2f76b503ad15e","be2b7b12fa3d1897260bd1581c2ee7e858f150de","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[SocketTest testReceivedBufferSize ()]","4"
"36","netty/transport-native-unix-common-tests","be2b7b12fa3d1897260bd1581c2ee7e858f150de","b29ecb502d47eeeafa1710dba0d59547b1c05f71","LOCAL_VAR_RENAMING","0","1","2","[SocketTest testRawOpt (), SocketTest testSendBufferSize ()]","8"
"42","netty/transport-native-unix-common-tests","b29ecb502d47eeeafa1710dba0d59547b1c05f71","1403bb97382d5ca7d82f3e26901faffa9893b82e","VAR_DECLARATION_MERGING","12","1","2","[SocketTest testSendBufferSize (), SocketTest testReceivedBufferSize ()]","8"
"54","netty/transport-native-unix-common-tests","1403bb97382d5ca7d82f3e26901faffa9893b82e","8e88cc6b5957d94496a5a3a1eb3214cfa766fd49","LOCAL_VAR_RENAMING","0","1","2","[SocketTest testRawOpt (), SocketTest testReceivedBufferSize ()]","8"
"56","netty/transport-native-unix-common-tests","8e88cc6b5957d94496a5a3a1eb3214cfa766fd49","14bad433db614795f34ee6b7da683a60b8b761b6","VAR_DECLARATION_DIVIDING","13","1","1","[SocketTest testSendBufferSize ()]","4"
"63","netty/transport-native-unix-common-tests","14bad433db614795f34ee6b7da683a60b8b761b6","d46d4a7d5a1f8d3ce270c95ec385f09dd9342f2d","VAR_DECLARATION_MERGING","12","1","1","[SocketTest testSendBufferSize ()]","4"
"0","netty/transport-native-unix-common","d46d4a7d5a1f8d3ce270c95ec385f09dd9342f2d","9c143856517711c13f95b58f5a50fd79e4fe5fd8","SWITCH_EQUAL_SIDES","14","1","37","[IovArray IovArray (), RawUnixChannelOption RawUnixChannelOption (String, int, int, int), IovArray add (ByteBuf, int, int), DomainSocketAddress hashCode (), IovArray maxBytes (long), DomainSocketAddress DomainSocketAddress (File), DomainSocketAddress toString (), DomainSocketAddress DomainSocketAddress (String), IovArray idx (int), DatagramSocketAddress localAddress (), DatagramSocketAddress newAddress (byte[], int), PeerCredentials gids (), IovArray memoryAddress (int), IovArray size (), IovArray maxBytes (), IovArray IovArray (ByteBuf), IovArray release (), Limits Limits (), DatagramSocketAddress receivedAmount (), PeerCredentials uid (), DomainSocketAddress equals (Object), RawUnixChannelOption length (), RawUnixChannelOption validate (ByteBuffer), PeerCredentials toString (), IovArray processMessage (Object), UnixChannelUtil UnixChannelUtil (), UnixChannelUtil computeRemoteAddr (InetSocketAddress, InetSocketAddress), IovArray add (ByteBuf), DomainSocketAddress path (), IovArray add (long, long, int), IovArray clear (), UnixChannelUtil isBufferCopyNeededForWrite (ByteBuf), UnixChannelUtil isBufferCopyNeededForWrite (ByteBuf, int), PeerCredentials pid (), IovArray count (), PeerCredentials PeerCredentials (int, int, int), DatagramSocketAddress DatagramSocketAddress (byte[], int, int, int, DatagramSocketAddress)]","259"
"1","netty/transport-native-unix-common","9c143856517711c13f95b58f5a50fd79e4fe5fd8","5890e6ddda133b8c96d6d2d19286fae6c7ac48c3","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[PeerCredentials PeerCredentials (int, int, int)]","7"
"2","netty/transport-native-unix-common","5890e6ddda133b8c96d6d2d19286fae6c7ac48c3","b7db079d9029e4f0423bfed1ebfdc0b220a6fcd6","SWITCH_EQUAL_SIDES","14","1","1","[PeerCredentials PeerCredentials (int, int, int)]","7"
"6","netty/transport-native-unix-common","b7db079d9029e4f0423bfed1ebfdc0b220a6fcd6","dce55acf1a92098d024ec3f9523316e760eb3397","REVERSE_IF_ELSE","3","1","7","[Buffer free (ByteBuffer), Buffer memoryAddress0 (ByteBuffer), Buffer addressSize (), Buffer allocateDirectWithNativeOrder (int), Buffer memoryAddress (ByteBuffer), Buffer Buffer (), Buffer addressSize0 ()]","56"
"10","netty/transport-native-unix-common","dce55acf1a92098d024ec3f9523316e760eb3397","6447dff93740c3e368adf0aceacd33daee4a3cb8","LOCAL_VAR_RENAMING","0","1","15","[ErrorsStaticallyReferencedJniMethods errnoEINPROGRESS (), ErrorsStaticallyReferencedJniMethods errnoEBADF (), ErrorsStaticallyReferencedJniMethods errnoEPIPE (), ErrorsStaticallyReferencedJniMethods errorEHOSTUNREACH (), ErrorsStaticallyReferencedJniMethods errorEALREADY (), ErrorsStaticallyReferencedJniMethods errorEISCONN (), ErrorsStaticallyReferencedJniMethods errnoEAGAIN (), ErrorsStaticallyReferencedJniMethods errnoEWOULDBLOCK (), ErrorsStaticallyReferencedJniMethods errnoECONNRESET (), ErrorsStaticallyReferencedJniMethods errorENETUNREACH (), ErrorsStaticallyReferencedJniMethods errorECONNREFUSED (), ErrorsStaticallyReferencedJniMethods errnoENOENT (), ErrorsStaticallyReferencedJniMethods strError (int), ErrorsStaticallyReferencedJniMethods ErrorsStaticallyReferencedJniMethods (), ErrorsStaticallyReferencedJniMethods errnoENOTCONN ()]","135"
"12","netty/transport-native-unix-common","6447dff93740c3e368adf0aceacd33daee4a3cb8","1f3fb41ecb1bf78870848c4b8198f4ba0aab152f","LOCAL_VAR_RENAMING","0","1","1","[ErrorsStaticallyReferencedJniMethods strError (int)]","9"
"28","netty/transport-native-unix-common","1f3fb41ecb1bf78870848c4b8198f4ba0aab152f","5381f1c574df9b07fbdb880d59996bf54b1a83dc","LOCAL_VAR_RENAMING","0","1","1","[ErrorsStaticallyReferencedJniMethods strError (int)]","9"
"44","netty/transport-native-unix-common","5381f1c574df9b07fbdb880d59996bf54b1a83dc","d232b8fcba36c01867390ed01e8dd251dfeb8c50","LOCAL_VAR_RENAMING","0","1","1","[ErrorsStaticallyReferencedJniMethods strError (int)]","9"
"64","netty/transport-native-unix-common","d232b8fcba36c01867390ed01e8dd251dfeb8c50","af98c23a49eb55daaf2630bc96b3a6c7e51af4ed","LOCAL_VAR_RENAMING","0","1","1","[ErrorsStaticallyReferencedJniMethods strError (int)]","9"
"0","netty/transport-rxtx","af98c23a49eb55daaf2630bc96b3a6c7e51af4ed","46b9a6fd2d7966d7aa6216de879a12aa6f67a5c0","VAR_DECLARATION_MERGING","12","1","68","[RxtxChannelConfig isRts (), RxtxChannelConfig Databits (int), RxtxChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), RxtxChannelConfig setConnectTimeoutMillis (int), DefaultRxtxChannelConfig setWaitTimeMillis (int), RxtxDeviceAddress RxtxDeviceAddress (String), DefaultRxtxChannelConfig setAutoClose (boolean), DefaultRxtxChannelConfig isRts (), RxtxChannelConfig setStopbits (Stopbits), DefaultRxtxChannelConfig getParitybit (), DefaultRxtxChannelConfig setMaxMessagesPerRead (int), DefaultRxtxChannelConfig setOption (ChannelOption<T>, T), RxtxChannelConfig value (), DefaultRxtxChannelConfig setRts (boolean), RxtxChannelConfig getDatabits (), RxtxChannelConfig setMaxMessagesPerRead (int), DefaultRxtxChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), DefaultRxtxChannelConfig setConnectTimeoutMillis (int), RxtxChannelConfig getStopbits (), DefaultRxtxChannelConfig setAllocator (ByteBufAllocator), RxtxChannelConfig getReadTimeout (), RxtxChannelConfig getBaudrate (), DefaultRxtxChannelConfig setParitybit (Paritybit), RxtxChannelConfig Paritybit (int), RxtxChannelConfig setReadTimeout (int), DefaultRxtxChannelConfig setBaudrate (int), DefaultRxtxChannelConfig getBaudrate (), RxtxDeviceAddress value (), RxtxChannelConfig setMessageSizeEstimator (MessageSizeEstimator), DefaultRxtxChannelConfig setReadTimeout (int), DefaultRxtxChannelConfig getStopbits (), RxtxChannelConfig setWriteBufferHighWaterMark (int), RxtxChannelConfig setWaitTimeMillis (int), DefaultRxtxChannelConfig getOption (ChannelOption<T>), DefaultRxtxChannelConfig isDtr (), DefaultRxtxChannelConfig setMessageSizeEstimator (MessageSizeEstimator), RxtxChannelConfig setWriteSpinCount (int), DefaultRxtxChannelConfig setStopbits (Stopbits), DefaultRxtxChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), DefaultRxtxChannelConfig getOptions (), DefaultRxtxChannelConfig setWriteSpinCount (int), RxtxChannelConfig DATABITS_5 (), RxtxChannelConfig Stopbits (int), RxtxChannelConfig getWaitTimeMillis (), RxtxChannelConfig setAllocator (ByteBufAllocator), RxtxChannelConfig setAutoClose (boolean), RxtxChannelConfig setRts (boolean), DefaultRxtxChannelConfig getDatabits (), RxtxChannelConfig setAutoRead (boolean), RxtxChannelConfig setParitybit (Paritybit), RxtxChannelConfig NONE (), DefaultRxtxChannelConfig setWriteBufferLowWaterMark (int), RxtxChannelConfig setBaudrate (int), RxtxChannelConfig setDatabits (Databits), RxtxChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), DefaultRxtxChannelConfig DefaultRxtxChannelConfig (RxtxChannel), DefaultRxtxChannelConfig setAutoRead (boolean), RxtxChannelConfig valueOf (int), DefaultRxtxChannelConfig getWaitTimeMillis (), DefaultRxtxChannelConfig setWriteBufferHighWaterMark (int), DefaultRxtxChannelConfig setDatabits (Databits), RxtxChannelConfig setWriteBufferLowWaterMark (int), RxtxChannelConfig isDtr (), RxtxChannelOption RxtxChannelOption (), DefaultRxtxChannelConfig setDtr (boolean), DefaultRxtxChannelConfig getReadTimeout (), RxtxChannelConfig setDtr (boolean), RxtxChannelConfig getParitybit ()]","272"
"1","netty/transport-rxtx","46b9a6fd2d7966d7aa6216de879a12aa6f67a5c0","ee9eda0d0a453d89bea1c1bf62490e109be4df29","STATEMENTS_ORDER_REARRANGEMENT","10","1","17","[RxtxChannel RxtxChannel (), RxtxChannel isInputShutdown (), RxtxChannel shutdownInput (), RxtxChannel doClose (), RxtxChannel doInit (), RxtxChannel doDisconnect (), RxtxUnsafe run (), RxtxChannel config (), RxtxChannel doConnect (SocketAddress, SocketAddress), RxtxChannel isOpen (), RxtxChannel localAddress (), RxtxChannel doBind (SocketAddress), RxtxChannel remoteAddress (), RxtxChannel localAddress0 (), RxtxChannel remoteAddress0 (), RxtxUnsafe connect (SocketAddress, SocketAddress, ChannelPromise), RxtxChannel newUnsafe ()]","85"
"8","netty/transport-rxtx","ee9eda0d0a453d89bea1c1bf62490e109be4df29","1930918622aaba2bfaeab332cccb175ae2a79720","REVERSE_IF_ELSE","3","1","1","[RxtxChannelConfig valueOf (int)]","5"
"9","netty/transport-rxtx","1930918622aaba2bfaeab332cccb175ae2a79720","79e9180767ef25f7e7aceb3dfda91f1b52e48f8f","REVERSE_IF_ELSE","3","1","1","[RxtxChannelConfig valueOf (int)]","5"
"10","netty/transport-rxtx","79e9180767ef25f7e7aceb3dfda91f1b52e48f8f","3fa89bd5a502a4b6955bddd9d50b3f2c64ebfe7d","REVERSE_IF_ELSE","3","1","1","[RxtxUnsafe connect (SocketAddress, SocketAddress, ChannelPromise)]","5"
"18","netty/transport-rxtx","3fa89bd5a502a4b6955bddd9d50b3f2c64ebfe7d","d38231ace2c7b6d0dd6fbe8419911f7c359a7885","SWITCH_EQUAL_SIDES","14","1","1","[RxtxChannelConfig valueOf (int)]","5"
"22","netty/transport-rxtx","d38231ace2c7b6d0dd6fbe8419911f7c359a7885","4e87052db7b76d2e6b9c78546b8f2112d620896a","LOCAL_VAR_RENAMING","0","1","1","[RxtxChannelConfig setMessageSizeEstimator (MessageSizeEstimator)]","5"
"23","netty/transport-rxtx","4e87052db7b76d2e6b9c78546b8f2112d620896a","be29daea223e038dee97b0c77242884ea04c000a","REVERSE_IF_ELSE","3","1","1","[RxtxChannelConfig valueOf (int)]","5"
"27","netty/transport-rxtx","be29daea223e038dee97b0c77242884ea04c000a","9ad5466b3051b81afd37cf9ccea1dd2585e05e98","SWITCH_EQUAL_SIDES","14","1","1","[RxtxChannelConfig valueOf (int)]","5"
"28","netty/transport-rxtx","9ad5466b3051b81afd37cf9ccea1dd2585e05e98","02372ad908ab62dc4235ca053ca49b06d2810a01","REVERSE_IF_ELSE","3","1","1","[RxtxChannelConfig valueOf (int)]","5"
"33","netty/transport-rxtx","02372ad908ab62dc4235ca053ca49b06d2810a01","34670545b3788eef55bec7674369e813871d89a6","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[RxtxChannel RxtxChannel ()]","5"
"52","netty/transport-rxtx","34670545b3788eef55bec7674369e813871d89a6","bd7e9bde7e7af55ddba6f8fa2dbb9273b3f1d71b","REVERSE_IF_ELSE","3","1","2","[RxtxChannel doClose (), RxtxUnsafe connect (SocketAddress, SocketAddress, ChannelPromise)]","10"
"61","netty/transport-rxtx","bd7e9bde7e7af55ddba6f8fa2dbb9273b3f1d71b","d032d99ea90700a34cd60533f0a92e2150228a42","STATEMENTS_ORDER_REARRANGEMENT","10","1","3","[RxtxChannel RxtxChannel (), RxtxChannel doClose (), RxtxChannel doConnect (SocketAddress, SocketAddress)]","15"
"64","netty/transport-rxtx","d032d99ea90700a34cd60533f0a92e2150228a42","1428c00789105103c6f2d4ce49104f6f5060454e","REVERSE_IF_ELSE","3","1","1","[RxtxChannelConfig valueOf (int)]","5"
"0","netty/transport-sctp","1428c00789105103c6f2d4ce49104f6f5060454e","ef693573583514ce1a7c0e0d200a99d4e6cd78c7","LOOP_IF_CONTINUE_TO_ELSE","11","1","113","[NioSctpServerChannel NioSctpServerChannel (), SctpServerChannelConfig setConnectTimeoutMillis (int), SctpChannel open (), SctpServerChannelConfig setAllocator (ByteBufAllocator), SctpMessageToMessageDecoder acceptInboundMessage (Object), SctpChannel SctpChannel (SelectorProvider), NioSctpServerChannel doFinishConnect (), OioSctpServerChannel doWrite (ChannelOutboundBuffer), NioSctpServerChannel remoteAddress0 (), DefaultSctpServerChannelConfig getOptions (), OioSctpServerChannel unbindAddress (InetAddress), NioSctpServerChannel allLocalAddresses (), OioSctpServerChannel doDisconnect (), SctpServerChannelConfig setBacklog (int), SctpChannel send (ByteBuffer, MessageInfo), SctpChannel supportedOptions (), OioSctpServerChannel OioSctpServerChannel (SctpServerChannel), OioSctpServerChannel bindAddress (InetAddress, ChannelPromise), DefaultSctpServerChannelConfig setAllocator (ByteBufAllocator), NioSctpServerChannel unbindAddress (InetAddress), NioSctpServerChannel remoteAddress (), NioSctpServerChannel run (), OioSctpServerChannel bindAddress (InetAddress), NioSctpServerChannelConfig NioSctpServerChannelConfig (NioSctpServerChannel, SctpServerChannel), SctpOutboundByteStreamHandler SctpOutboundByteStreamHandler (int, int, boolean), DefaultSctpServerChannelConfig setWriteBufferLowWaterMark (int), NioSctpServerChannel doClose (), SctpServerChannelConfig setMaxMessagesPerRead (int), DefaultSctpServerChannelConfig setOption (ChannelOption<T>, T), NioSctpServerChannel filterOutboundMessage (Object), DefaultSctpServerChannelConfig setMessageSizeEstimator (MessageSizeEstimator), NioSctpServerChannel doDisconnect (), NioSctpServerChannel localAddress0 (), OioSctpServerChannel doBind (SocketAddress), NioSctpServerChannel doWriteMessage (Object, ChannelOutboundBuffer), OioSctpServerChannel newServerSocket (), SctpServerChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), NioSctpServerChannel doReadMessages (List<Object>), DefaultSctpServerChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), SctpChannel bind (SocketAddress), SctpServerChannelConfig setMessageSizeEstimator (MessageSizeEstimator), DefaultSctpServerChannelConfig getBacklog (), OioSctpServerChannelConfig OioSctpServerChannelConfig (OioSctpServerChannel, SctpServerChannel), DefaultSctpServerChannelConfig setWriteBufferHighWaterMark (int), DefaultSctpServerChannelConfig setBacklog (int), DefaultSctpServerChannelConfig setSendBufferSize (int), OioSctpServerChannel remoteAddress0 (), DefaultSctpServerChannelConfig getInitMaxStreams (), NioSctpServerChannel config (), OioSctpServerChannel isOpen (), OioSctpServerChannel unbindAddress (InetAddress, ChannelPromise), OioSctpServerChannel doReadMessages (List<Object>), OioSctpServerChannel localAddress (), DefaultSctpServerChannelConfig setAutoRead (boolean), NioSctpServerChannel metadata (), OioSctpServerChannel filterOutboundMessage (Object), SctpServerChannelConfig setAutoRead (boolean), OioSctpServerChannel metadata (), SctpServerChannelConfig getReceiveBufferSize (), SctpChannel getRemoteAddresses (), SctpServerChannelConfig setWriteBufferHighWaterMark (int), OioSctpServerChannel doClose (), NioSctpServerChannel newSocket (), OioSctpServerChannel run (), SctpChannel unbindAddress (InetAddress), SctpChannel getAllLocalAddresses (), SctpServerChannelConfig setAutoClose (boolean), SctpServerChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), DefaultSctpServerChannelConfig getOption (ChannelOption<T>), SctpChannel bindAddress (InetAddress), OioSctpServerChannel isActive (), SctpServerChannelConfig setInitMaxStreams (InitMaxStreams), SctpServerChannelConfig setWriteSpinCount (int), SctpChannel association (), OioSctpServerChannel allLocalAddresses (), NioSctpServerChannel doConnect (SocketAddress, SocketAddress), NioSctpServerChannel unbindAddress (InetAddress, ChannelPromise), SctpServerChannelConfig getSendBufferSize (), NioSctpServerChannel bindAddress (InetAddress, ChannelPromise), DefaultSctpServerChannelConfig setConnectTimeoutMillis (int), SctpServerChannelConfig setReceiveBufferSize (int), OioSctpServerChannelConfig autoReadCleared (), SctpOutboundByteStreamHandler SctpOutboundByteStreamHandler (int, int), OioSctpServerChannel doConnect (SocketAddress, SocketAddress), OioSctpServerChannel OioSctpServerChannel (), NioSctpServerChannel doBind (SocketAddress), SctpServerChannelConfig getInitMaxStreams (), OioSctpServerChannel localAddress0 (), NioSctpServerChannel localAddress (), DefaultSctpServerChannelConfig DefaultSctpServerChannelConfig (io.netty.channel.sctp.SctpServerChannel, SctpServerChannel), DefaultSctpServerChannelConfig setReceiveBufferSize (int), NioSctpServerChannel bindAddress (InetAddress), SctpChannel connect (SocketAddress), OioSctpServerChannel config (), NioSctpServerChannelConfig autoReadCleared (), SctpChannel receive (ByteBuffer, T, NotificationHandler<T>), SctpChannel finishConnect (), SctpOutboundByteStreamHandler encode (ChannelHandlerContext, ByteBuf, List<Object>), SctpChannel setOption (SctpSocketOption<T>, T), DefaultSctpServerChannelConfig getReceiveBufferSize (), SctpChannel getOption (SctpSocketOption<T>), OioSctpServerChannel remoteAddress (), DefaultSctpServerChannelConfig setInitMaxStreams (SctpStandardSocketOptions.InitMaxStreams), DefaultSctpServerChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), NioSctpServerChannel isActive (), DefaultSctpServerChannelConfig setMaxMessagesPerRead (int), NioSctpServerChannel javaChannel (), DefaultSctpServerChannelConfig getSendBufferSize (), DefaultSctpServerChannelConfig setWriteSpinCount (int), SctpServerChannelConfig getBacklog (), DefaultSctpServerChannelConfig setAutoClose (boolean), SctpServerChannelConfig setSendBufferSize (int), SctpServerChannelConfig setWriteBufferLowWaterMark (int)]","791"
"12","netty/transport-sctp","ef693573583514ce1a7c0e0d200a99d4e6cd78c7","9e67897d4f645c4e176e28c845173fbb24ffd3d4","LOCAL_VAR_RENAMING","0","1","2","[SctpServerChannelConfig setConnectTimeoutMillis (int), SctpServerChannelConfig setAllocator (ByteBufAllocator)]","14"
"15","netty/transport-sctp","9e67897d4f645c4e176e28c845173fbb24ffd3d4","87967f4961e7a8bce116e862153c15e779a3f744","LOCAL_VAR_RENAMING","0","1","2","[SctpServerChannelConfig setBacklog (int), SctpServerChannelConfig setAllocator (ByteBufAllocator)]","14"
"32","netty/transport-sctp","87967f4961e7a8bce116e862153c15e779a3f744","94e337f93acad81140649f31177cec623b0b25f7","LOCAL_VAR_RENAMING","0","1","2","[SctpServerChannelConfig setWriteBufferHighWaterMark (int), SctpServerChannelConfig setAutoClose (boolean)]","14"
"0","netty/transport-udt","94e337f93acad81140649f31177cec623b0b25f7","7824da320d2b03ce1f20e0680d1bd577127066ab","FOR_TO_WHILE","1","1","75","[NioUdtMessageConnectorChannel doDisconnect (), NioUdtMessageConnectorChannel javaChannel (), NioUdtMessageConnectorChannel doBind (SocketAddress), DefaultUdtChannelConfig setSystemSendBufferSize (int), DefaultUdtChannelConfig setProtocolReceiveBufferSize (int), NioUdtMessageConnectorChannel localAddress0 (), NioUdtMessageConnectorChannel NioUdtMessageConnectorChannel (Channel, SocketChannelUDT), NioUdtProvider NioUdtProvider (TypeUDT, KindUDT), NioUdtMessageConnectorChannel doReadMessages (List<Object>), UdtMessage retain (), NioUdtProvider newConnectorChannelUDT (TypeUDT), DefaultUdtChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), DefaultUdtChannelConfig setReuseAddress (boolean), NioUdtProvider channelUDT (Channel), NioUdtMessageConnectorChannel run (), UdtMessage retain (int), DefaultUdtChannelConfig setSoLinger (int), NioUdtMessageConnectorChannel remoteAddress0 (), DefaultUdtChannelConfig getProtocolSendBufferSize (), NioUdtMessageConnectorChannel config (), NioUdtMessageConnectorChannel localAddress (), NioUdtMessageConnectorChannel doConnect (SocketAddress, SocketAddress), DefaultUdtChannelConfig setWriteBufferLowWaterMark (int), DefaultUdtChannelConfig setProtocolSendBufferSize (int), UdtMessage retainedDuplicate (), DefaultUdtChannelConfig setReceiveBufferSize (int), NioUdtMessageConnectorChannel privilegedBind (SocketChannelUDT, SocketAddress), DefaultUdtChannelConfig getOptions (), NioUdtProvider type (), UdtMessage copy (), UdtMessage touch (), DefaultUdtChannelConfig getOption (ChannelOption<T>), DefaultUdtChannelConfig getSendBufferSize (), DefaultUdtChannelConfig setConnectTimeoutMillis (int), NioUdtMessageConnectorChannel doClose (), UdtMessage UdtMessage (ByteBuf), NioUdtMessageConnectorChannel NioUdtMessageConnectorChannel (SocketChannelUDT), DefaultUdtChannelConfig DefaultUdtChannelConfig (UdtChannel, ChannelUDT, boolean), DefaultUdtChannelConfig getSystemSendBufferSize (), NioUdtMessageConnectorChannel NioUdtMessageConnectorChannel (), NioUdtProvider socketUDT (Channel), NioUdtByteAcceptorChannel NioUdtByteAcceptorChannel (), DefaultUdtChannelConfig setAutoClose (boolean), DefaultUdtChannelConfig apply (ChannelUDT), NioUdtProvider newRendezvousChannelUDT (TypeUDT), DefaultUdtChannelConfig setMessageSizeEstimator (MessageSizeEstimator), UdtMessage touch (Object), NioUdtMessageAcceptorChannel NioUdtMessageAcceptorChannel (), DefaultUdtChannelConfig getSoLinger (), NioUdtProvider kind (), NioUdtMessageConnectorChannel metadata (), DefaultUdtChannelConfig setSendBufferSize (int), UdtMessage replace (ByteBuf), NioUdtMessageConnectorChannel NioUdtMessageConnectorChannel (TypeUDT), NioUdtMessageConnectorChannel isActive (), DefaultUdtChannelConfig getSystemReceiveBufferSize (), NioUdtProvider newChannel (), UdtMessage duplicate (), DefaultUdtChannelConfig getProtocolReceiveBufferSize (), DefaultUdtChannelConfig setWriteSpinCount (int), DefaultUdtChannelConfig setAllocator (ByteBufAllocator), NioUdtByteAcceptorChannel newConnectorChannel (SocketChannelUDT), DefaultUdtChannelConfig setOption (ChannelOption<T>, T), DefaultUdtChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), NioUdtMessageConnectorChannel doWriteMessage (Object, ChannelOutboundBuffer), NioUdtMessageAcceptorChannel newConnectorChannel (SocketChannelUDT), DefaultUdtChannelConfig isReuseAddress (), NioUdtMessageConnectorChannel remoteAddress (), NioUdtProvider newAcceptorChannelUDT (TypeUDT), DefaultUdtChannelConfig setMaxMessagesPerRead (int), DefaultUdtChannelConfig setAutoRead (boolean), NioUdtMessageConnectorChannel doFinishConnect (), DefaultUdtChannelConfig getReceiveBufferSize (), DefaultUdtChannelConfig setSystemReceiveBufferSize (int), DefaultUdtChannelConfig setWriteBufferHighWaterMark (int)]","450"
"14","netty/transport-udt","7824da320d2b03ce1f20e0680d1bd577127066ab","49cf200ad11654e623887460b7b6d66f031a9cfd","LOCAL_VAR_RENAMING","0","1","21","[UdtServerChannelConfig getBacklog (), UdtServerChannelConfig setRecvByteBufAllocator (RecvByteBufAllocator), UdtServerChannelConfig setWriteBufferHighWaterMark (int), UdtServerChannelConfig setProtocolSendBufferSize (int), UdtServerChannelConfig setWriteBufferWaterMark (WriteBufferWaterMark), UdtServerChannelConfig setAutoRead (boolean), UdtServerChannelConfig setBacklog (int), UdtServerChannelConfig setSystemSendBufferSize (int), UdtServerChannelConfig setProtocolReceiveBufferSize (int), UdtServerChannelConfig setMaxMessagesPerRead (int), UdtServerChannelConfig setReuseAddress (boolean), UdtServerChannelConfig setWriteBufferLowWaterMark (int), UdtServerChannelConfig setSystemReceiveBufferSize (int), UdtServerChannelConfig setAutoClose (boolean), UdtServerChannelConfig setSoLinger (int), UdtServerChannelConfig setConnectTimeoutMillis (int), UdtServerChannelConfig setWriteSpinCount (int), UdtServerChannelConfig setAllocator (ByteBufAllocator), UdtServerChannelConfig setMessageSizeEstimator (MessageSizeEstimator), UdtServerChannelConfig setReceiveBufferSize (int), UdtServerChannelConfig setSendBufferSize (int)]","147"
"50","netty/transport-udt","49cf200ad11654e623887460b7b6d66f031a9cfd","1b0eb3f4a7e474c0809c450b20ecf724734e63c9","LOCAL_VAR_RENAMING","0","1","2","[UdtServerChannelConfig setAutoClose (boolean), UdtServerChannelConfig setReuseAddress (boolean)]","14"
"0","netty/transport","1b0eb3f4a7e474c0809c450b20ecf724734e63c9","6a7a3307b986cfecd6b18a6469c97cc97728f60e","LOCAL_VAR_RENAMING","0","1","113","[DefaultChannelProgressivePromise addListeners (GenericFutureListener<? extends Future<? super Void>>), DefaultChannelProgressivePromise await (), DefaultChannelProgressivePromise setSuccess (Void), DefaultChannelProgressivePromise flushCheckpoint (), HandleImpl guess (), HandleImpl attemptedBytesRead (int), SelectorTuple SelectorTuple (Selector, Selector), DefaultChannelProgressivePromise awaitUninterruptibly (), ChannelProgressiveFuture removeListeners (GenericFutureListener<? extends Future<? super Void>>), DefaultChannelProgressivePromise sync (), SelectorTuple wakeup (boolean), DefaultChannelProgressivePromise flushCheckpoint (long), SelectorTuple afterScheduledTaskSubmitted (long), SelectorTuple SelectorTuple (Selector), DefaultChannelProgressivePromise promise (), NioEventLoopGroup NioEventLoopGroup (int, Executor, EventExecutorChooserFactory, SelectorProvider, SelectStrategyFactory), HandleImpl lastBytesRead (int), SelectorTuple register (SelectableChannel, int, NioTask<?>), ChannelProgressiveFuture awaitUninterruptibly (), SelectorTuple closeAll (), HandleImpl maxBytesPerRead (int), SelectorTuple cleanup (), SelectorTuple select (long), DefaultChannelProgressivePromise trySuccess (), NioEventLoopGroup NioEventLoopGroup (int, Executor, SelectorProvider, SelectStrategyFactory), DefaultChannelProgressivePromise syncUninterruptibly (), SelectorTuple selectNow (), ChannelProgressiveFuture addListeners (GenericFutureListener<? extends Future<? super Void>>), EmbeddedSocketAddress toString (), HandleImpl incMessagesRead (int), SelectorTuple setIoRatio (int), HandleImpl checkMaxBytesPerReadPair (int, int), DefaultChannelProgressivePromise unvoid (), DefaultChannelProgressivePromise channel (), NioEventLoop get (), NioEventLoopGroup NioEventLoopGroup (int, Executor, EventExecutorChooserFactory, SelectorProvider, SelectStrategyFactory, RejectedExecutionHandler), NioEventLoopGroup NioEventLoopGroup (int, Executor, EventExecutorChooserFactory, SelectorProvider, SelectStrategyFactory, RejectedExecutionHandler, EventLoopTaskQueueFactory), SelectorTuple processSelectedKey (SelectionKey, NioTask<SelectableChannel>), SelectorTuple registeredChannels (), DefaultChannelProgressivePromise setProgress (long, long), DefaultChannelProgressivePromise DefaultChannelProgressivePromise (Channel), NioEventLoop NioEventLoop (NioEventLoopGroup, Executor, SelectorProvider, SelectStrategy, RejectedExecutionHandler, EventLoopTaskQueueFactory, EventLoopTaskQueueFactory), SelectorTuple newTaskQueue0 (int), SelectorTuple rebuildSelector (), DefaultChannelProgressivePromise executor (), ChannelHandler handlerRemoved (ChannelHandlerContext), HandleImpl DefaultMaxBytesRecvByteBufAllocator (), NioDomainSocketUtil NioDomainSocketUtil (), NioDomainSocketUtil deleteSocketFile (SocketAddress), SelectorTuple processSelectedKey (SelectionKey, AbstractNioChannel), SelectorTuple processSelectedKeys (), NioEventLoopGroup NioEventLoopGroup (), ChannelProgressiveFuture syncUninterruptibly (), HandleImpl readComplete (), HandleImpl DefaultMaxBytesRecvByteBufAllocator (int, int), NioEventLoopGroup setIoRatio (int), HandleImpl maxBytesPerRead (), SelectorTuple beforeScheduledTaskSubmitted (long), DefaultChannelProgressivePromise addListener (GenericFutureListener<? extends Future<? super Void>>), ChannelProgressiveFuture await (), SelectorTuple unwrappedSelector (), ChannelProgressiveFuture removeListener (GenericFutureListener<? extends Future<? super Void>>), SelectorTuple rebuildSelector0 (), ChannelProgressiveFuture addListener (GenericFutureListener<? extends Future<? super Void>>), ChannelProgressiveFuture sync (), HandleImpl allocate (ByteBufAllocator), SelectorTuple selectAgain (), HandleImpl lastBytesRead (), SelectorTuple invokeChannelUnregistered (NioTask<SelectableChannel>, SelectionKey, Throwable), DefaultChannelProgressivePromise removeListeners (GenericFutureListener<? extends Future<? super Void>>), HandleImpl reset (ChannelConfig), DefaultChannelProgressivePromise isVoid (), SelectorTuple processSelectedKeysOptimized (), HandleImpl continueReading (UncheckedBooleanSupplier), NioEventLoopGroup NioEventLoopGroup (int), SelectorTuple run (), HandleImpl newHandle (), SelectorTuple unexpectedSelectorWakeup (int), SelectorTuple getIoRatio (), HandleImpl maxBytesPerReadPair (int, int), HandleImpl get (), SelectorTuple openSelector (), DefaultChannelProgressivePromise checkDeadLock (), SelectorTuple newTaskQueue (int), HandleImpl maxBytesPerIndividualRead (int), DefaultChannelProgressivePromise DefaultChannelProgressivePromise (Channel, EventExecutor), ChannelHandler handlerAdded (ChannelHandlerContext), HandleImpl maxBytesPerReadPair (), HandleImpl continueReading (), SelectorTuple registeredChannelsIterator (), SelectorTuple selectorProvider (), SelectorTuple cancel (SelectionKey), NioEventLoopGroup NioEventLoopGroup (int, ThreadFactory), ChannelHandler exceptionCaught (ChannelHandlerContext, Throwable), NioEventLoop newTaskQueue (EventLoopTaskQueueFactory), NioEventLoopGroup NioEventLoopGroup (int, ThreadFactory, SelectorProvider, SelectStrategyFactory), NioEventLoopGroup NioEventLoopGroup (int, Executor, SelectorProvider), DefaultChannelProgressivePromise setFailure (Throwable), NioEventLoop run (), NioEventLoopGroup NioEventLoopGroup (int, ThreadFactory, SelectorProvider), DefaultChannelProgressivePromise setSuccess (), NioEventLoopGroup NioEventLoopGroup (int, Executor, EventExecutorChooserFactory, SelectorProvider, SelectStrategyFactory, RejectedExecutionHandler, EventLoopTaskQueueFactory, EventLoopTaskQueueFactory), NioEventLoopGroup NioEventLoopGroup (int, Executor), SelectorTuple processSelectedKeysPlain (Set<SelectionKey>), SelectorTuple register0 (SelectableChannel, int, NioTask<?>), NioEventLoopGroup rebuildSelectors (), NioEventLoopGroup newChild (Executor, Object), DefaultChannelProgressivePromise removeListener (GenericFutureListener<? extends Future<? super Void>>), HandleImpl attemptedBytesRead (), HandleImpl maxBytesPerIndividualRead (), SelectorTuple handleLoopException (Throwable), NioDomainSocketUtil newUnixDomainSocketAddress (String), NioEventLoopGroup NioEventLoopGroup (ThreadFactory)]","904"
"38","netty/transport","6a7a3307b986cfecd6b18a6469c97cc97728f60e","177049dcc0ecb20e921d6c8dcf3f96f45a888be9","LOCAL_VAR_RENAMING","0","1","2","[ChannelProgressiveFuture addListeners (GenericFutureListener<? extends Future<? super Void>>), ChannelProgressiveFuture removeListeners (GenericFutureListener<? extends Future<? super Void>>)]","16"
"49","netty/transport","177049dcc0ecb20e921d6c8dcf3f96f45a888be9","3f2ef05f7dd779433eae4a09361012aaa19188a6","LOCAL_VAR_RENAMING","0","1","2","[ChannelProgressiveFuture addListeners (GenericFutureListener<? extends Future<? super Void>>), ChannelProgressiveFuture removeListener (GenericFutureListener<? extends Future<? super Void>>)]","16"
"0","spring-hateoas","7048c0fa77e5ee193b564c52f07d60ec2ac704f9","0c084693958595e55a6d869287971f5c2c062924","PP_TO_ADD_ASSIGNMENT","6","1","43","[DelegatingEntityLinks linkFor (Class<?>, Object), ControllerLinkBuilderFactory setUriComponentsContributors (List<? extends UriComponentsContributor>), HalLinkListSerializer serialize (List<Link>, JsonGenerator, SerializerProvider), AbstractEntityLinks linkForSingleResource (Identifiable<?>), HalEmbeddedBuilder asCollection (Object), RequestParamParameterAccessor createParameter (MethodParameter, Object, AnnotationAttribute), ControllerLinkBuilderFactory applyUriComponentsContributer (UriComponentsBuilder, MethodInvocation), ControllerLinkBuilderFactory linkTo (Class<?>, Object), HalLinkListSerializer toHalLink (Link), HateoasConfiguration defaultRelProvider (), ControllerLinkBuilderFactory linkTo (Method, Object), HalHandlerInstantiator typeIdResolverInstance (MapperConfig<?>, Annotated, Class<?>), ControllerLinkBuilderFactory linkTo (Class<?>, Method, Object), AnnotationAttribute getValueFrom (MethodParameter), HalHandlerInstantiator findInstance (Class<?>), HateoasConfiguration linkDiscoverers (PluginRegistry<LinkDiscoverer,MediaType>), AnnotationAttribute AnnotationAttribute (Class<? extends Annotation>, String), HalHandlerInstantiator HalHandlerInstantiator (RelProvider, CurieProvider, MessageSourceAccessor, AutowireCapableBeanFactory), DelegatingEntityLinks linkToCollectionResource (Class<?>), HalLinkListSerializer getTitle (String), AbstractEntityLinks linkToSingleResource (Identifiable<?>), HalEmbeddedBuilder add (Object), AbstractEntityLinks linkForSingleResource (Class<?>, Object), DelegatingEntityLinks DelegatingEntityLinks (PluginRegistry<EntityLinks,Class<?>>), RequestParamParameterAccessor verifyParameterValue (MethodParameter, Object), HateoasConfiguration annotationRelProvider (), DelegatingEntityLinks getPluginFor (Class<?>), DelegatingEntityLinks linkFor (Class<?>), HalEmbeddedBuilder getDefaultedRelFor (EmbeddedWrapper, boolean), ControllerLinkBuilderFactory bindRequestParameters (UriComponentsBuilder, BoundMethodParameter), BasicLinkBuilder BasicLinkBuilder (UriComponentsBuilder), ControllerLinkBuilderFactory linkTo (Class<?>, Map<String,?>), AbstractEmbeddedWrapper getRelTargetType (), EmbeddedWrappers wrap (Object, String), HalHandlerInstantiator serializerInstance (SerializationConfig, Annotated, Class<?>), EmbeddedCollection EmbeddedCollection (Collection<Object>, String), HalHandlerInstantiator HalHandlerInstantiator (RelProvider, CurieProvider, MessageSourceAccessor, boolean, AutowireCapableBeanFactory, HalConfiguration), DelegatingEntityLinks linkToSingleResource (Class<?>, Object), BasicLinkBuilder createNewInstance (UriComponentsBuilder), RequestParamParameterAccessor isRequired (), AnnotationAttribute getValueFrom (Annotation), AnnotationAttribute getValueFrom (AnnotatedElement), ControllerLinkBuilderFactory linkTo (Object)]","473"
"3","spring-hateoas","0c084693958595e55a6d869287971f5c2c062924","b254241bbd718f1f0fc2d2c80fd1a67570ae204e","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ResourceAssemblerSupport ResourceAssemblerSupport (Class<?>, Class<D>)]","12"
"7","spring-hateoas","b254241bbd718f1f0fc2d2c80fd1a67570ae204e","11609a061185362f34e8de893e88d70473f91f1c","LOCAL_VAR_RENAMING","0","1","2","[ResourceAssemblerSupport ResourceAssemblerSupport (Class<?>, Class<D>), ResourceAssemblerSupport toResources (Iterable<? extends T>)]","24"
"60","spring-hateoas","11609a061185362f34e8de893e88d70473f91f1c","5cde9e867e6fe2de51a3487e939a2e20f94e4d63","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ResourceAssemblerSupport ResourceAssemblerSupport (Class<?>, Class<D>)]","12"
"0","RuoYi/ruoyi-admin","0a383753a3b4f54e5ec9cd45d1b5eda1a1493115","6374f3e3ff6eee3ba75d4abb7226ffdeed5c5496","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","141","[AreaModel AreaModel (int, int, String, String, String, String, Integer), AreaModel AreaModel (), SysUserController insertAuthRole (Long, Long[]), CommonController resourceDownload (String, HttpServletRequest, HttpServletResponse), CommonController uploadFile (MultipartFile), UserTableModel UserTableModel (int, String, String, String, String, String, double, String), UserTableModel setUserId (int), DemoDialogController parent (), DemoTableController print (), AreaModel setIsTreeLeaf (Integer), SysUserController selectDeptTree (Long, ModelMap), AreaModel setParentId (Long), DemoTableController dynamicColumns (), DemoTableController other (), UserTableModel getUserBalance (), SysDeptController addSave (SysDept), DemoTableController exportSelected (UserTableModel, String), DemoTableController headerStyle (), DemoTableController detail (), DemoTableController resizable (), SysUserController resetPwd (Long, ModelMap), UserTableModel setUserName (String), SysDictDataController editSave (SysDictData), AreaModel getAreaCode (), DemoDialogController radio (), DemoTableController export (), UserTableModel getUserName (), UserTableModel setUserCode (String), SysDictDataController edit (Long, ModelMap), DemoTableController event (), SysUserController editSave (SysUser), AreaModel getId (), DemoDialogController form (), SysDeptController editSave (SysDept), SysUserOnlineController online (), CacheController getCacheNames (String, ModelMap), SysDeptController add (Long, ModelMap), SysUserController checkLoginNameUnique (SysUser), SysUserOnlineController batchForceLogout (String), UserTableColumn getTitle (), DemoTableController treeList (AreaModel), SysDictDataController addSave (SysDictData), AreaModel getAreaName (), SysDeptController list (SysDept), UserTableModel getUserId (), SysDictDataController list (SysDictData), UserTableModel getUserCode (), SysUserController importData (MultipartFile, boolean), DemoTableController asynTree (), SysUserController addSave (SysUser), DemoTableController groupHeader (), SysUserController list (SysUser), SysUserController importTemplate (), UserTableColumn setField (String), AreaModel getParentId (), DemoDialogController check (), SysDeptController checkDeptNameUnique (SysDept), SysDictDataController remove (String), SysDeptController edit (Long, ModelMap), SysUserController checkPhoneUnique (SysUser), AreaModel getPinYin (), UserTableModel setCreateTime (Date), DemoTableController fixedColumns (), UserTableModel setUserSex (String), DemoTableController button (), SysUserController user (), CacheController cache (ModelMap), UserTableColumn setTitle (String), DemoTableController pageGo (), CacheController clearCacheKey (String, String, ModelMap), UserTableModel setUserEmail (String), SysUserController add (ModelMap), DemoTableController image (), SysUserController remove (String), AreaModel setAreaName (String), DemoDialogController layer (), SysRegisterController ajaxRegister (SysUser), UserTableModel getStatus (), UserTableModel setUserBalance (double), UserTableColumn UserTableColumn (), CommonController uploadFiles (List<MultipartFile>), UserTableColumn UserTableColumn (String, String), SysUserController deptTreeData (), SysDictDataController add (String, ModelMap), SysDictDataController export (SysDictData), DemoTableController ajaxColumns (UserTableColumn), DemoTableController params (), DemoTableController reorderRows (), SysDeptController remove (Long), DemoTableController multi (), DemoTableController data (ModelMap), DemoDialogController frame2 (), DemoTableController editable (), SysUserController changeStatus (SysUser), SysDeptController selectDeptTree (Long, Long, ModelMap), DemoTableController search (), UserTableModel getCreateTime (), AreaModel setSimplePy (String), UserTableModel setStatus (String), UserTableModel UserTableModel (), DemoTableController footer (), DemoTableController refresh (), AreaModel setPinYin (String), DemoTableController child (), DemoTableController exportSelected (), DemoTableController remember (), UserTableModel getUserSex (), SysUserController checkEmailUnique (SysUser), SysDeptController treeDataExcludeChild (Long), UserTableModel getUserPhone (), SysUserOnlineController list (SysUserOnline), DemoTableController curd (), CacheController clearCacheName (String, ModelMap), UserTableColumn getField (), SysRegisterController register (), CacheController clearAll (ModelMap), DemoTableController list (UserTableModel), UserTableModel setUserPhone (String), SysUserController edit (Long, ModelMap), SysDeptController dept (), DemoTableController reorderColumns (), DemoDialogController dialog (), AreaModel setId (Long), DemoTableController customView (), DemoOperateController importUser (List<UserOperateModel>, Boolean), AreaModel setAreaCode (String), DemoDialogController table (), SysDictDataController dictData (), DemoTableController listChild (AreaModel), CacheController getCacheValue (String, String, String, ModelMap), UserTableModel getUserEmail (), DemoTableController subdata (), RuoYiApplication main (String[]), CacheController getCacheKeys (String, String, ModelMap), SysUserController export (SysUser), CommonController fileDownload (String, Boolean, HttpServletResponse, HttpServletRequest), SysUserController resetPwdSave (SysUser), SysUserController authRole (Long, ModelMap), AreaModel getIsTreeLeaf (), DemoDialogController frame1 (), AreaModel getSimplePy ()]","1692"
"1","RuoYi/ruoyi-admin","6374f3e3ff6eee3ba75d4abb7226ffdeed5c5496","99c13a1464a75311a3af7cf94647eff8084ae7f5","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","9","[SysIndexController unlockscreen (String), SysIndexController menuStyle (String, HttpServletResponse), SysIndexController passwordIsExpiration (Date), SysIndexController index (ModelMap), SysIndexController initPasswordIsModify (Date), SysIndexController main (ModelMap), SysIndexController contentMainClass (Boolean, Boolean), SysIndexController lockscreen (ModelMap), SysIndexController switchSkin ()]","117"
"2","RuoYi/ruoyi-admin","99c13a1464a75311a3af7cf94647eff8084ae7f5","e7fcfb97c967c8826189f8471cf53b20138b92d7","INFIX_EXPRESSION_DIVIDING","8","1","2","[SysIndexController passwordIsExpiration (Date), SysIndexController initPasswordIsModify (Date)]","26"
"4","RuoYi/ruoyi-admin","e7fcfb97c967c8826189f8471cf53b20138b92d7","dad5c154505cc81b75e7a4c5b966990abb76fcce","REVERSE_IF_ELSE","3","1","4","[SysIndexController unlockscreen (String), SysIndexController passwordIsExpiration (Date), SysIndexController index (ModelMap), SysIndexController contentMainClass (Boolean, Boolean)]","52"
"5","RuoYi/ruoyi-admin","dad5c154505cc81b75e7a4c5b966990abb76fcce","e3c15b320279ad4246b3f8412bb6f590450981cc","VAR_DECLARATION_MERGING","12","1","1","[SysIndexController index (ModelMap)]","13"
"6","RuoYi/ruoyi-admin","e3c15b320279ad4246b3f8412bb6f590450981cc","aeefef68709b987dbfc2bc0a5d87f73107c0f0ba","INFIX_EXPRESSION_DIVIDING","8","1","1","[SysIndexController initPasswordIsModify (Date)]","13"
"8","RuoYi/ruoyi-admin","aeefef68709b987dbfc2bc0a5d87f73107c0f0ba","fbff0a3eb2d5c62fcc8b180a34857e7c6f21aac1","SWITCH_EQUAL_SIDES","14","1","1","[SysIndexController initPasswordIsModify (Date)]","13"
"10","RuoYi/ruoyi-admin","fbff0a3eb2d5c62fcc8b180a34857e7c6f21aac1","f2b63da3b90ae1a2498964e4e22bfab7e58ffe8a","SWITCH_EQUAL_SIDES","14","1","1","[SysIndexController initPasswordIsModify (Date)]","13"
"11","RuoYi/ruoyi-admin","f2b63da3b90ae1a2498964e4e22bfab7e58ffe8a","dde99215b6ed6e05e8115fecc0b8bc56d8915ac0","VAR_DECLARATION_MERGING","12","1","1","[SysIndexController initPasswordIsModify (Date)]","13"
"12","RuoYi/ruoyi-admin","dde99215b6ed6e05e8115fecc0b8bc56d8915ac0","bdc29b7cecca3527abb2bfe236aa8fce499e96de","SWITCH_EQUAL_SIDES","14","1","1","[SysIndexController initPasswordIsModify (Date)]","13"
"14","RuoYi/ruoyi-admin","bdc29b7cecca3527abb2bfe236aa8fce499e96de","abd3a4cc59a46fe76aef73e9b413c26aa67a9315","LOCAL_VAR_RENAMING","0","1","1","[SysIndexController index (ModelMap)]","13"
"16","RuoYi/ruoyi-admin","abd3a4cc59a46fe76aef73e9b413c26aa67a9315","e86fca4bdb74506fa11611e208cffaf5447a328d","LOCAL_VAR_RENAMING","0","1","2","[SysIndexController unlockscreen (String), SysIndexController contentMainClass (Boolean, Boolean)]","26"
"17","RuoYi/ruoyi-admin","e86fca4bdb74506fa11611e208cffaf5447a328d","b616e57cef11081bd54c3620bf564a7ea7a8976e","VAR_DECLARATION_MERGING","12","1","1","[SysIndexController index (ModelMap)]","13"
"20","RuoYi/ruoyi-admin","b616e57cef11081bd54c3620bf564a7ea7a8976e","b39ba31358e4c927b0df2c35312df2e9921e9dcc","VAR_DECLARATION_DIVIDING","13","1","1","[SysIndexController initPasswordIsModify (Date)]","13"
"22","RuoYi/ruoyi-admin","b39ba31358e4c927b0df2c35312df2e9921e9dcc","63d3c46bba9dd62cdaa3f7a0a245dddc65c446fa","LOCAL_VAR_RENAMING","0","1","1","[BuildController build ()]","14"
"28","RuoYi/ruoyi-admin","63d3c46bba9dd62cdaa3f7a0a245dddc65c446fa","a7731b7226e651f73417d3bd5c52e32af6ccece3","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[SysIndexController index (ModelMap)]","14"
"29","RuoYi/ruoyi-admin","a7731b7226e651f73417d3bd5c52e32af6ccece3","121ef0e015f5f7743c3e13546c2114b6f462a83d","LOCAL_VAR_RENAMING","0","1","2","[SysIndexController initPasswordIsModify (Date), SysIndexController main (ModelMap)]","28"
"35","RuoYi/ruoyi-admin","121ef0e015f5f7743c3e13546c2114b6f462a83d","c176ae4b3d1e8feb74a7b36a960c6ba36cc43ae4","VAR_DECLARATION_MERGING","12","1","1","[SysIndexController initPasswordIsModify (Date)]","14"
"45","RuoYi/ruoyi-admin","c176ae4b3d1e8feb74a7b36a960c6ba36cc43ae4","873a1ed3f914019c127e9ab102f9440727988e5f","REVERSE_IF_ELSE","3","1","1","[SysIndexController passwordIsExpiration (Date)]","14"
"46","RuoYi/ruoyi-admin","873a1ed3f914019c127e9ab102f9440727988e5f","98c009597a0db0d8c57601b95318d5bf185117d8","SWITCH_EQUAL_SIDES","14","1","1","[SysIndexController initPasswordIsModify (Date)]","14"
"47","RuoYi/ruoyi-admin","98c009597a0db0d8c57601b95318d5bf185117d8","eea57fff58eb66e54be7a9b89400b693396fc451","REVERSE_IF_ELSE","3","1","1","[SysIndexController passwordIsExpiration (Date)]","14"
"56","RuoYi/ruoyi-admin","eea57fff58eb66e54be7a9b89400b693396fc451","84a7d95e69b012c1e7d23ac704e8e22e4cd2c0e6","LOCAL_VAR_RENAMING","0","1","1","[BuildController build ()]","14"
"57","RuoYi/ruoyi-admin","84a7d95e69b012c1e7d23ac704e8e22e4cd2c0e6","fb943ddb9ec879c7068801c33f10e3e882d76c2d","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[SysIndexController index (ModelMap)]","14"
"61","RuoYi/ruoyi-admin","fb943ddb9ec879c7068801c33f10e3e882d76c2d","8d0dbf0ef02b74a3dc2705d84b2816c3858a9be7","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[SysIndexController index (ModelMap)]","14"
"65","RuoYi/ruoyi-admin","8d0dbf0ef02b74a3dc2705d84b2816c3858a9be7","b92de66ecef76d7b529a06ac6093dc6eedecaec8","VAR_DECLARATION_DIVIDING","13","1","2","[SysIndexController index (ModelMap), SysIndexController initPasswordIsModify (Date)]","28"
"0","RuoYi/ruoyi-common","b92de66ecef76d7b529a06ac6093dc6eedecaec8","b7974e00deb2518fcb84a73d88f2908f1b8e0f43","REVERSE_IF_ELSE","3","1","78","[DateUtils timeDistance (Date, Date), IpUtils isUnknown (String), TrustAnyTrustManager checkClientTrusted (X509Certificate[], String), DateUtils getNowDate (), IpUtils ipIsInNetNoCheck (String, String), ServletUtils getSession (), FileUtils percentEncode (String), ServletUtils getResponse (), FileUtils checkAllowDownload (String), FileUtils getFileExtendName (byte[]), DateUtils dateTimeNow (String), HttpUtils sendGet (String, String, String), DateUtils differentDaysByMillisecond (Date, Date), XssHttpServletRequestWrapper XssHttpServletRequestWrapper (HttpServletRequest), DateUtils dateTime (String, String), ServletUtils checkAgentIsMobile (String), ServletUtils urlEncode (String), PermissionUtils getPrincipalProperty (String), XssHttpServletRequestWrapper getParameterValues (String), DateUtils getTime (), DateUtils dateTimeNow (), DateUtils toDate (LocalDateTime), DateUtils getServerStartDate (), IpUtils textToNumericFormatV4 (String), LogUtils logAccess (HttpServletRequest), FileUtils writeImportBytes (byte[]), LogUtils getAccessLog (), ServletUtils isAjaxRequest (HttpServletRequest), IpUtils internalIp (byte[]), HttpUtils sendPost (String, String), IpUtils getHostIp (), ServletUtils getParameterToInt (String, Integer), HttpUtils sendGet (String, String), IpUtils isIPSegment (String), IpUtils internalIp (String), ServletUtils urlDecode (String), FileUtils getName (String), FileUtils writeBytes (String, OutputStream), FileUtils setAttachmentResponseHeader (HttpServletResponse, String), FileUtils writeBytes (byte[], String), TrustAnyTrustManager checkServerTrusted (X509Certificate[], String), HttpUtils sendGet (String), IpUtils getMultistageReverseProxyIp (String), DateUtils dateTime (), TrustAnyHostnameVerifier verify (String, SSLSession), LogUtils logPageError (HttpServletRequest), ServletUtils getParameter (String, String), DateUtils getDate (), IpUtils getHostName (), ServletUtils getParameter (String), ServletUtils getParameterToInt (String), UserBlockedException UserBlockedException (), DateUtils parseDateToStr (String, Date), ServletUtils getParameterToBool (String, Boolean), LogUtils getBlock (Object), DateUtils datePath (), DateUtils toDate (LocalDate), FileUtils deleteFile (String), ServletUtils getRequest (), ServletUtils getRequestAttributes (), IpUtils isMatchedIp (String, String), IpUtils ipIsInWildCardNoCheck (String, String), DateUtils parseDate (Object), PermissionUtils getMsg (String), FileUtils isValidFilename (String), LogUtils getParams (HttpServletRequest), LogUtils logError (String, Throwable), ServletUtils getParameterToBool (String), StrFormatter format (String, Object), IpUtils isIP (String), IpUtils isIpWildCard (String), DateUtils dateTime (Date), HttpUtils sendSSLPost (String, String), ServletUtils renderString (HttpServletResponse, String), FileUtils getNameNotSuffix (String), FileUtils setFileDownloadHeader (HttpServletRequest, String), IpUtils getIpAddr (HttpServletRequest), TrustAnyTrustManager getAcceptedIssuers ()]","858"
"2","RuoYi/ruoyi-common","b7974e00deb2518fcb84a73d88f2908f1b8e0f43","b08e542497521cb10449a562e380e169c74e5e9d","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[HttpUtils sendGet (String, String, String)]","11"
"3","RuoYi/ruoyi-common","b08e542497521cb10449a562e380e169c74e5e9d","449a4a6fced0aafd1d871fdd9e56c321ec7ca4c0","INFIX_EXPRESSION_DIVIDING","8","1","1","[HttpUtils sendSSLPost (String, String)]","11"
"6","RuoYi/ruoyi-common","449a4a6fced0aafd1d871fdd9e56c321ec7ca4c0","2c0186ab3279e89fe45b41fbdaf1b7f34ba8c031","LOCAL_VAR_RENAMING","0","1","2","[HttpUtils sendPost (String, String), HttpUtils sendGet (String, String, String)]","22"
"9","RuoYi/ruoyi-common","2c0186ab3279e89fe45b41fbdaf1b7f34ba8c031","378a489c212966ec173d01e959a1532a24f37ad3","STATEMENTS_ORDER_REARRANGEMENT","10","1","3","[HttpUtils sendSSLPost (String, String), HttpUtils sendPost (String, String), HttpUtils sendGet (String, String, String)]","33"
"10","RuoYi/ruoyi-common","378a489c212966ec173d01e959a1532a24f37ad3","e3639d700f461576a30a7f75946162f938ab8253","SWITCH_STRING_EQUAL","15","1","1","[HttpUtils sendSSLPost (String, String)]","11"
"26","RuoYi/ruoyi-common","e3639d700f461576a30a7f75946162f938ab8253","345bd505047590caceef8b2fd78a4adbae4ddc96","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[HttpUtils sendGet (String, String, String)]","11"
"30","RuoYi/ruoyi-common","345bd505047590caceef8b2fd78a4adbae4ddc96","669485e502f60f6b975fcafe4d66f168f8cdb0bf","SWITCH_STRING_EQUAL","15","1","1","[HttpUtils sendSSLPost (String, String)]","11"
"33","RuoYi/ruoyi-common","669485e502f60f6b975fcafe4d66f168f8cdb0bf","555704b21dfa649b452a6e641f3b663eaddbe23f","REVERSE_IF_ELSE","3","1","1","[HttpUtils sendSSLPost (String, String)]","11"
"35","RuoYi/ruoyi-common","555704b21dfa649b452a6e641f3b663eaddbe23f","b8875b5b5c27a3487bd7951d1fc5b3dc49519574","WHILE_TO_FOR","2","1","2","[HttpUtils sendSSLPost (String, String), HttpUtils sendPost (String, String)]","22"
"36","RuoYi/ruoyi-common","b8875b5b5c27a3487bd7951d1fc5b3dc49519574","95f9b5f1c9c0a7e7431aa5bdac41438917b74d17","WHILE_TO_FOR","2","1","1","[HttpUtils sendGet (String, String, String)]","11"
"37","RuoYi/ruoyi-common","95f9b5f1c9c0a7e7431aa5bdac41438917b74d17","813123fe502151095bb0dd1aa5d16fbdcbd7edc2","REVERSE_IF_ELSE","3","1","3","[HttpUtils sendSSLPost (String, String), HttpUtils sendPost (String, String), HttpUtils sendGet (String, String, String)]","33"
"39","RuoYi/ruoyi-common","813123fe502151095bb0dd1aa5d16fbdcbd7edc2","0c5da44ec687bc17c8a880b54a0709222175c65e","REVERSE_IF_ELSE","3","1","2","[HttpUtils sendSSLPost (String, String), HttpUtils sendPost (String, String)]","22"
"40","RuoYi/ruoyi-common","0c5da44ec687bc17c8a880b54a0709222175c65e","e6f9dd280f9fd00e6e82bef7cbaf7cb0950138de","INFIX_EXPRESSION_DIVIDING","8","1","1","[HttpUtils sendSSLPost (String, String)]","11"
"42","RuoYi/ruoyi-common","e6f9dd280f9fd00e6e82bef7cbaf7cb0950138de","6fa4a9943d4c1e38529df88c053cc349bd5fe64b","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[HttpUtils sendGet (String, String, String)]","11"
"43","RuoYi/ruoyi-common","6fa4a9943d4c1e38529df88c053cc349bd5fe64b","87def13d651890ed493990a7d806424b68f7799d","REVERSE_IF_ELSE","3","1","2","[HttpUtils sendSSLPost (String, String), HttpUtils sendPost (String, String)]","22"
"45","RuoYi/ruoyi-common","87def13d651890ed493990a7d806424b68f7799d","57a5cde8cc02b42ff432707987a07399b6f5cdac","STATEMENTS_ORDER_REARRANGEMENT","10","1","3","[HttpUtils sendSSLPost (String, String), HttpUtils sendPost (String, String), HttpUtils sendGet (String, String, String)]","33"
"49","RuoYi/ruoyi-common","57a5cde8cc02b42ff432707987a07399b6f5cdac","3f6c7d15d0f2c47f93bde2c95330080712422a81","INFIX_EXPRESSION_DIVIDING","8","1","1","[HttpUtils sendSSLPost (String, String)]","11"
"55","RuoYi/ruoyi-common","3f6c7d15d0f2c47f93bde2c95330080712422a81","e2d0da9997d919c4b4afa5e3bbed14d7908c68b1","REVERSE_IF_ELSE","3","1","2","[HttpUtils sendSSLPost (String, String), HttpUtils sendPost (String, String)]","22"
"57","RuoYi/ruoyi-common","e2d0da9997d919c4b4afa5e3bbed14d7908c68b1","daa9d777d757e9eca48f44cec49180b5ff5931d0","VAR_DECLARATION_MERGING","12","1","1","[HttpUtils sendSSLPost (String, String)]","11"
"60","RuoYi/ruoyi-common","daa9d777d757e9eca48f44cec49180b5ff5931d0","ebb331c53411cf4cee3a8d4d9eabeeabd2d1f452","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[HttpUtils sendGet (String, String, String)]","11"
"61","RuoYi/ruoyi-common","ebb331c53411cf4cee3a8d4d9eabeeabd2d1f452","d946b58b855f517833b9179c58097dd845198e83","FOR_TO_WHILE","1","1","3","[HttpUtils sendSSLPost (String, String), HttpUtils sendPost (String, String), HttpUtils sendGet (String, String, String)]","33"
"65","RuoYi/ruoyi-common","d946b58b855f517833b9179c58097dd845198e83","69937a2c3e0410acd713443721ea5196807bb471","LOCAL_VAR_RENAMING","0","1","2","[HttpUtils sendSSLPost (String, String), HttpUtils sendGet (String, String)]","22"
"0","RuoYi/ruoyi-framework","69937a2c3e0410acd713443721ea5196807bb471","2a8eb74e18f18747840f9e76e0c0706c2c67bdf4","CASE_TO_IF_ELSE","17","1","52","[Cpu getUsed (), DruidConfig slaveDataSource (DruidProperties), Mem setUsed (long), DruidConfig dataSource (DataSource), Cpu getTotal (), DruidConfig masterDataSource (DruidProperties), LogAspect setRequestValue (JoinPoint, SysOperLog, String[]), DataSourceAspect around (ProceedingJoinPoint), Cpu getWait (), LogAspect doAfterReturning (JoinPoint, Log, Object), LogAspect getControllerMethodDescription (JoinPoint, Log, SysOperLog, Object), DruidConfig doFilter (ServletRequest, ServletResponse, FilterChain), CaptchaValidateFilter isAccessAllowed (ServletRequest, ServletResponse, Object), SyncOnlineSessionFilter setOnlineSessionDAO (OnlineSessionDAO), Mem getFree (), DruidConfig init (javax.servlet.FilterConfig), CaptchaValidateFilter onAccessDenied (ServletRequest, ServletResponse), LogAspect isFilterObject (Object), SyncOnlineSessionFilter onPreHandle (ServletRequest, ServletResponse, Object), Cpu setSys (double), Cpu setTotal (double), Mem setFree (long), Cpu getCpuNum (), CaptchaValidateFilter validateResponse (HttpServletRequest, String), Mem getTotal (), UserRealm doGetAuthorizationInfo (PrincipalCollection), LogAspect boBefore (JoinPoint, Log), DataSourceAspect dsPointCut (), LogAspect handleLog (JoinPoint, Log, Exception, Object), Mem setTotal (long), LogAspect doAfterThrowing (JoinPoint, Log, Exception), LogAspect excludePropertyPreFilter (String[]), CaptchaValidateFilter setCaptchaType (String), DruidProperties dataSource (DruidDataSource), DataSourceAspect getDataSource (ProceedingJoinPoint), Cpu getFree (), UserRealm clearCachedAuthorizationInfo (Object), DruidConfig destroy (), Mem getUsage (), DruidConfig removeDruidFilterRegistrationBean (DruidStatProperties), Cpu setFree (double), DruidConfig setDataSource (Map<Object,Object>, String, String), Cpu setCpuNum (int), UserRealm doGetAuthenticationInfo (AuthenticationToken), UserRealm clearAllCachedAuthorizationInfo (), LogAspect argsArrayToString (Object[], String[]), Cpu setWait (double), CaptchaValidateFilter onPreHandle (ServletRequest, ServletResponse, Object), Mem getUsed (), CaptchaValidateFilter setCaptchaEnabled (boolean), Cpu getSys (), Cpu setUsed (double)]","468"
"3","RuoYi/ruoyi-framework","2a8eb74e18f18747840f9e76e0c0706c2c67bdf4","8b306bb14c8cc8af410833ae31f7793ec94094ff","REVERSE_IF_ELSE","3","1","3","[SysShiroService createSession (SysUserOnline), SysShiroService deleteSession (OnlineSession), SysShiroService getSession (Serializable)]","30"
"24","RuoYi/ruoyi-framework","8b306bb14c8cc8af410833ae31f7793ec94094ff","be4c701b5f603d48ef9539b6109fade5b6050f49","REVERSE_IF_ELSE","3","1","1","[SysShiroService createSession (SysUserOnline)]","10"
"27","RuoYi/ruoyi-framework","be4c701b5f603d48ef9539b6109fade5b6050f49","c991777831881c2c68cd1a1125c7a560613ca93f","REVERSE_IF_ELSE","3","1","1","[SysShiroService createSession (SysUserOnline)]","10"
"37","RuoYi/ruoyi-framework","c991777831881c2c68cd1a1125c7a560613ca93f","35a30bdb0c482c170fe9cfc1f8b8d8aadd76540f","LOCAL_VAR_RENAMING","0","1","2","[SysShiroService createSession (SysUserOnline), SysShiroService deleteSession (OnlineSession)]","20"
"50","RuoYi/ruoyi-framework","35a30bdb0c482c170fe9cfc1f8b8d8aadd76540f","af162ad8c9ee7e1d9e8892b04d23688f8b9e0fc5","REVERSE_IF_ELSE","3","1","1","[SysShiroService createSession (SysUserOnline)]","10"
"60","RuoYi/ruoyi-framework","af162ad8c9ee7e1d9e8892b04d23688f8b9e0fc5","b748f5dd90a13c93786df982e168902098b47c1e","LOCAL_VAR_RENAMING","0","1","2","[SysShiroService createSession (SysUserOnline), SysShiroService getSession (Serializable)]","20"
"61","RuoYi/ruoyi-framework","b748f5dd90a13c93786df982e168902098b47c1e","e11ad4d2f627a73eb0a78b3859eaaf3b44fb5eec","REVERSE_IF_ELSE","3","1","1","[SysShiroService createSession (SysUserOnline)]","10"
"63","RuoYi/ruoyi-framework","e11ad4d2f627a73eb0a78b3859eaaf3b44fb5eec","dfc1f0c3fcce852e68f7562efef2cd5d087a44e2","LOCAL_VAR_RENAMING","0","1","1","[SysShiroService createSession (SysUserOnline)]","10"
"0","RuoYi/ruoyi-generator","dfc1f0c3fcce852e68f7562efef2cd5d087a44e2","ffa9daab201f88b98248817073141f65ee82f0ed","INFIX_EXPRESSION_DIVIDING","8","1","109","[GenTable setSubTable (GenTable), GenUtils getDbType (String), GenTable getFunctionAuthor (), GenTableServiceImpl generatorCode (String), GenTable getTplCategory (), GenController columnList (GenTableColumn), GenTableServiceImpl selectDbTableListByNames (String[]), GenTable setParentMenuName (String), GenTable getTableName (), GenTable getBusinessName (), GenTable setClassName (String), GenTable isCrud (), GenController dataList (GenTable), GenTable getColumns (), GenController createTable (), GenTable getSubTableName (), GenController gen (), GenTableServiceImpl importGenTable (List<GenTable>, String), GenTable getFunctionName (), GenTable getTreeParentCode (), GenController batchGenCode (HttpServletResponse, String), GenController preview (Long), GenTable setOptions (String), GenTable setTplCategory (String), GenUtils convertClassName (String), GenController download (HttpServletResponse, String), GenTable getModuleName (), GenTable getSubTableFkName (), GenTable isTree (String), GenTable setPackageName (String), GenTable getClassName (), GenTableServiceImpl getGenPath (GenTable, String), GenTableColumnMapper selectGenTableColumnListByTableId (GenTableColumn), GenUtils getModuleName (String), GenTable setTreeCode (String), GenTable setSubTableFkName (String), GenController genList (GenTable), GenTableServiceImpl setSubTable (GenTable), GenTableServiceImpl selectGenTableAll (), GenTable setGenPath (String), GenTableServiceImpl selectGenTableById (Long), GenTableServiceImpl deleteGenTableByIds (String), GenController edit (Long, ModelMap), GenTable isSub (), GenTable setColumns (List<GenTableColumn>), GenTableServiceImpl updateGenTable (GenTable), GenTable setGenType (String), GenTable setTableComment (String), GenTableServiceImpl setPkColumn (GenTable), GenTableColumnMapper deleteGenTableColumnByIds (Long[]), GenController genCode (String), IGenTableColumnService selectGenTableColumnListByTableId (GenTableColumn), GenTable setTableName (String), GenTable setTableId (Long), GenTable isSuperColumn (String, String), GenTableServiceImpl previewCode (Long), GenTable getTreeCode (), IGenTableColumnService updateGenTableColumn (GenTableColumn), GenTable getPkColumn (), GenTableServiceImpl selectGenTableList (GenTable), GenController create (String), GenController importTable (), GenUtils initTable (GenTable, String), GenUtils replaceFirst (String, String[]), GenTableServiceImpl validateEdit (GenTable), GenTable setParentMenuId (String), GenTableColumnMapper deleteGenTableColumns (List<GenTableColumn>), GenUtils initColumnField (GenTableColumn, GenTable), GenTableColumnMapper updateGenTableColumn (GenTableColumn), GenTable setModuleName (String), GenTable getTableId (), GenTable getParentMenuId (), GenTable setPkColumn (GenTableColumn), GenUtils getBusinessName (String), GenTableServiceImpl createTable (String), GenTableColumnMapper insertGenTableColumn (GenTableColumn), GenTable isSuperColumn (String), GenUtils getColumnLength (String), IGenTableColumnService insertGenTableColumn (GenTableColumn), GenTableServiceImpl selectDbTableList (GenTable), GenTable setTreeName (String), GenTable isTree (), GenTable getSubTable (), GenTableServiceImpl synchDb (String), GenTable getPackageName (), GenController importTableSave (String), GenController genCode (HttpServletResponse, byte[]), GenTable setBusinessName (String), GenTable getOptions (), GenTable setFunctionName (String), GenController remove (String), GenTable getTableComment (), GenTable isSub (String), GenTable setTreeParentCode (String), GenTable setSubTableName (String), GenTable getParentMenuName (), GenTableServiceImpl downloadCode (String), GenController editSave (GenTable), GenTable getTreeName (), GenTable getGenPath (), GenTable setFunctionAuthor (String), GenTableServiceImpl downloadCode (String[]), GenTable isCrud (String), GenTableServiceImpl generatorCode (String, ZipOutputStream), GenController synchDb (String), GenTableServiceImpl setTableFromOptions (GenTable), GenTable getGenType (), IGenTableColumnService deleteGenTableColumnByIds (String), GenTableColumnMapper selectDbTableColumnsByName (String)]","654"
"35","RuoYi/ruoyi-generator","ffa9daab201f88b98248817073141f65ee82f0ed","96203fb2bb80f2eb260030355784282963b744cc","LOCAL_VAR_RENAMING","0","1","2","[GenTableColumnMapper updateGenTableColumn (GenTableColumn), GenTableColumnMapper selectGenTableColumnListByTableId (GenTableColumn)]","12"
"41","RuoYi/ruoyi-generator","96203fb2bb80f2eb260030355784282963b744cc","3ddcbbf080de52f3441a4a68962710ab6b772367","LOCAL_VAR_RENAMING","0","1","2","[GenTableColumnMapper selectGenTableColumnListByTableId (GenTableColumn), GenTableColumnMapper insertGenTableColumn (GenTableColumn)]","12"
"0","RuoYi/ruoyi-quartz","3ddcbbf080de52f3441a4a68962710ab6b772367","53b4e82c8690862d613b8e62a095518fa50835d4","FOR_TO_WHILE","1","1","57","[ISysJobService deleteJobByIds (String), SysJobLogMapper selectJobLogAll (), ISysJobLogService addJobLog (SysJobLog), SysJobLogMapper insertJobLog (SysJobLog), SysJobMapper insertJob (SysJob), ISysJobService checkCronExpressionIsValid (String), ISysJobLogService deleteJobLogByIds (String), ISysJobService resumeJob (SysJob), SysJobController editSave (SysJob), SysJobLogServiceImpl deleteJobLogByIds (String), SysJobMapper selectJobList (SysJob), ISysJobService pauseJob (SysJob), ISysJobService run (SysJob), ScheduleUtils handleCronScheduleMisfirePolicy (SysJob, CronScheduleBuilder), ISysJobLogService cleanJobLog (), ISysJobService insertJob (SysJob), SysJobLogMapper selectJobLogList (SysJobLog), SysJobController cron (), ISysJobLogService deleteJobLogById (Long), SysJobController run (SysJob), ISysJobLogService selectJobLogById (Long), SysJobLogServiceImpl deleteJobLogById (Long), SysJobMapper deleteJobById (Long), SysJobController list (SysJob), SysJobMapper deleteJobByIds (Long[]), SysJobController export (SysJob), SysJobLogMapper deleteJobLogByIds (String[]), ScheduleUtils getJobKey (Long, String), ISysJobLogService selectJobLogList (SysJobLog), SysJobController job (), ScheduleUtils getTriggerKey (Long, String), SysJobLogServiceImpl selectJobLogList (SysJobLog), SysJobController remove (String), ISysJobService selectJobById (Long), ISysJobService updateJob (SysJob), SysJobMapper selectJobById (Long), SysJobLogServiceImpl cleanJobLog (), SysJobController addSave (SysJob), SysJobController detail (Long, ModelMap), SysJobController add (), SysJobController changeStatus (SysJob), SysJobMapper updateJob (SysJob), SysJobController checkCronExpressionIsValid (SysJob), ScheduleUtils whiteList (String), SysJobLogServiceImpl addJobLog (SysJobLog), SysJobController edit (Long, ModelMap), SysJobController queryCronExpression (String), SysJobLogMapper cleanJobLog (), SysJobLogMapper selectJobLogById (Long), ScheduleUtils getQuartzJobClass (SysJob), SysJobLogMapper deleteJobLogById (Long), SysJobLogServiceImpl selectJobLogById (Long), SysJobMapper selectJobAll (), ISysJobService deleteJob (SysJob), ScheduleUtils createScheduleJob (Scheduler, SysJob), ISysJobService changeStatus (SysJob), ISysJobService selectJobList (SysJob)]","399"
"8","RuoYi/ruoyi-quartz","53b4e82c8690862d613b8e62a095518fa50835d4","f180aac7094ba747e3d734bbd08bf1689a3be86e","LOCAL_VAR_RENAMING","0","1","1","[QuartzJobExecution doExecute (JobExecutionContext, SysJob)]","8"
"17","RuoYi/ruoyi-quartz","f180aac7094ba747e3d734bbd08bf1689a3be86e","85b2398b9c23d8afdcfe32a158128764b8045d13","LOCAL_VAR_RENAMING","0","1","1","[QuartzJobExecution doExecute (JobExecutionContext, SysJob)]","8"
"23","RuoYi/ruoyi-quartz","85b2398b9c23d8afdcfe32a158128764b8045d13","083dfead640bef81aae2f852055a424fc306ba7f","LOCAL_VAR_RENAMING","0","1","1","[QuartzJobExecution doExecute (JobExecutionContext, SysJob)]","8"
"25","RuoYi/ruoyi-quartz","083dfead640bef81aae2f852055a424fc306ba7f","e7362e479724fe9776d55671eaa84a2b951c1c2a","LOCAL_VAR_RENAMING","0","1","1","[QuartzJobExecution doExecute (JobExecutionContext, SysJob)]","8"
"0","RuoYi/ruoyi-system","e7362e479724fe9776d55671eaa84a2b951c1c2a","492a26045ae701a5992f1f697b818555eeb4336e","SWITCH_STRING_EQUAL","15","1","100","[SysUserServiceImpl selectUserByEmail (String), SysLogininfor getMsg (), SysLogininfor getStatus (), SysLogininfor setLoginLocation (String), SysLogininfor getIpaddr (), SysUserServiceImpl checkLoginNameUnique (SysUser), ISysDictDataService selectDictLabel (String, String), SysUserServiceImpl resetUserPwd (SysUser), SysUserServiceImpl selectUnallocatedList (SysUser), SysUserServiceImpl deleteUserByIds (String), SysLogininfor setBrowser (String), SysConfigServiceImpl insertConfig (SysConfig), SysUserServiceImpl insertUserRole (Long, Long[]), SysUserServiceImpl checkEmailUnique (SysUser), ISysMenuService selectPermsAll (Long), SysLogininfor setMsg (String), SysNotice setNoticeId (Long), SysUserServiceImpl selectUserPostGroup (Long), SysPostMapper selectPostAll (), SysUserServiceImpl selectUserRoleByUserId (Long), SysPostMapper checkPostNameUnique (String), SysPostMapper selectPostById (Long), SysConfigServiceImpl selectConfigList (SysConfig), SysPostMapper selectPostList (SysPost), SysConfigServiceImpl getCacheKey (String), SysLogininfor getBrowser (), SysLogininfor getLoginName (), ISysDictDataService selectDictDataById (Long), SysUserServiceImpl importUser (List<SysUser>, Boolean, String), SysNotice getNoticeType (), SysUserServiceImpl registerUser (SysUser), ISysMenuService menuTreeData (Long), ISysMenuService selectMenuById (Long), SysUserServiceImpl changeStatus (SysUser), SysPostMapper checkPostCodeUnique (String), SysLogininfor setLoginTime (Date), ISysMenuService deleteMenuById (Long), SysConfigServiceImpl getCacheName (), SysUserServiceImpl selectUserList (SysUser), ISysMenuService selectMenuList (SysMenu, Long), ISysDictDataService insertDictData (SysDictData), SysPostMapper insertPost (SysPost), ISysMenuService checkMenuNameUnique (SysMenu), SysNotice toString (), ISysMenuService roleMenuTreeData (SysRole, Long), SysUserServiceImpl selectUserByPhoneNumber (String), SysUserServiceImpl checkUserDataScope (Long), SysLogininfor getLoginLocation (), SysUserServiceImpl insertUser (SysUser), SysPostMapper updatePost (SysPost), SysConfigServiceImpl init (), SysUserServiceImpl selectUserRoleGroup (Long), SysUserServiceImpl deleteUserById (Long), SysUserServiceImpl updateUser (SysUser), SysNotice getStatus (), SysUserServiceImpl insertUserAuth (Long, Long[]), SysUserServiceImpl selectAllocatedList (SysUser), SysLogininfor getLoginTime (), SysLogininfor setInfoId (Long), SysUserServiceImpl selectUserById (Long), SysNotice setNoticeContent (String), SysUserServiceImpl checkUserAllowed (SysUser), SysConfigServiceImpl selectConfigByKey (String), SysNotice setNoticeTitle (String), SysNotice setNoticeType (String), SysConfigServiceImpl clearConfigCache (), SysLogininfor getInfoId (), SysPostMapper selectPostsByUserId (Long), SysConfigServiceImpl loadingConfigCache (), SysConfigServiceImpl updateConfig (SysConfig), SysLogininfor setIpaddr (String), ISysMenuService selectPermsByUserId (Long), SysUserServiceImpl updateUserInfo (SysUser), ISysMenuService selectMenusByUser (SysUser), SysLogininfor setStatus (String), SysUserServiceImpl insertUserPost (SysUser), ISysDictDataService updateDictData (SysDictData), SysNotice getNoticeContent (), ISysMenuService selectCountRoleMenuByMenuId (Long), SysNotice setStatus (String), ISysDictDataService selectDictDataList (SysDictData), ISysMenuService selectMenuAll (Long), ISysMenuService insertMenu (SysMenu), ISysDictDataService deleteDictDataByIds (String), SysPostMapper deletePostByIds (Long[]), ISysMenuService selectCountMenuByParentId (Long), SysConfigServiceImpl deleteConfigByIds (String), SysUserServiceImpl selectUserByLoginName (String), SysLogininfor setLoginName (String), SysLogininfor getOs (), SysUserServiceImpl checkPhoneUnique (SysUser), ISysMenuService updateMenu (SysMenu), SysConfigServiceImpl checkConfigKeyUnique (SysConfig), SysConfigServiceImpl resetConfigCache (), SysLogininfor toString (), ISysMenuService selectPermsByRoleId (Long), SysNotice getNoticeTitle (), SysLogininfor setOs (String), SysNotice getNoticeId (), SysConfigServiceImpl selectConfigById (Long)]","700"
"3","RuoYi/ruoyi-system","492a26045ae701a5992f1f697b818555eeb4336e","b2ecc66f8d4fed3566a2f2aa186183cda5bd62f9","SWITCH_EQUAL_SIDES","14","1","17","[SysDeptServiceImpl checkDeptExistUser (Long), SysDeptServiceImpl selectDeptList (SysDept), SysDeptServiceImpl roleDeptTreeData (SysRole), SysDeptServiceImpl deleteDeptById (Long), SysDeptServiceImpl updateDept (SysDept), SysDeptServiceImpl selectNormalChildrenDeptById (Long), SysDeptServiceImpl initZtree (List<SysDept>), SysDeptServiceImpl initZtree (List<SysDept>, List<String>), SysDeptServiceImpl updateParentDeptStatusNormal (SysDept), SysDeptServiceImpl selectDeptById (Long), SysDeptServiceImpl selectDeptTree (SysDept), SysDeptServiceImpl updateDeptChildren (Long, String, String), SysDeptServiceImpl insertDept (SysDept), SysDeptServiceImpl checkDeptDataScope (Long), SysDeptServiceImpl checkDeptNameUnique (SysDept), SysDeptServiceImpl selectDeptCount (Long), SysDeptServiceImpl selectDeptTreeExcludeChild (SysDept)]","136"
"5","RuoYi/ruoyi-system","b2ecc66f8d4fed3566a2f2aa186183cda5bd62f9","221382939017c349b3ff85485a36581bc04bac63","REVERSE_IF_ELSE","3","1","7","[SysDeptServiceImpl initZtree (List<SysDept>, List<String>), SysDeptServiceImpl roleDeptTreeData (SysRole), SysDeptServiceImpl updateDeptChildren (Long, String, String), SysDeptServiceImpl updateDept (SysDept), SysDeptServiceImpl insertDept (SysDept), SysDeptServiceImpl checkDeptDataScope (Long), SysDeptServiceImpl checkDeptNameUnique (SysDept)]","56"
"12","RuoYi/ruoyi-system","221382939017c349b3ff85485a36581bc04bac63","2bc514f8118c8fc93c4053b084374f39d565670c","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[SysDeptServiceImpl initZtree (List<SysDept>, List<String>), SysDeptServiceImpl roleDeptTreeData (SysRole)]","16"
"14","RuoYi/ruoyi-system","2bc514f8118c8fc93c4053b084374f39d565670c","42f3ccc656dbaa1bc74708040c309e7e0c86489c","SWITCH_EQUAL_SIDES","14","1","1","[SysDeptServiceImpl selectDeptTreeExcludeChild (SysDept)]","8"
"24","RuoYi/ruoyi-system","42f3ccc656dbaa1bc74708040c309e7e0c86489c","a6dc7e8848bf2781ee06c13ddeeab0ad8d042c2e","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[SysDeptServiceImpl checkDeptNameUnique (SysDept)]","8"
"25","RuoYi/ruoyi-system","a6dc7e8848bf2781ee06c13ddeeab0ad8d042c2e","ebc84e93671b30fa43aebe5117d067017c889fa4","LOCAL_VAR_RENAMING","0","1","13","[ISysDictTypeService insertDictType (SysDictType), ISysDictTypeService updateDictType (SysDictType), ISysDictTypeService checkDictTypeUnique (SysDictType), ISysDictTypeService clearDictCache (), ISysDictTypeService selectDictTypeByType (String), ISysDictTypeService selectDictDataByType (String), ISysDictTypeService selectDictTypeById (Long), ISysDictTypeService loadingDictCache (), ISysDictTypeService deleteDictTypeByIds (String), ISysDictTypeService selectDictTree (SysDictType), ISysDictTypeService resetDictCache (), ISysDictTypeService selectDictTypeAll (), ISysDictTypeService selectDictTypeList (SysDictType)]","117"
"42","RuoYi/ruoyi-system","ebc84e93671b30fa43aebe5117d067017c889fa4","313e290cc051a35c8e2d6f0ec5afeb7433c391b2","LOCAL_VAR_RENAMING","0","1","2","[ISysDictTypeService updateDictType (SysDictType), ISysDictTypeService selectDictTypeByType (String)]","18"
"53","RuoYi/ruoyi-system","313e290cc051a35c8e2d6f0ec5afeb7433c391b2","6d88b3381b2a33547fd2dd818d662111e29a68c7","LOCAL_VAR_RENAMING","0","1","2","[ISysDictTypeService deleteDictTypeByIds (String), ISysDictTypeService selectDictDataByType (String)]","18"
"0","WebGoat","c18430752a7cc6f3bce6213aca2306d32e3dc1a9","353a2ceed11912b7962455ac25e032b82d09e0c2","ADD_ASSIGNMENT_TO_EQUAL_ASSIGNMENT","7","1","53","[UserInterceptor postHandle (HttpServletRequest, HttpServletResponse, Object, ModelAndView), CSRFFeedback requestContainsWebGoatCookie (Cookie[]), WebGoatVersionMacro process (ContentNode, String, Map<String,Object>), WebSession setCurrentLesson (Lesson), WebGoatVersionMacro WebGoatVersionMacro (String), CSRFFeedback flag (String), WebSession toggleSecurity (), LessonTracker LessonTracker (Lesson), UserService addUser (String, String), SqlInjectionLesson2 completed (String), SqlInjectionLesson6b getPassword (), SecurityQuestionAssignment completed (String), UsernameMacro UsernameMacro (String, Map<String,Object>), SqlInjectionLesson8 injectableQueryConfidentiality (String, String), SqlInjectionLesson6b SqlInjectionLesson6b (LessonDataSource), UserService UserService (UserRepository), SqlInjectionLesson8 generateTable (ResultSet), CSRFFeedback completed (HttpServletRequest, String), LessonTracker getAssignment (String), LessonMenuService showLeftNav (), LessonTracker LessonTracker (), WebGoatVersionMacro WebGoatVersionMacro (String, Map<String,Object>), UserInterceptor preHandle (HttpServletRequest, HttpServletResponse, Object), SqlInjectionLesson2 SqlInjectionLesson2 (LessonDataSource), LessonTracker getLessonOverview (), UsernameMacro UsernameMacro (String), UsernameMacro process (ContentNode, String, Map<String,Object>), LessonMenuService lessonCompleted (Map<Assignment,Boolean>, Lesson), MailAssignment sendEmail (String), CSRFFeedback hostOrRefererDifferentHost (HttpServletRequest), WebSession getUserName (), Salaries invoke (), SqlInjectionLesson6b completed (String), WebSession getCurrentLesson (), WebSession isSecurityEnabled (), SqlInjectionLesson8 log (Connection, String), WebWolfRootMacro WebWolfRootMacro (String), WebSession WebSession (WebGoatUser), WebWolfRootMacro WebWolfRootMacro (String, Map<String,Object>), WebSession getUser (), Salaries copyFiles (), SqlInjectionLesson8 SqlInjectionLesson8 (LessonDataSource), MailAssignment completed (String), QuestionsAssignment passwordReset (Map<String,Object>), MailAssignment MailAssignment (RestTemplate, String), LessonTracker isLessonSolved (), LessonTracker reset (), UserInterceptor afterCompletion (HttpServletRequest, HttpServletResponse, Object, Exception), SqlInjectionLesson8 completed (String, String), LessonTracker incrementAttempts (), UserService loadUserByUsername (String), LessonTracker assignmentSolved (String), SqlInjectionLesson2 injectableQuery (String)]","848"
"1","WebGoat","353a2ceed11912b7962455ac25e032b82d09e0c2","a0062c7e234033d40846500f41880ebe597f911f","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","6","[CryptoUtil getPrivateKeyFromPEM (String), CryptoUtil getPrivateKeyInPEM (KeyPair), CryptoUtil signMessage (String, PrivateKey), CryptoUtil verifyMessage (String, String, PublicKey), CryptoUtil generateKeyPair (), CryptoUtil verifyAssignment (String, String, PublicKey)]","102"
"7","WebGoat","a0062c7e234033d40846500f41880ebe597f911f","f85c6d3f696cbf7032417ad1690429ca3e007c14","LOCAL_VAR_RENAMING","0","1","2","[LogBleedingTask completed (String, String), LogBleedingTask generatePassword ()]","36"
"10","WebGoat","f85c6d3f696cbf7032417ad1690429ca3e007c14","50baa398e8c3d5d973c924e208ac11a4ae0498bc","LOCAL_VAR_RENAMING","0","1","2","[LogBleedingTask completed (String, String), LogBleedingTask generatePassword ()]","36"
"19","WebGoat","50baa398e8c3d5d973c924e208ac11a4ae0498bc","908562250a6d9723c2a6c4a18882f4521be71108","REVERSE_IF_ELSE","3","1","1","[LogBleedingTask completed (String, String)]","18"
"23","WebGoat","908562250a6d9723c2a6c4a18882f4521be71108","8994c5f66c4a2cc1bb956a9bad915fcbb8d3bd2e","LOCAL_VAR_RENAMING","0","1","2","[LogBleedingTask completed (String, String), LogBleedingTask generatePassword ()]","36"
"24","WebGoat","8994c5f66c4a2cc1bb956a9bad915fcbb8d3bd2e","aa4a4e32a3bd5ec11ae197da84b0b6055f4f2e2e","REVERSE_IF_ELSE","3","1","1","[LogBleedingTask completed (String, String)]","18"
"27","WebGoat","aa4a4e32a3bd5ec11ae197da84b0b6055f4f2e2e","0530b8604ed43ee5f757a7e1fc5241967f8d9646","SWITCH_STRING_EQUAL","15","1","1","[LogBleedingTask completed (String, String)]","18"
"30","WebGoat","0530b8604ed43ee5f757a7e1fc5241967f8d9646","f9398b2859a850a674f6c738e96ab7febaf10b8f","LOCAL_VAR_RENAMING","0","1","2","[LogBleedingTask completed (String, String), LogBleedingTask generatePassword ()]","36"
"32","WebGoat","f9398b2859a850a674f6c738e96ab7febaf10b8f","3c0df8509735756441afcc3a7817e19612e8ec14","REVERSE_IF_ELSE","3","1","1","[LogBleedingTask completed (String, String)]","18"
"52","WebGoat","3c0df8509735756441afcc3a7817e19612e8ec14","a933fd2811d8386716a6d749f064620e9f079541","SWITCH_STRING_EQUAL","15","1","1","[LogBleedingTask completed (String, String)]","18"
"53","WebGoat","a933fd2811d8386716a6d749f064620e9f079541","f88ba4a3d4be23c5d002481173b1c44dadc8633a","REVERSE_IF_ELSE","3","1","1","[LogBleedingTask completed (String, String)]","18"
"63","WebGoat","f88ba4a3d4be23c5d002481173b1c44dadc8633a","f4dee44ec594a48273fe2983e32b4346e511fbfd","SWITCH_STRING_EQUAL","15","1","1","[LogBleedingTask completed (String, String)]","18"
"65","WebGoat","f4dee44ec594a48273fe2983e32b4346e511fbfd","f8eaf6311821afffe2aa62f30c6c7698e190349d","LOCAL_VAR_RENAMING","0","1","2","[LogBleedingTask completed (String, String), LogBleedingTask generatePassword ()]","36"
"0","spring-data-neo4j/spring-data-neo4j-aspects","04bd484704621520e4d6eb1d72c88579faa5e95a","03e7f499d836dac5503a4f0d33f7ad2f82ae8dbe","FOR_TO_WHILE","1","1","8","[GraphBacked remove (), RelationshipBacked projectTo (Class<R>), GraphBacked getPersistentState (), RelationshipBacked getRelationshipId (), GraphBacked setPersistentState (STATE), Neo4jAspectConfiguration neo4jRelationshipBacking (), Neo4jAspectConfiguration neo4jNodeBacking (), GraphBacked hasPersistentState ()]","24"
"1","spring-data-neo4j/spring-data-neo4j-aspects","03e7f499d836dac5503a4f0d33f7ad2f82ae8dbe","61443ee5d3572a385164455fe18ffbd741e328a3","LOCAL_VAR_RENAMING","0","1","15","[NodeBacked getRelationshipTo (NodeBacked, String), NodeBacked findAllPathsByTraversal (TraversalDescription), NodeBacked findAllByQuery (String, Class<T>, Map<String,Object>), NodeBacked getRelationshipTo (NodeBacked, Class<R>, String), NodeBacked findAllByTraversal (Class<T>, TraversalDescription), NodeBacked findAllByQuery (String, Map<String,Object>), NodeBacked relateTo (NodeBacked, String, boolean), NodeBacked removeRelationshipTo (NodeBacked, String), NodeBacked persist (), NodeBacked getNodeId (), NodeBacked relateTo (N, Class<R>, String), NodeBacked findByQuery (String, Class<T>, Map<String,Object>), NodeBacked relateTo (N, Class<R>, String, boolean), NodeBacked relateTo (NodeBacked, String), NodeBacked projectTo (Class<T>)]","60"
"16","spring-data-neo4j/spring-data-neo4j-aspects","61443ee5d3572a385164455fe18ffbd741e328a3","be83f08dbae96c788bdbab6f68409bc3285a76cf","LOCAL_VAR_RENAMING","0","1","2","[NodeBacked relateTo (N, Class<R>, String, boolean), NodeBacked relateTo (NodeBacked, String, boolean)]","8"
"0","spring-data-neo4j/spring-data-neo4j-cross-store","be83f08dbae96c788bdbab6f68409bc3285a76cf","379312449833a6099199c949f4a6d693159e97bb","FOR_TO_WHILE","1","1","25","[CrossStoreNodeDelegatingFieldAccessorFactory newPropertyFieldAccessorFactory (), CrossStoreNodeEntityStateFactory getPersistenceUnitUtils (), CrossStoreNodeEntityState getForeignIdIndex (), CrossStoreNodeEntityState persist (), JpaIdFieldListener JpaIdFieldListener (Neo4jPersistentProperty, Neo4jTemplate), CrossStoreNodeEntityStateFactory getEntityState (Object, boolean, Neo4jTemplate), CrossStoreNodeEntityStateFactory isDetached (), CrossStoreNodeEntityState createAndAssignState (), CrossStoreNodeEntityInstantiator entityManager (), Factory create (Neo4jTemplate), CrossStoreNodeEntityState getId (Object), JpaIdFieldListener valueChanged (Object, Object, Object), CrossStoreNodeEntityInstantiator CrossStoreNodeEntityInstantiator (NodeEntityInstantiator, EntityManagerFactory), CrossStoreNodeDelegatingFieldAccessorFactory CrossStoreNodeDelegatingFieldAccessorFactory (Neo4jTemplate), CrossStoreNodeDelegatingFieldAccessorFactory createAccessorFactories (), CrossStoreNodeEntityStateFactory isPartial (Class<?>), CrossStoreNodeEntityInstantiator createEntityFromState (Node, Class<T>, MappingPolicy), CrossStoreNodeEntityState persistForeignId (Node, Object), CrossStoreNodeEntityState CrossStoreNodeEntityState (Node, NodeBacked, Class<? extends NodeBacked>, Neo4jTemplate, PersistenceUnitUtil, DelegatingFieldAccessorFactory, Neo4jPersistentEntity), CrossStoreNodeEntityState isWritable (Neo4jPersistentProperty), CrossStoreNodeEntityState createForeignId (Object), CrossStoreNodeEntityStateFactory CrossStoreNodeEntityStateFactory (Neo4jMappingContext, FieldAccessorFactoryFactory, FieldAccessorFactoryFactory, EntityManagerFactory), CrossStoreNodeDelegatingFieldAccessorFactory createListenerFactories (), CrossStoreNodeDelegatingFieldAccessorFactory newConvertingNodePropertyFieldAccessorFactory (), CrossStoreNodeDelegatingFieldAccessorFactory accept (Neo4jPersistentProperty)]","125"
"23","spring-data-neo4j/spring-data-neo4j-cross-store","379312449833a6099199c949f4a6d693159e97bb","3ef4f851b06e2b4f35fd552864ef1f71d34ee3a2","LOCAL_VAR_RENAMING","0","1","2","[CrossStoreNodeDelegatingFieldAccessorFactory newConvertingNodePropertyFieldAccessorFactory (), Factory create (Neo4jTemplate)]","10"
"32","spring-data-neo4j/spring-data-neo4j-cross-store","3ef4f851b06e2b4f35fd552864ef1f71d34ee3a2","a9de744ce2b41a44cbd97782a457f244aa2cbd4f","LOCAL_VAR_RENAMING","0","1","2","[CrossStoreNodeDelegatingFieldAccessorFactory CrossStoreNodeDelegatingFieldAccessorFactory (Neo4jTemplate), CrossStoreNodeDelegatingFieldAccessorFactory createListenerFactories ()]","10"
"36","spring-data-neo4j/spring-data-neo4j-cross-store","a9de744ce2b41a44cbd97782a457f244aa2cbd4f","2605c4df66a496abc7ac9cd3da3c82c0411367d0","LOCAL_VAR_RENAMING","0","1","3","[CrossStoreNodeDelegatingFieldAccessorFactory newPropertyFieldAccessorFactory (), CrossStoreNodeDelegatingFieldAccessorFactory accept (Neo4jPersistentProperty), Factory create (Neo4jTemplate)]","15"
"44","spring-data-neo4j/spring-data-neo4j-cross-store","2605c4df66a496abc7ac9cd3da3c82c0411367d0","3892d1957b16cabbc5a64c9e0fdda1fb80cdc627","LOCAL_VAR_RENAMING","0","1","2","[CrossStoreNodeDelegatingFieldAccessorFactory CrossStoreNodeDelegatingFieldAccessorFactory (Neo4jTemplate), Factory create (Neo4jTemplate)]","10"
"0","spring-data-neo4j/cineasts-aspects","3892d1957b16cabbc5a64c9e0fdda1fb80cdc627","ef5672b024425a151a693f96407d6e91d88881dc","FOR_TO_WHILE","1","1","102","[Movie Movie (String, String), Movie getRatings (), Movie setRuntime (Integer), Rating setComment (String), Movie getDescription (), MovieDbImportService doImportMovie (String), Rating getStars (), MovieController updateMovie (Model, String, Integer, String), Movie setHomepage (String), MovieDbApiClient getPerson (String), MovieDbApiClient getMovie (String), MovieController singleMovieView (Model, String), Movie getVersion (), Movie getYoutubeId (), Role setName (String), Movie getLastModified (), User addFriend (User), Movie getStars (), User toString (), MovieController findMovies (Model, String), Movie setLastModified (Date), Role getActor (), Movie setImageUrl (String), ImportController ImportController (MovieDbImportService), User User (String, String, String, Roles), Role Role (Movie, Person, String), Movie setTrailer (String), Role Role (), MovieController populateDatabase (Model), Movie getTagline (), ImportController extractRanges (String), MovieDbImportService doImportPerson (String), User getPassword (), Movie setTagline (String), Movie getTrailer (), Movie getHomepage (), MovieDbApiClient loadJsonData (String, String), Movie getStudio (), MovieController singleActorView (Model, String), Rating rate (int, String), Movie getImageUrl (), Role toString (), Movie setTitle (String), MovieDbApiClient buildMovieUrl (String), MovieDbImportService loadPersonData (String), User updatePassword (String, String, String), Movie setGenre (String), ImportController importMovie (String, Model), User rate (Movie, int, String), MovieController getMovie (String), MovieRecommendations evaluate (Path), Movie setVersion (Integer), MovieDbImportService importMovies (Map<Integer,Integer>), Rating getComment (), MovieDbApiClient MovieDbApiClient (String), MovieDbApiClient buildPersonUrl (String), MovieController index (Model), Movie getReleaseDate (), Rating setStars (int), Movie getLanguage (), Movie getTitle (), MovieRecommendations updateRating (Relationship, int), User getName (), Movie getImdbId (), Role getName (), MovieDbImportService relatePersonsToMovie (Movie, Map), Movie setImdbId (String), User isFriend (User), User getLogin (), MovieDbImportService loadMovieData (String), Movie getYear (), Movie getDirector (), MovieRecommendations obtainRating (long), User getRole (), Movie getRuntime (), Movie Movie (), User getAuthority (), User getFriends (), Rating getMovie (), User getRatings (), MovieDbImportService importMovie (String), Movie setStudio (String), MovieRecommendations averageRecommendations (User, TraversalDescription), MovieController addUser (Model), Movie getId (), Movie getActors (), MovieController clean (Model), Movie setReleaseDate (Date), User setName (String), MovieDbImportService importPerson (String), MovieRecommendations MovieRecommendations (MovieRepository, int), Movie toString (), User User (), User encode (String), Movie setDescription (String), MovieRecommendations getRecommendationsFor (User), Movie getGenre (), Role getMovie (), MovieDbImportService importMovieFailsafe (Integer), Movie getRoles (), Rating getUser (), Movie setLanguage (String)]","918"
"5","spring-data-neo4j/cineasts-aspects","ef5672b024425a151a693f96407d6e91d88881dc","7b7365817439f72043c8b785a227ecac2fc90074","VAR_DECLARATION_MERGING","12","1","7","[CineastsUserDetailsService findUser (String), CineastsUserDetailsService rate (User, Movie, Integer, String), CineastsUserDetailsService register (String, String, String), CineastsUserDetailsService setUserInSession (User), CineastsUserDetailsService loadUserByUsername (String), CineastsUserDetailsService addFriend (String), CineastsUserDetailsService getUserFromSession ()]","70"
"6","spring-data-neo4j/cineasts-aspects","7b7365817439f72043c8b785a227ecac2fc90074","678becf0ba668f34c4e97eb6b64ca86d734d825f","VAR_DECLARATION_DIVIDING","13","1","1","[CineastsUserDetailsService addFriend (String)]","10"
"7","spring-data-neo4j/cineasts-aspects","678becf0ba668f34c4e97eb6b64ca86d734d825f","469806f53ef472c6f2843552c3c80504048966ff","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[CineastsUserDetailsService rate (User, Movie, Integer, String)]","10"
"11","spring-data-neo4j/cineasts-aspects","469806f53ef472c6f2843552c3c80504048966ff","9e49e7f176cffa4094ba32b141944b726681b734","INFIX_EXPRESSION_DIVIDING","8","1","1","[CineastsUserDetailsService register (String, String, String)]","10"
"15","spring-data-neo4j/cineasts-aspects","9e49e7f176cffa4094ba32b141944b726681b734","7e51a3699fa0f91c972edaecbb9ad1b33cdb1243","INFIX_EXPRESSION_DIVIDING","8","1","1","[CineastsUserDetailsService register (String, String, String)]","10"
"16","spring-data-neo4j/cineasts-aspects","7e51a3699fa0f91c972edaecbb9ad1b33cdb1243","c8cefa96747389272f64a2e1568a1cc264a409e2","SWITCH_EQUAL_SIDES","14","1","1","[CineastsUserDetailsService rate (User, Movie, Integer, String)]","10"
"17","spring-data-neo4j/cineasts-aspects","c8cefa96747389272f64a2e1568a1cc264a409e2","50c7f82ec539c94e5182b1c83029da3275d58edb","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[CineastsUserDetailsService register (String, String, String), CineastsUserDetailsService setUserInSession (User)]","20"
"19","spring-data-neo4j/cineasts-aspects","50c7f82ec539c94e5182b1c83029da3275d58edb","ef94b2396c04d1ab48051d8d8b3b8350e16f1c87","SWITCH_EQUAL_SIDES","14","1","1","[CineastsUserDetailsService rate (User, Movie, Integer, String)]","10"
"22","spring-data-neo4j/cineasts-aspects","ef94b2396c04d1ab48051d8d8b3b8350e16f1c87","e18fce4c6d4a371a01373bba36dad5d6a906cc92","LOCAL_VAR_RENAMING","0","1","1","[PersonRepository findById (String)]","11"
"24","spring-data-neo4j/cineasts-aspects","e18fce4c6d4a371a01373bba36dad5d6a906cc92","284c151bf0ebf2c7a9d026bd4a919ec4c6bc48e8","LOCAL_VAR_RENAMING","0","1","1","[PersonRepository findById (String)]","11"
"26","spring-data-neo4j/cineasts-aspects","284c151bf0ebf2c7a9d026bd4a919ec4c6bc48e8","058c48a362a6e71796364479f0c750285f20d607","LOCAL_VAR_RENAMING","0","1","1","[PersonRepository findById (String)]","11"
"53","spring-data-neo4j/cineasts-aspects","058c48a362a6e71796364479f0c750285f20d607","49ea434e4ab355c78392ccd72820bb2812d6f510","LOCAL_VAR_RENAMING","0","1","1","[PersonRepository findById (String)]","11"
"64","spring-data-neo4j/cineasts-aspects","49ea434e4ab355c78392ccd72820bb2812d6f510","5ce2c76d53b0b129ca1de0326147dfdd71ce91d5","LOCAL_VAR_RENAMING","0","1","1","[PersonRepository findById (String)]","11"
"0","spring-data-neo4j/cineasts-rest","5ce2c76d53b0b129ca1de0326147dfdd71ce91d5","69a59656f0c1cb92a7779a1534b8446b8c4e4c51","SWITCH_EQUAL_SIDES","14","1","90","[MovieDbJsonMapper mapToPerson (Map, Person), Movie setVersion (Integer), MovieDbImportService importMovies (Map<Integer,Integer>), MovieRating aggregateRatings (User, int), Movie Movie (String, String), MovieRating average (), Movie getRatings (), Movie setRuntime (Integer), MovieRating obtainRating (Movie), Movie getDescription (), MovieDbImportService doImportMovie (String), Movie getReleaseDate (), CineastsRepository rateMovie (Movie, User, int, String), MovieDbJsonMapper mapToRole (String), CineastsRepository getPerson (String), Movie getLanguage (), Movie getTitle (), DatabasePopulator populateDatabase (), Movie setHomepage (String), User getName (), Movie getVersion (), Movie getImdbId (), Movie getYoutubeId (), MovieDbImportService relatePersonsToMovie (Movie, Map), MovieRating FriendsMovieRecommendations (int), User addFriend (User), Movie getLastModified (), Movie setImdbId (String), Movie getStars (), User isFriend (User), User getLogin (), User toString (), CineastsRepository getMovie (String), MovieDbImportService loadMovieData (String), Movie setLastModified (Date), MovieDbJsonMapper mapToMovie (Map, Movie), Movie setImageUrl (String), Movie getYear (), User User (String, String, String, Roles), CineastsRepository getMovieData (String), Movie getDirector (), User getRole (), Movie getRuntime (), MovieRating getRecommendationsFor (User), Movie setTrailer (String), Movie Movie (), Movie getTagline (), User getAuthority (), CineastsRepository recommendMovies (User), User getFriends (), CineastsRepository findMovies (String, int), MovieImporter MovieImporter (MovieDbImportService), User getRatings (), MovieDbJsonMapper extractFirst (Map, String, String), MovieDbImportService doImportPerson (String), MovieDbImportService importMovie (String), User getPassword (), Movie setStudio (String), MovieDbJsonMapper toDate (Map, String, String), MovieDbJsonMapper limit (String, int), Movie setTagline (String), Movie getId (), Movie getTrailer (), Movie getActors (), Movie getHomepage (), DatabasePopulator cleanDb (), Movie getStudio (), MovieImporter getMovieIdsToImport (String[]), Movie setReleaseDate (Date), User setName (String), MovieDbImportService importPerson (String), MovieImporter runImport (Map<Integer,Integer>), Movie getImageUrl (), Movie toString (), User User (), MovieImporter main (String[]), Movie setTitle (String), User encode (String), MovieRating toString (), Movie setDescription (String), MovieRating update (Rating, int), MovieDbImportService loadPersonData (String), MovieDbImportService importMovieFailsafe (Integer), Movie getGenre (), Movie getRoles (), User updatePassword (String, String, String), Movie setGenre (String), User rate (Movie, int, String), MovieDbJsonMapper selectImageUrl (List<Map>, String, String), Movie setLanguage (String)]","720"
"4","spring-data-neo4j/cineasts-rest","69a59656f0c1cb92a7779a1534b8446b8c4e4c51","e486b776b1ffb2d28dbe6e0c2d453199b9136ecd","LOCAL_VAR_RENAMING","0","1","23","[Person setVersion (Integer), Person getProfileImageUrl (), Person setBirthplace (String), Person toString (), Person setBirthday (Date), Person setLastModified (Date), Person getName (), Person Person (), Person getId (), Person setProfileImageUrl (String), Person getLastModified (), Person getVersion (), Person setBiography (String), Person getCoActors (), Person getBiography (), Person getBirthplace (), Person getBirthday (), Person Person (String, String), Person setName (String), Person directed (Movie), Person playedIn (Movie, String), Person getDirectedMovies (), Person getRoles ()]","207"
"5","spring-data-neo4j/cineasts-rest","e486b776b1ffb2d28dbe6e0c2d453199b9136ecd","376dbe166237e2ebfcdc51c05bd6b31f6fc67f92","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[Person Person (String, String)]","9"
"9","spring-data-neo4j/cineasts-rest","376dbe166237e2ebfcdc51c05bd6b31f6fc67f92","f057775c4dddbea5df76e2c65f53f630cfb9e694","LOCAL_VAR_RENAMING","0","1","4","[Person getBiography (), Person getBirthday (), Person setBirthday (Date), Person setBiography (String)]","36"
"12","spring-data-neo4j/cineasts-rest","f057775c4dddbea5df76e2c65f53f630cfb9e694","7f39d4733fc5b6ef5e3dfd86008eb9b05e6e2be4","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[Person Person (String, String)]","9"
"14","spring-data-neo4j/cineasts-rest","7f39d4733fc5b6ef5e3dfd86008eb9b05e6e2be4","c1ad9cc552e358cb7a35392bc1f37d8e43380b13","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[Person Person (String, String)]","9"
"27","spring-data-neo4j/cineasts-rest","c1ad9cc552e358cb7a35392bc1f37d8e43380b13","9d1e3d93a58c2e1721411fad14f6f942fb28a00b","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[Person Person (String, String)]","9"
"56","spring-data-neo4j/cineasts-rest","9d1e3d93a58c2e1721411fad14f6f942fb28a00b","78a4d84bc21e319c099935e6c2c4aeb65e459cb3","LOCAL_VAR_RENAMING","0","1","2","[Person setBirthday (Date), Person Person (String, String)]","18"
"63","spring-data-neo4j/cineasts-rest","78a4d84bc21e319c099935e6c2c4aeb65e459cb3","7b44df66c5a5ee203fa9b8fa5a1be2c40744d466","LOCAL_VAR_RENAMING","0","1","3","[Person setVersion (Integer), Person directed (Movie), Person getDirectedMovies ()]","27"
"0","spring-data-neo4j/cineasts","7b44df66c5a5ee203fa9b8fa5a1be2c40744d466","a9a5d8224d4d716f04529d6797dce3cc35e851cb","REVERSE_IF_ELSE","3","1","122","[Director Director (String, String), Movie Movie (String, String), Movie getRatings (), Movie setRuntime (Integer), User rate (Neo4jOperations, Movie, int, String), Movie getDescription (), MovieDbImportService doImportMovie (String), MovieController updateMovie (Model, String, Integer, String), MovieDbLocalStorage hasMovie (String), Movie setHomepage (String), MovieController singleMovieView (Model, String), Movie getVersion (), CineastsUserDetails isAccountNonExpired (), Movie getYoutubeId (), Role Role (Actor, Movie, String), Role setName (String), Movie getLastModified (), User addFriend (User), Actor Actor (String, String), Movie getStars (), User hashCode (), MovieDbLocalStorage storeMovie (String, Object), User toString (), MovieController findMovies (Model, String), Movie getDirectors (), Movie setLastModified (Date), MovieDbLocalStorage fileForPerson (String), MovieDbLocalStorage storePerson (String, Object), Role getActor (), Movie setImageUrl (String), ImportController ImportController (MovieDbImportService), User User (String, String, String, Roles), MovieDbLocalStorage asMap (Object), Role Role (), Movie setTrailer (String), MovieController populateDatabase (Model), Movie getTagline (), Role hashCode (), ImportController extractRanges (String), Movie equals (Object), MovieDbLocalStorage MovieDbLocalStorage (String), User getPassword (), Actor Actor (), Movie setTagline (String), MovieDbImportService doImportPerson (String, T), Movie getTrailer (), MovieDbLocalStorage loadJsonValue (File), Movie getHomepage (), User equals (Object), Movie getStudio (), MovieController singleActorView (Model, String), User getId (), Movie getImageUrl (), CineastsUserDetails getUser (), Role toString (), Actor getRoles (), Director Director (), Movie setTitle (String), Director Director (String), MovieDbImportService loadPersonData (String), User updatePassword (String, String, String), Director directed (Movie), Movie setGenre (String), ImportController importMovie (String, Model), CineastsUserDetails getUsername (), MovieController getMovie (String), Movie setVersion (Integer), MovieDbImportService importMovies (Map<Integer,Integer>), Director getDirectedMovies (), CineastsUserDetails isEnabled (), MovieDbLocalStorage storeJsonValue (Object, File), MovieController index (Model), CineastsUserDetails isAccountNonLocked (), Movie getReleaseDate (), Movie getLanguage (), Role equals (Object), Movie getTitle (), User getName (), Role getName (), Movie getImdbId (), MovieDbLocalStorage fileForMovie (String), MovieDbImportService relatePersonsToMovie (Movie, Map), Movie setImdbId (String), User isFriend (User), User getLogin (), MovieDbImportService loadMovieData (String), Movie hashCode (), Movie getYear (), MovieDbLocalStorage loadMovie (String), User getRole (), Movie getRuntime (), Movie Movie (), User getAuthority (), User getFriends (), CineastsUserDetails CineastsUserDetails (User), User getRatings (), Actor Actor (String), MovieDbImportService importMovie (String), Movie setStudio (String), MovieController addUser (Model), MovieDbLocalStorage ensureStorageDirectoryExists (), Movie getId (), CineastsUserDetails getPassword (), Movie getActors (), MovieController clean (Model), Movie setReleaseDate (Date), User setName (String), CineastsUserDetails isCredentialsNonExpired (), Movie toString (), User User (), User encode (String), MovieDbLocalStorage loadPerson (String), Movie setDescription (String), MovieDbImportService importMovieFailsafe (Integer), Role getMovie (), Movie getGenre (), Movie getRoles (), MovieDbImportService importPerson (String, T), CineastsUserDetails getAuthorities (), Actor playedIn (Movie, String), MovieDbLocalStorage hasPerson (String), Movie setLanguage (String)]","1220"
"8","spring-data-neo4j/cineasts","a9a5d8224d4d716f04529d6797dce3cc35e851cb","3514ac731393f504b374a48df1eab2fada0cd4c9","SWITCH_EQUAL_SIDES","14","1","1","[CineastsUserDetails getAuthorities ()]","10"
"28","spring-data-neo4j/cineasts","3514ac731393f504b374a48df1eab2fada0cd4c9","25c7848e909e506f035ac564a58da62170404d93","LOCAL_VAR_RENAMING","0","1","2","[DatabasePopulator cleanDb (), DatabasePopulator populateDatabase ()]","22"
"0","spring-data-neo4j/hello-worlds","25c7848e909e506f035ac564a58da62170404d93","d7cf86a6de8f8227459a01e5eded79f6eb225d30","SWITCH_EQUAL_SIDES","14","1","17","[World toString (), World getName (), World canBeReachedFrom (World), World equals (Object), World addRocketRouteTo (World), GalaxyService getNumberOfWorlds (), World getId (), World getMoons (), World hashCode (), World World (String, int), GalaxyService findWorldByName (String), GalaxyService findWorldById (Long), GalaxyService makeSomeWorlds (), World World (), GalaxyService findAllByNumberOfMoons (int), GalaxyService getAllWorlds (), GalaxyService createWorld (String, int)]","34"
"4","spring-data-neo4j/hello-worlds","d7cf86a6de8f8227459a01e5eded79f6eb225d30","13beef8ed50723f627c3395ffce53ddf959c02de","SWITCH_EQUAL_SIDES","14","1","2","[World equals (Object), World hashCode ()]","4"
"10","spring-data-neo4j/hello-worlds","13beef8ed50723f627c3395ffce53ddf959c02de","3ffd2a5618720751392831757eb44f298744bc58","SWITCH_EQUAL_SIDES","14","1","1","[World equals (Object)]","2"
"14","spring-data-neo4j/hello-worlds","3ffd2a5618720751392831757eb44f298744bc58","6f00c04c53c64b971f850cb9e9e34c5831f277e2","REVERSE_IF_ELSE","3","1","1","[World equals (Object)]","2"
"20","spring-data-neo4j/hello-worlds","6f00c04c53c64b971f850cb9e9e34c5831f277e2","d351f969b4a2a47b20cc3fb5b2b9464b0b3d6632","REVERSE_IF_ELSE","3","1","1","[World equals (Object)]","2"
"21","spring-data-neo4j/hello-worlds","d351f969b4a2a47b20cc3fb5b2b9464b0b3d6632","373e0459675ffee4ae623f7904de77b8f4a2a6ae","SWITCH_EQUAL_SIDES","14","1","1","[World equals (Object)]","2"
"42","spring-data-neo4j/hello-worlds","373e0459675ffee4ae623f7904de77b8f4a2a6ae","1da1dda38ebd354f3bf7bad1e128fea0229d4dd5","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[World World (String, int)]","2"
"46","spring-data-neo4j/hello-worlds","1da1dda38ebd354f3bf7bad1e128fea0229d4dd5","8118c819beccc310c8cf095c25db51e6feca7a9d","SWITCH_EQUAL_SIDES","14","1","1","[World equals (Object)]","2"
"50","spring-data-neo4j/hello-worlds","8118c819beccc310c8cf095c25db51e6feca7a9d","0061be1036776e0d0845fce30a15f759cfe5e4f8","REVERSE_IF_ELSE","3","1","1","[World equals (Object)]","2"
"52","spring-data-neo4j/hello-worlds","0061be1036776e0d0845fce30a15f759cfe5e4f8","5a6cf441eca2ddffb86e2f18461c64b8a2b3f143","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[World World (String, int)]","2"
"57","spring-data-neo4j/hello-worlds","5a6cf441eca2ddffb86e2f18461c64b8a2b3f143","511f8c9e7efd9e74911ccd6b3f2e4d14fc7bb90a","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[World World (String, int)]","2"
"63","spring-data-neo4j/hello-worlds","511f8c9e7efd9e74911ccd6b3f2e4d14fc7bb90a","71624c6d50ce7d8cb27c7d8569ae13a0381b48ca","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[World World (String, int)]","2"
"0","spring-data-neo4j/imdb","71624c6d50ce7d8cb27c7d8569ae13a0381b48ca","8709bbc5dea38ec4b3f40049e68275122f1a36ee","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","37","[MovieFindControllerDelegate getModel (Object, Map<String,Object>), ActorInfo compareTo (ActorInfo), ActorInfo setRole (String), MovieInfo getTitle (), RoleData getRole (), ActorFindControllerDelegate getModel (Object, Map<String,Object>), ActorInfo getName (), ImdbParser getFileReader (String, String, int), ImdbReaderImpl newActor (String, RoleData[]), ImdbSetupControllerDelegate getModel (Object, Map<String,Object>), ActorData getName (), RoleData getTitle (), MovieInfo MovieInfo (Movie, Role), MovieInfo setRole (String), ImdbParser ImdbParser (ImdbReader), ActorInfo setName (String), ImdbReaderImpl newActors (List<ActorData>), ImdbReader newActors (List<ActorData>), ImdbReaderImpl newMovies (List<MovieData>), ImdbReader newMovies (List<MovieData>), MovieInfo getRole (), ImdbParser parseMovies (String), MovieFindControllerDelegate populateModel (Map<String,Object>, Movie), MovieInfo setTitle (String), ActorInfo getRole (), ImdbParser parseActorItems (BufferedReader), ImdbReaderImpl newMovie (String, int), ActorFindControllerDelegate getFieldName (), ImdbParser parseActors (String, String), ActorData ActorData (String, RoleData[]), MovieInfo compareTo (MovieInfo), SetupControllerDelegate getModel (Object, Map<String,Object>), ActorData getMovieRoles (), RoleData RoleData (String, String), ActorInfo ActorInfo (Actor, Role), MovieFindControllerDelegate getFieldName (), ActorFindControllerDelegate populateModel (Map<String,Object>, Actor)]","370"
"18","spring-data-neo4j/imdb","8709bbc5dea38ec4b3f40049e68275122f1a36ee","30b035f17f47f21128a306a16f88082939235190","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ImdbSetupControllerDelegate getModel (Object, Map<String,Object>)]","10"
"20","spring-data-neo4j/imdb","30b035f17f47f21128a306a16f88082939235190","6f6cc4ee255406cd506d58cbbbdef8f1ff95201c","LOCAL_VAR_RENAMING","0","1","1","[ImdbSetupControllerDelegate getModel (Object, Map<String,Object>)]","10"
"22","spring-data-neo4j/imdb","6f6cc4ee255406cd506d58cbbbdef8f1ff95201c","11e1b844ed2e7dd289a1125933649698ffa4ff3f","LOCAL_VAR_RENAMING","0","1","1","[ImdbSetupControllerDelegate getModel (Object, Map<String,Object>)]","10"
"23","spring-data-neo4j/imdb","11e1b844ed2e7dd289a1125933649698ffa4ff3f","7ca97eb56aaa8b64ba9d25512efcc343c66b0164","LOCAL_VAR_RENAMING","0","1","1","[ImdbSetupControllerDelegate getModel (Object, Map<String,Object>)]","10"
"30","spring-data-neo4j/imdb","7ca97eb56aaa8b64ba9d25512efcc343c66b0164","ce8393c2dc521d9e2d597a70bdb12dc027b1caaa","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ImdbSetupControllerDelegate getModel (Object, Map<String,Object>)]","10"
"35","spring-data-neo4j/imdb","ce8393c2dc521d9e2d597a70bdb12dc027b1caaa","c394fe098d0f93ed1f96032fe888f1ad5f678d84","LOCAL_VAR_RENAMING","0","1","1","[ImdbSetupControllerDelegate getModel (Object, Map<String,Object>)]","10"
"40","spring-data-neo4j/imdb","c394fe098d0f93ed1f96032fe888f1ad5f678d84","6ea77ea527bd9e4f7578036c4583a517991dccdf","LOCAL_VAR_RENAMING","0","1","1","[ImdbSetupControllerDelegate getModel (Object, Map<String,Object>)]","10"
"54","spring-data-neo4j/imdb","6ea77ea527bd9e4f7578036c4583a517991dccdf","c67285bc241adf5b3edd4783da04319ffb4d7f88","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ImdbSetupControllerDelegate getModel (Object, Map<String,Object>)]","10"
"0","spring-data-neo4j/myrestaurants-original","c67285bc241adf5b3edd4783da04319ffb4d7f88","0f354f30b1d362c3b7c1b7540b09e5cb3f2de1a0","REVERSE_IF_ELSE","3","1","27","[UserAccount getId (), RestaurantDao findAllRestaurants (), UserAccount getFavorites (), UserAccount getVersion (), UserAccount toString (), RestaurantDao countRestaurants (), RestaurantDao findRestaurantEntries (int, int), UserAccount setLastName (String), UserAccountDao persist (UserAccount), UserAccountDao merge (UserAccount), BaseApplicationController getRestaurantConverter (), UserAccount getUserName (), UserAccountDao findUserAccount (Long), BaseApplicationController populateCurrentUserName (), BaseApplicationController convert (Restaurant), UserAccount setFirstName (String), UserAccountDao findByName (String), UserAccount setId (Long), UserAccount getBirthDate (), UserAccount setUserName (String), UserAccount setVersion (Integer), UserAccount getFirstName (), BaseApplicationController addDateTimeFormatPatterns (Model), RestaurantDao findRestaurant (Long), UserAccount setBirthDate (Date), UserAccount getLastName (), UserAccount setFavorites (Set<Restaurant>)]","108"
"9","spring-data-neo4j/myrestaurants-original","0f354f30b1d362c3b7c1b7540b09e5cb3f2de1a0","816ea32384888f6a9fa5ec5f98b9a5f3f729af9d","SWITCH_EQUAL_SIDES","14","1","1","[RestaurantDao findRestaurant (Long)]","4"
"15","spring-data-neo4j/myrestaurants-original","816ea32384888f6a9fa5ec5f98b9a5f3f729af9d","ba5864539a5c3a872b5b133cc0543dad9bd2025e","SWITCH_EQUAL_SIDES","14","1","1","[RestaurantDao findRestaurant (Long)]","4"
"36","spring-data-neo4j/myrestaurants-original","ba5864539a5c3a872b5b133cc0543dad9bd2025e","29372f431cdc5c655b4ad910ca2a7547d7c808bc","LOCAL_VAR_RENAMING","0","1","4","[RestaurantDao findAllRestaurants (), RestaurantDao findRestaurant (Long), RestaurantDao countRestaurants (), RestaurantDao findRestaurantEntries (int, int)]","16"
"39","spring-data-neo4j/myrestaurants-original","29372f431cdc5c655b4ad910ca2a7547d7c808bc","93b9393fe3a0f719bfefccd6949e447501d07b52","REVERSE_IF_ELSE","3","1","1","[RestaurantDao findRestaurant (Long)]","4"
"42","spring-data-neo4j/myrestaurants-original","93b9393fe3a0f719bfefccd6949e447501d07b52","7d403b86ea4e28e65081927fbe35ee72754e9f0f","SWITCH_EQUAL_SIDES","14","1","1","[RestaurantDao findRestaurant (Long)]","4"
"58","spring-data-neo4j/myrestaurants-original","7d403b86ea4e28e65081927fbe35ee72754e9f0f","704e7b65b1ffdcc631a125947235ddb53b5f4dc6","REVERSE_IF_ELSE","3","1","1","[RestaurantDao findRestaurant (Long)]","4"
"59","spring-data-neo4j/myrestaurants-original","704e7b65b1ffdcc631a125947235ddb53b5f4dc6","c9fbb94b4fc8da09225c8e3626bc78dc0fec36fc","REVERSE_IF_ELSE","3","1","1","[RestaurantDao findRestaurant (Long)]","4"
"61","spring-data-neo4j/myrestaurants-original","c9fbb94b4fc8da09225c8e3626bc78dc0fec36fc","ed5a2281c4d8b9bac03f4fafc7263fac110d34f2","LOCAL_VAR_RENAMING","0","1","4","[RestaurantDao findAllRestaurants (), RestaurantDao findRestaurant (Long), RestaurantDao countRestaurants (), RestaurantDao findRestaurantEntries (int, int)]","16"
"63","spring-data-neo4j/myrestaurants-original","ed5a2281c4d8b9bac03f4fafc7263fac110d34f2","967f6ecc23815ca043025b2762530da949838473","LOCAL_VAR_RENAMING","0","1","1","[RestaurantDao findRestaurantEntries (int, int)]","4"
"0","spring-data-neo4j/myrestaurants-social","967f6ecc23815ca043025b2762530da949838473","1a94ebe2af64ffef288c2490d40bf2b4d416a91e","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","42","[RecommendationController list (Integer, Integer, Long, Model), RecommendationController show (Long, Long, Model), Restaurant getState (), Restaurant getCity (), AggregatedRecommendation AggregatedRecommendation (Node), FriendController delete (Long, Long, Integer, Integer, Model), Restaurant setCity (String), AggregatedRecommendation add (Relationship, int), BaseApplicationController populateModelWithCurrentUserAccountIdAsLong (), RecommendationController delete (Long, Integer, Integer, Long, Model), Restaurant setZipCode (String), Restaurant getId (), TopRatedRestaurantFinder getTopNRatedRestaurants (UserAccount, int), RecommendationController findRecommendation (Long, Long), BaseApplicationController getRestaurantConverter (), FriendController show (Long, Model), Restaurant setId (Long), FriendController list (Integer, Integer, Long, Model), FriendController createForm (Model), Restaurant getZipCode (), AggregatedRecommendation CalculateRatingPredicate (), BaseApplicationController convert (Restaurant), Restaurant setVersion (Integer), FriendController convert (UserAccount), AggregatedRecommendation getRecommendedRestaurants (int), RecommendationController create (RecommendationFormBean, Long, BindingResult, Model), RecommendationController update (RecommendationFormBean, Long, BindingResult, Model), Restaurant setState (String), Restaurant toString (), FriendController getUserAccountConverter (), AggregatedRecommendation evaluate (Path), FriendController registerConverters (WebDataBinder), AggregatedRecommendation toRatedRestaurant (CalculateRatingPredicate), FriendController create (FriendFormBean, Long, BindingResult, Model), Restaurant getVersion (), RecommendationController createForm (Long, Long, Model), Restaurant getName (), BaseApplicationController addDateTimeFormatPatterns (Model), BaseApplicationController getCurrentUserAccount (), RecommendationController updateForm (Long, Long, Model), Restaurant setName (String), AggregatedRecommendation compareTo (AggregatedRecommendation)]","210"
"2","spring-data-neo4j/myrestaurants-social","1a94ebe2af64ffef288c2490d40bf2b4d416a91e","2d9683531a259f7b95dc49a2f4f51bf680b3c82c","SWITCH_EQUAL_SIDES","14","1","7","[UserAccountRepository countUserAccounts (), UserAccountRepository findAllUserAccounts (), UserAccountRepository findByName (String), UserAccountRepository merge (UserAccount), UserAccountRepository findUserAccountEntries (int, int), UserAccountRepository findUserAccount (Long), UserAccountRepository persist (UserAccount)]","42"
"5","spring-data-neo4j/myrestaurants-social","2d9683531a259f7b95dc49a2f4f51bf680b3c82c","7cbfdb1069a1dbf5a99b3f300498e9dbdfd64487","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[UserAccountRepository findByName (String)]","6"
"8","spring-data-neo4j/myrestaurants-social","7cbfdb1069a1dbf5a99b3f300498e9dbdfd64487","9c843b62e410322540003d7140a9ee08f55a1508","LOCAL_VAR_RENAMING","0","1","1","[UserAccountRepository findByName (String)]","6"
"12","spring-data-neo4j/myrestaurants-social","9c843b62e410322540003d7140a9ee08f55a1508","f189aa3ac6aa65ceebb451d0e019902286dcde2d","REVERSE_IF_ELSE","3","1","1","[UserAccountRepository findByName (String)]","6"
"15","spring-data-neo4j/myrestaurants-social","f189aa3ac6aa65ceebb451d0e019902286dcde2d","7a541d3404448b349e777e49a7d2c28adab0d1d1","SWITCH_EQUAL_SIDES","14","1","1","[UserAccountRepository findByName (String)]","6"
"19","spring-data-neo4j/myrestaurants-social","7a541d3404448b349e777e49a7d2c28adab0d1d1","bd2ee8eef80da56a0da8e2aca02d61f1e863c06e","REVERSE_IF_ELSE","3","1","1","[UserAccountRepository findByName (String)]","6"
"20","spring-data-neo4j/myrestaurants-social","bd2ee8eef80da56a0da8e2aca02d61f1e863c06e","7325a32775155df1e18b0372d823125d9c89c06e","LOCAL_VAR_RENAMING","0","1","2","[UserAccountRepository merge (UserAccount), UserAccountRepository findUserAccount (Long)]","12"
"25","spring-data-neo4j/myrestaurants-social","7325a32775155df1e18b0372d823125d9c89c06e","c2a383e5f82a8aacd7ab6ae44cf00ea75223f150","LOCAL_VAR_RENAMING","0","1","2","[UserAccountRepository merge (UserAccount), UserAccountRepository findUserAccount (Long)]","12"
"32","spring-data-neo4j/myrestaurants-social","c2a383e5f82a8aacd7ab6ae44cf00ea75223f150","428b3598bd236db2d36ea118b251c6dd973f2da7","LOCAL_VAR_RENAMING","0","1","7","[UserAccountRepository countUserAccounts (), UserAccountRepository findAllUserAccounts (), UserAccountRepository findByName (String), UserAccountRepository merge (UserAccount), UserAccountRepository findUserAccountEntries (int, int), UserAccountRepository findUserAccount (Long), UserAccountRepository persist (UserAccount)]","42"
"35","spring-data-neo4j/myrestaurants-social","428b3598bd236db2d36ea118b251c6dd973f2da7","57d2bb079d1c65e637dbb729445a1a29b5f4f0f2","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[UserAccountRepository findByName (String)]","6"
"37","spring-data-neo4j/myrestaurants-social","57d2bb079d1c65e637dbb729445a1a29b5f4f0f2","78c826c2527a7ad4289374b94e4a4c526674fe34","LOCAL_VAR_RENAMING","0","1","1","[UserAccountRepository findByName (String)]","6"
"43","spring-data-neo4j/myrestaurants-social","78c826c2527a7ad4289374b94e4a4c526674fe34","c465d81643aaa8eb3468a662ed29d6baf1e91ce9","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[UserAccountRepository findByName (String)]","6"
"48","spring-data-neo4j/myrestaurants-social","c465d81643aaa8eb3468a662ed29d6baf1e91ce9","5b366735af422f38df43347482374dec135d1f3f","REVERSE_IF_ELSE","3","1","1","[UserAccountRepository findByName (String)]","6"
"52","spring-data-neo4j/myrestaurants-social","5b366735af422f38df43347482374dec135d1f3f","4ac72ab3418622033367a438e5fd66474dac34cd","SWITCH_EQUAL_SIDES","14","1","2","[UserAccountRepository findByName (String), UserAccountRepository findUserAccount (Long)]","12"
"54","spring-data-neo4j/myrestaurants-social","4ac72ab3418622033367a438e5fd66474dac34cd","5040ac27682a703d1f175ecb167c882fcdd7ce0d","SWITCH_EQUAL_SIDES","14","1","1","[UserAccountRepository findByName (String)]","6"
"57","spring-data-neo4j/myrestaurants-social","5040ac27682a703d1f175ecb167c882fcdd7ce0d","1df430130d2ae39c5141651b85bec36275518a98","SWITCH_EQUAL_SIDES","14","1","1","[UserAccountRepository findByName (String)]","6"
"58","spring-data-neo4j/myrestaurants-social","1df430130d2ae39c5141651b85bec36275518a98","b160343746ffaa04c22701f4fe3f7610526a5215","SWITCH_EQUAL_SIDES","14","1","2","[UserAccountRepository findByName (String), UserAccountRepository findUserAccount (Long)]","12"
"62","spring-data-neo4j/myrestaurants-social","b160343746ffaa04c22701f4fe3f7610526a5215","2506230a8d41fa16038101968d3bd7b373350dc1","SWITCH_EQUAL_SIDES","14","1","1","[UserAccountRepository findByName (String)]","6"
"63","spring-data-neo4j/myrestaurants-social","2506230a8d41fa16038101968d3bd7b373350dc1","12da8c659f2171ef6c1ffbf7669caa7cdd8c3ce1","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[UserAccountRepository findByName (String)]","6"
"0","spring-data-neo4j/todos","12da8c659f2171ef6c1ffbf7669caa7cdd8c3ce1","05040ad505f1ef7d4e4a7d6c2790b4b632375fd6","PRE_POST_FIX_EXPRESSION_DIVIDING","16","1","19","[Todo setIsDone (Boolean), Main main (String[]), TodoController deleteFromJson (Long), Todo fromJsonArrayToTodoes (String), Todo getIsDone (), TodoController createFromJson (String), TodoController showJson (Long), TodoController encodeUrlPathSegment (String, HttpServletRequest), Todo toJsonArray (Iterable<Todo>), Todo Todo (Node), Todo getTitle (), TodoController updateFromJson (String), Todo toString (), TodoController listJson (), Todo setTitle (String), Todo toJson (), Todo fromJsonToTodo (String), Todo getId (), Todo Todo ()]","57"
"16","spring-data-neo4j/todos","05040ad505f1ef7d4e4a7d6c2790b4b632375fd6","edf712755f03cff367ff413b0a015d4d39b9f8ca","LOCAL_VAR_RENAMING","0","1","2","[Todo fromJsonToTodo (String), Todo toJsonArray (Iterable<Todo>)]","6"
"34","spring-data-neo4j/todos","edf712755f03cff367ff413b0a015d4d39b9f8ca","a58b8f2586efa374cf501acb3ea52b075b3422f4","LOCAL_VAR_RENAMING","0","1","3","[Todo setIsDone (Boolean), Todo fromJsonArrayToTodoes (String), Todo getIsDone ()]","9"
"36","spring-data-neo4j/todos","a58b8f2586efa374cf501acb3ea52b075b3422f4","a7327a53b05d588270a1c25c8726d34863215fe3","LOCAL_VAR_RENAMING","0","1","3","[Todo toString (), Todo setTitle (String), Todo getTitle ()]","9"
"43","spring-data-neo4j/todos","a7327a53b05d588270a1c25c8726d34863215fe3","a429b568193c56548cccf22516599aa1035f3cdc","LOCAL_VAR_RENAMING","0","1","3","[Todo setTitle (String), Todo fromJsonToTodo (String), Todo getTitle ()]","9"
"44","spring-data-neo4j/todos","a429b568193c56548cccf22516599aa1035f3cdc","d96a57b668babacbd35907bf18f58e203e4b3545","LOCAL_VAR_RENAMING","0","1","4","[Todo setIsDone (Boolean), Todo setTitle (String), Todo getIsDone (), Todo getTitle ()]","12"
"0","spring-data-neo4j/spring-data-neo4j-rest","d96a57b668babacbd35907bf18f58e203e4b3545","199d2e991fdfe1a7e0d5a11a177f98feed2f66de","FOR_TO_WHILE","1","1","42","[SpringRestGraphDatabase SpringRestGraphDatabase (RestAPI), SpringRestGraphDatabase createRelationship (Node, Node, RelationshipType, Map<String,Object>), SpringResultConverter remove (Relationship), SpringResultConverter removeFromIndexes (Relationship), SpringResultConverter SpringResultConverter (ResultConverter), SpringRestCypherQueryEngine SpringRestCypherQueryEngine (RestCypherQueryEngine), SpringRestResult SpringRestResult (org.neo4j.rest.graphdb.util.QueryResult<T>), SpringRestResult as (Class<C>), SpringResultConverter removeFromIndexes (Node), SpringRestResult to (Class<R>), SpringRestGraphDatabase traversalDescription (), SpringRestGraphDatabase setConversionService (ConversionService), SpringRestResult finish (), SpringResultConverter getTransactionManager (), SpringRestGremlinQueryEngine SpringRestGremlinQueryEngine (RestGremlinQueryEngine), SpringResultConverter setResultConverter (ResultConverter), SpringRestGraphDatabase SpringRestGraphDatabase (String), SpringResultConverter convert (Object, Class), SpringResultConverter remove (Node), SpringHandler handle (R), SpringRestGraphDatabase getIndex (String), SpringRestResult handle (org.springframework.data.neo4j.conversion.Handler<T>), SpringRestGraphDatabase SpringRestGraphDatabase (String, String, String), SpringRestGraphDatabase beginTx (), SpringHandler SpringHandler (Handler<R>), SpringRestResult iterator (), SpringRestGraphDatabase getOrCreateRelationship (String, String, Object, Node, Node, String, Map<String,Object>), SpringRestGraphDatabase createIndex (Class<T>, String, org.springframework.data.neo4j.support.index.IndexType), SpringRestGraphDatabase getOrCreateNode (String, String, Object, Map<String,Object>), SpringRestResult singleOrNull (), SpringRestGremlinQueryEngine query (String, Map<String,Object>), SpringRestGraphDatabase createNode (Map<String,Object>), SpringRestResult convert (T, Class<R>), SpringRestResult to (Class<R>, org.springframework.data.neo4j.conversion.ResultConverter<T,R>), SpringRestGraphDatabase queryEngineFor (QueryType, ResultConverter), SpringRestGraphDatabase getTxManager (), SpringRestGraphDatabase queryEngineFor (QueryType), SpringRestResult single (), SpringRestCypherQueryEngine query (String, Map<String,Object>), SpringRestGraphDatabase createResultConverter (), SpringRestResult with (MappingPolicy), SpringResultConverter transactionIsRunning ()]","210"
"19","spring-data-neo4j/spring-data-neo4j-rest","199d2e991fdfe1a7e0d5a11a177f98feed2f66de","d2b03abc13d45cd8edf2071ce1584e57292f811b","LOCAL_VAR_RENAMING","0","1","2","[SpringRestResult to (Class<R>, org.springframework.data.neo4j.conversion.ResultConverter<T,R>), SpringRestResult with (MappingPolicy)]","10"
"0","spring-data-neo4j/spring-data-neo4j-tx","d2b03abc13d45cd8edf2071ce1584e57292f811b","74fb43767db8f5f136d145c193ea9b781cb5c0b2","VAR_DECLARATION_MERGING","12","1","52","[SavePoints createSavepoint (), SavePoints flush (), ChainedTransactionManager commit (TransactionStatus), MultiTransactionStatus isNewTransaction (), SavePoints rollback (PlatformTransactionManager), SavePoints save (TransactionStatus), SavePoints release (), MultiTransactionStatus setNewSynchonization (), MultiTransactionStatus isRollbackOnly (), MultiTransactionStatus getTransactionStatuses (), SpringServiceImpl suspend (), SpringServiceImpl getTransactionState (), MultiTransactionStatus setRollbackOnly (), SavePoints rollback (), ChainedTransactionManager lastTransactionManagerIndex (), SpringServiceImpl setTransactionTimeout (int), SpringServiceImpl rollback (), MultiTransactionStatus getMainTransactionStatus (), MultiTransactionStatus isNewSynchonization (), SpringProvider SpringProvider (), ChainedTransactionManager rollback (TransactionStatus), SpringServiceImpl shutdown (), ChainedTransactionManager reverse (Collection<T>), SpringServiceImpl commit (), SavePoints registerTransactionManager (TransactionDefinition, PlatformTransactionManager), SavePoints releaseSavepoint (Object), SpringServiceImpl setTransactionManager (PlatformTransactionManager), SavePoints getTransactionStatus (PlatformTransactionManager), SpringServiceImpl resume (Transaction), SpringServiceImpl setRollbackOnly (), MultiTransactionStatus MultiTransactionStatus (PlatformTransactionManager), ChainedTransactionManager ChainedTransactionManager (PlatformTransactionManager), SpringServiceImpl getTransaction (), SavePoints addSavePoint (TransactionStatus, Object), SpringServiceImpl start (), SpringProvider loadTransactionManager (String, XaDataSourceManager, KernelPanicEventGenerator, TxHook, StringLogger, FileSystemAbstraction, TransactionStateFactory), MultiTransactionStatus isCompleted (), SpringServiceImpl begin (), SavePoints rollbackToSavepoint (Object), MultiTransactionStatus hasSavepoint (), ChainedTransactionManager getTransaction (TransactionDefinition), SpringServiceImpl getTransactionManager (), SpringServiceImpl stop (), SpringServiceImpl getStatus (), SavePoints commit (PlatformTransactionManager), SavePoints savepointFor (TransactionStatus), SpringServiceImpl doRecovery (), ChainedTransactionManager ChainedTransactionManager (SynchronizationManager, PlatformTransactionManager), SpringServiceImpl getEventIdentifier (), SpringServiceImpl init (), ChainedTransactionManager getLastTransactionManager (), SpringServiceImpl SpringServiceImpl (TransactionStateFactory)]","208"
"12","spring-data-neo4j/spring-data-neo4j-tx","74fb43767db8f5f136d145c193ea9b781cb5c0b2","ea4973121990ff9ef082655885cde92e0362513b","LOCAL_VAR_RENAMING","0","1","1","[SpringProvider loadTransactionManager (String, XaDataSourceManager, KernelPanicEventGenerator, TxHook, StringLogger, FileSystemAbstraction, TransactionStateFactory)]","4"
"18","spring-data-neo4j/spring-data-neo4j-tx","ea4973121990ff9ef082655885cde92e0362513b","43be5d3ae85fd66ef1919d323cc09b590eafcaaa","LOCAL_VAR_RENAMING","0","1","1","[SpringProvider loadTransactionManager (String, XaDataSourceManager, KernelPanicEventGenerator, TxHook, StringLogger, FileSystemAbstraction, TransactionStateFactory)]","4"
"33","spring-data-neo4j/spring-data-neo4j-tx","43be5d3ae85fd66ef1919d323cc09b590eafcaaa","64bbd48f01720d5a4d469932ed8d83b5e9e94a4b","LOCAL_VAR_RENAMING","0","1","1","[SpringProvider loadTransactionManager (String, XaDataSourceManager, KernelPanicEventGenerator, TxHook, StringLogger, FileSystemAbstraction, TransactionStateFactory)]","4"
"48","spring-data-neo4j/spring-data-neo4j-tx","64bbd48f01720d5a4d469932ed8d83b5e9e94a4b","2b5ca1bdf189d9ea5a8b6b98337feb782166fc3e","LOCAL_VAR_RENAMING","0","1","1","[SpringProvider loadTransactionManager (String, XaDataSourceManager, KernelPanicEventGenerator, TxHook, StringLogger, FileSystemAbstraction, TransactionStateFactory)]","4"
"0","spring-data-neo4j/spring-data-neo4j","2b5ca1bdf189d9ea5a8b6b98337feb782166fc3e","5081fbe43acb0382c7bffe52027f210b301d1c06","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","116","[Neo4jPersistentPropertyImpl getAnnotations (), FieldAccessorFactoryProvider listeners (), Neo4jPersistentPropertyImpl isAnnotationPresent (String), Neo4jPersistentPropertyImpl getValue (Object, MappingPolicy), RelatedToCollectionFieldAccessor getDefaultValue (), Neo4jPersistentPropertyImpl isAssociation (), Neo4jPersistentPropertyImpl isTargetTypeEnforced (), RelatedToCollectionFieldAccessorFactory RelatedToCollectionFieldAccessorFactory (Neo4jTemplate), Neo4jPersistentPropertyImpl isRelationshipEntity (Class<?>), BeforeSaveEvent BeforeSaveEvent (Object, T), RelatedToCollectionFieldAccessorFactory forField (Neo4jPersistentProperty), Neo4jPersistentPropertyImpl extractIndexInfo (), TraversalFieldAccessor resolveTarget (GraphTraversal, Neo4jPersistentProperty), Neo4jPersistentPropertyImpl isRelationship (), WithoutResult WithoutResult (Neo4jTemplate), StringToDateConverter convert (String), Neo4jPersistentPropertyImpl extractRelationshipInfo (Field, Neo4jMappingContext), SourceStateTransmitter setEntityStateValue (Neo4jPersistentProperty, EntityState<S>, BeanWrapper<Neo4jPersistentEntity<R>,R>, MappingPolicy), NumberToDateConverter convert (Number), RelatedToCollectionFieldAccessor RelatedToCollectionFieldAccessor (RelationshipType, Direction, Class<?>, Neo4jTemplate, Neo4jPersistentProperty), TraversalFieldAccessor getValue (Object, MappingPolicy), EntityCreatingClosableIterable close (), FieldAccessorFactoryProvider FieldAccessorFactoryProvider (Neo4jPersistentProperty, FieldAccessorFactory, List), Neo4jPersistentPropertyImpl getNeo4jPropertyName (), EntityCreatingClosableIterable underlyingObjectToObject (PropertyContainer), TraversalFieldAccessorFactory accept (Neo4jPersistentProperty), WhereClause WhereClause (PartInfo, Neo4jTemplate), Neo4jConversionServiceFactoryBean isSingleton (), TraversalFieldAccessor checkTypes (Class<?>, Class<?>), Neo4jPersistentPropertyImpl getAnnotation (Class<? extends T>), Neo4jPersistentPropertyImpl getQuery (), Neo4jPersistentPropertyImpl getDefaultValue (Class<?>), EntityMapper mapPath (EntityPath<S,E>), Neo4jPersistentPropertyImpl getAssociation (), Neo4jPersistentPropertyImpl isIndexedNumerically (), EntityMapper EntityMapper (Neo4jTemplate), Neo4jConversionServiceFactoryBean getObject (), WhereClause toString (), TraversalFieldAccessorFactory forField (Neo4jPersistentProperty), FieldAccessorFactoryProvider getFieldAccessListeners (), ClosableCombiningIterable close (), Neo4jPersistentPropertyImpl getOwner (), Neo4jPersistentPropertyImpl hasQuery (), StringToEnum StringToEnum (Class<T>), TraversalFieldAccessor createTraversalDescription (GraphTraversal), Neo4jConversionServiceFactoryBean getObjectType (), Neo4jPersistentPropertyImpl hasAnnotation (TypeInformation<?>, Class<NodeEntity>), Neo4jPersistentPropertyImpl toString (), StringToEnum convert (String), Neo4jPersistentPropertyImpl isConvertible (ConversionService, Class<?>), Neo4jPersistentPropertyImpl isUnique (), RelatedToCollectionFieldAccessor setValue (Object, Object, MappingPolicy), Neo4jPersistentPropertyImpl getMappingPolicy (), SourceStateTransmitter doWithPersistentProperty (Neo4jPersistentProperty), WhereClause getPartInfo (), Neo4jPersistentPropertyImpl isNumeric (Class<?>), ClosableCombiningIterable ClosableCombiningIterable (Iterable<Iterable<T>>), Neo4jPersistentPropertyImpl Neo4jPersistentPropertyImpl (Field, PropertyDescriptor, PersistentEntity<?,Neo4jPersistentProperty>, SimpleTypeHolder, Neo4jMappingContext), Neo4jPersistentPropertyImpl extractDefaultValue (), FieldAccessorFactoryProvider getProperty (), TraversalFieldAccessor TraversalFieldAccessor (Neo4jPersistentProperty, Neo4jTemplate), Neo4jPersistentPropertyImpl isNeo4jPropertyType (), Neo4jPersistentPropertyImpl getValueFromEntity (Object, MappingPolicy), Neo4jPersistentPropertyImpl isTransient (), EntityMapper mapPath (Path), FieldAccessorFactoryProvider accessor (), WhereClause resolveParameters (Map<Parameter,Object>), FieldAccessorFactoryProvider getIdProperty (), Neo4jPersistentPropertyImpl isNeo4jPropertyValue (Object), Neo4jPersistentPropertyImpl isIndexed (), RelatedToCollectionFieldAccessorFactory accept (Neo4jPersistentProperty), WithoutResult doWithPath (EntityPath<S,E>), DateToStringConverter convert (Date), Neo4jPersistentPropertyImpl getIndexKey (), Neo4jPersistentPropertyImpl isSyntheticField (), SourceStateTransmitter setProperty (BeanWrapper<Neo4jPersistentEntity<R>,?>, Neo4jPersistentProperty, Object), Neo4jConversionServiceFactoryBean addConverters (ConversionService), EntityCreatingClosableIterable EntityCreatingClosableIterable (ClosableIterable<PropertyContainer>, Class<T>, Neo4jEntityPersister, Neo4jTemplate), WithoutResult mapPath (EntityPath<S,E>), FieldAccessorFactoryFactory create (Neo4jTemplate), SourceStateTransmitter SourceStateTransmitter (EntityStateFactory<S>), SourceStateTransmitter getProperty (BeanWrapper<Neo4jPersistentEntity<R>,R>, Neo4jPersistentProperty), DateToLongConverter convert (Date), Neo4jPersistentPropertyImpl getTargetType (), Neo4jPersistentPropertyImpl isNeo4jPropertyType (Class<?>), Neo4jPersistentPropertyImpl getPropertyType (), FieldAccessorFactoryFactory provideFactoryFor (Neo4jTemplate), Neo4jPersistentPropertyImpl isSerializablePropertyField (ConversionService), Neo4jPersistentPropertyImpl createAssociation (), Neo4jPersistentPropertyImpl setValue (Object, Object), FieldAccessorFactoryProvider FieldAccessorFactoryProviders (), SourceStateTransmitter copyEntityStatePropertyValue (Neo4jPersistentProperty, EntityState<S>, BeanWrapper<Neo4jPersistentEntity<R>,R>, MappingPolicy), EnumToStringConverter convert (Enum), Neo4jPersistentPropertyImpl getPersistentEntityType (), TraversalFieldAccessorFactory TraversalFieldAccessorFactory (Neo4jTemplate), FieldAccessorFactoryProvider add (Neo4jPersistentProperty, FieldAccessorFactory, List<FieldAccessorListenerFactory>), IndexingNodeTypeRepresentationStrategy IndexingNodeTypeRepresentationStrategy (GraphDatabase, IndexProvider), SourceStateTransmitter copyPropertiesFrom (BeanWrapper<Neo4jPersistentEntity<R>,R>, S, Neo4jPersistentEntity<R>, MappingPolicy, Neo4jTemplate), SourceStateTransmitter doWithAssociation (Association<Neo4jPersistentProperty>), Neo4jPersistentPropertyImpl hashCode (), Neo4jPersistentPropertyImpl getDefaultValue (ConversionService, Class<T>), SourceStateTransmitter copyPropertiesTo (BeanWrapper<Neo4jPersistentEntity<R>,R>, S, Neo4jPersistentEntity<R>, MappingPolicy, Neo4jTemplate), TraversalFieldAccessor isWriteable (Object), Neo4jPersistentPropertyImpl getIndexInfo (), FieldAccessorFactoryProvider getFieldAccessors (), Neo4jPersistentPropertyImpl isNodeEntity (Class<?>), Neo4jPersistentPropertyImpl createNeo4jPropertyName (), Neo4jPersistentPropertyImpl getRelationshipInfo (), RelatedToCollectionFieldAccessor getValue (Object, MappingPolicy), StringToEnumConverterFactory getConverter (Class<T>), Neo4jPersistentPropertyImpl isEntity (), TraversalFieldAccessor setValue (Object, Object, MappingPolicy), Neo4jPersistentPropertyImpl extractAnnotations (Field), Neo4jPersistentPropertyImpl extractPropertyType (), Neo4jPersistentPropertyImpl obtainMappingPolicy (MappingPolicy), Neo4jPersistentPropertyImpl extractQuery ()]","1508"
"1","spring-data-neo4j/spring-data-neo4j","5081fbe43acb0382c7bffe52027f210b301d1c06","980d626d82bf3fee8ac6f64bbf8f6d2469b8b154","SWITCH_EQUAL_SIDES","14","1","9","[PropertyConverter convertCollection (ConversionService, Class<?>, Iterable<?>), PropertyConverter deserializeCollection (Object, ConversionService, TypeInformation<?>), PropertyConverter serializePropertyValue (Object), PropertyConverter isObjectOrSupportedType (Object, Neo4jPersistentProperty), PropertyConverter deserializePropertyValue (Object), PropertyConverter PropertyConverter (ConversionService, Neo4jPersistentProperty), PropertyConverter isCollectionLike (Object), PropertyConverter toCollection (Object), PropertyConverter serializeCollection (Object, ConversionService, TypeInformation<?>, Class<?>)]","126"
"3","spring-data-neo4j/spring-data-neo4j","980d626d82bf3fee8ac6f64bbf8f6d2469b8b154","cb2e39e45af2faa1ebfbfa8e15a8126f761f716f","SWITCH_EQUAL_SIDES","14","1","2","[PropertyConverter serializePropertyValue (Object), PropertyConverter deserializePropertyValue (Object)]","28"
"4","spring-data-neo4j/spring-data-neo4j","cb2e39e45af2faa1ebfbfa8e15a8126f761f716f","6f69a542dd15d838731deadb7d8d572a486a1edc","STATEMENTS_ORDER_REARRANGEMENT","10","1","3","[PropertyConverter deserializeCollection (Object, ConversionService, TypeInformation<?>), PropertyConverter serializePropertyValue (Object), PropertyConverter PropertyConverter (ConversionService, Neo4jPersistentProperty)]","42"
"5","spring-data-neo4j/spring-data-neo4j","6f69a542dd15d838731deadb7d8d572a486a1edc","c75b7f1976e8c42b62994b85848d310bf1480870","LOCAL_VAR_RENAMING","0","1","2","[PropertyConverter convertCollection (ConversionService, Class<?>, Iterable<?>), PropertyConverter deserializeCollection (Object, ConversionService, TypeInformation<?>)]","28"
"9","spring-data-neo4j/spring-data-neo4j","c75b7f1976e8c42b62994b85848d310bf1480870","c850ce0ed1d18a0e761d4207c5a188a014e3ffb1","LOCAL_VAR_RENAMING","0","1","2","[PropertyConverter serializePropertyValue (Object), PropertyConverter PropertyConverter (ConversionService, Neo4jPersistentProperty)]","28"
"11","spring-data-neo4j/spring-data-neo4j","c850ce0ed1d18a0e761d4207c5a188a014e3ffb1","b3f8bb5667faea88a57cb92bfcdaa22e2f6bcefb","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[PropertyConverter deserializeCollection (Object, ConversionService, TypeInformation<?>), PropertyConverter serializePropertyValue (Object)]","28"
"12","spring-data-neo4j/spring-data-neo4j","b3f8bb5667faea88a57cb92bfcdaa22e2f6bcefb","dbd455b749551455f95333bf588cedafafef8e6c","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[PropertyConverter serializePropertyValue (Object)]","14"
"14","spring-data-neo4j/spring-data-neo4j","dbd455b749551455f95333bf588cedafafef8e6c","3a6b50311b81cf0e16382d6682364f083669f3fd","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[PropertyConverter deserializeCollection (Object, ConversionService, TypeInformation<?>), PropertyConverter PropertyConverter (ConversionService, Neo4jPersistentProperty)]","28"
"16","spring-data-neo4j/spring-data-neo4j","3a6b50311b81cf0e16382d6682364f083669f3fd","bd3561f3affa1ddd1312d1c516821295e683b81f","SWITCH_EQUAL_SIDES","14","1","2","[PropertyConverter serializePropertyValue (Object), PropertyConverter deserializePropertyValue (Object)]","28"
"21","spring-data-neo4j/spring-data-neo4j","bd3561f3affa1ddd1312d1c516821295e683b81f","7a65abdf0d5ac924940d1834ab780c8c5b2ffa61","LOCAL_VAR_RENAMING","0","1","3","[PropertyConverter deserializeCollection (Object, ConversionService, TypeInformation<?>), PropertyConverter serializePropertyValue (Object), PropertyConverter PropertyConverter (ConversionService, Neo4jPersistentProperty)]","42"
"27","spring-data-neo4j/spring-data-neo4j","7a65abdf0d5ac924940d1834ab780c8c5b2ffa61","7391801739f6c1ae63fbde6d59d73ad766449f9f","SWITCH_EQUAL_SIDES","14","1","1","[PropertyConverter deserializePropertyValue (Object)]","14"
"28","spring-data-neo4j/spring-data-neo4j","7391801739f6c1ae63fbde6d59d73ad766449f9f","9c2229bda56a632d10672d7f79ab889cfb11319d","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[PropertyConverter serializePropertyValue (Object), PropertyConverter PropertyConverter (ConversionService, Neo4jPersistentProperty)]","28"
"29","spring-data-neo4j/spring-data-neo4j","9c2229bda56a632d10672d7f79ab889cfb11319d","e2e5dacc2130a5a04ac34018e82f4ed468e792f3","LOCAL_VAR_RENAMING","0","1","3","[PropertyConverter serializePropertyValue (Object), PropertyConverter deserializePropertyValue (Object), PropertyConverter PropertyConverter (ConversionService, Neo4jPersistentProperty)]","42"
"31","spring-data-neo4j/spring-data-neo4j","e2e5dacc2130a5a04ac34018e82f4ed468e792f3","707d467c0d596c1b27dcba1d570ac01ab0a270b4","SWITCH_EQUAL_SIDES","14","1","2","[PropertyConverter serializePropertyValue (Object), PropertyConverter deserializePropertyValue (Object)]","28"
"35","spring-data-neo4j/spring-data-neo4j","707d467c0d596c1b27dcba1d570ac01ab0a270b4","32a819e239be053efce0b2f6ce65b39131078eba","INFIX_EXPRESSION_DIVIDING","8","1","1","[PropertyConverter isCollectionLike (Object)]","14"
"40","spring-data-neo4j/spring-data-neo4j","32a819e239be053efce0b2f6ce65b39131078eba","33134801b8b00b505656cf8a2792ad702f55a022","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[PropertyConverter deserializeCollection (Object, ConversionService, TypeInformation<?>), PropertyConverter serializePropertyValue (Object)]","28"
"43","spring-data-neo4j/spring-data-neo4j","33134801b8b00b505656cf8a2792ad702f55a022","03dd7566545159f113e5d7c357b0f53dfa874820","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[PropertyConverter deserializeCollection (Object, ConversionService, TypeInformation<?>), PropertyConverter serializePropertyValue (Object)]","28"
"47","spring-data-neo4j/spring-data-neo4j","03dd7566545159f113e5d7c357b0f53dfa874820","6b3504324eed014301010a71736a3b38bcb1c11d","SWITCH_EQUAL_SIDES","14","1","1","[PropertyConverter deserializePropertyValue (Object)]","14"
"48","spring-data-neo4j/spring-data-neo4j","6b3504324eed014301010a71736a3b38bcb1c11d","505014cc4826d15a6a3120555cd7fed052e7c58d","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[PropertyConverter PropertyConverter (ConversionService, Neo4jPersistentProperty)]","14"
"50","spring-data-neo4j/spring-data-neo4j","505014cc4826d15a6a3120555cd7fed052e7c58d","d8b7500538750e3a14f580e3de713147fda08d8c","REVERSE_IF_ELSE","3","1","4","[PropertyConverter deserializeCollection (Object, ConversionService, TypeInformation<?>), PropertyConverter serializePropertyValue (Object), PropertyConverter deserializePropertyValue (Object), PropertyConverter toCollection (Object)]","56"
"54","spring-data-neo4j/spring-data-neo4j","d8b7500538750e3a14f580e3de713147fda08d8c","0928d36d154163a76633fe658d21b8c108b89062","LOCAL_VAR_RENAMING","0","1","3","[PropertyConverter deserializeCollection (Object, ConversionService, TypeInformation<?>), PropertyConverter serializePropertyValue (Object), PropertyConverter PropertyConverter (ConversionService, Neo4jPersistentProperty)]","42"
"59","spring-data-neo4j/spring-data-neo4j","0928d36d154163a76633fe658d21b8c108b89062","44f3ff6c7194992615c6bb445ee7399ecf8cbd53","SWITCH_EQUAL_SIDES","14","1","2","[PropertyConverter serializePropertyValue (Object), PropertyConverter deserializePropertyValue (Object)]","28"
"62","spring-data-neo4j/spring-data-neo4j","44f3ff6c7194992615c6bb445ee7399ecf8cbd53","516d7c51d3a1c88075548eb30bd719bf18930646","INFIX_EXPRESSION_DIVIDING","8","1","1","[PropertyConverter isCollectionLike (Object)]","14"
"64","spring-data-neo4j/spring-data-neo4j","516d7c51d3a1c88075548eb30bd719bf18930646","5b58f987fc653d5f9bdb35681843a6a9f11291fe","SWITCH_EQUAL_SIDES","14","1","2","[PropertyConverter serializePropertyValue (Object), PropertyConverter deserializePropertyValue (Object)]","28"
"65","spring-data-neo4j/spring-data-neo4j","5b58f987fc653d5f9bdb35681843a6a9f11291fe","4460770f163b2b48628d56608a1277c9bc18ea8e","VAR_DECLARATION_MERGING","12","1","1","[PropertyConverter deserializeCollection (Object, ConversionService, TypeInformation<?>)]","14"
"1","symja-parser","45f1421ef05c8fda5cf6d79ad809cdc99032fae8","021bb88c1b1dee40e476f2910e9acd8d84c70217","LOCAL_VAR_RENAMING","0","1","1","[SetFunction evaluate (IEvaluator<T>, FunctionNode)]","9"
"6","symja-parser","021bb88c1b1dee40e476f2910e9acd8d84c70217","4c52d543348fdda4397b2f92e4a59a4974a4673f","LOCAL_VAR_RENAMING","0","1","2","[ASTNode dependsOn (String), ASTNode equals (Object)]","18"
"11","symja-parser","4c52d543348fdda4397b2f92e4a59a4974a4673f","32c121bf173d48a17bf3bed42462b088e2a06580","LOCAL_VAR_RENAMING","0","1","1","[SetFunction evaluate (IEvaluator<T>, FunctionNode)]","9"
"22","symja-parser","32c121bf173d48a17bf3bed42462b088e2a06580","14cf9df498efe75a5545d5daf23bcbff9867c955","SWITCH_STRING_EQUAL","15","1","1","[ASTNode equals (Object)]","9"
"26","symja-parser","14cf9df498efe75a5545d5daf23bcbff9867c955","ad43e381c035522ac39613686b6dbcfade224f5a","LOCAL_VAR_RENAMING","0","1","6","[ASTNode toString (), ASTNode ASTNode (String), ASTNode hashCode (), ASTNode getString (), ASTNode isFree (ASTNode), ASTNode equals (Object)]","54"
"29","symja-parser","ad43e381c035522ac39613686b6dbcfade224f5a","2af348fe2c4c4eed5e9adfb7785de335c978a1d4","INFIX_EXPRESSION_DIVIDING","8","1","1","[ASTNode equals (Object)]","9"
"32","symja-parser","2af348fe2c4c4eed5e9adfb7785de335c978a1d4","71d15b84b08d0b850249ba56ca913f32fc3003ea","LOCAL_VAR_RENAMING","0","1","1","[SetFunction evaluate (IEvaluator<T>, FunctionNode)]","9"
"36","symja-parser","71d15b84b08d0b850249ba56ca913f32fc3003ea","1477a2509f74d55d9018e6ec72d477a70a410a22","LOCAL_VAR_RENAMING","0","1","5","[ASTNode toString (), ASTNode ASTNode (String), ASTNode hashCode (), ASTNode getString (), ASTNode equals (Object)]","45"
"37","symja-parser","1477a2509f74d55d9018e6ec72d477a70a410a22","70ff58f8ec11d4dba54600c65e44af928c42611c","REVERSE_IF_ELSE","3","1","1","[SetFunction evaluate (IEvaluator<T>, FunctionNode)]","9"
"44","symja-parser","70ff58f8ec11d4dba54600c65e44af928c42611c","bd5f5078dee89e9309166e431a12486f3aa2e283","SWITCH_EQUAL_SIDES","14","1","1","[ASTNode equals (Object)]","9"
"47","symja-parser","bd5f5078dee89e9309166e431a12486f3aa2e283","3789023a61a08594dc7e0f64f746e4c03b903f2b","REVERSE_IF_ELSE","3","1","1","[SetFunction evaluate (IEvaluator<T>, FunctionNode)]","9"
"51","symja-parser","3789023a61a08594dc7e0f64f746e4c03b903f2b","3c0ce73f598690d07f38afca9833c454d5cf4669","LOCAL_VAR_RENAMING","0","1","2","[ASTNode ASTNode (String), ASTNode equals (Object)]","18"
"52","symja-parser","3c0ce73f598690d07f38afca9833c454d5cf4669","6b141a8c695acf54a8fb7887c00e57405337cd57","REVERSE_IF_ELSE","3","1","1","[SetFunction evaluate (IEvaluator<T>, FunctionNode)]","9"
"53","symja-parser","6b141a8c695acf54a8fb7887c00e57405337cd57","ab3be113186ef24e1a4439793182234e45f205d0","REVERSE_IF_ELSE","3","1","1","[SetFunction evaluate (IEvaluator<T>, FunctionNode)]","9"
"57","symja-parser","ab3be113186ef24e1a4439793182234e45f205d0","7106a706b76c7a5ef86f58bd0450e486d0f4102b","REVERSE_IF_ELSE","3","1","1","[ASTNode equals (Object)]","9"
"58","symja-parser","7106a706b76c7a5ef86f58bd0450e486d0f4102b","1138dde69a6c3f01f3d2cee22bcbed1fd0209ca3","REVERSE_IF_ELSE","3","1","1","[ASTNode equals (Object)]","9"
"1","mybatis-3","d6bf113eea72743564de5897d87a5f0b9dc1a6e7","3f78f4fa3fa97314f7132ec4c69cf0668f2a048b","REVERSE_IF_ELSE","3","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"2","mybatis-3","3f78f4fa3fa97314f7132ec4c69cf0668f2a048b","0e3e01772fee24dee7db64f9867547997802553d","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"13","mybatis-3","0e3e01772fee24dee7db64f9867547997802553d","6dda420ccc93238f143c329f6b3356f91b1922ef","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"17","mybatis-3","6dda420ccc93238f143c329f6b3356f91b1922ef","e7ec2ef19e64ce8451fede258015cb1d86aaac8b","LOCAL_VAR_RENAMING","0","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"20","mybatis-3","e7ec2ef19e64ce8451fede258015cb1d86aaac8b","3962b67a774c65ab06687eab7f2685cc5d81305f","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"23","mybatis-3","3962b67a774c65ab06687eab7f2685cc5d81305f","0af4f02f37c90ec1c04801d33a10df1d5fa3db73","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"25","mybatis-3","0af4f02f37c90ec1c04801d33a10df1d5fa3db73","93d06f04c05989c92c124eea067356c295a6da39","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"27","mybatis-3","93d06f04c05989c92c124eea067356c295a6da39","d1d4361e9e9c78c6cc156a26a5850d5dde06f295","LOCAL_VAR_RENAMING","0","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"34","mybatis-3","d1d4361e9e9c78c6cc156a26a5850d5dde06f295","2a59fa8ef8ca07862a52f7d5ed87a828108bfa3c","REVERSE_IF_ELSE","3","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"36","mybatis-3","2a59fa8ef8ca07862a52f7d5ed87a828108bfa3c","4d8b2ab1179d650895cce7f6e46224661313d5f4","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"38","mybatis-3","4d8b2ab1179d650895cce7f6e46224661313d5f4","764fc73b26c77260b7a8121cb14b9006d44f3850","LOCAL_VAR_RENAMING","0","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"40","mybatis-3","764fc73b26c77260b7a8121cb14b9006d44f3850","c57c5dd82b35a3d9ac70fb1c9a0c5c9dff4691d3","REVERSE_IF_ELSE","3","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"43","mybatis-3","c57c5dd82b35a3d9ac70fb1c9a0c5c9dff4691d3","6f11a241b6b73afb327c153182751f20f68c853f","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"46","mybatis-3","6f11a241b6b73afb327c153182751f20f68c853f","75764c3b9eb10ad2e3314c76e8bab06f94609be2","LOCAL_VAR_RENAMING","0","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"49","mybatis-3","75764c3b9eb10ad2e3314c76e8bab06f94609be2","9a35c4abe5e513fcecfc671684715a9ac72ff312","LOCAL_VAR_RENAMING","0","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"64","mybatis-3","9a35c4abe5e513fcecfc671684715a9ac72ff312","aa32bab6e2ed6455c3cb80a2018a8b9871d33c48","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"17","spring-data-jpa/spring-data-envers","94bd9d901afb8bc0238cc89deb234ebcecb5fb3a","aa49436d5b70bf6bf135f30efb2374b597425f8a","REVERSE_IF_ELSE","3","1","1","[EnversRevisionRepositoryImpl mapPropertySort (Sort)]","4"
"27","spring-data-jpa/spring-data-envers","aa49436d5b70bf6bf135f30efb2374b597425f8a","9b9ea42ea0d96a9cd019907b99b20415a78dcf1b","LOCAL_VAR_RENAMING","0","1","2","[EnversRevisionRepositoryImpl EnversRevisionRepositoryImpl (JpaEntityInformation<T,?>, RevisionEntityInformation, EntityManager), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","8"
"28","spring-data-jpa/spring-data-envers","9b9ea42ea0d96a9cd019907b99b20415a78dcf1b","e8ebd5a2ddb14738aeb089d490a8cb8c298f1166","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[EnversRevisionRepositoryImpl findRevisions (ID, Pageable), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","8"
"31","spring-data-jpa/spring-data-envers","e8ebd5a2ddb14738aeb089d490a8cb8c298f1166","451c18db953a379b36c1e4bd28e91cb3685b1363","SWITCH_EQUAL_SIDES","14","1","1","[QueryResult QueryResult (Object[])]","4"
"34","spring-data-jpa/spring-data-envers","451c18db953a379b36c1e4bd28e91cb3685b1363","1c37891e723f66c5788de9aca07b8d805754695b","REVERSE_IF_ELSE","3","1","3","[EnversRevisionRepositoryImpl findLastChangeRevision (ID), EnversRevisionRepositoryImpl findRevision (ID, N), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","12"
"43","spring-data-jpa/spring-data-envers","1c37891e723f66c5788de9aca07b8d805754695b","b7e64f3592f28657a5cc6265fb31f6d261930973","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[EnversRevisionRepositoryImpl findRevisions (ID, Pageable), EnversRevisionRepositoryImpl EnversRevisionRepositoryImpl (JpaEntityInformation<T,?>, RevisionEntityInformation, EntityManager)]","8"
"46","spring-data-jpa/spring-data-envers","b7e64f3592f28657a5cc6265fb31f6d261930973","89570bc7471b1fa3e5625967d00246977291fb67","LOCAL_VAR_RENAMING","0","1","1","[EnversRevisionRepositoryImpl findRevisions (ID, Pageable)]","4"
"47","spring-data-jpa/spring-data-envers","89570bc7471b1fa3e5625967d00246977291fb67","a768d832d001f319ddd8bbf7da115a9aa28e9c90","REVERSE_IF_ELSE","3","1","1","[EnversRevisionRepositoryImpl mapPropertySort (Sort)]","4"
"50","spring-data-jpa/spring-data-envers","a768d832d001f319ddd8bbf7da115a9aa28e9c90","bdbc889bb8d1f9bb2636023d321ebe43ac8b2f84","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[EnversRevisionRepositoryImpl EnversRevisionRepositoryImpl (JpaEntityInformation<T,?>, RevisionEntityInformation, EntityManager), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","8"
"51","spring-data-jpa/spring-data-envers","bdbc889bb8d1f9bb2636023d321ebe43ac8b2f84","6823748561afd268d42dc86fe53ed1d43a50e480","REVERSE_IF_ELSE","3","1","1","[EnversRevisionRepositoryImpl mapPropertySort (Sort)]","4"
"52","spring-data-jpa/spring-data-envers","6823748561afd268d42dc86fe53ed1d43a50e480","5f8c11b06824c39b46590807272112005747c4ec","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[EnversRevisionRepositoryImpl findRevisions (ID, Pageable), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","8"
"55","spring-data-jpa/spring-data-envers","5f8c11b06824c39b46590807272112005747c4ec","221f4504d276ba2ca47839428a6df50a62e4043a","REVERSE_IF_ELSE","3","1","1","[EnversRevisionRepositoryImpl mapPropertySort (Sort)]","4"
"57","spring-data-jpa/spring-data-envers","221f4504d276ba2ca47839428a6df50a62e4043a","74be8161dc97152237a2f4f6b753a6167c713d22","REVERSE_IF_ELSE","3","1","2","[EnversRevisionRepositoryImpl findRevision (ID, N), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","8"
"60","spring-data-jpa/spring-data-envers","74be8161dc97152237a2f4f6b753a6167c713d22","67701fd49b49d1d4e92a19f16a7a5fd0fbe151ff","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","2","[EnversRevisionRepositoryImpl findRevisions (ID, Pageable), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","8"
"62","spring-data-jpa/spring-data-envers","67701fd49b49d1d4e92a19f16a7a5fd0fbe151ff","a11f6135d8afbf1392b8b757bc0559f0899852eb","LOCAL_VAR_RENAMING","0","1","1","[EnversRevisionRepositoryImpl findRevisions (ID, Pageable)]","4"
"9","spring-data-jpa/spring-data-jpa-performance","a11f6135d8afbf1392b8b757bc0559f0899852eb","4e5a2daf6981750a1662b6cd02cc0c8d6e77a05d","LOCAL_VAR_RENAMING","0","1","2","[PersonRepository findAllWithAnnotatedQueryByFirstname (String), PersonRepository findAllWithAnnotatedQueryByFirstname (String, Sort)]","6"
"22","spring-data-jpa/spring-data-jpa-performance","4e5a2daf6981750a1662b6cd02cc0c8d6e77a05d","b752d96c8c283c9c59578be53612e7d6bf117085","LOCAL_VAR_RENAMING","0","1","2","[PersonRepository findAllWithAnnotatedQueryByFirstname (String), PersonRepository countByFirstname (String)]","6"
"46","spring-data-jpa/spring-data-jpa-performance","b752d96c8c283c9c59578be53612e7d6bf117085","bd5534ad1868fd80a5dc77b6d1cbac40c0db2c8e","LOCAL_VAR_RENAMING","0","1","2","[PersonRepository findAllWithAnnotatedQueryByFirstname (String), PersonRepository findAllAndProjectToInterfaceByFirstname (String)]","6"
"59","spring-data-jpa/spring-data-jpa-performance","bd5534ad1868fd80a5dc77b6d1cbac40c0db2c8e","bcde8b08d1172e4d222138d2d6c229d584967039","LOCAL_VAR_RENAMING","0","1","2","[PersonRepository countWithAnnotatedQueryByFirstname (String), PersonRepository findAllAndProjectToInterfaceByFirstname (String)]","6"
"62","spring-data-jpa/spring-data-jpa-performance","bcde8b08d1172e4d222138d2d6c229d584967039","8a6ab99ef0f342ac841a66a7de8834bd0d560b41","LOCAL_VAR_RENAMING","0","1","2","[PersonRepository findAllByFirstname (String), PersonRepository findAllWithAnnotatedQueryByFirstname (String)]","6"
"2","spring-data-jpa/spring-data-jpa","8a6ab99ef0f342ac841a66a7de8834bd0d560b41","0fff35533c54cd0eae251a668c28321fa30db8a0","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JpaKeysetScrollQueryCreator JpaKeysetScrollQueryCreator (PartTree, ReturnedType, CriteriaBuilder, ParameterMetadataProvider, JpaEntityInformation<?,?>, KeysetScrollPosition)]","12"
"17","spring-data-jpa/spring-data-jpa","0fff35533c54cd0eae251a668c28321fa30db8a0","f47a1681dfa9f48a6917148f5f8f4724360d0dd2","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JpaKeysetScrollQueryCreator JpaKeysetScrollQueryCreator (PartTree, ReturnedType, CriteriaBuilder, ParameterMetadataProvider, JpaEntityInformation<?,?>, KeysetScrollPosition)]","12"
"23","spring-data-jpa/spring-data-jpa","f47a1681dfa9f48a6917148f5f8f4724360d0dd2","a27a00f37a84373bcea7c1650a158accaffe3f07","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JpaKeysetScrollQueryCreator JpaKeysetScrollQueryCreator (PartTree, ReturnedType, CriteriaBuilder, ParameterMetadataProvider, JpaEntityInformation<?,?>, KeysetScrollPosition)]","12"
"34","spring-data-jpa/spring-data-jpa","a27a00f37a84373bcea7c1650a158accaffe3f07","e32bf4385bb24b022be475f3cc04c80fa8013c71","REVERSE_IF_ELSE","3","1","1","[JpaKeysetScrollQueryCreator complete (Predicate, Sort, CriteriaQuery<?>, CriteriaBuilder, Root<?>)]","12"
"36","spring-data-jpa/spring-data-jpa","e32bf4385bb24b022be475f3cc04c80fa8013c71","a3794b6938607db650ba557d9107389677b698a0","LOCAL_VAR_RENAMING","0","1","3","[JpaKeysetScrollQueryCreator JpaKeysetScrollQueryCreator (PartTree, ReturnedType, CriteriaBuilder, ParameterMetadataProvider, JpaEntityInformation<?,?>, KeysetScrollPosition), JpaKeysetScrollQueryCreator complete (Predicate, Sort, CriteriaQuery<?>, CriteriaBuilder, Root<?>), JpaKeysetScrollQueryCreator getRequiredSelection (Sort, ReturnedType)]","36"
"38","spring-data-jpa/spring-data-jpa","a3794b6938607db650ba557d9107389677b698a0","9f845f6e9f2a9fffa42fab7bdd178e2d39907fd9","LOCAL_VAR_RENAMING","0","1","2","[JpaKeysetScrollQueryCreator JpaKeysetScrollQueryCreator (PartTree, ReturnedType, CriteriaBuilder, ParameterMetadataProvider, JpaEntityInformation<?,?>, KeysetScrollPosition), JpaKeysetScrollQueryCreator complete (Predicate, Sort, CriteriaQuery<?>, CriteriaBuilder, Root<?>)]","24"
"41","spring-data-jpa/spring-data-jpa","9f845f6e9f2a9fffa42fab7bdd178e2d39907fd9","c609583cff56cff936da220617196a2afa924d50","LOCAL_VAR_RENAMING","0","1","2","[JpaKeysetScrollQueryCreator complete (Predicate, Sort, CriteriaQuery<?>, CriteriaBuilder, Root<?>), JpaKeysetScrollQueryCreator getRequiredSelection (Sort, ReturnedType)]","24"
"44","spring-data-jpa/spring-data-jpa","c609583cff56cff936da220617196a2afa924d50","43cf15939adf933e3191a4734c8f8d20dc07f5a6","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JpaKeysetScrollQueryCreator JpaKeysetScrollQueryCreator (PartTree, ReturnedType, CriteriaBuilder, ParameterMetadataProvider, JpaEntityInformation<?,?>, KeysetScrollPosition)]","12"
"48","spring-data-jpa/spring-data-jpa","43cf15939adf933e3191a4734c8f8d20dc07f5a6","3ed464e59782f7e6fa7633a9585449b3596ab124","LOCAL_VAR_RENAMING","0","1","3","[JpaKeysetScrollQueryCreator JpaKeysetScrollQueryCreator (PartTree, ReturnedType, CriteriaBuilder, ParameterMetadataProvider, JpaEntityInformation<?,?>, KeysetScrollPosition), JpaKeysetScrollQueryCreator complete (Predicate, Sort, CriteriaQuery<?>, CriteriaBuilder, Root<?>), JpaKeysetScrollQueryCreator getRequiredSelection (Sort, ReturnedType)]","36"
"58","spring-data-jpa/spring-data-jpa","3ed464e59782f7e6fa7633a9585449b3596ab124","3f444a7e21ab637fa05ec08bb9b054c414892a35","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JpaKeysetScrollQueryCreator JpaKeysetScrollQueryCreator (PartTree, ReturnedType, CriteriaBuilder, ParameterMetadataProvider, JpaEntityInformation<?,?>, KeysetScrollPosition)]","12"
"60","spring-data-jpa/spring-data-jpa","3f444a7e21ab637fa05ec08bb9b054c414892a35","8739c49e7dc176bcff71c26516df7633336569a4","LOCAL_VAR_RENAMING","0","1","3","[JpaKeysetScrollQueryCreator JpaKeysetScrollQueryCreator (PartTree, ReturnedType, CriteriaBuilder, ParameterMetadataProvider, JpaEntityInformation<?,?>, KeysetScrollPosition), JpaKeysetScrollQueryCreator complete (Predicate, Sort, CriteriaQuery<?>, CriteriaBuilder, Root<?>), JpaKeysetScrollQueryCreator getRequiredSelection (Sort, ReturnedType)]","36"
"12","spring-hateoas","5cde9e867e6fe2de51a3487e939a2e20f94e4d63","f3cf1769d3e5017c14789f48f0642993c5880b9f","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ResourceAssemblerSupport ResourceAssemblerSupport (Class<?>, Class<D>)]","12"
"13","spring-hateoas","f3cf1769d3e5017c14789f48f0642993c5880b9f","257170f2fceb5afdb369e032b7a1cbf4159e013e","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ResourceAssemblerSupport ResourceAssemblerSupport (Class<?>, Class<D>)]","12"
"19","spring-hateoas","257170f2fceb5afdb369e032b7a1cbf4159e013e","46051e5f144d8d9d94e290d763c189acb7db51f3","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ResourceAssemblerSupport ResourceAssemblerSupport (Class<?>, Class<D>)]","12"
"21","spring-hateoas","46051e5f144d8d9d94e290d763c189acb7db51f3","1a1af21ef5df03c9c06005ebd53eb8222df786ae","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ResourceAssemblerSupport ResourceAssemblerSupport (Class<?>, Class<D>)]","12"
"22","spring-hateoas","1a1af21ef5df03c9c06005ebd53eb8222df786ae","4224e9d3ccb6efcddb8f6329269aa594bed1821f","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ResourceAssemblerSupport ResourceAssemblerSupport (Class<?>, Class<D>)]","12"
"29","spring-hateoas","4224e9d3ccb6efcddb8f6329269aa594bed1821f","96d57e6e98f21908baa03507ab101ebeb37a4ef3","LOCAL_VAR_RENAMING","0","1","2","[ResourceAssemblerSupport createResourceWithId (Object, T, Object), ResourceAssemblerSupport ResourceAssemblerSupport (Class<?>, Class<D>)]","24"
"35","spring-hateoas","96d57e6e98f21908baa03507ab101ebeb37a4ef3","b2af645a7acad8bcc29345450e9d5ff4d9eac3b8","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[ResourceAssemblerSupport ResourceAssemblerSupport (Class<?>, Class<D>)]","12"
"52","spring-hateoas","b2af645a7acad8bcc29345450e9d5ff4d9eac3b8","7bd5bc1921ae3a5c4844d37973a1969d46f6565c","LOCAL_VAR_RENAMING","0","1","1","[ResourceAssemblerSupport createResourceWithId (Object, T)]","12"
"53","spring-hateoas","7bd5bc1921ae3a5c4844d37973a1969d46f6565c","b2a1bf36a923f7891ee5f012296b178f7e0b60a9","LOCAL_VAR_RENAMING","0","1","1","[ResourceAssemblerSupport createResourceWithId (Object, T, Object)]","12"
"2","RuoYi/ruoyi-admin","6d88b3381b2a33547fd2dd818d662111e29a68c7","c547a94b29521291de2e845e6b8902362a048c09","REVERSE_IF_ELSE","3","1","4","[SysIndexController unlockscreen (String), SysIndexController passwordIsExpiration (Date), SysIndexController index (ModelMap), SysIndexController contentMainClass (Boolean, Boolean)]","56"
"9","RuoYi/ruoyi-admin","c547a94b29521291de2e845e6b8902362a048c09","23d9476ef589c5526cefdf9c3947f39efe582af2","LOCAL_VAR_RENAMING","0","1","1","[BuildController build ()]","14"
"11","RuoYi/ruoyi-admin","23d9476ef589c5526cefdf9c3947f39efe582af2","9cb58446b4b194571c32b745e12d35a602f6817c","REVERSE_IF_ELSE","3","1","2","[SysIndexController passwordIsExpiration (Date), SysIndexController contentMainClass (Boolean, Boolean)]","28"
"15","RuoYi/ruoyi-admin","9cb58446b4b194571c32b745e12d35a602f6817c","51776aca60ff660499d3f36dceee16ace1ee5092","REVERSE_IF_ELSE","3","1","2","[SysIndexController passwordIsExpiration (Date), SysIndexController contentMainClass (Boolean, Boolean)]","28"
"18","RuoYi/ruoyi-admin","51776aca60ff660499d3f36dceee16ace1ee5092","b416ebf16cb390157acc2e20af97e3f1ebe95c66","SWITCH_EQUAL_SIDES","14","1","1","[SysIndexController initPasswordIsModify (Date)]","14"
"29","RuoYi/ruoyi-admin","b416ebf16cb390157acc2e20af97e3f1ebe95c66","3c623ba2f53271b21f695a838efb636fd21b6f25","SWITCH_EQUAL_SIDES","14","1","1","[SysIndexController initPasswordIsModify (Date)]","14"
"33","RuoYi/ruoyi-admin","3c623ba2f53271b21f695a838efb636fd21b6f25","93a7c004cb678adaf3584fbe409eed3dbe1aee1e","LOCAL_VAR_RENAMING","0","1","2","[SysIndexController menuStyle (String, HttpServletResponse), SysIndexController index (ModelMap)]","28"
"38","RuoYi/ruoyi-admin","93a7c004cb678adaf3584fbe409eed3dbe1aee1e","320d35bd97f5b419803d864698139afbd4d2c166","LOCAL_VAR_RENAMING","0","1","2","[SysIndexController menuStyle (String, HttpServletResponse), SysIndexController index (ModelMap)]","28"
"39","RuoYi/ruoyi-admin","320d35bd97f5b419803d864698139afbd4d2c166","4bfd687bc885f0616e283e6c75030698e705fdde","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[SysIndexController index (ModelMap)]","14"
"40","RuoYi/ruoyi-admin","4bfd687bc885f0616e283e6c75030698e705fdde","b662e15315501b3fa76d211b0c6ab1d8a251712f","VAR_DECLARATION_MERGING","12","1","2","[SysIndexController index (ModelMap), SysIndexController initPasswordIsModify (Date)]","28"
"48","RuoYi/ruoyi-admin","b662e15315501b3fa76d211b0c6ab1d8a251712f","264e78793d9eebf146d605071426e215493635dd","LOCAL_VAR_RENAMING","0","1","2","[SysIndexController unlockscreen (String), SysIndexController index (ModelMap)]","28"
"49","RuoYi/ruoyi-admin","264e78793d9eebf146d605071426e215493635dd","396976cdfa56fbeb61ed14f801303d3377e8fe5f","SWITCH_EQUAL_SIDES","14","1","1","[SysIndexController initPasswordIsModify (Date)]","14"
"56","RuoYi/ruoyi-admin","396976cdfa56fbeb61ed14f801303d3377e8fe5f","28789235e2e19a593a5ad22e02af315ea79c17fe","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[SysIndexController index (ModelMap)]","14"
"58","RuoYi/ruoyi-admin","28789235e2e19a593a5ad22e02af315ea79c17fe","edd45a116e86c766be75e9625a2a0398bbbe56e6","LOCAL_VAR_RENAMING","0","1","1","[BuildController build ()]","14"
"60","RuoYi/ruoyi-admin","edd45a116e86c766be75e9625a2a0398bbbe56e6","7307627c0f262a03df72d3cf131ff28c23b9677d","VAR_DECLARATION_DIVIDING","13","1","2","[SysIndexController index (ModelMap), SysIndexController initPasswordIsModify (Date)]","28"
"4","RuoYi/ruoyi-common","7307627c0f262a03df72d3cf131ff28c23b9677d","9a6e2323e520940e63b61d99c07bf521191c1105","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[HttpUtils sendPost (String, String)]","11"
"5","RuoYi/ruoyi-common","9a6e2323e520940e63b61d99c07bf521191c1105","be3661680cf187ef8f273cc3e529c5a14730b6d2","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[HttpUtils sendGet (String, String, String)]","11"
"6","RuoYi/ruoyi-common","be3661680cf187ef8f273cc3e529c5a14730b6d2","d99e740d39ec27c1e0a8e5d9fbf3e9ca9a763ba7","LOCAL_VAR_RENAMING","0","1","1","[HttpUtils sendGet (String, String, String)]","11"
"7","RuoYi/ruoyi-common","d99e740d39ec27c1e0a8e5d9fbf3e9ca9a763ba7","dbb77a9fa046abc8fa86c0aeee7a6e872bbf13a5","VAR_DECLARATION_DIVIDING","13","1","1","[HttpUtils sendSSLPost (String, String)]","11"
"11","RuoYi/ruoyi-common","dbb77a9fa046abc8fa86c0aeee7a6e872bbf13a5","dbb1d29cfa9fdc29fa4d8735b5b8c9ce982fe79d","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[HttpUtils sendPost (String, String), HttpUtils sendGet (String, String, String)]","22"
"12","RuoYi/ruoyi-common","dbb1d29cfa9fdc29fa4d8735b5b8c9ce982fe79d","06e891546d9c0c6ab2a2d8cc588d431f680699c3","WHILE_TO_FOR","2","1","2","[HttpUtils sendSSLPost (String, String), HttpUtils sendPost (String, String)]","22"
"13","RuoYi/ruoyi-common","06e891546d9c0c6ab2a2d8cc588d431f680699c3","90625d40d3dba65da02c5565ccce3003aa477c08","REVERSE_IF_ELSE","3","1","1","[HttpUtils sendSSLPost (String, String)]","11"
"15","RuoYi/ruoyi-common","90625d40d3dba65da02c5565ccce3003aa477c08","142de8e5389d2cf186d9c49ca435ac9e80386df8","FOR_TO_WHILE","1","1","1","[HttpUtils sendSSLPost (String, String)]","11"
"18","RuoYi/ruoyi-common","142de8e5389d2cf186d9c49ca435ac9e80386df8","2c64ae537b87da3f591fc5c91b02073a63c0805d","FOR_TO_WHILE","1","1","1","[HttpUtils sendPost (String, String)]","11"
"20","RuoYi/ruoyi-common","2c64ae537b87da3f591fc5c91b02073a63c0805d","586b526c83289b7168606b4ea25cfa41e2b3adcd","LOCAL_VAR_RENAMING","0","1","2","[TrustAnyTrustManager checkClientTrusted (X509Certificate[], String), HttpUtils sendPost (String, String)]","22"
"21","RuoYi/ruoyi-common","586b526c83289b7168606b4ea25cfa41e2b3adcd","89cc3e5e6752183017b0865fbe1e00b72af0335f","REVERSE_IF_ELSE","3","1","3","[HttpUtils sendSSLPost (String, String), HttpUtils sendPost (String, String), HttpUtils sendGet (String, String, String)]","33"
"22","RuoYi/ruoyi-common","89cc3e5e6752183017b0865fbe1e00b72af0335f","879ebbddbb42c48d24016fc7d0305a17e4c21ad7","SWITCH_STRING_EQUAL","15","1","1","[HttpUtils sendSSLPost (String, String)]","11"
"24","RuoYi/ruoyi-common","879ebbddbb42c48d24016fc7d0305a17e4c21ad7","7c5eb1aa600cd283262881b73c7dfd914ca3bc66","VAR_DECLARATION_MERGING","12","1","1","[HttpUtils sendSSLPost (String, String)]","11"
"30","RuoYi/ruoyi-common","7c5eb1aa600cd283262881b73c7dfd914ca3bc66","2be42b0bccb5310a277765c7beed15a2dd033bdc","LOCAL_VAR_RENAMING","0","1","2","[HttpUtils sendPost (String, String), HttpUtils sendGet (String, String, String)]","22"
"32","RuoYi/ruoyi-common","2be42b0bccb5310a277765c7beed15a2dd033bdc","7ec5236e8dd560ad4496eb0dda575ffe88c59854","WHILE_TO_FOR","2","1","1","[HttpUtils sendSSLPost (String, String)]","11"
"34","RuoYi/ruoyi-common","7ec5236e8dd560ad4496eb0dda575ffe88c59854","6479bd0fec0dff4336777a68989c03269ffa150c","SWITCH_STRING_EQUAL","15","1","1","[HttpUtils sendSSLPost (String, String)]","11"
"36","RuoYi/ruoyi-common","6479bd0fec0dff4336777a68989c03269ffa150c","fe846c88721c0449e11434bfef684c671f13630a","REVERSE_IF_ELSE","3","1","3","[HttpUtils sendSSLPost (String, String), HttpUtils sendPost (String, String), HttpUtils sendGet (String, String, String)]","33"
"40","RuoYi/ruoyi-common","fe846c88721c0449e11434bfef684c671f13630a","8915b2923b30129bf067651461e88f9f3cf7c49d","WHILE_TO_FOR","2","1","1","[HttpUtils sendPost (String, String)]","11"
"42","RuoYi/ruoyi-common","8915b2923b30129bf067651461e88f9f3cf7c49d","d5d4c073e3fa71df920d38d8069a6dda1bc281d6","SWITCH_STRING_EQUAL","15","1","1","[HttpUtils sendSSLPost (String, String)]","11"
"50","RuoYi/ruoyi-common","d5d4c073e3fa71df920d38d8069a6dda1bc281d6","e687dc0f441048bd5a205316340802b7346039f4","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[HttpUtils sendGet (String, String, String)]","11"
"51","RuoYi/ruoyi-common","e687dc0f441048bd5a205316340802b7346039f4","c62f4fa0869286ad32c34336b5441ae959540f16","WHILE_TO_FOR","2","1","1","[HttpUtils sendGet (String, String, String)]","11"
"52","RuoYi/ruoyi-common","c62f4fa0869286ad32c34336b5441ae959540f16","4b3ed0d6c2c78e389a4544af5131516c9a7fe952","VAR_DECLARATION_DIVIDING","13","1","1","[HttpUtils sendSSLPost (String, String)]","11"
"55","RuoYi/ruoyi-common","4b3ed0d6c2c78e389a4544af5131516c9a7fe952","e220692b475625e858d76d93e46be041d3f6d108","INFIX_EXPRESSION_DIVIDING","8","1","1","[HttpUtils sendSSLPost (String, String)]","11"
"57","RuoYi/ruoyi-common","e220692b475625e858d76d93e46be041d3f6d108","24ade7d124f1b1158bcdc1b3ab7428c5d9870e93","REVERSE_IF_ELSE","3","1","2","[HttpUtils sendSSLPost (String, String), HttpUtils sendPost (String, String)]","22"
"59","RuoYi/ruoyi-common","24ade7d124f1b1158bcdc1b3ab7428c5d9870e93","2e7c91bef972b5ed48bb7464ef51c30466d4bf7b","VAR_DECLARATION_MERGING","12","1","1","[HttpUtils sendSSLPost (String, String)]","11"
"61","RuoYi/ruoyi-common","2e7c91bef972b5ed48bb7464ef51c30466d4bf7b","dfedcedddd352c64d66560b7fff09180e0eec0aa","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[HttpUtils sendGet (String, String, String)]","11"
"65","RuoYi/ruoyi-common","dfedcedddd352c64d66560b7fff09180e0eec0aa","f2eb9ac2758c9b87d0f14941b3252145050ef981","INFIX_EXPRESSION_DIVIDING","8","1","1","[HttpUtils sendSSLPost (String, String)]","11"
"34","RuoYi/ruoyi-framework","f2eb9ac2758c9b87d0f14941b3252145050ef981","53abfa190654d912e6a449dbd17e28057950a6cb","LOCAL_VAR_RENAMING","0","1","2","[SysShiroService deleteSession (OnlineSession), SysShiroService getSession (Serializable)]","20"
"42","RuoYi/ruoyi-framework","53abfa190654d912e6a449dbd17e28057950a6cb","18c136848918c79e3424bc08b474217df1dfca87","LOCAL_VAR_RENAMING","0","1","2","[SysShiroService deleteSession (OnlineSession), SysShiroService getSession (Serializable)]","20"
"44","RuoYi/ruoyi-framework","18c136848918c79e3424bc08b474217df1dfca87","863f4a5a8fb2508fccf9c4edfb29b0eec98bc3ff","LOCAL_VAR_RENAMING","0","1","2","[SysShiroService deleteSession (OnlineSession), SysShiroService getSession (Serializable)]","20"
"53","RuoYi/ruoyi-framework","863f4a5a8fb2508fccf9c4edfb29b0eec98bc3ff","145deb2478fbf0b08bb524bd47784ca09b468e41","LOCAL_VAR_RENAMING","0","1","2","[SysShiroService deleteSession (OnlineSession), SysShiroService getSession (Serializable)]","20"
"64","RuoYi/ruoyi-framework","145deb2478fbf0b08bb524bd47784ca09b468e41","f6fdca5c997c1be6973ab1047711ed8c2f0acc4c","REVERSE_IF_ELSE","3","1","1","[SysShiroService createSession (SysUserOnline)]","10"
"65","RuoYi/ruoyi-framework","f6fdca5c997c1be6973ab1047711ed8c2f0acc4c","e29eed7c8460816055c0b2f072a225a606fb123e","LOCAL_VAR_RENAMING","0","1","2","[SysShiroService deleteSession (OnlineSession), SysShiroService getSession (Serializable)]","20"
"4","RuoYi/ruoyi-generator","e29eed7c8460816055c0b2f072a225a606fb123e","7a1dbcbd96e954579410762d870b7f34e9d75691","LOCAL_VAR_RENAMING","0","1","2","[GenTableColumnMapper insertGenTableColumn (GenTableColumn), GenTableColumnMapper deleteGenTableColumns (List<GenTableColumn>)]","12"
"9","RuoYi/ruoyi-generator","7a1dbcbd96e954579410762d870b7f34e9d75691","1750618ecd9919b84e7f4654ef06856be1587544","LOCAL_VAR_RENAMING","0","1","2","[GenTableColumnMapper deleteGenTableColumns (List<GenTableColumn>), GenTableColumnMapper selectDbTableColumnsByName (String)]","12"
"65","RuoYi/ruoyi-generator","1750618ecd9919b84e7f4654ef06856be1587544","a0573354a39d5f6737bc183650f42466a5418c41","LOCAL_VAR_RENAMING","0","1","2","[GenTableColumnMapper updateGenTableColumn (GenTableColumn), GenTableColumnMapper insertGenTableColumn (GenTableColumn)]","12"
"18","RuoYi/ruoyi-quartz","a0573354a39d5f6737bc183650f42466a5418c41","45e93f14644fe055b962776c548fbc4feb4a79b1","LOCAL_VAR_RENAMING","0","1","1","[QuartzJobExecution doExecute (JobExecutionContext, SysJob)]","8"
"55","RuoYi/ruoyi-quartz","45e93f14644fe055b962776c548fbc4feb4a79b1","8620875664242b35f7cbef015f4d301ec5eab87e","LOCAL_VAR_RENAMING","0","1","1","[QuartzJobExecution doExecute (JobExecutionContext, SysJob)]","8"
"19","RuoYi/ruoyi-system","8620875664242b35f7cbef015f4d301ec5eab87e","9ee65a8e5ac4db04132d7bd1390add9fa1f67408","LOCAL_VAR_RENAMING","0","1","2","[ISysDictTypeService insertDictType (SysDictType), ISysDictTypeService updateDictType (SysDictType)]","18"
"23","RuoYi/ruoyi-system","9ee65a8e5ac4db04132d7bd1390add9fa1f67408","d02b0968ec01c675de69bb1baee55936f925ef34","LOCAL_VAR_RENAMING","0","1","2","[ISysDictTypeService selectDictTypeById (Long), ISysDictTypeService selectDictTypeByType (String)]","18"
"27","RuoYi/ruoyi-system","d02b0968ec01c675de69bb1baee55936f925ef34","a4068237b304786ddd7f0267daa14f4a98b82d6d","LOCAL_VAR_RENAMING","0","1","2","[ISysDictTypeService checkDictTypeUnique (SysDictType), ISysDictTypeService selectDictTypeList (SysDictType)]","18"
"28","RuoYi/ruoyi-system","a4068237b304786ddd7f0267daa14f4a98b82d6d","84a4bffa6f47b166e308db62c351a334de30a76e","LOCAL_VAR_RENAMING","0","1","2","[ISysDictTypeService insertDictType (SysDictType), ISysDictTypeService selectDictTypeByType (String)]","18"
"43","RuoYi/ruoyi-system","84a4bffa6f47b166e308db62c351a334de30a76e","8bf05b6bd01b524ab231524d8c494b2bd5288275","LOCAL_VAR_RENAMING","0","1","2","[ISysDictTypeService updateDictType (SysDictType), ISysDictTypeService selectDictTypeByType (String)]","18"
"4","WebGoat","f8eaf6311821afffe2aa62f30c6c7698e190349d","8fd2bfe5aa78cde829b72f676f631266a8b68e23","REVERSE_IF_ELSE","3","1","1","[LogBleedingTask completed (String, String)]","18"
"15","WebGoat","8fd2bfe5aa78cde829b72f676f631266a8b68e23","36fa23d8100388e5a2d44b223c37553fb565e209","REVERSE_IF_ELSE","3","1","1","[LogBleedingTask completed (String, String)]","18"
"16","WebGoat","36fa23d8100388e5a2d44b223c37553fb565e209","974618aad611f98c38b4f8d1c9dda5f5931542a9","SWITCH_STRING_EQUAL","15","1","1","[LogBleedingTask completed (String, String)]","18"
"22","WebGoat","974618aad611f98c38b4f8d1c9dda5f5931542a9","20bdd7a963cc71acb6f7238322795d6953a6a213","LOCAL_VAR_RENAMING","0","1","2","[LogBleedingTask completed (String, String), LogBleedingTask generatePassword ()]","36"
"23","WebGoat","20bdd7a963cc71acb6f7238322795d6953a6a213","9784105aaa4cf91ce2780dcd9385b024471b0838","LOCAL_VAR_RENAMING","0","1","2","[LogBleedingTask completed (String, String), LogBleedingTask generatePassword ()]","36"
"25","WebGoat","9784105aaa4cf91ce2780dcd9385b024471b0838","c401ae6be4acfc6434f6e82c8927daa466ccee1c","SWITCH_STRING_EQUAL","15","1","1","[LogBleedingTask completed (String, String)]","18"
"35","WebGoat","c401ae6be4acfc6434f6e82c8927daa466ccee1c","ce21eb6adcf88e91c34a0807482f66fc4dadbbc4","SWITCH_STRING_EQUAL","15","1","1","[LogBleedingTask completed (String, String)]","18"
"37","WebGoat","ce21eb6adcf88e91c34a0807482f66fc4dadbbc4","c111eabbc2c180c16425e1f4a3b148feb4937a7e","LOCAL_VAR_RENAMING","0","1","2","[LogBleedingTask completed (String, String), LogBleedingTask generatePassword ()]","36"
"44","WebGoat","c111eabbc2c180c16425e1f4a3b148feb4937a7e","4fca0f4d3b476b9a92c310b22a88d591704ca26a","INFIX_EXPRESSION_DIVIDING","8","1","1","[LogBleedingTask completed (String, String)]","18"
"53","WebGoat","4fca0f4d3b476b9a92c310b22a88d591704ca26a","52acd46e5bf6b47c9bdd3c6f3f0bf47dd35b14d4","REVERSE_IF_ELSE","3","1","1","[LogBleedingTask completed (String, String)]","18"
"54","WebGoat","52acd46e5bf6b47c9bdd3c6f3f0bf47dd35b14d4","901dc99d60aa6366f26dd6631f052acca4211f4a","LOCAL_VAR_RENAMING","0","1","1","[LogBleedingTask completed (String, String)]","18"
"55","WebGoat","901dc99d60aa6366f26dd6631f052acca4211f4a","0ca9de7529447d7d736cf07f47431197fb26264f","REVERSE_IF_ELSE","3","1","1","[LogBleedingTask completed (String, String)]","18"
"56","WebGoat","0ca9de7529447d7d736cf07f47431197fb26264f","6c3ddeeb76a850e36cd206f7c1f7ed37ba9dbdf8","INFIX_EXPRESSION_DIVIDING","8","1","1","[LogBleedingTask completed (String, String)]","18"
"58","WebGoat","6c3ddeeb76a850e36cd206f7c1f7ed37ba9dbdf8","7894182ddac91143241fc1c412fc604347e76822","REVERSE_IF_ELSE","3","1","1","[LogBleedingTask completed (String, String)]","18"
"59","WebGoat","7894182ddac91143241fc1c412fc604347e76822","a05954785e665d75e3ffd392f815d67aad772424","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[LogBleedingTask completed (String, String)]","18"
"60","WebGoat","a05954785e665d75e3ffd392f815d67aad772424","171cf5a03b99627b54dbb425e368836a47a74282","SWITCH_STRING_EQUAL","15","1","1","[LogBleedingTask completed (String, String)]","18"
"17","symja-parser","1138dde69a6c3f01f3d2cee22bcbed1fd0209ca3","f67fcb2cd1831eee25341ca6cb3fbd9bb4dd493a","LOCAL_VAR_RENAMING","0","1","1","[SetFunction evaluate (IEvaluator<T>, FunctionNode)]","9"
"21","symja-parser","f67fcb2cd1831eee25341ca6cb3fbd9bb4dd493a","fd989c0ce5a0219077008b9d6e89b85fde684e99","LOCAL_VAR_RENAMING","0","1","1","[SetFunction evaluate (IEvaluator<T>, FunctionNode)]","9"
"22","symja-parser","fd989c0ce5a0219077008b9d6e89b85fde684e99","f5285314398c8aeff0320541e3d76071f2be9a5a","SWITCH_STRING_EQUAL","15","1","1","[ASTNode equals (Object)]","9"
"27","symja-parser","f5285314398c8aeff0320541e3d76071f2be9a5a","41bd725b47c49a3f3c675c6a1882c1f7770b540c","SWITCH_EQUAL_SIDES","14","1","1","[ASTNode equals (Object)]","9"
"28","symja-parser","41bd725b47c49a3f3c675c6a1882c1f7770b540c","6a368b236a876f37a6b78760618e1b38d7b8661a","REVERSE_IF_ELSE","3","1","1","[ASTNode equals (Object)]","9"
"32","symja-parser","6a368b236a876f37a6b78760618e1b38d7b8661a","fe46fc7f693cb8452ff9fc6337e7e60dc108ef40","SWITCH_EQUAL_SIDES","14","1","1","[SetFunction evaluate (IEvaluator<T>, FunctionNode)]","9"
"33","symja-parser","fe46fc7f693cb8452ff9fc6337e7e60dc108ef40","7ff71ea88aeca30cbb9a7bfa2748ddec691b909c","LOCAL_VAR_RENAMING","0","1","2","[ASTNode ASTNode (String), ASTNode isFree (ASTNode)]","18"
"35","symja-parser","7ff71ea88aeca30cbb9a7bfa2748ddec691b909c","7aa3e469193dadb34023f479bb0ef7de8b2dc011","SWITCH_EQUAL_SIDES","14","1","1","[ASTNode equals (Object)]","9"
"41","symja-parser","7aa3e469193dadb34023f479bb0ef7de8b2dc011","904c28dbcb7a06b2bd6682f9a206762d65e1bc50","SWITCH_STRING_EQUAL","15","1","1","[ASTNode equals (Object)]","9"
"43","symja-parser","904c28dbcb7a06b2bd6682f9a206762d65e1bc50","450f37b37db111eaed6bf647f2d70f52a1b2b601","LOCAL_VAR_RENAMING","0","1","2","[ASTNode dependsOn (String), ASTNode equals (Object)]","18"
"45","symja-parser","450f37b37db111eaed6bf647f2d70f52a1b2b601","66536c2601a4fabf96eae7f505ae51ba522e3366","REVERSE_IF_ELSE","3","1","1","[SetFunction evaluate (IEvaluator<T>, FunctionNode)]","9"
"46","symja-parser","66536c2601a4fabf96eae7f505ae51ba522e3366","6ba7ddd5fbb3a9906ad60f7d4d423ebc415025bc","INFIX_EXPRESSION_DIVIDING","8","1","1","[ASTNode equals (Object)]","9"
"47","symja-parser","6ba7ddd5fbb3a9906ad60f7d4d423ebc415025bc","6e07192e954f2e49af753f47609afb580eebd072","SWITCH_EQUAL_SIDES","14","1","1","[SetFunction evaluate (IEvaluator<T>, FunctionNode)]","9"
"48","symja-parser","6e07192e954f2e49af753f47609afb580eebd072","eb586c3329fdc7d26870911bd2b855ed3ab0594f","REVERSE_IF_ELSE","3","1","1","[ASTNode equals (Object)]","9"
"50","symja-parser","eb586c3329fdc7d26870911bd2b855ed3ab0594f","92a4b41aced93b9fee7363f58e67d3da1fac7959","LOCAL_VAR_RENAMING","0","1","1","[SetFunction evaluate (IEvaluator<T>, FunctionNode)]","9"
"51","symja-parser","92a4b41aced93b9fee7363f58e67d3da1fac7959","2bb3da9c9f7ea1dcb25811f5ab672bad765f4c04","SWITCH_STRING_EQUAL","15","1","1","[ASTNode equals (Object)]","9"
"60","symja-parser","2bb3da9c9f7ea1dcb25811f5ab672bad765f4c04","2676ac9c4d267bda758ef4878092d9db50981cbb","LOCAL_VAR_RENAMING","0","1","1","[SetFunction evaluate (IEvaluator<T>, FunctionNode)]","9"
"62","symja-parser","2676ac9c4d267bda758ef4878092d9db50981cbb","ebbd0f1af862a5da4e7305f2b6408a227abc07b4","REVERSE_IF_ELSE","3","1","1","[SetFunction evaluate (IEvaluator<T>, FunctionNode)]","9"
"65","symja-parser","ebbd0f1af862a5da4e7305f2b6408a227abc07b4","a02510d62c20c48b31db7c30ccf25f9a27212ba2","INFIX_EXPRESSION_DIVIDING","8","1","1","[ASTNode equals (Object)]","9"
"13","mybatis-3","aa32bab6e2ed6455c3cb80a2018a8b9871d33c48","f0e359d39be58d7523b11cf2499aaff2a2041882","REVERSE_IF_ELSE","3","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"23","mybatis-3","f0e359d39be58d7523b11cf2499aaff2a2041882","2e4fa787a1e82133c10d8a85c7819a5c5a45bd25","REVERSE_IF_ELSE","3","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"27","mybatis-3","2e4fa787a1e82133c10d8a85c7819a5c5a45bd25","5562383934ab78b8c0580cccdf5d4a3bafe013b0","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"28","mybatis-3","5562383934ab78b8c0580cccdf5d4a3bafe013b0","2d7f668f8084638ae41680b3dc538acdc32fabcd","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"29","mybatis-3","2d7f668f8084638ae41680b3dc538acdc32fabcd","a9c9dbcc112c605553406e239037a30a2f9f941b","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"32","mybatis-3","a9c9dbcc112c605553406e239037a30a2f9f941b","d7dbf7e97f007482ac6be62dca918cc86f833215","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"34","mybatis-3","d7dbf7e97f007482ac6be62dca918cc86f833215","0f1419873d91fe717d537e50428161d96e377a6c","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"35","mybatis-3","0f1419873d91fe717d537e50428161d96e377a6c","3972fac41ff5e5aa011c480407cd6ebc3dfdf865","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"40","mybatis-3","3972fac41ff5e5aa011c480407cd6ebc3dfdf865","e5dff176b5667f643bd432081db01104752fddd5","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"45","mybatis-3","e5dff176b5667f643bd432081db01104752fddd5","5fc7b891f1664ac8f8f5383ca1573de212b06e76","REVERSE_IF_ELSE","3","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"52","mybatis-3","5fc7b891f1664ac8f8f5383ca1573de212b06e76","4f50b621062bbc8f62e32218601852b6c2167db8","LOCAL_VAR_RENAMING","0","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"55","mybatis-3","4f50b621062bbc8f62e32218601852b6c2167db8","15a869695ac73dd629be1233fa31052643eafc15","LOCAL_VAR_RENAMING","0","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"57","mybatis-3","15a869695ac73dd629be1233fa31052643eafc15","cc36e9031a14367838b3c58c67cc3cd065ce209c","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"59","mybatis-3","cc36e9031a14367838b3c58c67cc3cd065ce209c","0fd924a64c7a700788e5a00d3e0839e030b35e6b","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"60","mybatis-3","0fd924a64c7a700788e5a00d3e0839e030b35e6b","749a17e0ecc411beca428538ae0c50da3e235ce4","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"62","mybatis-3","749a17e0ecc411beca428538ae0c50da3e235ce4","4f7f6ecc60262487c649735118eeddcd9d1ea105","REVERSE_IF_ELSE","3","1","1","[TypeReference getSuperclassTypeParameter (Class<?>)]","17"
"0","spring-data-jpa/spring-data-envers","8739c49e7dc176bcff71c26516df7633336569a4","ba5ab5f5b77135ca65b81c6c0043971722709d28","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[EnversRevisionRepositoryImpl findRevisions (ID, Pageable), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","8"
"1","spring-data-jpa/spring-data-envers","ba5ab5f5b77135ca65b81c6c0043971722709d28","053c90ee58f4c039b808f85fd86b5a6f5138d815","REVERSE_IF_ELSE","3","1","1","[EnversRevisionRepositoryImpl findRevisions (ID, Pageable)]","4"
"7","spring-data-jpa/spring-data-envers","053c90ee58f4c039b808f85fd86b5a6f5138d815","cf84c1765f67b00ec2ca4c914a154c0833593e5d","REVERSE_IF_ELSE","3","1","4","[EnversRevisionRepositoryImpl findLastChangeRevision (ID), EnversRevisionRepositoryImpl findRevision (ID, N), EnversRevisionRepositoryImpl findRevisions (ID, Pageable), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","16"
"11","spring-data-jpa/spring-data-envers","cf84c1765f67b00ec2ca4c914a154c0833593e5d","a4435e3cac1de97304dbf90d687df68ae2deca11","SINGLE_IF_TO_CONDITIONAL_EXP","4","1","2","[EnversRevisionRepositoryImpl findRevisions (ID, Pageable), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","8"
"14","spring-data-jpa/spring-data-envers","a4435e3cac1de97304dbf90d687df68ae2deca11","b95a27154ed692a08b69b83bce6123e965a3058f","SWITCH_EQUAL_SIDES","14","1","1","[QueryResult QueryResult (Object[])]","4"
"19","spring-data-jpa/spring-data-envers","b95a27154ed692a08b69b83bce6123e965a3058f","18b1132a833864a28bcf7b8795c9ddbdb01d9e48","CONDITIONAL_EXP_TO_SINGLE_IF","5","1","2","[EnversRevisionRepositoryImpl findRevisions (ID, Pageable), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","8"
"20","spring-data-jpa/spring-data-envers","18b1132a833864a28bcf7b8795c9ddbdb01d9e48","353b37af918c015201fce0f2dc4a461ac8510720","LOCAL_VAR_RENAMING","0","1","1","[EnversRevisionRepositoryImpl findRevisions (ID, Pageable)]","4"
"27","spring-data-jpa/spring-data-envers","353b37af918c015201fce0f2dc4a461ac8510720","073bc022e46a9edb65eb50cd6f6c4cefc3d58ce2","REVERSE_IF_ELSE","3","1","4","[EnversRevisionRepositoryImpl findLastChangeRevision (ID), EnversRevisionRepositoryImpl findRevision (ID, N), EnversRevisionRepositoryImpl findRevisions (ID, Pageable), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","16"
"31","spring-data-jpa/spring-data-envers","073bc022e46a9edb65eb50cd6f6c4cefc3d58ce2","ef640572992fd76a6b725f719fdf773434035f4c","LOCAL_VAR_RENAMING","0","1","1","[QueryResult convertRevisionType (RevisionType)]","4"
"35","spring-data-jpa/spring-data-envers","ef640572992fd76a6b725f719fdf773434035f4c","e9fc2cf9a300857502cf824077cb78001a050d22","SWITCH_EQUAL_SIDES","14","1","1","[QueryResult QueryResult (Object[])]","4"
"36","spring-data-jpa/spring-data-envers","e9fc2cf9a300857502cf824077cb78001a050d22","c9a6a6b3b7902b50f2f8af0628fda9e1a0b7ecd7","STATEMENTS_ORDER_REARRANGEMENT","10","1","3","[EnversRevisionRepositoryImpl findRevisions (ID, Pageable), EnversRevisionRepositoryImpl EnversRevisionRepositoryImpl (JpaEntityInformation<T,?>, RevisionEntityInformation, EntityManager), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","12"
"39","spring-data-jpa/spring-data-envers","c9a6a6b3b7902b50f2f8af0628fda9e1a0b7ecd7","32d3cf463e510b14088275f432f1790f2e76b55b","REVERSE_IF_ELSE","3","1","2","[EnversRevisionRepositoryImpl findRevisions (ID, Pageable), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","8"
"45","spring-data-jpa/spring-data-envers","32d3cf463e510b14088275f432f1790f2e76b55b","b7b03aeae3a9f59c62c1623eb0f559476313cf14","REVERSE_IF_ELSE","3","1","1","[EnversRevisionRepositoryImpl findRevisions (ID, Pageable)]","4"
"46","spring-data-jpa/spring-data-envers","b7b03aeae3a9f59c62c1623eb0f559476313cf14","fc583249604e19287b3d908e7fa38ec012d468bc","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[EnversRevisionRepositoryImpl findRevisions (ID, Pageable), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","8"
"49","spring-data-jpa/spring-data-envers","fc583249604e19287b3d908e7fa38ec012d468bc","86470f70dcce3304043df3d2dcd12044ca42339a","REVERSE_IF_ELSE","3","1","2","[EnversRevisionRepositoryImpl findRevisions (ID, Pageable), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","8"
"51","spring-data-jpa/spring-data-envers","86470f70dcce3304043df3d2dcd12044ca42339a","d43a2c3441ccfe30b22f0da564f5a41167d84727","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[EnversRevisionRepositoryImpl findRevisions (ID, Pageable), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","8"
"54","spring-data-jpa/spring-data-envers","d43a2c3441ccfe30b22f0da564f5a41167d84727","2c8be3a66fe77282e757bff3db383b726f1c1f30","SWITCH_EQUAL_SIDES","14","1","1","[QueryResult QueryResult (Object[])]","4"
"58","spring-data-jpa/spring-data-envers","2c8be3a66fe77282e757bff3db383b726f1c1f30","b1a03d5f06bfaa1897ec556c969694075f6b3e7e","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[EnversRevisionRepositoryImpl EnversRevisionRepositoryImpl (JpaEntityInformation<T,?>, RevisionEntityInformation, EntityManager), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","8"
"62","spring-data-jpa/spring-data-envers","b1a03d5f06bfaa1897ec556c969694075f6b3e7e","a210b5dbcc81c3345f7a3c9304046cee35144299","STATEMENTS_ORDER_REARRANGEMENT","10","1","2","[EnversRevisionRepositoryImpl findRevisions (ID, Pageable), EnversRevisionRepositoryImpl EnversRevisionRepositoryImpl (JpaEntityInformation<T,?>, RevisionEntityInformation, EntityManager)]","8"
"63","spring-data-jpa/spring-data-envers","a210b5dbcc81c3345f7a3c9304046cee35144299","371c268b395412e66c7deb85d149462ff023f759","STATEMENTS_ORDER_REARRANGEMENT","10","1","3","[EnversRevisionRepositoryImpl findRevisions (ID, Pageable), EnversRevisionRepositoryImpl EnversRevisionRepositoryImpl (JpaEntityInformation<T,?>, RevisionEntityInformation, EntityManager), EnversRevisionRepositoryImpl mapPropertySort (Sort)]","12"
"9","spring-data-jpa/spring-data-jpa","371c268b395412e66c7deb85d149462ff023f759","ada1c0750129b7bfb43cdbbf3b8f3ac3901dc992","REVERSE_IF_ELSE","3","1","1","[JpaKeysetScrollQueryCreator complete (Predicate, Sort, CriteriaQuery<?>, CriteriaBuilder, Root<?>)]","12"
"15","spring-data-jpa/spring-data-jpa","ada1c0750129b7bfb43cdbbf3b8f3ac3901dc992","84f686ab2de52577d19ba623a9269a9418cb2d92","LOCAL_VAR_RENAMING","0","1","2","[JpaKeysetScrollQueryCreator JpaKeysetScrollQueryCreator (PartTree, ReturnedType, CriteriaBuilder, ParameterMetadataProvider, JpaEntityInformation<?,?>, KeysetScrollPosition), JpaKeysetScrollQueryCreator complete (Predicate, Sort, CriteriaQuery<?>, CriteriaBuilder, Root<?>)]","24"
"17","spring-data-jpa/spring-data-jpa","84f686ab2de52577d19ba623a9269a9418cb2d92","4b309a2583442215c6056613a324c19a18e4955d","REVERSE_IF_ELSE","3","1","1","[JpaKeysetScrollQueryCreator complete (Predicate, Sort, CriteriaQuery<?>, CriteriaBuilder, Root<?>)]","12"
"18","spring-data-jpa/spring-data-jpa","4b309a2583442215c6056613a324c19a18e4955d","f7ab93538b64e31458b2163ae6bf31fff9e32020","REVERSE_IF_ELSE","3","1","1","[JpaKeysetScrollQueryCreator complete (Predicate, Sort, CriteriaQuery<?>, CriteriaBuilder, Root<?>)]","12"
"29","spring-data-jpa/spring-data-jpa","f7ab93538b64e31458b2163ae6bf31fff9e32020","26460ced5349d3e2f9bfeb6c1ef348751aed578c","REVERSE_IF_ELSE","3","1","1","[JpaKeysetScrollQueryCreator complete (Predicate, Sort, CriteriaQuery<?>, CriteriaBuilder, Root<?>)]","12"
"36","spring-data-jpa/spring-data-jpa","26460ced5349d3e2f9bfeb6c1ef348751aed578c","08a779fb4e9c2bc232025d55a05a11efc4814ccc","LOCAL_VAR_RENAMING","0","1","1","[JpaKeysetScrollQueryCreator JpaKeysetScrollQueryCreator (PartTree, ReturnedType, CriteriaBuilder, ParameterMetadataProvider, JpaEntityInformation<?,?>, KeysetScrollPosition)]","12"
"37","spring-data-jpa/spring-data-jpa","08a779fb4e9c2bc232025d55a05a11efc4814ccc","31121bad309af2f4c5c5ac95471ecddca0d4dcbd","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JpaKeysetScrollQueryCreator JpaKeysetScrollQueryCreator (PartTree, ReturnedType, CriteriaBuilder, ParameterMetadataProvider, JpaEntityInformation<?,?>, KeysetScrollPosition)]","12"
"38","spring-data-jpa/spring-data-jpa","31121bad309af2f4c5c5ac95471ecddca0d4dcbd","882d7d72a7e75f1bc706783bc92f7a4dbde9898c","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JpaKeysetScrollQueryCreator JpaKeysetScrollQueryCreator (PartTree, ReturnedType, CriteriaBuilder, ParameterMetadataProvider, JpaEntityInformation<?,?>, KeysetScrollPosition)]","12"
"44","spring-data-jpa/spring-data-jpa","882d7d72a7e75f1bc706783bc92f7a4dbde9898c","0fe3d6fd6061acd5c8db3f47bef8e766dcf4e59b","LOCAL_VAR_RENAMING","0","1","3","[JpaKeysetScrollQueryCreator JpaKeysetScrollQueryCreator (PartTree, ReturnedType, CriteriaBuilder, ParameterMetadataProvider, JpaEntityInformation<?,?>, KeysetScrollPosition), JpaKeysetScrollQueryCreator complete (Predicate, Sort, CriteriaQuery<?>, CriteriaBuilder, Root<?>), JpaKeysetScrollQueryCreator getRequiredSelection (Sort, ReturnedType)]","36"
"45","spring-data-jpa/spring-data-jpa","0fe3d6fd6061acd5c8db3f47bef8e766dcf4e59b","a8b592bc254ed4c42425478c2f7ab6a721173d23","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JpaKeysetScrollQueryCreator JpaKeysetScrollQueryCreator (PartTree, ReturnedType, CriteriaBuilder, ParameterMetadataProvider, JpaEntityInformation<?,?>, KeysetScrollPosition)]","12"
"50","spring-data-jpa/spring-data-jpa","a8b592bc254ed4c42425478c2f7ab6a721173d23","4858fda9b80286e87f5fe9d76784537eddcf4b40","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JpaKeysetScrollQueryCreator JpaKeysetScrollQueryCreator (PartTree, ReturnedType, CriteriaBuilder, ParameterMetadataProvider, JpaEntityInformation<?,?>, KeysetScrollPosition)]","12"
"58","spring-data-jpa/spring-data-jpa","4858fda9b80286e87f5fe9d76784537eddcf4b40","41455eeaa2a0fe5b5b965a03009f9db80119247b","REVERSE_IF_ELSE","3","1","1","[JpaKeysetScrollQueryCreator complete (Predicate, Sort, CriteriaQuery<?>, CriteriaBuilder, Root<?>)]","12"
"59","spring-data-jpa/spring-data-jpa","41455eeaa2a0fe5b5b965a03009f9db80119247b","6fe120414e40e3d41dea04b034bb1bf0c2b53b39","REVERSE_IF_ELSE","3","1","1","[JpaKeysetScrollQueryCreator complete (Predicate, Sort, CriteriaQuery<?>, CriteriaBuilder, Root<?>)]","12"
"61","spring-data-jpa/spring-data-jpa","6fe120414e40e3d41dea04b034bb1bf0c2b53b39","146ee1b7d979625a36eac3696513cb196ea50a30","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[JpaKeysetScrollQueryCreator JpaKeysetScrollQueryCreator (PartTree, ReturnedType, CriteriaBuilder, ParameterMetadataProvider, JpaEntityInformation<?,?>, KeysetScrollPosition)]","12"
"11","spring-hateoas","b2a1bf36a923f7891ee5f012296b178f7e0b60a9","1c29d42b1a30ecf115815b710c6b73d387c85c6d","LOCAL_VAR_RENAMING","0","1","2","[ResourceAssemblerSupport createResourceWithId (Object, T, Object), ResourceAssemblerSupport ResourceAssemblerSupport (Class<?>, Class<D>)]","24"
"46","spring-hateoas","1c29d42b1a30ecf115815b710c6b73d387c85c6d","40f55391f60ee31ac8d016810f6579665f4aec69","LOCAL_VAR_RENAMING","0","1","2","[ResourceAssemblerSupport createResourceWithId (Object, T), ResourceAssemblerSupport createResourceWithId (Object, T, Object)]","24"
"55","spring-hateoas","40f55391f60ee31ac8d016810f6579665f4aec69","a7860f3e9effefb384c1cac7a0befb3e1ed53cea","LOCAL_VAR_RENAMING","0","1","1","[ResourceAssemblerSupport ResourceAssemblerSupport (Class<?>, Class<D>)]","12"
"57","spring-hateoas","a7860f3e9effefb384c1cac7a0befb3e1ed53cea","2f534cbc45ab5f1500c7e7be41e48ee11c1fcd7d","LOCAL_VAR_RENAMING","0","1","2","[ResourceAssemblerSupport ResourceAssemblerSupport (Class<?>, Class<D>), ResourceAssemblerSupport toResources (Iterable<? extends T>)]","24"
"60","spring-hateoas","2f534cbc45ab5f1500c7e7be41e48ee11c1fcd7d","751d3a32a234e798fde2740d6b876dcb14ab0577","LOCAL_VAR_RENAMING","0","1","1","[ResourceAssemblerSupport toResources (Iterable<? extends T>)]","12"
"1","WebGoat","171cf5a03b99627b54dbb425e368836a47a74282","62ed0417c4726ea481d80085ef06e304563707a6","LOCAL_VAR_RENAMING","0","1","2","[LogBleedingTask completed (String, String), LogBleedingTask generatePassword ()]","36"
"7","WebGoat","62ed0417c4726ea481d80085ef06e304563707a6","55d3dbba86f23393e622cbe0289111dc541afc9a","VAR_DECLARATION_MERGING","12","1","1","[LogBleedingTask completed (String, String)]","18"
"9","WebGoat","55d3dbba86f23393e622cbe0289111dc541afc9a","0a72bb73dc57db21a690f78a47d947c14ffbe1c4","VAR_DECLARATION_MERGING","12","1","1","[LogBleedingTask completed (String, String)]","18"
"10","WebGoat","0a72bb73dc57db21a690f78a47d947c14ffbe1c4","ff9e9d44b4cc30ca8eb0083fa2b0fced9cceb64d","SWITCH_STRING_EQUAL","15","1","1","[LogBleedingTask completed (String, String)]","18"
"16","WebGoat","ff9e9d44b4cc30ca8eb0083fa2b0fced9cceb64d","514044743245ee3ecf272f767014dda98aecb4a2","LOCAL_VAR_RENAMING","0","1","1","[LogBleedingTask completed (String, String)]","18"
"20","WebGoat","514044743245ee3ecf272f767014dda98aecb4a2","b7f2b68f0fe6c589f34480368b521aee37a71684","INFIX_EXPRESSION_DIVIDING","8","1","1","[LogBleedingTask completed (String, String)]","18"
"21","WebGoat","b7f2b68f0fe6c589f34480368b521aee37a71684","4c6e53ff4e0e04726c14194716aed3c1a57cd98a","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[LogBleedingTask completed (String, String)]","18"
"22","WebGoat","4c6e53ff4e0e04726c14194716aed3c1a57cd98a","34810b4d99de65ee010a0c7394f35652deced1cd","VAR_DECLARATION_DIVIDING","13","1","1","[LogBleedingTask completed (String, String)]","18"
"24","WebGoat","34810b4d99de65ee010a0c7394f35652deced1cd","4ef203337de37d8bf5c02e8282a1525cfd030641","VAR_DECLARATION_MERGING","12","1","1","[LogBleedingTask completed (String, String)]","18"
"26","WebGoat","4ef203337de37d8bf5c02e8282a1525cfd030641","836c01be37cd3ffeed6059a3f2a079880bc30de9","REVERSE_IF_ELSE","3","1","1","[LogBleedingTask completed (String, String)]","18"
"34","WebGoat","836c01be37cd3ffeed6059a3f2a079880bc30de9","81d3cca0bedb4341710204a4221d0272bbcb7cf8","REVERSE_IF_ELSE","3","1","1","[LogBleedingTask completed (String, String)]","18"
"37","WebGoat","81d3cca0bedb4341710204a4221d0272bbcb7cf8","b8e6d08a244c50ad892a5dd8a504846dd7e1cb2a","VAR_DECLARATION_MERGING","12","1","1","[LogBleedingTask completed (String, String)]","18"
"43","WebGoat","b8e6d08a244c50ad892a5dd8a504846dd7e1cb2a","7927332b3c01918ef4d24816acafd61eeee4343e","VAR_DECLARATION_MERGING","12","1","1","[LogBleedingTask completed (String, String)]","18"
"44","WebGoat","7927332b3c01918ef4d24816acafd61eeee4343e","8b4bce030a6dfec6558a81c55315e57001329b89","SWITCH_STRING_EQUAL","15","1","1","[LogBleedingTask completed (String, String)]","18"
"47","WebGoat","8b4bce030a6dfec6558a81c55315e57001329b89","12a14b8f15ef3dadf1c6e4cac2311b9181870869","SWITCH_STRING_EQUAL","15","1","1","[LogBleedingTask completed (String, String)]","18"
"48","WebGoat","12a14b8f15ef3dadf1c6e4cac2311b9181870869","b77fecf219535e4cd53b5602a92ac46981cf29b0","REVERSE_IF_ELSE","3","1","1","[LogBleedingTask completed (String, String)]","18"
"49","WebGoat","b77fecf219535e4cd53b5602a92ac46981cf29b0","8df28322b9f228e59829e40e46b55d0d1989721a","VAR_DECLARATION_MERGING","12","1","1","[LogBleedingTask completed (String, String)]","18"
"51","WebGoat","8df28322b9f228e59829e40e46b55d0d1989721a","92bd90f71b77d9a9e9c0556d2c631d1e6ea14fb0","LOCAL_VAR_RENAMING","0","1","1","[LogBleedingTask completed (String, String)]","18"
"52","WebGoat","92bd90f71b77d9a9e9c0556d2c631d1e6ea14fb0","7abfb686c8d06b374685cd4aaf37f5ae0bd0ad56","REVERSE_IF_ELSE","3","1","1","[LogBleedingTask completed (String, String)]","18"
"60","WebGoat","7abfb686c8d06b374685cd4aaf37f5ae0bd0ad56","2583e0529c71156756b82837aedcbaab174c67ea","VAR_DECLARATION_DIVIDING","13","1","1","[LogBleedingTask completed (String, String)]","18"
"61","WebGoat","2583e0529c71156756b82837aedcbaab174c67ea","ffcffde3a1f489ebaddffad624e591ae351f0863","REVERSE_IF_ELSE","3","1","1","[LogBleedingTask completed (String, String)]","18"
"63","WebGoat","ffcffde3a1f489ebaddffad624e591ae351f0863","10e538b5a6e843d54dcdd8f4aa462dc4e3d13565","STATEMENTS_ORDER_REARRANGEMENT","10","1","1","[LogBleedingTask completed (String, String)]","18"
"1","spring-hateoas","751d3a32a234e798fde2740d6b876dcb14ab0577","15bc3f54155a45421f4b0b0e773beb022ddaf563","LOCAL_VAR_RENAMING","0","1","2","[ResourceAssemblerSupport createResourceWithId (Object, T), ResourceAssemblerSupport createResourceWithId (Object, T, Object)]","24"
"31","spring-hateoas","15bc3f54155a45421f4b0b0e773beb022ddaf563","64798d78ed57352abc9ebecd710c983c2c53ecf9","LOCAL_VAR_RENAMING","0","1","2","[ResourceAssemblerSupport createResourceWithId (Object, T), ResourceAssemblerSupport ResourceAssemblerSupport (Class<?>, Class<D>)]","24"
"32","spring-hateoas","64798d78ed57352abc9ebecd710c983c2c53ecf9","74dd027693e295c811c8d915b4cf2a791b368c45","LOCAL_VAR_RENAMING","0","1","2","[ResourceAssemblerSupport instantiateResource (T), ResourceAssemblerSupport toResources (Iterable<? extends T>)]","24"
"35","spring-hateoas","74dd027693e295c811c8d915b4cf2a791b368c45","71751ff7aa04232e02e4f25f9d08ac99ce7fc59e","LOCAL_VAR_RENAMING","0","1","2","[ResourceAssemblerSupport createResourceWithId (Object, T, Object), ResourceAssemblerSupport ResourceAssemblerSupport (Class<?>, Class<D>)]","24"
"45","spring-hateoas","71751ff7aa04232e02e4f25f9d08ac99ce7fc59e","28a35365276ee525f044a613fc6d52f1935efba2","LOCAL_VAR_RENAMING","0","1","2","[ResourceAssemblerSupport createResourceWithId (Object, T), ResourceAssemblerSupport createResourceWithId (Object, T, Object)]","24"
"56","spring-hateoas","28a35365276ee525f044a613fc6d52f1935efba2","146141970ff1fb5af466736f9031f0fbdb64bfc8","LOCAL_VAR_RENAMING","0","1","2","[ResourceAssemblerSupport ResourceAssemblerSupport (Class<?>, Class<D>), ResourceAssemblerSupport toResources (Iterable<? extends T>)]","24"
"59","spring-hateoas","146141970ff1fb5af466736f9031f0fbdb64bfc8","94bbe71971283df048735f4f99d4762724067871","LOCAL_VAR_RENAMING","0","1","1","[ResourceAssemblerSupport createResourceWithId (Object, T, Object)]","12"
"7","spring-hateoas","94bbe71971283df048735f4f99d4762724067871","68e7aa88e5775a302806294064175472a91561d2","LOCAL_VAR_RENAMING","0","1","1","[ResourceAssemblerSupport createResourceWithId (Object, T, Object)]","12"
"23","spring-hateoas","68e7aa88e5775a302806294064175472a91561d2","440a6466826f027c6a2a76f2ead2bfdd35235a99","LOCAL_VAR_RENAMING","0","1","2","[ResourceAssemblerSupport createResourceWithId (Object, T, Object), ResourceAssemblerSupport ResourceAssemblerSupport (Class<?>, Class<D>)]","24"
"28","spring-hateoas","440a6466826f027c6a2a76f2ead2bfdd35235a99","ee323fe4e9863e4a26df59bc26cc0a63dee617e3","LOCAL_VAR_RENAMING","0","1","2","[ResourceAssemblerSupport createResourceWithId (Object, T, Object), ResourceAssemblerSupport toResources (Iterable<? extends T>)]","24"
"64","spring-hateoas","ee323fe4e9863e4a26df59bc26cc0a63dee617e3","a812202425036ae92b008613cb541ae8518bd5fa","LOCAL_VAR_RENAMING","0","1","1","[ResourceAssemblerSupport createResourceWithId (Object, T)]","12"
"7","spring-hateoas","a812202425036ae92b008613cb541ae8518bd5fa","dfb058088f13d540a99dafe75d468c7bf82dc5fe","LOCAL_VAR_RENAMING","0","1","1","[ResourceAssemblerSupport createResourceWithId (Object, T, Object)]","12"
"9","spring-hateoas","dfb058088f13d540a99dafe75d468c7bf82dc5fe","f10e524e57888c37aae637cec3e5710693f90a48","LOCAL_VAR_RENAMING","0","1","2","[ResourceAssemblerSupport createResourceWithId (Object, T), ResourceAssemblerSupport createResourceWithId (Object, T, Object)]","24"
"25","spring-hateoas","f10e524e57888c37aae637cec3e5710693f90a48","a9eafbad7b72a15a952947f6397407c5c74e14d9","LOCAL_VAR_RENAMING","0","1","2","[ResourceAssemblerSupport createResourceWithId (Object, T), ResourceAssemblerSupport createResourceWithId (Object, T, Object)]","24"
"55","spring-hateoas","a9eafbad7b72a15a952947f6397407c5c74e14d9","47970bed7e22d7ded1b394ebeb964b725c66fb2f","LOCAL_VAR_RENAMING","0","1","0","[]","0"
"56","spring-hateoas","47970bed7e22d7ded1b394ebeb964b725c66fb2f","69b3b5718b0a98a3ca5c419101c323ad24f11599","LOCAL_VAR_RENAMING","0","1","1","[ResourceAssemblerSupport ResourceAssemblerSupport (Class<?>, Class<D>)]","12"
